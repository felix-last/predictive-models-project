*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.17 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0BERMNQ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0BERMNQ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[167913] MAX=1 EXCEEDMAXVALUE='' )[167917] )[167911]
VALIDCHOICES=(CHOICE1='Y' )[167915] )[167169] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[167921]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[167925] )[167923] )[167919] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[167929]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[167935] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[167933] )[167931] )[167927] )[167115]
1058983    proc freq data=EMWS8.Ensmbl11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl11_VariableSet noprint;
1058984    table ROLE*LEVEL/out=WORK.Ensmbl11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl11META;
1058985    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL11_VARIABLESET.
NOTE: The data set WORK.ENSMBL11META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1058986    proc print data=WORK.Ensmbl11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11META label noobs;
1058987    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1058988    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1058988  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1058988  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1058989    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1058990    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1058991    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL11META.
NOTE: The PROCEDURE PRINT printed page 923.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1058992    title10;
MPRINT(EM_DIAGRAM):   title10;
1058993    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural39_TRAIN EMWS8.Neural39_TRAIN
EMWS8.Neural39_TRAIN EMWS8.Neural39_TRAIN EMWS8 Neural39_TRAIN
EMWS8.Neural39_TRAIN EMWS8.Neural39_TRAIN
EMWS8.Neural39_TRAIN EMWS8.Neural39_TRAIN EMWS8 Neural39_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural39_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural39_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1059022    data WORK.Ensmbl11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1059023    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1059024    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1059024  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1059024  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1059025       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1059025  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1059025  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1059026    set EMWS8.NEURAL39_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL39_DEPVAR_DM( where=(_TYPE_="TARGET"));
1059027    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1059028    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1059029    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1059030    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1059031    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1059032    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1059033    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1059034    end;
MPRINT(EM_DIAGRAM):   end;
1059035    output;
MPRINT(EM_DIAGRAM):   output;
1059036    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL39_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1059037    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1059038    proc print data=WORK.Ensmbl11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11_EVENT noobs label;
1059039    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1059040    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1059041    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1059042    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL11_EVENT.
NOTE: The PROCEDURE PRINT printed page 924.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1059043    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1059044    proc print data = EMWS8.Neural39_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural39_DepVar_DM noobs label;
1059045    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1059046    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1059047    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1059047  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1059047  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1059048    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1059049    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1059050    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL39_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 925.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059051    title10;
MPRINT(EM_DIAGRAM):   title10;
1059052    %let groupid =;
1059053    %let endGroupid =;
1059054    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1059055    set EMWS8.Neural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_EMINFO;
1059056    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1059056  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1059057    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1059058    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1059059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL39_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1059060    %let groupid =;
1059061    %let endGroupid =;
1059062    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1059063    set EMWS8.Neural37_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_EMINFO;
1059064    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1059064  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1059065    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1059066    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1059067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL37_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059068    %let groupid =;
1059069    %let endGroupid =;
1059070    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1059071    set EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO;
1059072    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1059072  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1059073    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1059074    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1059075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL38_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059076    %let groupid =;
1059077    %let endGroupid =;
1059078    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1059079    set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
1059080    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1059080  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1059081    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1059082    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1059083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059084    %let groupid =;
1059085    %let endGroupid =;
1059086    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1059087    set EMWS8.Neural41_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural41_EMINFO;
1059088    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1059088  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1059089    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1059090    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1059091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL41_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059092    data WORK.Ensmbl11;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11;
1059093    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1059094    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1059094  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1059095    nodeid="NEURAL39";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL39";
1059096    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1059097    output;
MPRINT(EM_DIAGRAM):   output;
1059098    nodeid="NEURAL37";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL37";
1059099    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1059100    output;
MPRINT(EM_DIAGRAM):   output;
1059101    nodeid="NEURAL38";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL38";
1059102    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1059103    output;
MPRINT(EM_DIAGRAM):   output;
1059104    nodeid="NEURAL40";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL40";
1059105    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1059106    output;
MPRINT(EM_DIAGRAM):   output;
1059107    nodeid="NEURAL41";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL41";
1059108    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1059109    output;
MPRINT(EM_DIAGRAM):   output;
1059110    ;
MPRINT(EM_DIAGRAM):   ;
1059111    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL11 has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1059112    title;
MPRINT(EM_DIAGRAM):   title;
1059113    proc print data=WORK.Ensmbl11 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11 label noobs;
1059114    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1059115    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1059116    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL11.
NOTE: The PROCEDURE PRINT printed page 926.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059117    title9;
MPRINT(EM_DIAGRAM):   title9;
1059118    title10;
MPRINT(EM_DIAGRAM):   title10;
1059119    data WORK.M0LFF3GF;
MPRINT(EM_DIAGRAM):    data WORK.M0LFF3GF;
1059120    set WORK.M0LFF3GF;
MPRINT(EM_DIAGRAM):   set WORK.M0LFF3GF;
1059121    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1059122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0LFF3GF.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0LFF3GF has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1059123    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1059124    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1059125    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1059126    %macro DMDBClass;
1059127        DepVar(DESC)
1059128    %mend DMDBClass;
1059129    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1059130    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1059131    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1059132    %macro DMDBVar;
1059133
1059134    %mend DMDBVar;
1059135    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059136    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1059137    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059138    proc dmdb batch data=EMWS8.Neural39_TRAIN
1059139    dmdbcat=WORK.EM_DMDB
1059140    maxlevel = 513
1059141    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural39_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
1059142    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1059143    target
1059144    DepVar
1059145    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1059146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL39_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1059147    quit;
1059148    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3TL0T4H
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3TL0T4H new;
MPRINT(EM_DIAGRAM):   run;
1059250    filename emflow
1059250  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring NEURAL39_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059251    *------------------------------------------------------------*;
1059252    * Ensmbl11: Scoring NEURAL39_TRAIN data;
1059253    *------------------------------------------------------------*;
1059254    data EMWS8.Ensmbl11_TRAIN
1059255    / view=EMWS8.Ensmbl11_TRAIN
1059256    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_TRAIN / view=EMWS8.Ensmbl11_TRAIN ;
1059257    set EMWS8.Neural39_TRAIN
1059258    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_TRAIN ;
1059259    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas.
1059260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059261   +* Ensmbl11: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Combine model for DepVar;
1059262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059263   +* Ensmbl11: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 1 of 5;
1059264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059266   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1059267   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1059268   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1059269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059271   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1059272   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1059273   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1059274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059276   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1059277   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1059278   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1059279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059281   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1059282   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1059283   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1059284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059285   +
1059286   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1059287   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1059287  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1059288   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1059289   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1059290   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1059291   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1059292   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1059293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059294   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1059295   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1059296   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1059297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059299   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1059300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059301   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1059302   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1059303   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1059304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059305   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1059306   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1059307   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1059308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059310   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1059311   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1059312   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1059313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059315   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1059316   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1059317   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1059318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1059320   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1059321   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1059322   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1059323   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1059324   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1059325   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1059326   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1059327   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1059328   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1059329   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1059330   +LENGTH _WARN_ $4
1059331   +      F_DepVar  $ 12
1059332   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1059333   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1059334   +
1059335   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1059336   +
1059337   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1059338   +
1059339   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1059340   +
1059341   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1059342   +
1059343   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1059344   +
1059345   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1059346   +
1059347   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1059348   +
1059349   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1059350   +
1059351   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1059352   +
1059353   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1059354   +
1059355   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1059356   +
1059357   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1059358   +
1059359   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1059360   +
1059361   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1059362   +
1059363   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1059364   +
1059365   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1059366   +
1059367   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1059368   +
1059369   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1059370   +
1059371   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1059372   +
1059373   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1059374   +
1059375   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1059376   +
1059377   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1059378   +
1059379   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1059380   +
1059381   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1059382   +
1059383   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1059384   +
1059385   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1059386   +
1059387   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1059388   +
1059389   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1059390   +
1059391   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1059392   +
1059393   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1059394   +
1059395   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1059396   +
1059397   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1059398   +
1059399   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1059400   +
1059401   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1059402   +
1059403   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1059404   +
1059405   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1059406   +
1059407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1059408   +
1059409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1059410   +
1059411   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1059412   +
1059413   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1059414   +
1059415   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1059416   +
1059417   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1059418   +
1059419   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1059420   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1059421   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1059422   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1059423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059425   +end;
MPRINT(EM_DIAGRAM):   end;
1059426   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059428   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1059429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059431   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1059432   +   end;
MPRINT(EM_DIAGRAM):   end;
1059433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059434   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1059435   +   end;
MPRINT(EM_DIAGRAM):   end;
1059436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059437   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1059438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059440   +   end;
MPRINT(EM_DIAGRAM):   end;
1059441   +end;
MPRINT(EM_DIAGRAM):   end;
1059442   +
1059443   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1059444   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1059445   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1059446   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1059447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059449   +end;
MPRINT(EM_DIAGRAM):   end;
1059450   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059452   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1059453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059455   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1059456   +   end;
MPRINT(EM_DIAGRAM):   end;
1059457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059458   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1059459   +   end;
MPRINT(EM_DIAGRAM):   end;
1059460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059461   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1059462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059464   +   end;
MPRINT(EM_DIAGRAM):   end;
1059465   +end;
MPRINT(EM_DIAGRAM):   end;
1059466   +
1059467   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1059468   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1059469   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1059470   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1059471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059473   +end;
MPRINT(EM_DIAGRAM):   end;
1059474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059476   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1059477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059479   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1059480   +   end;
MPRINT(EM_DIAGRAM):   end;
1059481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059482   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1059483   +   end;
MPRINT(EM_DIAGRAM):   end;
1059484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059485   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1059486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059488   +   end;
MPRINT(EM_DIAGRAM):   end;
1059489   +end;
MPRINT(EM_DIAGRAM):   end;
1059490   +
1059491   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1059492   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1059493   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1059494   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1059495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059497   +end;
MPRINT(EM_DIAGRAM):   end;
1059498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059500   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1059501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059503   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1059504   +   end;
MPRINT(EM_DIAGRAM):   end;
1059505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059506   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1059507   +   end;
MPRINT(EM_DIAGRAM):   end;
1059508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059509   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1059510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059512   +   end;
MPRINT(EM_DIAGRAM):   end;
1059513   +end;
MPRINT(EM_DIAGRAM):   end;
1059514   +
1059515   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1059516   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1059517   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1059518   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1059519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059521   +end;
MPRINT(EM_DIAGRAM):   end;
1059522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059524   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1059525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059527   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1059528   +   end;
MPRINT(EM_DIAGRAM):   end;
1059529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059530   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1059531   +   end;
MPRINT(EM_DIAGRAM):   end;
1059532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059533   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1059534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059536   +   end;
MPRINT(EM_DIAGRAM):   end;
1059537   +end;
MPRINT(EM_DIAGRAM):   end;
1059538   +
1059539   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1059540   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1059541   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1059542   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1059543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059545   +end;
MPRINT(EM_DIAGRAM):   end;
1059546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059548   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1059549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1059551   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1059552   +   end;
MPRINT(EM_DIAGRAM):   end;
1059553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1059554   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1059555   +   end;
MPRINT(EM_DIAGRAM):   end;
1059556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059557   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1059558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059560   +   end;
MPRINT(EM_DIAGRAM):   end;
1059561   +end;
MPRINT(EM_DIAGRAM):   end;
1059562   +
1059563   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1059564   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1059565   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1059566   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1059567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059569   +end;
MPRINT(EM_DIAGRAM):   end;
1059570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1059572   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1059573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059574   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1059575   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1059576   +   end;
MPRINT(EM_DIAGRAM):   end;
1059577   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1059578   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1059579   +   end;
MPRINT(EM_DIAGRAM):   end;
1059580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059581   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1059582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059584   +   end;
MPRINT(EM_DIAGRAM):   end;
1059585   +end;
MPRINT(EM_DIAGRAM):   end;
1059586   +
1059587   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1059588   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1059589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1059590   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1059591   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1059592   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1059593   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1059594   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1059595   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1059596   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1059597   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1059598   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1059599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059601   +end;
MPRINT(EM_DIAGRAM):   end;
1059602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059603   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1059604   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1059605   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059606   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1059607   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1059608   +   end;
MPRINT(EM_DIAGRAM):   end;
1059609   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1059610   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1059611   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1059612   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1059613   +      EducationMaster = -1;
The SAS System
 
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1059614   +   end;
MPRINT(EM_DIAGRAM):   end;
1059615   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1059616   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1059617   +   end;
MPRINT(EM_DIAGRAM):   end;
1059618   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1059619   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1059620   +   end;
MPRINT(EM_DIAGRAM):   end;
1059621   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1059622   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1059623   +   end;
MPRINT(EM_DIAGRAM):   end;
1059624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059625   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1059626   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1059627   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1059628   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1059629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059631   +   end;
MPRINT(EM_DIAGRAM):   end;
1059632   +end;
MPRINT(EM_DIAGRAM):   end;
1059633   +
1059634   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1059635   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1059636   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1059637   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1059638   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1059639   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1059640   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1059641   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1059642   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1059643   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1059644   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1059645   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1059646   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1059647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1059648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059649   +end;
MPRINT(EM_DIAGRAM):   end;
1059650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059651   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1059652   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1059653   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059654   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1059655   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1059656   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1059657   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1059658   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1059659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1059660   +         end;
MPRINT(EM_DIAGRAM):   end;
1059661   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1059662   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1059663   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1059664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1059665   +            end;
MPRINT(EM_DIAGRAM):   end;
1059666   +         end;
MPRINT(EM_DIAGRAM):   end;
1059667   +      end;
MPRINT(EM_DIAGRAM):   end;
1059668   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1059669   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1059670   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1059671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1059672   +         end;
MPRINT(EM_DIAGRAM):   end;
1059673   +      end;
MPRINT(EM_DIAGRAM):   end;
1059674   +   end;
MPRINT(EM_DIAGRAM):   end;
1059675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059676   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1059677   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1059678   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1059679   +      end;
MPRINT(EM_DIAGRAM):   end;
1059680   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1059681   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1059682   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1059683   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1059684   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1059685   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1059686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1059687   +         end;
MPRINT(EM_DIAGRAM):   end;
1059688   +      end;
MPRINT(EM_DIAGRAM):   end;
1059689   +   end;
MPRINT(EM_DIAGRAM):   end;
1059690   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1059691   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1059692   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1059693   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1059694   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1059695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1059696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059697   +   end;
MPRINT(EM_DIAGRAM):   end;
1059698   +end;
MPRINT(EM_DIAGRAM):   end;
1059699   +
1059700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059701   +*** Checking missing input Interval
1059702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1059703   +
1059704   +IF NMISS(
1059705   +   AcceptedCmpTotal ,
1059706   +   Age ,
1059707   +   Frq ,
1059708   +   Income ,
1059709   +   Kidhome ,
1059710   +   MntFishProducts ,
1059711   +   MntFruits ,
1059712   +   MntGoldProds ,
1059713   +   MntSweetProducts ,
1059714   +   MonthsAsCustomer ,
1059715   +   NumDealsPurchases ,
1059716   +   NumWebVisitsMonth ,
1059717   +   RFMstat ,
1059718   +   RMntFrq ,
1059719   +   Recency ,
1059720   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1059721   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1059722   +
1059723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1059724   +END;
MPRINT(EM_DIAGRAM):   END;
1059725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059726   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1059727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059728   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1059729   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1059730   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1059731   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1059732   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1059733   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1059734   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1059735   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1059736   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1059737   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1059738   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1059739   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1059740   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1059741   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1059742   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1059743   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1059744   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1059745   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1059746   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1059747   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1059748   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1059749   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1059750   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1059751   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1059752   +END;
MPRINT(EM_DIAGRAM):   END;
1059753   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1059754   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1059755   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1059756   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1059757   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1059758   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1059759   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1059760   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1059761   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1059762   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1059763   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1059764   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1059765   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1059766   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1059767   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1059768   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1059769   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1059770   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1059771   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1059772   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1059773   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1059774   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1059775   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1059776   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1059777   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1059778   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1059779   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1059780   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1059781   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1059782   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1059783   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1059784   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1059785   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1059786   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1059787   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1059788   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1059789   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1059790   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1059791   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1059792   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1059793   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1059794   +END;
MPRINT(EM_DIAGRAM):   END;
1059795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059796   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1059797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059799   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1059800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059802   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1059803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059804   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1059805   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1059806   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1059807   +        S_Income  +     0.25564250606874 * S_Kidhome
1059808   +          +    -0.02786629817134 * S_MntFishProducts
1059809   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1059810   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1059811   +          +    -0.29199173107007 * S_MonthsAsCustomer
1059812   +          +    -0.59759788962473 * S_NumDealsPurchases
1059813   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1059814   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1059815   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1059816   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome +
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 *
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 *
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 *
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq +
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1059817   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1059818   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1059819   +        S_Income  +     0.07328887474153 * S_Kidhome
1059820   +          +    -0.23284570213322 * S_MntFishProducts
1059821   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1059822   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1059823   +          +     0.29669594858185 * S_MonthsAsCustomer
1059824   +          +    -0.51220833966596 * S_NumDealsPurchases
1059825   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1059826   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1059827   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1059828   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age +
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome +
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 *
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 *
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 *
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq +
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1059829   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1059830   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1059831   +        S_Income  +    -0.68209910558389 * S_Kidhome
1059832   +          +     0.23366174254474 * S_MntFishProducts
1059833   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1059834   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1059835   +          +    -0.05759532204753 * S_MonthsAsCustomer
1059836   +          +    -0.30170163047261 * S_NumDealsPurchases
1059837   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1059838   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1059839   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1059840   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome +
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 *
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 *
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 *
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq +
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1059841   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1059842   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1059843   +        S_Income  +     0.67855138873039 * S_Kidhome
1059844   +          +    -0.05297743313476 * S_MntFishProducts
1059845   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1059846   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1059847   +          +    -0.15817861274553 * S_MonthsAsCustomer
1059848   +          +     0.25133066233725 * S_NumDealsPurchases
1059849   +          +     0.08802636187267 * S_NumWebVisitsMonth
1059850   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1059851   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1059852   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome +
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 *
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 *
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 *
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq +
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1059853   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1059854   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1059855   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1059856   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1059857   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 *
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 +
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 *
HigherEducationBinary0 ;
1059858   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1059859   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1059860   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1059861   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1059862   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 *
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 +
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 *
HigherEducationBinary0 ;
1059863   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1059864   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1059865   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1059866   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1059867   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 *
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 +
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 *
HigherEducationBinary0 ;
1059868   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1059869   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1059870   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1059871   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1059872   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 *
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 +
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 *
HigherEducationBinary0 ;
1059873   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1059874   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1059875   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1059876   +          +      0.0528075343138 * Marital_StatusDivorced
1059877   +          +    -0.08269844855231 * Marital_StatusMarried
1059878   +          +     0.43411839786169 * Marital_StatusSingle
1059879   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 *
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried +
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1059880   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1059881   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1059882   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1059883   +          +    -0.12842912869907 * Marital_StatusDivorced
1059884   +          +     0.11838814754642 * Marital_StatusMarried
1059885   +          +     0.01184261900927 * Marital_StatusSingle
1059886   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 *
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried +
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1059887   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1059888   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1059889   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1059890   +          +    -0.22110722201709 * Marital_StatusDivorced
1059891   +          +      0.1355339029843 * Marital_StatusMarried
1059892   +          +    -0.33157273596382 * Marital_StatusSingle
1059893   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 *
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster +
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried +
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1059894   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1059895   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1059896   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1059897   +          +    -0.21663247467797 * Marital_StatusDivorced
1059898   +          +     1.11468603898508 * Marital_StatusMarried
1059899   +          +    -0.84252388146943 * Marital_StatusSingle
1059900   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 *
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried +
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1059901   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1059902   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1059903   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1059904   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1059905   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1059906   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1059907   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1059908   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1059909   +END;
MPRINT(EM_DIAGRAM):   END;
1059910   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1059911   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1059912   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1059913   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1059914   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1059915   +END;
MPRINT(EM_DIAGRAM):   END;
1059916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059917   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1059918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059919   +
1059920   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1059921   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1059922   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1059923   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1059924   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1059925   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1059926   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1059927   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1059928   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1059929   +end;
MPRINT(EM_DIAGRAM):   end;
1059930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1059931   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1059932   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1059933   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1059934   +   end;
MPRINT(EM_DIAGRAM):   end;
1059935   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1059936   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1059937   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1059938   +   end;
MPRINT(EM_DIAGRAM):   end;
1059939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1059940   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1059941   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1059942   +   end;
MPRINT(EM_DIAGRAM):   end;
1059943   +end;
MPRINT(EM_DIAGRAM):   end;
1059944   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1059945   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1059946   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 +
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1059947   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1059948   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1059949   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1059950   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1059951   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1059952   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1059953   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1059954   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1059955   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1059956   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1059957   +END;
MPRINT(EM_DIAGRAM):   END;
1059958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1059959   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1059960   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1059961   +END;
MPRINT(EM_DIAGRAM):   END;
1059962   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1059963   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1059964   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1059965   +END;
MPRINT(EM_DIAGRAM):   END;
1059966   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1059967   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1059968   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1059969   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1059970   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1059971   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1059972   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1059973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059974   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1059975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1059976   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1059977   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1059978   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1059979   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1059980   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1059981   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1059982   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1059983   +END;
MPRINT(EM_DIAGRAM):   END;
1059984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1059985   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1059986   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1059987   +drop
1059988   +H11
1059989   +H12
1059990   +H13
1059991   +H14
1059992   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1059993   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1059994   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1059995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059996   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1059997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1059998   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1059999   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1060000   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1060001   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1060002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060003   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1060004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060005   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1060006   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1060007   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1060008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060009   +* Ensmbl11: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 2 of 5;
1060010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060012   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1060013   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1060014   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1060015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060016   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1060017   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1060018   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1060019   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1060020   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1060021   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1060022   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1060023   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1060024   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1060025   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1060026   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1060027   +LENGTH _WARN_ $4
1060028   +      F_DepVar  $ 12
1060029   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1060030   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1060031   +
1060032   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1060033   +
1060034   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1060035   +
1060036   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1060037   +
1060038   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1060039   +
1060040   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1060041   +
1060042   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1060043   +
1060044   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1060045   +
1060046   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1060047   +
1060048   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1060049   +
1060050   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1060051   +
1060052   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1060053   +
1060054   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1060055   +
1060056   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1060057   +
1060058   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1060059   +
1060060   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1060061   +
1060062   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1060063   +
1060064   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1060065   +
1060066   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1060067   +
1060068   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1060069   +
1060070   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1060071   +
1060072   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1060073   +
1060074   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1060075   +
1060076   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1060077   +
1060078   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1060079   +
1060080   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1060081   +
1060082   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1060083   +
1060084   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1060085   +
1060086   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1060087   +
1060088   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1060089   +
1060090   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1060091   +
1060092   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1060093   +
1060094   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1060095   +
1060096   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1060097   +
1060098   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1060099   +
1060100   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1060101   +
1060102   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1060103   +
1060104   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1060105   +
1060106   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1060107   +
1060108   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1060109   +
1060110   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1060111   +
1060112   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1060113   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1060114   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1060115   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1060116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060118   +end;
MPRINT(EM_DIAGRAM):   end;
1060119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060121   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1060122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060124   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1060125   +   end;
MPRINT(EM_DIAGRAM):   end;
1060126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060127   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1060128   +   end;
MPRINT(EM_DIAGRAM):   end;
1060129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060130   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1060131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060133   +   end;
MPRINT(EM_DIAGRAM):   end;
1060134   +end;
MPRINT(EM_DIAGRAM):   end;
1060135   +
1060136   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1060137   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1060138   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1060139   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1060140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060142   +end;
MPRINT(EM_DIAGRAM):   end;
1060143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060145   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1060146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060148   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1060149   +   end;
MPRINT(EM_DIAGRAM):   end;
1060150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060151   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1060152   +   end;
MPRINT(EM_DIAGRAM):   end;
1060153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060154   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1060155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060157   +   end;
MPRINT(EM_DIAGRAM):   end;
1060158   +end;
MPRINT(EM_DIAGRAM):   end;
1060159   +
1060160   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1060161   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1060162   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1060163   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1060164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060166   +end;
MPRINT(EM_DIAGRAM):   end;
1060167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060169   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1060170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060172   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1060173   +   end;
MPRINT(EM_DIAGRAM):   end;
1060174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060175   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1060176   +   end;
MPRINT(EM_DIAGRAM):   end;
1060177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060178   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1060179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060181   +   end;
MPRINT(EM_DIAGRAM):   end;
1060182   +end;
MPRINT(EM_DIAGRAM):   end;
1060183   +
1060184   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1060185   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1060186   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1060187   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1060188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060190   +end;
MPRINT(EM_DIAGRAM):   end;
1060191   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060193   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1060194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060196   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1060197   +   end;
MPRINT(EM_DIAGRAM):   end;
1060198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060199   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1060200   +   end;
MPRINT(EM_DIAGRAM):   end;
1060201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060202   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1060203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060205   +   end;
MPRINT(EM_DIAGRAM):   end;
1060206   +end;
MPRINT(EM_DIAGRAM):   end;
1060207   +
1060208   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1060209   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1060210   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1060211   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1060212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060214   +end;
MPRINT(EM_DIAGRAM):   end;
1060215   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060217   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1060218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060220   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1060221   +   end;
MPRINT(EM_DIAGRAM):   end;
1060222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060223   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1060224   +   end;
MPRINT(EM_DIAGRAM):   end;
1060225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060226   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1060227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060229   +   end;
MPRINT(EM_DIAGRAM):   end;
1060230   +end;
MPRINT(EM_DIAGRAM):   end;
1060231   +
1060232   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1060233   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1060234   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1060235   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1060236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060238   +end;
MPRINT(EM_DIAGRAM):   end;
1060239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060241   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1060242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060244   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1060245   +   end;
MPRINT(EM_DIAGRAM):   end;
1060246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060247   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1060248   +   end;
MPRINT(EM_DIAGRAM):   end;
1060249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060250   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1060251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060253   +   end;
MPRINT(EM_DIAGRAM):   end;
1060254   +end;
MPRINT(EM_DIAGRAM):   end;
1060255   +
1060256   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1060257   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1060258   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1060259   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1060260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060262   +end;
MPRINT(EM_DIAGRAM):   end;
1060263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060265   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1060266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060267   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1060268   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1060269   +   end;
MPRINT(EM_DIAGRAM):   end;
1060270   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1060271   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1060272   +   end;
MPRINT(EM_DIAGRAM):   end;
1060273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060274   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1060275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060277   +   end;
MPRINT(EM_DIAGRAM):   end;
1060278   +end;
MPRINT(EM_DIAGRAM):   end;
1060279   +
1060280   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1060281   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1060282   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1060283   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1060284   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1060285   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1060286   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1060287   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1060288   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1060289   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1060290   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1060291   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1060292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060294   +end;
MPRINT(EM_DIAGRAM):   end;
1060295   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060296   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1060297   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1060298   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060299   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1060300   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1060301   +   end;
MPRINT(EM_DIAGRAM):   end;
1060302   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1060303   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1060304   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1060305   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1060306   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1060307   +   end;
MPRINT(EM_DIAGRAM):   end;
1060308   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1060309   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1060310   +   end;
MPRINT(EM_DIAGRAM):   end;
1060311   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1060312   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1060313   +   end;
MPRINT(EM_DIAGRAM):   end;
1060314   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1060315   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1060316   +   end;
MPRINT(EM_DIAGRAM):   end;
1060317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060318   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1060319   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1060320   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1060321   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1060322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060324   +   end;
MPRINT(EM_DIAGRAM):   end;
1060325   +end;
MPRINT(EM_DIAGRAM):   end;
1060326   +
1060327   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1060328   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1060329   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1060330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1060331   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1060332   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1060333   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1060334   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1060335   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1060336   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1060337   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1060338   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1060339   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1060340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060342   +end;
MPRINT(EM_DIAGRAM):   end;
1060343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060344   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1060345   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1060346   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1060348   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1060349   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1060350   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1060351   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1060352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060353   +         end;
MPRINT(EM_DIAGRAM):   end;
1060354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1060355   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1060356   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1060357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060358   +            end;
MPRINT(EM_DIAGRAM):   end;
1060359   +         end;
MPRINT(EM_DIAGRAM):   end;
1060360   +      end;
MPRINT(EM_DIAGRAM):   end;
1060361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1060362   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1060363   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1060364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060365   +         end;
MPRINT(EM_DIAGRAM):   end;
1060366   +      end;
MPRINT(EM_DIAGRAM):   end;
1060367   +   end;
MPRINT(EM_DIAGRAM):   end;
1060368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060369   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1060370   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1060371   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060372   +      end;
MPRINT(EM_DIAGRAM):   end;
1060373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1060374   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1060375   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1060376   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1060377   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1060378   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1060379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060380   +         end;
MPRINT(EM_DIAGRAM):   end;
1060381   +      end;
MPRINT(EM_DIAGRAM):   end;
1060382   +   end;
MPRINT(EM_DIAGRAM):   end;
1060383   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1060384   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1060385   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1060386   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1060387   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1060388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060390   +   end;
MPRINT(EM_DIAGRAM):   end;
1060391   +end;
MPRINT(EM_DIAGRAM):   end;
1060392   +
1060393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060394   +*** Checking missing input Interval
1060395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1060396   +
1060397   +IF NMISS(
1060398   +   AcceptedCmpTotal ,
1060399   +   Age ,
1060400   +   Frq ,
1060401   +   Income ,
1060402   +   Kidhome ,
1060403   +   MntFishProducts ,
1060404   +   MntFruits ,
1060405   +   MntGoldProds ,
1060406   +   MntSweetProducts ,
1060407   +   MonthsAsCustomer ,
1060408   +   NumDealsPurchases ,
1060409   +   NumWebVisitsMonth ,
1060410   +   RFMstat ,
1060411   +   RMntFrq ,
1060412   +   Recency ,
1060413   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1060414   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1060415   +
1060416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060417   +END;
MPRINT(EM_DIAGRAM):   END;
1060418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060419   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1060420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060421   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1060422   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1060423   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1060424   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1060425   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1060426   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1060427   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1060428   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1060429   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1060430   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1060431   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1060432   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1060433   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1060434   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1060435   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1060436   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1060437   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1060438   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1060439   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1060440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1060441   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1060442   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1060443   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1060444   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1060445   +END;
MPRINT(EM_DIAGRAM):   END;
1060446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1060447   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1060448   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1060449   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1060450   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1060451   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1060452   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1060453   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1060454   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1060455   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1060456   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1060457   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1060458   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1060459   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1060460   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1060461   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1060462   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1060463   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1060464   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1060465   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1060466   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1060467   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1060468   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1060469   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1060470   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1060471   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1060472   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1060473   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1060474   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1060475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1060476   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1060477   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1060478   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1060479   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1060480   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1060481   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1060482   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1060483   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1060484   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1060485   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1060486   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1060487   +END;
MPRINT(EM_DIAGRAM):   END;
1060488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060489   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1060490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060492   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1060493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060495   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1060496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1060498   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1060499   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1060500   +        S_Income  +     0.21434017685167 * S_Kidhome
1060501   +          +    -0.00245095061163 * S_MntFishProducts
1060502   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1060503   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1060504   +          +     -0.0436897985886 * S_MonthsAsCustomer
1060505   +          +    -0.11066147452589 * S_NumDealsPurchases
1060506   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1060507   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1060508   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1060509   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age +
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome +
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 *
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth +
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency +
0.31802924624272 * S_Teenhome ;
1060510   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1060511   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1060512   +        S_Income  +    -0.34676303560555 * S_Kidhome
1060513   +          +    -0.19666313381749 * S_MntFishProducts
1060514   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1060515   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1060516   +          +     0.11921399006499 * S_MonthsAsCustomer
1060517   +          +    -0.67623098057964 * S_NumDealsPurchases
1060518   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1060519   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1060520   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1060521   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome +
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 *
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 *
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 *
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq +
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1060522   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1060523   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1060524   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1060525   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1060526   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 *
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 +
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 *
HigherEducationBinary0 ;
1060527   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1060528   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1060529   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1060530   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1060531   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 *
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 +
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 *
HigherEducationBinary0 ;
1060532   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1060533   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1060534   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1060535   +          +    -0.09599098826432 * Marital_StatusDivorced
1060536   +          +     0.29380773989654 * Marital_StatusMarried
1060537   +          +    -0.24344588832351 * Marital_StatusSingle
1060538   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 *
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried +
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1060539   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1060540   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1060541   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1060542   +          +    -0.18210246138549 * Marital_StatusDivorced
1060543   +          +    -0.33707503901978 * Marital_StatusMarried
1060544   +          +     0.45975144433549 * Marital_StatusSingle
1060545   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 *
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried +
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1060546   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1060547   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1060548   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1060549   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1060550   +END;
MPRINT(EM_DIAGRAM):   END;
1060551   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1060552   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1060553   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1060554   +END;
MPRINT(EM_DIAGRAM):   END;
1060555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060556   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1060557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060558   +
1060559   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1060560   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1060561   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1060562   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1060563   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1060564   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060565   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1060566   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1060567   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1060568   +end;
MPRINT(EM_DIAGRAM):   end;
1060569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060570   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1060571   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1060572   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1060573   +   end;
MPRINT(EM_DIAGRAM):   end;
1060574   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1060575   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1060576   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1060577   +   end;
MPRINT(EM_DIAGRAM):   end;
1060578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060579   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1060580   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1060581   +   end;
MPRINT(EM_DIAGRAM):   end;
1060582   +end;
MPRINT(EM_DIAGRAM):   end;
1060583   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1060584   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1060585   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1060586   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1060587   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1060588   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1060589   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1060590   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1060591   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1060592   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1060593   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1060594   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1060595   +END;
MPRINT(EM_DIAGRAM):   END;
1060596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1060597   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1060598   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1060599   +END;
MPRINT(EM_DIAGRAM):   END;
1060600   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1060601   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1060602   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1060603   +END;
MPRINT(EM_DIAGRAM):   END;
1060604   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1060605   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1060606   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1060607   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1060608   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1060609   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1060610   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1060611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060612   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1060613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1060614   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1060615   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1060616   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1060617   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1060618   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1060619   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1060620   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1060621   +END;
MPRINT(EM_DIAGRAM):   END;
1060622   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1060623   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1060624   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1060625   +drop
1060626   +H11
1060627   +H12
1060628   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1060629   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1060630   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1060631   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060632   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1060633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060634   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1060635   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1060636   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1060637   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1060638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060639   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1060640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060641   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1060642   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1060643   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1060644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060645   +* Ensmbl11: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 3 of 5;
1060646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060648   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1060649   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1060650   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1060651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1060652   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1060653   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1060654   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1060655   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1060656   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1060657   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1060658   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1060659   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1060660   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1060661   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1060662   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1060663   +LENGTH _WARN_ $4
1060664   +      F_DepVar  $ 12
1060665   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1060666   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1060667   +
1060668   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1060669   +
1060670   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1060671   +
1060672   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1060673   +
1060674   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1060675   +
1060676   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1060677   +
1060678   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1060679   +
1060680   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1060681   +
1060682   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1060683   +
1060684   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1060685   +
1060686   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1060687   +
1060688   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1060689   +
1060690   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1060691   +
1060692   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1060693   +
1060694   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1060695   +
1060696   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1060697   +
1060698   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1060699   +
1060700   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1060701   +
1060702   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1060703   +
1060704   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1060705   +
1060706   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1060707   +
1060708   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1060709   +
1060710   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1060711   +
1060712   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1060713   +
1060714   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1060715   +
1060716   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1060717   +
1060718   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1060719   +
1060720   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1060721   +
1060722   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1060723   +
1060724   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1060725   +
1060726   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1060727   +
1060728   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1060729   +
1060730   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1060731   +
1060732   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1060733   +
1060734   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1060735   +
1060736   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1060737   +
1060738   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1060739   +
1060740   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1060741   +
1060742   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1060743   +
1060744   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1060745   +
1060746   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1060747   +
1060748   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1060749   +
1060750   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1060751   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1060752   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1060753   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1060754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060756   +end;
MPRINT(EM_DIAGRAM):   end;
1060757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060759   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1060760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060762   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1060763   +   end;
MPRINT(EM_DIAGRAM):   end;
1060764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060765   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1060766   +   end;
MPRINT(EM_DIAGRAM):   end;
1060767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060768   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1060769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060771   +   end;
MPRINT(EM_DIAGRAM):   end;
1060772   +end;
MPRINT(EM_DIAGRAM):   end;
1060773   +
1060774   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1060775   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1060776   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1060777   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1060778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060780   +end;
MPRINT(EM_DIAGRAM):   end;
1060781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060783   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1060784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060785   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060786   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1060787   +   end;
MPRINT(EM_DIAGRAM):   end;
1060788   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060789   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1060790   +   end;
MPRINT(EM_DIAGRAM):   end;
1060791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060792   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1060793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060795   +   end;
MPRINT(EM_DIAGRAM):   end;
1060796   +end;
MPRINT(EM_DIAGRAM):   end;
1060797   +
1060798   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1060799   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1060800   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1060801   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1060802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060804   +end;
MPRINT(EM_DIAGRAM):   end;
1060805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060807   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1060808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060809   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060810   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1060811   +   end;
MPRINT(EM_DIAGRAM):   end;
1060812   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060813   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1060814   +   end;
MPRINT(EM_DIAGRAM):   end;
1060815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060816   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1060817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060819   +   end;
MPRINT(EM_DIAGRAM):   end;
1060820   +end;
MPRINT(EM_DIAGRAM):   end;
1060821   +
1060822   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1060823   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1060824   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1060825   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1060826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060828   +end;
MPRINT(EM_DIAGRAM):   end;
1060829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060831   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1060832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060834   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1060835   +   end;
MPRINT(EM_DIAGRAM):   end;
1060836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060837   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1060838   +   end;
MPRINT(EM_DIAGRAM):   end;
1060839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060840   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1060841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060843   +   end;
MPRINT(EM_DIAGRAM):   end;
1060844   +end;
MPRINT(EM_DIAGRAM):   end;
1060845   +
1060846   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1060847   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1060848   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1060849   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1060850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060852   +end;
MPRINT(EM_DIAGRAM):   end;
1060853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060855   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1060856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060858   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1060859   +   end;
MPRINT(EM_DIAGRAM):   end;
1060860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060861   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1060862   +   end;
MPRINT(EM_DIAGRAM):   end;
1060863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060864   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1060865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060867   +   end;
MPRINT(EM_DIAGRAM):   end;
1060868   +end;
MPRINT(EM_DIAGRAM):   end;
1060869   +
1060870   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1060871   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1060872   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1060873   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1060874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060876   +end;
MPRINT(EM_DIAGRAM):   end;
1060877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060879   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1060880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060881   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1060882   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1060883   +   end;
MPRINT(EM_DIAGRAM):   end;
1060884   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1060885   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1060886   +   end;
MPRINT(EM_DIAGRAM):   end;
1060887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060888   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1060889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060891   +   end;
MPRINT(EM_DIAGRAM):   end;
1060892   +end;
MPRINT(EM_DIAGRAM):   end;
1060893   +
1060894   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1060895   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1060896   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1060897   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1060898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060900   +end;
MPRINT(EM_DIAGRAM):   end;
1060901   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1060903   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1060904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060905   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1060906   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1060907   +   end;
MPRINT(EM_DIAGRAM):   end;
1060908   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1060909   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1060910   +   end;
MPRINT(EM_DIAGRAM):   end;
1060911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060912   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1060913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060915   +   end;
MPRINT(EM_DIAGRAM):   end;
1060916   +end;
MPRINT(EM_DIAGRAM):   end;
1060917   +
1060918   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1060919   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1060920   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1060921   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1060922   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1060923   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1060924   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1060925   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1060926   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1060927   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1060928   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1060929   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1060930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060932   +end;
MPRINT(EM_DIAGRAM):   end;
1060933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060934   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1060935   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1060936   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060937   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1060938   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1060939   +   end;
MPRINT(EM_DIAGRAM):   end;
1060940   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1060941   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1060942   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1060943   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1060944   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1060945   +   end;
MPRINT(EM_DIAGRAM):   end;
1060946   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1060947   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1060948   +   end;
MPRINT(EM_DIAGRAM):   end;
1060949   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1060950   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1060951   +   end;
MPRINT(EM_DIAGRAM):   end;
1060952   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1060953   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1060954   +   end;
MPRINT(EM_DIAGRAM):   end;
1060955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1060956   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1060957   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1060958   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1060959   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1060960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1060961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060962   +   end;
MPRINT(EM_DIAGRAM):   end;
1060963   +end;
MPRINT(EM_DIAGRAM):   end;
1060964   +
1060965   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1060966   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1060967   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1060968   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1060969   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1060970   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1060971   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1060972   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1060973   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1060974   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1060975   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1060976   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1060977   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1060978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1060979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1060980   +end;
MPRINT(EM_DIAGRAM):   end;
1060981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1060982   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1060983   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1060984   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1060985   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1060986   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1060987   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1060988   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1060989   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1060990   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060991   +         end;
MPRINT(EM_DIAGRAM):   end;
1060992   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1060993   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1060994   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1060995   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1060996   +            end;
MPRINT(EM_DIAGRAM):   end;
1060997   +         end;
MPRINT(EM_DIAGRAM):   end;
1060998   +      end;
MPRINT(EM_DIAGRAM):   end;
1060999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1061000   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1061001   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1061002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061003   +         end;
MPRINT(EM_DIAGRAM):   end;
1061004   +      end;
MPRINT(EM_DIAGRAM):   end;
1061005   +   end;
MPRINT(EM_DIAGRAM):   end;
1061006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061007   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1061008   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1061009   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061010   +      end;
MPRINT(EM_DIAGRAM):   end;
1061011   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1061012   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1061013   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1061014   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1061015   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1061016   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1061017   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061018   +         end;
MPRINT(EM_DIAGRAM):   end;
1061019   +      end;
MPRINT(EM_DIAGRAM):   end;
1061020   +   end;
MPRINT(EM_DIAGRAM):   end;
1061021   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1061022   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1061023   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1061024   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1061025   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1061026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061028   +   end;
MPRINT(EM_DIAGRAM):   end;
1061029   +end;
MPRINT(EM_DIAGRAM):   end;
1061030   +
1061031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061032   +*** Checking missing input Interval
1061033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1061034   +
1061035   +IF NMISS(
1061036   +   AcceptedCmpTotal ,
1061037   +   Age ,
1061038   +   Frq ,
1061039   +   Income ,
1061040   +   Kidhome ,
1061041   +   MntFishProducts ,
1061042   +   MntFruits ,
1061043   +   MntGoldProds ,
1061044   +   MntSweetProducts ,
1061045   +   MonthsAsCustomer ,
1061046   +   NumDealsPurchases ,
1061047   +   NumWebVisitsMonth ,
1061048   +   RFMstat ,
1061049   +   RMntFrq ,
1061050   +   Recency ,
1061051   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1061052   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1061053   +
1061054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061055   +END;
MPRINT(EM_DIAGRAM):   END;
1061056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061057   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1061058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061060   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1061061   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1061062   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1061063   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1061064   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1061065   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1061066   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1061067   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1061068   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1061069   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1061070   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1061071   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1061072   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1061073   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1061074   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1061075   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1061076   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1061077   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1061078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1061079   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1061080   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1061081   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1061082   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1061083   +END;
MPRINT(EM_DIAGRAM):   END;
1061084   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061085   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1061086   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1061087   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1061088   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1061089   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1061090   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1061091   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1061092   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1061093   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1061094   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1061095   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1061096   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1061097   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1061098   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1061099   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1061100   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1061101   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1061102   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1061103   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1061104   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1061105   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1061106   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1061107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1061108   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1061109   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1061110   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1061111   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1061112   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1061113   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1061114   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1061115   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1061116   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1061117   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1061118   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1061119   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1061120   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1061121   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1061122   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1061123   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1061124   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1061125   +END;
MPRINT(EM_DIAGRAM):   END;
1061126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061127   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1061128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061130   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1061131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061133   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1061134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061135   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061136   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1061137   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1061138   +        S_Income  +    -0.29829037747286 * S_Kidhome
1061139   +          +    -0.18720823453547 * S_MntFishProducts
1061140   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1061141   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1061142   +          +    -0.06646294977493 * S_MonthsAsCustomer
1061143   +          +    -0.37026551859537 * S_NumDealsPurchases
1061144   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1061145   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1061146   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1061147   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome +
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 *
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 *
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 *
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq +
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1061148   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1061149   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1061150   +        S_Income  +    -0.83201267605135 * S_Kidhome
1061151   +          +    -0.09483355610222 * S_MntFishProducts
1061152   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1061153   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1061154   +          +     0.36008195182034 * S_MonthsAsCustomer
1061155   +          +    -0.13663022832818 * S_NumDealsPurchases
1061156   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1061157   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1061158   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1061159   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome +
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 *
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth +
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency +
-0.85691575464107 * S_Teenhome ;
1061160   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1061161   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1061162   +        S_Income  +     0.25780281448124 * S_Kidhome
1061163   +          +     0.04440164182166 * S_MntFishProducts
1061164   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1061165   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1061166   +          +     0.11601256317603 * S_MonthsAsCustomer
1061167   +          +    -0.06382091961731 * S_NumDealsPurchases
1061168   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1061169   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1061170   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1061171   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age +
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome +
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 *
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth +
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency +
0.12723983872652 * S_Teenhome ;
1061172   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1061173   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1061174   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1061175   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1061176   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 *
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 +
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 *
HigherEducationBinary0 ;
1061177   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1061178   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1061179   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1061180   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1061181   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 *
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 +
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 *
HigherEducationBinary0 ;
1061182   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1061183   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1061184   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1061185   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1061186   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 *
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 +
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 *
HigherEducationBinary0 ;
1061187   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1061188   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1061189   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1061190   +          +     0.18754186259114 * Marital_StatusDivorced
1061191   +          +    -0.11988223819284 * Marital_StatusMarried
1061192   +          +    -0.02283707816223 * Marital_StatusSingle
1061193   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 *
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried +
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1061194   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1061195   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1061196   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1061197   +          +    -0.28983318463941 * Marital_StatusDivorced
1061198   +          +    -0.74851149560881 * Marital_StatusMarried
1061199   +          +      0.7618336919202 * Marital_StatusSingle
1061200   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 *
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried +
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1061201   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1061202   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1061203   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1061204   +          +    -0.33639004627791 * Marital_StatusDivorced
1061205   +          +     0.12327415586833 * Marital_StatusMarried
1061206   +          +      0.0060971946845 * Marital_StatusSingle
1061207   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 *
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried +
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1061208   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1061209   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1061210   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1061211   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1061212   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1061213   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1061214   +END;
MPRINT(EM_DIAGRAM):   END;
1061215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061216   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1061217   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1061218   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1061219   +END;
MPRINT(EM_DIAGRAM):   END;
1061220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061221   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1061222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061223   +
1061224   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1061225   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1061226   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1061227   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1061228   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1061229   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061230   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1061231   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1061232   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1061233   +end;
MPRINT(EM_DIAGRAM):   end;
1061234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061235   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1061236   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1061237   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1061238   +   end;
MPRINT(EM_DIAGRAM):   end;
1061239   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1061240   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1061241   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1061242   +   end;
MPRINT(EM_DIAGRAM):   end;
1061243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061244   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1061245   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1061246   +   end;
MPRINT(EM_DIAGRAM):   end;
1061247   +end;
MPRINT(EM_DIAGRAM):   end;
1061248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061249   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1061250   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 +
-6.47403374532058 * H13 ;
1061251   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1061252   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1061253   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1061254   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1061255   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1061256   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1061257   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1061258   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1061259   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1061260   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1061261   +END;
MPRINT(EM_DIAGRAM):   END;
1061262   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061263   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1061264   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1061265   +END;
MPRINT(EM_DIAGRAM):   END;
1061266   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1061267   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1061268   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1061269   +END;
MPRINT(EM_DIAGRAM):   END;
1061270   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1061271   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1061272   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1061273   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1061274   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1061275   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1061276   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1061277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061278   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1061279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061280   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1061281   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1061282   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1061283   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1061284   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1061285   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1061286   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1061287   +END;
MPRINT(EM_DIAGRAM):   END;
1061288   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1061289   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1061290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1061291   +drop
1061292   +H11
1061293   +H12
1061294   +H13
1061295   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1061296   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1061297   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1061298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061299   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1061300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061301   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1061302   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1061303   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1061304   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1061305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061306   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1061307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061308   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1061309   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1061310   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1061311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061312   +* Ensmbl11: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 4 of 5;
1061313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061315   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1061316   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1061317   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1061318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1061319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1061320   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1061321   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1061322   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1061323   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1061324   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1061325   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1061326   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1061327   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1061328   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1061329   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1061330   +LENGTH _WARN_ $4
1061331   +      F_DepVar  $ 12
1061332   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1061333   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1061334   +
1061335   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1061336   +
1061337   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1061338   +
1061339   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1061340   +
1061341   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1061342   +
1061343   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1061344   +
1061345   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1061346   +
1061347   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1061348   +
1061349   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1061350   +
1061351   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1061352   +
1061353   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1061354   +
1061355   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1061356   +
1061357   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1061358   +
1061359   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1061360   +
1061361   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1061362   +
1061363   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1061364   +
1061365   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1061366   +
1061367   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1061368   +
1061369   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1061370   +
1061371   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1061372   +
1061373   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1061374   +
1061375   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1061376   +
1061377   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1061378   +
1061379   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1061380   +
1061381   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1061382   +
1061383   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1061384   +
1061385   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1061386   +
1061387   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1061388   +
1061389   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1061390   +
1061391   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1061392   +
1061393   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1061394   +
1061395   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1061396   +
1061397   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1061398   +
1061399   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1061400   +
1061401   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1061402   +
1061403   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1061404   +
1061405   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1061406   +
1061407   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1061408   +
1061409   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1061410   +
1061411   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1061412   +
1061413   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1061414   +
1061415   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1061416   +
1061417   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1061418   +
1061419   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1061420   +
1061421   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1061422   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1061423   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1061424   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1061425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061427   +end;
MPRINT(EM_DIAGRAM):   end;
1061428   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061429   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061430   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1061431   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061432   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061433   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1061434   +   end;
MPRINT(EM_DIAGRAM):   end;
1061435   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061436   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1061437   +   end;
MPRINT(EM_DIAGRAM):   end;
1061438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061439   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1061440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061442   +   end;
MPRINT(EM_DIAGRAM):   end;
1061443   +end;
MPRINT(EM_DIAGRAM):   end;
1061444   +
1061445   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1061446   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1061447   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1061448   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1061449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061451   +end;
MPRINT(EM_DIAGRAM):   end;
1061452   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061453   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061454   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1061455   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061456   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061457   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1061458   +   end;
MPRINT(EM_DIAGRAM):   end;
1061459   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061460   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1061461   +   end;
MPRINT(EM_DIAGRAM):   end;
1061462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061463   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1061464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061466   +   end;
MPRINT(EM_DIAGRAM):   end;
1061467   +end;
MPRINT(EM_DIAGRAM):   end;
1061468   +
1061469   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1061470   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1061471   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1061472   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1061473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061475   +end;
MPRINT(EM_DIAGRAM):   end;
1061476   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061477   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061478   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1061479   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061480   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061481   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1061482   +   end;
MPRINT(EM_DIAGRAM):   end;
1061483   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061484   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1061485   +   end;
MPRINT(EM_DIAGRAM):   end;
1061486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061487   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1061488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061490   +   end;
MPRINT(EM_DIAGRAM):   end;
1061491   +end;
MPRINT(EM_DIAGRAM):   end;
1061492   +
1061493   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1061494   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1061495   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1061496   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1061497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061499   +end;
MPRINT(EM_DIAGRAM):   end;
1061500   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061501   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061502   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1061503   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061504   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061505   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1061506   +   end;
MPRINT(EM_DIAGRAM):   end;
1061507   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061508   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1061509   +   end;
MPRINT(EM_DIAGRAM):   end;
1061510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061511   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1061512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061514   +   end;
MPRINT(EM_DIAGRAM):   end;
1061515   +end;
MPRINT(EM_DIAGRAM):   end;
1061516   +
1061517   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1061518   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1061519   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1061520   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1061521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061523   +end;
MPRINT(EM_DIAGRAM):   end;
1061524   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061525   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061526   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1061527   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061528   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061529   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1061530   +   end;
MPRINT(EM_DIAGRAM):   end;
1061531   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061532   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1061533   +   end;
MPRINT(EM_DIAGRAM):   end;
1061534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061535   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1061536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061538   +   end;
MPRINT(EM_DIAGRAM):   end;
1061539   +end;
MPRINT(EM_DIAGRAM):   end;
1061540   +
1061541   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1061542   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1061543   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1061544   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1061545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061547   +end;
MPRINT(EM_DIAGRAM):   end;
1061548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061549   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061550   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1061551   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061552   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1061553   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1061554   +   end;
MPRINT(EM_DIAGRAM):   end;
1061555   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1061556   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1061557   +   end;
MPRINT(EM_DIAGRAM):   end;
1061558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061559   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1061560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061562   +   end;
MPRINT(EM_DIAGRAM):   end;
1061563   +end;
MPRINT(EM_DIAGRAM):   end;
1061564   +
1061565   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1061566   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1061567   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1061568   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1061569   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061570   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061571   +end;
MPRINT(EM_DIAGRAM):   end;
1061572   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061573   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1061574   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1061575   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061576   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1061577   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1061578   +   end;
MPRINT(EM_DIAGRAM):   end;
1061579   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1061580   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1061581   +   end;
MPRINT(EM_DIAGRAM):   end;
1061582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061583   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1061584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061586   +   end;
MPRINT(EM_DIAGRAM):   end;
1061587   +end;
MPRINT(EM_DIAGRAM):   end;
1061588   +
1061589   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1061590   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1061591   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1061592   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1061593   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1061594   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1061595   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1061596   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1061597   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1061598   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1061599   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1061600   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1061601   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061602   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061603   +end;
MPRINT(EM_DIAGRAM):   end;
1061604   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061605   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1061606   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1061607   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061608   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1061609   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1061610   +   end;
MPRINT(EM_DIAGRAM):   end;
1061611   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1061612   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1061613   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1061614   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1061615   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1061616   +   end;
MPRINT(EM_DIAGRAM):   end;
1061617   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1061618   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1061619   +   end;
MPRINT(EM_DIAGRAM):   end;
1061620   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1061621   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1061622   +   end;
MPRINT(EM_DIAGRAM):   end;
1061623   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1061624   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1061625   +   end;
MPRINT(EM_DIAGRAM):   end;
1061626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061627   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1061628   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1061629   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1061630   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1061631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061633   +   end;
MPRINT(EM_DIAGRAM):   end;
1061634   +end;
MPRINT(EM_DIAGRAM):   end;
1061635   +
1061636   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1061637   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1061638   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1061639   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1061640   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1061641   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1061642   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1061643   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1061644   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1061645   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1061646   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1061647   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1061648   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1061649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1061650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061651   +end;
MPRINT(EM_DIAGRAM):   end;
1061652   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061653   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1061654   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1061655   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061656   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1061657   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1061658   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1061659   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1061660   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1061661   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061662   +         end;
MPRINT(EM_DIAGRAM):   end;
1061663   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1061664   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1061665   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1061666   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061667   +            end;
MPRINT(EM_DIAGRAM):   end;
1061668   +         end;
MPRINT(EM_DIAGRAM):   end;
1061669   +      end;
MPRINT(EM_DIAGRAM):   end;
1061670   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1061671   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1061672   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1061673   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061674   +         end;
MPRINT(EM_DIAGRAM):   end;
1061675   +      end;
MPRINT(EM_DIAGRAM):   end;
1061676   +   end;
MPRINT(EM_DIAGRAM):   end;
1061677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061678   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1061679   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1061680   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061681   +      end;
MPRINT(EM_DIAGRAM):   end;
1061682   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1061683   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1061684   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1061685   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1061686   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1061687   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1061688   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1061689   +         end;
MPRINT(EM_DIAGRAM):   end;
1061690   +      end;
MPRINT(EM_DIAGRAM):   end;
1061691   +   end;
MPRINT(EM_DIAGRAM):   end;
1061692   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1061693   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1061694   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1061695   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1061696   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1061697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1061698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061699   +   end;
MPRINT(EM_DIAGRAM):   end;
1061700   +end;
MPRINT(EM_DIAGRAM):   end;
1061701   +
1061702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061703   +*** Checking missing input Interval
1061704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1061705   +
1061706   +IF NMISS(
1061707   +   AcceptedCmpTotal ,
1061708   +   Age ,
1061709   +   Frq ,
1061710   +   Income ,
1061711   +   Kidhome ,
1061712   +   MntFishProducts ,
1061713   +   MntFruits ,
1061714   +   MntGoldProds ,
1061715   +   MntSweetProducts ,
1061716   +   MonthsAsCustomer ,
1061717   +   NumDealsPurchases ,
1061718   +   NumWebVisitsMonth ,
1061719   +   RFMstat ,
1061720   +   RMntFrq ,
1061721   +   Recency ,
1061722   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1061723   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1061724   +
1061725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1061726   +END;
MPRINT(EM_DIAGRAM):   END;
1061727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061728   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1061729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061730   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061731   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1061732   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1061733   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1061734   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1061735   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1061736   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1061737   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1061738   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1061739   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1061740   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1061741   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1061742   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1061743   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1061744   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1061745   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1061746   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1061747   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1061748   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1061749   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1061750   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1061751   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1061752   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1061753   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1061754   +END;
MPRINT(EM_DIAGRAM):   END;
1061755   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061756   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1061757   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1061758   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1061759   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1061760   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1061761   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1061762   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1061763   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1061764   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1061765   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1061766   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1061767   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1061768   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1061769   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1061770   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1061771   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1061772   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1061773   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1061774   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1061775   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1061776   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1061777   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1061778   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1061779   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1061780   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1061781   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1061782   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1061783   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1061784   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1061785   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1061786   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1061787   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1061788   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1061789   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1061790   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1061791   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1061792   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1061793   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1061794   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1061795   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1061796   +END;
MPRINT(EM_DIAGRAM):   END;
1061797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061798   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1061799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061801   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1061802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061804   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1061805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061807   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1061808   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1061809   +        S_Income  +     0.39869341630865 * S_Kidhome
1061810   +          +    -0.04263586382867 * S_MntFishProducts
1061811   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1061812   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1061813   +          +    -0.14308588367026 * S_MonthsAsCustomer
1061814   +          +    -0.01053346972758 * S_NumDealsPurchases
1061815   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1061816   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1061817   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1061818   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age +
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome +
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 *
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth +
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency +
0.55541282723709 * S_Teenhome ;
1061819   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1061820   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1061821   +        S_Income  +     0.31514301668626 * S_Kidhome
1061822   +          +    -0.05723808748191 * S_MntFishProducts
1061823   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1061824   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1061825   +          +    -0.48738730918684 * S_MonthsAsCustomer
1061826   +          +     0.31545795225489 * S_NumDealsPurchases
1061827   +          +     0.24686603252864 * S_NumWebVisitsMonth
1061828   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1061829   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1061830   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome +
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 *
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 *
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 *
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq +
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1061831   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1061832   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1061833   +        S_Income  +    -0.48452563006855 * S_Kidhome
1061834   +          +      0.1638851163007 * S_MntFishProducts
1061835   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1061836   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1061837   +          +    -0.09008316729574 * S_MonthsAsCustomer
1061838   +          +    -0.45452883452999 * S_NumDealsPurchases
1061839   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1061840   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1061841   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1061842   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome +
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 *
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 *
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 *
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq +
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1061843   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1061844   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1061845   +        S_Income  +    -0.62959343200613 * S_Kidhome
1061846   +          +    -0.08953561593231 * S_MntFishProducts
1061847   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1061848   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1061849   +          +    -0.04786752357029 * S_MonthsAsCustomer
1061850   +          +     0.01658790214447 * S_NumDealsPurchases
1061851   +          +     0.60508225698649 * S_NumWebVisitsMonth
1061852   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1061853   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1061854   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age +
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome +
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 *
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 *
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 *
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq +
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1061855   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1061856   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1061857   +        S_Income  +    -0.02417847760857 * S_Kidhome
1061858   +          +    -0.15499190740194 * S_MntFishProducts
1061859   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1061860   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1061861   +          +     0.03507116553703 * S_MonthsAsCustomer
1061862   +          +    -0.55190381693021 * S_NumDealsPurchases
1061863   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1061864   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1061865   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1061866   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome +
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 *
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 *
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 *
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq +
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1061867   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1061868   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1061869   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1061870   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1061871   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 *
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 +
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 *
HigherEducationBinary0 ;
1061872   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1061873   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1061874   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1061875   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1061876   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 *
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 +
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 *
HigherEducationBinary0 ;
1061877   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1061878   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1061879   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1061880   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1061881   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 *
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 +
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 *
HigherEducationBinary0 ;
1061882   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1061883   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1061884   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1061885   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1061886   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 *
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 +
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 *
HigherEducationBinary0 ;
1061887   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1061888   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1061889   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1061890   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1061891   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 *
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 +
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 *
HigherEducationBinary0 ;
1061892   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1061893   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1061894   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1061895   +          +    -0.41654638301737 * Marital_StatusDivorced
1061896   +          +     0.65956207700583 * Marital_StatusMarried
1061897   +          +    -0.52573042887166 * Marital_StatusSingle
1061898   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 *
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried +
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1061899   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1061900   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1061901   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1061902   +          +    -0.32313846862799 * Marital_StatusDivorced
1061903   +          +     0.15910539009887 * Marital_StatusMarried
1061904   +          +     0.28781821946114 * Marital_StatusSingle
1061905   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 *
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster +
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried +
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1061906   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1061907   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1061908   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1061909   +          +    -0.06481096024989 * Marital_StatusDivorced
1061910   +          +    -0.01184060710261 * Marital_StatusMarried
1061911   +          +    -0.04932258474026 * Marital_StatusSingle
1061912   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 *
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried +
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1061913   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1061914   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1061915   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1061916   +          +      0.2062190716357 * Marital_StatusDivorced
1061917   +          +      -0.523160668609 * Marital_StatusMarried
1061918   +          +     0.50687401816278 * Marital_StatusSingle
1061919   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 *
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster +
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried +
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1061920   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1061921   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1061922   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1061923   +          +     -0.1386176879533 * Marital_StatusDivorced
1061924   +          +    -0.17611433777439 * Marital_StatusMarried
1061925   +          +     0.09908348348999 * Marital_StatusSingle
1061926   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 *
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster +
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried +
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1061927   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1061928   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1061929   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1061930   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1061931   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1061932   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1061933   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1061934   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1061935   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1061936   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1061937   +END;
MPRINT(EM_DIAGRAM):   END;
1061938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061939   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1061940   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1061941   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1061942   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1061943   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1061944   +END;
MPRINT(EM_DIAGRAM):   END;
1061945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061946   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1061947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1061948   +
1061949   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1061950   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1061951   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1061952   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1061953   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1061954   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1061955   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1061956   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1061957   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1061958   +end;
MPRINT(EM_DIAGRAM):   end;
1061959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1061960   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1061961   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1061962   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1061963   +   end;
MPRINT(EM_DIAGRAM):   end;
1061964   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1061965   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1061966   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1061967   +   end;
MPRINT(EM_DIAGRAM):   end;
1061968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1061969   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1061970   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1061971   +   end;
MPRINT(EM_DIAGRAM):   end;
1061972   +end;
MPRINT(EM_DIAGRAM):   end;
1061973   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1061974   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1061975   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1061976   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 +
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1061977   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1061978   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1061979   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1061980   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1061981   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1061982   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1061983   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1061984   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1061985   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1061986   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1061987   +END;
MPRINT(EM_DIAGRAM):   END;
1061988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1061989   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1061990   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1061991   +END;
MPRINT(EM_DIAGRAM):   END;
1061992   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1061993   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1061994   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1061995   +END;
MPRINT(EM_DIAGRAM):   END;
1061996   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1061997   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1061998   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1061999   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1062000   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1062001   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1062002   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1062003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062004   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1062005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062006   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1062007   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1062008   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1062009   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1062010   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1062011   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1062012   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1062013   +END;
MPRINT(EM_DIAGRAM):   END;
1062014   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1062015   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1062016   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1062017   +drop
1062018   +H11
1062019   +H12
1062020   +H13
1062021   +H14
1062022   +H15
1062023   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1062024   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1062025   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1062026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062027   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1062028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062029   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1062030   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1062031   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1062032   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1062033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062034   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1062035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062036   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1062037   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1062038   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1062039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062040   +* Ensmbl11: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 5 of 5;
1062041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062043   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1062044   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1062045   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1062046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062047   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1062048   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1062049   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1062050   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1062051   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1062052   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1062053   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1062054   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1062055   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1062056   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1062057   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1062058   +LENGTH _WARN_ $4
1062059   +      F_DepVar  $ 12
1062060   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1062061   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1062062   +
1062063   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1062064   +
1062065   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1062066   +
1062067   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1062068   +
1062069   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1062070   +
1062071   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1062072   +
1062073   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1062074   +
1062075   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1062076   +
1062077   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1062078   +
1062079   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1062080   +
1062081   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1062082   +
1062083   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1062084   +
1062085   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1062086   +
1062087   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1062088   +
1062089   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1062090   +
1062091   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1062092   +
1062093   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1062094   +
1062095   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1062096   +
1062097   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1062098   +
1062099   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1062100   +
1062101   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1062102   +
1062103   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1062104   +
1062105   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1062106   +
1062107   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1062108   +
1062109   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1062110   +
1062111   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1062112   +
1062113   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1062114   +
1062115   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1062116   +
1062117   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1062118   +
1062119   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1062120   +
1062121   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1062122   +
1062123   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1062124   +
1062125   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1062126   +
1062127   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1062128   +
1062129   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1062130   +
1062131   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1062132   +
1062133   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1062134   +
1062135   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1062136   +
1062137   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1062138   +
1062139   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1062140   +
1062141   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1062142   +
1062143   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1062144   +
1062145   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1062146   +
1062147   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1062148   +
1062149   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1062150   +
1062151   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1062152   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1062153   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1062154   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1062155   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062156   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062157   +end;
MPRINT(EM_DIAGRAM):   end;
1062158   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062159   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062160   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1062161   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062162   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062163   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1062164   +   end;
MPRINT(EM_DIAGRAM):   end;
1062165   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062166   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1062167   +   end;
MPRINT(EM_DIAGRAM):   end;
1062168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062169   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1062170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062172   +   end;
MPRINT(EM_DIAGRAM):   end;
1062173   +end;
MPRINT(EM_DIAGRAM):   end;
1062174   +
1062175   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1062176   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1062177   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1062178   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1062179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062181   +end;
MPRINT(EM_DIAGRAM):   end;
1062182   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062184   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1062185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062187   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1062188   +   end;
MPRINT(EM_DIAGRAM):   end;
1062189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062190   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1062191   +   end;
MPRINT(EM_DIAGRAM):   end;
1062192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062193   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1062194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062196   +   end;
MPRINT(EM_DIAGRAM):   end;
1062197   +end;
MPRINT(EM_DIAGRAM):   end;
1062198   +
1062199   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1062200   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1062201   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1062202   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1062203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062205   +end;
MPRINT(EM_DIAGRAM):   end;
1062206   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062208   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1062209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062211   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1062212   +   end;
MPRINT(EM_DIAGRAM):   end;
1062213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062214   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1062215   +   end;
MPRINT(EM_DIAGRAM):   end;
1062216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062217   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1062218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062220   +   end;
MPRINT(EM_DIAGRAM):   end;
1062221   +end;
MPRINT(EM_DIAGRAM):   end;
1062222   +
1062223   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1062224   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1062225   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1062226   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1062227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062229   +end;
MPRINT(EM_DIAGRAM):   end;
1062230   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062232   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1062233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062234   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062235   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1062236   +   end;
MPRINT(EM_DIAGRAM):   end;
1062237   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062238   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1062239   +   end;
MPRINT(EM_DIAGRAM):   end;
1062240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062241   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1062242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062244   +   end;
MPRINT(EM_DIAGRAM):   end;
1062245   +end;
MPRINT(EM_DIAGRAM):   end;
1062246   +
1062247   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1062248   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1062249   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1062250   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1062251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062253   +end;
MPRINT(EM_DIAGRAM):   end;
1062254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062256   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1062257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062258   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062259   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1062260   +   end;
MPRINT(EM_DIAGRAM):   end;
1062261   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062262   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1062263   +   end;
MPRINT(EM_DIAGRAM):   end;
1062264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062265   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1062266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062268   +   end;
MPRINT(EM_DIAGRAM):   end;
1062269   +end;
MPRINT(EM_DIAGRAM):   end;
1062270   +
1062271   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1062272   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1062273   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1062274   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1062275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062277   +end;
MPRINT(EM_DIAGRAM):   end;
1062278   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062280   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1062281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1062283   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1062284   +   end;
MPRINT(EM_DIAGRAM):   end;
1062285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1062286   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1062287   +   end;
MPRINT(EM_DIAGRAM):   end;
1062288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062289   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1062290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062292   +   end;
MPRINT(EM_DIAGRAM):   end;
1062293   +end;
MPRINT(EM_DIAGRAM):   end;
1062294   +
1062295   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1062296   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1062297   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1062298   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1062299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062301   +end;
MPRINT(EM_DIAGRAM):   end;
1062302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1062304   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1062305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062306   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1062307   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1062308   +   end;
MPRINT(EM_DIAGRAM):   end;
1062309   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1062310   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1062311   +   end;
MPRINT(EM_DIAGRAM):   end;
1062312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062313   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1062314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062316   +   end;
MPRINT(EM_DIAGRAM):   end;
1062317   +end;
MPRINT(EM_DIAGRAM):   end;
1062318   +
1062319   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1062320   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1062321   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1062322   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1062323   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1062324   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1062325   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1062326   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1062327   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1062328   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1062329   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1062330   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1062331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062333   +end;
MPRINT(EM_DIAGRAM):   end;
1062334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062335   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1062336   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1062337   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062338   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1062339   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1062340   +   end;
MPRINT(EM_DIAGRAM):   end;
1062341   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1062342   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1062343   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1062344   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1062345   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1062346   +   end;
MPRINT(EM_DIAGRAM):   end;
1062347   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1062348   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1062349   +   end;
MPRINT(EM_DIAGRAM):   end;
1062350   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1062351   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1062352   +   end;
MPRINT(EM_DIAGRAM):   end;
1062353   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1062354   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1062355   +   end;
MPRINT(EM_DIAGRAM):   end;
1062356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062357   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1062358   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1062359   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1062360   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1062361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062363   +   end;
MPRINT(EM_DIAGRAM):   end;
1062364   +end;
MPRINT(EM_DIAGRAM):   end;
1062365   +
1062366   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1062367   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1062368   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1062369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1062370   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1062371   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1062372   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1062373   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1062374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1062375   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1062376   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1062377   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1062378   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1062379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1062380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062381   +end;
MPRINT(EM_DIAGRAM):   end;
1062382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1062384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1062385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1062387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1062388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1062389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1062390   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1062391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1062392   +         end;
MPRINT(EM_DIAGRAM):   end;
1062393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1062394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1062395   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1062396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1062397   +            end;
MPRINT(EM_DIAGRAM):   end;
1062398   +         end;
MPRINT(EM_DIAGRAM):   end;
1062399   +      end;
MPRINT(EM_DIAGRAM):   end;
1062400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1062401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1062402   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1062403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1062404   +         end;
MPRINT(EM_DIAGRAM):   end;
1062405   +      end;
MPRINT(EM_DIAGRAM):   end;
1062406   +   end;
MPRINT(EM_DIAGRAM):   end;
1062407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1062409   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1062410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1062411   +      end;
MPRINT(EM_DIAGRAM):   end;
1062412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1062413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1062414   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1062415   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1062416   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1062417   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1062418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1062419   +         end;
MPRINT(EM_DIAGRAM):   end;
1062420   +      end;
MPRINT(EM_DIAGRAM):   end;
1062421   +   end;
MPRINT(EM_DIAGRAM):   end;
1062422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1062423   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1062424   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1062425   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1062426   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1062427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1062428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062429   +   end;
MPRINT(EM_DIAGRAM):   end;
1062430   +end;
MPRINT(EM_DIAGRAM):   end;
1062431   +
1062432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062433   +*** Checking missing input Interval
1062434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1062435   +
1062436   +IF NMISS(
1062437   +   AcceptedCmpTotal ,
1062438   +   Age ,
1062439   +   Frq ,
1062440   +   Income ,
1062441   +   Kidhome ,
1062442   +   MntFishProducts ,
1062443   +   MntFruits ,
1062444   +   MntGoldProds ,
1062445   +   MntSweetProducts ,
1062446   +   MonthsAsCustomer ,
1062447   +   NumDealsPurchases ,
1062448   +   NumWebVisitsMonth ,
1062449   +   RFMstat ,
1062450   +   RMntFrq ,
1062451   +   Recency ,
1062452   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1062453   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1062454   +
1062455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1062456   +END;
MPRINT(EM_DIAGRAM):   END;
1062457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062458   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1062459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062460   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1062461   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1062462   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1062463   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1062464   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1062465   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1062466   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1062467   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1062468   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1062469   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1062470   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1062471   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1062472   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1062473   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1062474   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1062475   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1062476   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1062477   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1062478   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1062479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1062480   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1062481   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1062482   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1062483   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1062484   +END;
MPRINT(EM_DIAGRAM):   END;
1062485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1062486   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1062487   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1062488   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1062489   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1062490   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1062491   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1062492   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1062493   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1062494   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1062495   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1062496   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1062497   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1062498   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1062499   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1062500   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1062501   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1062502   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1062503   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1062504   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1062505   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1062506   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1062507   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1062508   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1062509   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1062510   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1062511   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1062512   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1062513   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1062514   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1062515   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1062516   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1062517   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1062518   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1062519   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1062520   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1062521   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1062522   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1062523   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1062524   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1062525   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1062526   +END;
MPRINT(EM_DIAGRAM):   END;
1062527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062528   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1062529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062531   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1062532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062534   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1062535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062536   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1062537   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1062538   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1062539   +        S_Income  +    -0.52684337240504 * S_Kidhome
1062540   +          +     0.07835956947085 * S_MntFishProducts
1062541   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1062542   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1062543   +          +    -0.44463888327841 * S_MonthsAsCustomer
1062544   +          +    -0.20310227710644 * S_NumDealsPurchases
1062545   +          +     0.06594467408568 * S_NumWebVisitsMonth
1062546   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1062547   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1062548   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome +
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 *
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 *
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 *
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq +
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1062549   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1062550   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1062551   +        S_Income  +     0.91025818069308 * S_Kidhome
1062552   +          +     0.26585860774761 * S_MntFishProducts
1062553   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1062554   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1062555   +          +    -0.12421403342454 * S_MonthsAsCustomer
1062556   +          +     0.66931066909347 * S_NumDealsPurchases
1062557   +          +     0.35050056776957 * S_NumWebVisitsMonth
1062558   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1062559   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1062560   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome +
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 *
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 *
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 *
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq +
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1062561   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1062562   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1062563   +        S_Income  +     0.63027536562783 * S_Kidhome
1062564   +          +     0.15303249164566 * S_MntFishProducts
1062565   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1062566   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1062567   +          +    -0.21006970062531 * S_MonthsAsCustomer
1062568   +          +      0.2955774677605 * S_NumDealsPurchases
1062569   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1062570   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1062571   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1062572   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome +
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 *
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 *
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 *
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq +
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1062573   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1062574   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1062575   +        S_Income  +    -0.00985947331416 * S_Kidhome
1062576   +          +    -0.27114701164817 * S_MntFishProducts
1062577   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1062578   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1062579   +          +    -0.02702818828921 * S_MonthsAsCustomer
1062580   +          +    -0.63381188911946 * S_NumDealsPurchases
1062581   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1062582   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1062583   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1062584   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome +
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 *
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 *
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 *
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq +
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1062585   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1062586   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1062587   +        S_Income  +    -0.24206929946772 * S_Kidhome
1062588   +          +    -0.19039689229491 * S_MntFishProducts
1062589   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1062590   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1062591   +          +     0.03815221487927 * S_MonthsAsCustomer
1062592   +          +    -0.43579024169696 * S_NumDealsPurchases
1062593   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1062594   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1062595   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1062596   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age +
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome +
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 *
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 *
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 *
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq +
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1062597   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1062598   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1062599   +        S_Income  +    -0.25736924536467 * S_Kidhome
1062600   +          +    -0.04400855145817 * S_MntFishProducts
1062601   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1062602   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1062603   +          +     0.00265986106691 * S_MonthsAsCustomer
1062604   +          +     0.27331919080312 * S_NumDealsPurchases
1062605   +          +     0.22836119952787 * S_NumWebVisitsMonth
1062606   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1062607   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1062608   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome +
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 *
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 *
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 *
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq +
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1062609   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1062610   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1062611   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1062612   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1062613   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 *
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 +
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 *
HigherEducationBinary0 ;
1062614   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1062615   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1062616   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1062617   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1062618   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 *
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 +
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 *
HigherEducationBinary0 ;
1062619   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1062620   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1062621   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1062622   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1062623   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 *
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 +
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 *
HigherEducationBinary0 ;
1062624   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1062625   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1062626   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1062627   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1062628   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 *
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 +
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 *
HigherEducationBinary0 ;
1062629   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1062630   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1062631   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1062632   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1062633   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 *
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 +
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 *
HigherEducationBinary0 ;
1062634   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1062635   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1062636   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1062637   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1062638   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 *
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 +
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 *
HigherEducationBinary0 ;
1062639   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1062640   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1062641   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1062642   +          +     0.12502276672336 * Marital_StatusDivorced
1062643   +          +    -0.02606508453741 * Marital_StatusMarried
1062644   +          +      0.0418850245266 * Marital_StatusSingle
1062645   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 *
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried +
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1062646   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1062647   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1062648   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1062649   +          +      0.1943860669795 * Marital_StatusDivorced
1062650   +          +     -0.1529596261268 * Marital_StatusMarried
1062651   +          +     0.24187461301348 * Marital_StatusSingle
1062652   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 *
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried +
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1062653   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1062654   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1062655   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1062656   +          +    -0.19677652422622 * Marital_StatusDivorced
1062657   +          +     0.75897106429478 * Marital_StatusMarried
1062658   +          +    -0.66692260284833 * Marital_StatusSingle
1062659   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 *
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried +
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1062660   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1062661   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1062662   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1062663   +          +    -0.18964222971122 * Marital_StatusDivorced
1062664   +          +    -0.15222045956879 * Marital_StatusMarried
1062665   +          +     0.15455795695595 * Marital_StatusSingle
1062666   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 *
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried +
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1062667   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1062668   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1062669   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1062670   +          +    -0.10122776921995 * Marital_StatusDivorced
1062671   +          +     0.14126755564161 * Marital_StatusMarried
1062672   +          +    -0.18463644418978 * Marital_StatusSingle
1062673   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 *
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried +
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1062674   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1062675   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1062676   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1062677   +          +     0.05009431660662 * Marital_StatusDivorced
1062678   +          +    -0.38407798045329 * Marital_StatusMarried
1062679   +          +      0.3035257398654 * Marital_StatusSingle
1062680   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 *
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried +
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1062681   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1062682   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1062683   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1062684   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1062685   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1062686   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1062687   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1062688   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1062689   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1062690   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1062691   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1062692   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1062693   +END;
MPRINT(EM_DIAGRAM):   END;
1062694   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1062695   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1062696   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1062697   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1062698   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1062699   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1062700   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1062701   +END;
MPRINT(EM_DIAGRAM):   END;
1062702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062703   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1062704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062705   +
1062706   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1062707   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1062708   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1062709   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1062710   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1062711   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1062712   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1062713   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1062714   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1062715   +end;
MPRINT(EM_DIAGRAM):   end;
1062716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062717   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1062718   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1062719   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1062720   +   end;
MPRINT(EM_DIAGRAM):   end;
1062721   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1062722   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1062723   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1062724   +   end;
MPRINT(EM_DIAGRAM):   end;
1062725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1062726   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1062727   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1062728   +   end;
MPRINT(EM_DIAGRAM):   end;
1062729   +end;
MPRINT(EM_DIAGRAM):   end;
1062730   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1062731   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1062732   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1062733   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 +
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 *
H16 ;
1062734   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1062735   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1062736   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1062737   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1062738   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1062739   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1062740   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1062741   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1062742   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1062743   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1062744   +END;
MPRINT(EM_DIAGRAM):   END;
1062745   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1062746   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1062747   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1062748   +END;
MPRINT(EM_DIAGRAM):   END;
1062749   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1062750   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1062751   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1062752   +END;
MPRINT(EM_DIAGRAM):   END;
1062753   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1062754   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1062755   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1062756   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1062757   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1062758   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1062759   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1062760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062761   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1062762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1062763   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1062764   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1062765   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1062766   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1062767   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1062768   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1062769   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1062770   +END;
MPRINT(EM_DIAGRAM):   END;
1062771   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1062772   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1062773   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1062774   +drop
1062775   +H11
1062776   +H12
1062777   +H13
1062778   +H14
1062779   +H15
1062780   +H16
1062781   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1062782   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1062783   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1062784   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062785   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1062786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062787   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1062788   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1062789   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1062790   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1062791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062792   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1062793   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062794   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1062795   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1062796   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1062797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062798   +* Ensmbl11: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Average Posteriors of 5 models;
1062799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062800   +P_DepVar1 = (
1062801   +Neural39_P_DepVar1 +
1062802   +Neural37_P_DepVar1 +
1062803   +Neural38_P_DepVar1 +
1062804   +Neural40_P_DepVar1 +
1062805   +Neural41_P_DepVar1
1062806   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural39_P_DepVar1 + Neural37_P_DepVar1 +
Neural38_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 )/5;
1062807   +P_DepVar0 = (
1062808   +Neural39_P_DepVar0 +
1062809   +Neural37_P_DepVar0 +
1062810   +Neural38_P_DepVar0 +
1062811   +Neural40_P_DepVar0 +
1062812   +Neural41_P_DepVar0
1062813   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural39_P_DepVar0 + Neural37_P_DepVar0 +
Neural38_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 )/5;
1062814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062815   +* Ensmbl11: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Classification Vars;
1062816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062817   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1062818   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1062819   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1062820   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1062821   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1062822   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1062823   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1062824   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1062825   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1062826   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1062827   +end;
MPRINT(EM_DIAGRAM):   end;
1062828   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1062829   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1062830   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1062831   +end;
MPRINT(EM_DIAGRAM):   end;
1062832   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1062833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062834   +* Ensmbl11: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Producing Unformatted variable;
1062835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062836   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1062837   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1062838   +else
1062839   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1062840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062841   +* Ensmbl11: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing _WARN_ Variable;
1062842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062843   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1062844   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1062845   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1062846   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1062846  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1062847   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1062847  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1062848   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1062848  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1062849   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1062849  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1062850   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1062850  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1062851   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1062851  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1062852   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1062852  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1062853   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1062853  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1062854   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1062854  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1062855   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1062855  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1062856   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1062856  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1062857   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1062857  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1062858   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1062858  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1062859   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1062859  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1062860   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1062860  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1062861   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1062861  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1062862   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1062862  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1062863   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1062863  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1062864   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1062864  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1062865   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1062865  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1062866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062867   +* Ensmbl11: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Residual Vars;
1062868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062869   +if
1062870   +F_DepVar NE '1'
1062871   +AND F_DepVar NE '0'
1062872   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1062873   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1062874   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1062875   +end;
MPRINT(EM_DIAGRAM):   end;
1062876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1062877   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1062878   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1062879   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1062880   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1062881   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1062882   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1062883   +END;
MPRINT(EM_DIAGRAM):   END;
1062884   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1062885    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL39_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1062886    quit;
1062887    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1062888    filename emflow
1062888  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring NEURAL39_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062889    *------------------------------------------------------------*;
1062890    * Ensmbl11: Scoring NEURAL39_VALIDATE data;
1062891    *------------------------------------------------------------*;
1062892    data EMWS8.Ensmbl11_VALIDATE
1062893    / view=EMWS8.Ensmbl11_VALIDATE
1062894    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_VALIDATE / view=EMWS8.Ensmbl11_VALIDATE ;
1062895    set EMWS8.Neural39_VALIDATE
1062896    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_VALIDATE ;
1062897    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas.
1062898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062899   +* Ensmbl11: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Combine model for DepVar;
1062900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062901   +* Ensmbl11: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 1 of 5;
1062902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062904   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1062905   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1062906   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1062907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062909   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1062910   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1062911   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1062912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062914   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1062915   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1062916   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1062917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062919   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1062920   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1062921   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1062922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062923   +
1062924   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1062925   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1062925  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1062926   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1062927   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1062928   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1062929   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1062930   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1062931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062932   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1062933   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1062934   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1062935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062937   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1062938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062939   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1062940   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1062941   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1062942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062943   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1062944   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1062945   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1062946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062948   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1062949   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1062950   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1062951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062953   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1062954   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1062955   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1062956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1062957   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1062958   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1062959   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1062960   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1062961   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1062962   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1062963   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1062964   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1062965   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1062966   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1062967   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1062968   +LENGTH _WARN_ $4
1062969   +      F_DepVar  $ 12
1062970   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1062971   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1062972   +
1062973   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1062974   +
1062975   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1062976   +
1062977   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1062978   +
1062979   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1062980   +
1062981   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1062982   +
1062983   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1062984   +
1062985   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1062986   +
1062987   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1062988   +
1062989   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1062990   +
1062991   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1062992   +
1062993   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1062994   +
1062995   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1062996   +
1062997   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1062998   +
1062999   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1063000   +
1063001   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1063002   +
1063003   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1063004   +
1063005   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1063006   +
1063007   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1063008   +
1063009   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1063010   +
1063011   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1063012   +
1063013   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1063014   +
1063015   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1063016   +
1063017   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1063018   +
1063019   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1063020   +
1063021   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1063022   +
1063023   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1063024   +
1063025   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1063026   +
1063027   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1063028   +
1063029   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1063030   +
1063031   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1063032   +
1063033   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1063034   +
1063035   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1063036   +
1063037   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1063038   +
1063039   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1063040   +
1063041   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1063042   +
1063043   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1063044   +
1063045   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1063046   +
1063047   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1063048   +
1063049   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1063050   +
1063051   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1063052   +
1063053   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1063054   +
1063055   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1063056   +
1063057   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1063058   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1063059   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1063060   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1063061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063063   +end;
MPRINT(EM_DIAGRAM):   end;
1063064   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063065   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063066   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1063067   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063068   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063069   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1063070   +   end;
MPRINT(EM_DIAGRAM):   end;
1063071   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063072   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1063073   +   end;
MPRINT(EM_DIAGRAM):   end;
1063074   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063075   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1063076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063078   +   end;
MPRINT(EM_DIAGRAM):   end;
1063079   +end;
MPRINT(EM_DIAGRAM):   end;
1063080   +
1063081   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1063082   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1063083   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1063084   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1063085   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063087   +end;
MPRINT(EM_DIAGRAM):   end;
1063088   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063089   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063090   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1063091   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063092   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063093   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1063094   +   end;
MPRINT(EM_DIAGRAM):   end;
1063095   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063096   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1063097   +   end;
MPRINT(EM_DIAGRAM):   end;
1063098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063099   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1063100   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063101   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063102   +   end;
MPRINT(EM_DIAGRAM):   end;
1063103   +end;
MPRINT(EM_DIAGRAM):   end;
1063104   +
1063105   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1063106   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1063107   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1063108   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1063109   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063110   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063111   +end;
MPRINT(EM_DIAGRAM):   end;
1063112   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063113   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063114   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1063115   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063116   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063117   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1063118   +   end;
MPRINT(EM_DIAGRAM):   end;
1063119   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063120   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1063121   +   end;
MPRINT(EM_DIAGRAM):   end;
1063122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063123   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1063124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063126   +   end;
MPRINT(EM_DIAGRAM):   end;
1063127   +end;
MPRINT(EM_DIAGRAM):   end;
1063128   +
1063129   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1063130   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1063131   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1063132   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1063133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063135   +end;
MPRINT(EM_DIAGRAM):   end;
1063136   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063138   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1063139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063140   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063141   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1063142   +   end;
MPRINT(EM_DIAGRAM):   end;
1063143   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063144   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1063145   +   end;
MPRINT(EM_DIAGRAM):   end;
1063146   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063147   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1063148   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063149   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063150   +   end;
MPRINT(EM_DIAGRAM):   end;
1063151   +end;
MPRINT(EM_DIAGRAM):   end;
1063152   +
1063153   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1063154   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1063155   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1063156   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1063157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063159   +end;
MPRINT(EM_DIAGRAM):   end;
1063160   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063162   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1063163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063164   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063165   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1063166   +   end;
MPRINT(EM_DIAGRAM):   end;
1063167   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063168   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1063169   +   end;
MPRINT(EM_DIAGRAM):   end;
1063170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063171   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1063172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063174   +   end;
MPRINT(EM_DIAGRAM):   end;
1063175   +end;
MPRINT(EM_DIAGRAM):   end;
1063176   +
1063177   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1063178   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1063179   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1063180   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1063181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063183   +end;
MPRINT(EM_DIAGRAM):   end;
1063184   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063185   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063186   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1063187   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063188   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063189   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1063190   +   end;
MPRINT(EM_DIAGRAM):   end;
1063191   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063192   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1063193   +   end;
MPRINT(EM_DIAGRAM):   end;
1063194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063195   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1063196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063198   +   end;
MPRINT(EM_DIAGRAM):   end;
1063199   +end;
MPRINT(EM_DIAGRAM):   end;
1063200   +
1063201   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1063202   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1063203   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1063204   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1063205   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063207   +end;
MPRINT(EM_DIAGRAM):   end;
1063208   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063209   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063210   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1063211   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063212   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1063213   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1063214   +   end;
MPRINT(EM_DIAGRAM):   end;
1063215   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1063216   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1063217   +   end;
MPRINT(EM_DIAGRAM):   end;
1063218   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063219   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1063220   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063221   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063222   +   end;
MPRINT(EM_DIAGRAM):   end;
1063223   +end;
MPRINT(EM_DIAGRAM):   end;
1063224   +
1063225   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1063226   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1063227   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1063228   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1063229   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1063230   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1063231   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1063232   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1063233   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1063234   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1063235   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1063236   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1063237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063239   +end;
MPRINT(EM_DIAGRAM):   end;
1063240   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063241   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1063242   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1063243   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063244   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1063245   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1063246   +   end;
MPRINT(EM_DIAGRAM):   end;
1063247   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1063248   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1063249   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1063250   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1063251   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1063252   +   end;
MPRINT(EM_DIAGRAM):   end;
1063253   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1063254   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1063255   +   end;
MPRINT(EM_DIAGRAM):   end;
1063256   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1063257   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1063258   +   end;
MPRINT(EM_DIAGRAM):   end;
1063259   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1063260   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1063261   +   end;
MPRINT(EM_DIAGRAM):   end;
1063262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063263   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1063264   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1063265   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1063266   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1063267   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063268   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063269   +   end;
MPRINT(EM_DIAGRAM):   end;
1063270   +end;
MPRINT(EM_DIAGRAM):   end;
1063271   +
1063272   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1063273   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1063274   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1063275   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1063276   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1063277   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1063278   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1063279   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1063280   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1063281   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1063282   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1063283   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1063284   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1063285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063287   +end;
MPRINT(EM_DIAGRAM):   end;
1063288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063289   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1063290   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1063291   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063292   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1063293   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1063294   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1063295   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1063296   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1063297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063298   +         end;
MPRINT(EM_DIAGRAM):   end;
1063299   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1063300   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1063301   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1063302   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063303   +            end;
MPRINT(EM_DIAGRAM):   end;
1063304   +         end;
MPRINT(EM_DIAGRAM):   end;
1063305   +      end;
MPRINT(EM_DIAGRAM):   end;
1063306   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1063307   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1063308   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1063309   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063310   +         end;
MPRINT(EM_DIAGRAM):   end;
1063311   +      end;
MPRINT(EM_DIAGRAM):   end;
1063312   +   end;
MPRINT(EM_DIAGRAM):   end;
1063313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063314   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1063315   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1063316   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063317   +      end;
MPRINT(EM_DIAGRAM):   end;
1063318   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1063319   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1063320   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1063321   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1063322   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1063323   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1063324   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063325   +         end;
MPRINT(EM_DIAGRAM):   end;
1063326   +      end;
MPRINT(EM_DIAGRAM):   end;
1063327   +   end;
MPRINT(EM_DIAGRAM):   end;
1063328   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1063329   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1063330   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1063331   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1063332   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1063333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063335   +   end;
MPRINT(EM_DIAGRAM):   end;
1063336   +end;
MPRINT(EM_DIAGRAM):   end;
1063337   +
1063338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063339   +*** Checking missing input Interval
1063340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1063341   +
1063342   +IF NMISS(
1063343   +   AcceptedCmpTotal ,
1063344   +   Age ,
1063345   +   Frq ,
1063346   +   Income ,
1063347   +   Kidhome ,
1063348   +   MntFishProducts ,
1063349   +   MntFruits ,
1063350   +   MntGoldProds ,
1063351   +   MntSweetProducts ,
1063352   +   MonthsAsCustomer ,
1063353   +   NumDealsPurchases ,
1063354   +   NumWebVisitsMonth ,
1063355   +   RFMstat ,
1063356   +   RMntFrq ,
1063357   +   Recency ,
1063358   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1063359   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1063360   +
1063361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063362   +END;
MPRINT(EM_DIAGRAM):   END;
1063363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063364   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1063365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063366   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1063367   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1063368   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1063369   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1063370   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1063371   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1063372   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1063373   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1063374   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1063375   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1063376   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1063377   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1063378   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1063379   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1063380   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1063381   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1063382   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1063383   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1063384   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1063385   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1063386   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1063387   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1063388   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1063389   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1063390   +END;
MPRINT(EM_DIAGRAM):   END;
1063391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1063392   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1063393   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1063394   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1063395   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1063396   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1063397   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1063398   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1063399   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1063400   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1063401   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1063402   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1063403   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1063404   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1063405   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1063406   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1063407   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1063408   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1063409   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1063410   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1063411   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1063412   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1063413   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1063414   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1063415   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1063416   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1063417   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1063418   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1063419   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1063420   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1063421   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1063422   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1063423   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1063424   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1063425   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1063426   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1063427   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1063428   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1063429   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1063430   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1063431   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1063432   +END;
MPRINT(EM_DIAGRAM):   END;
1063433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063434   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1063435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063437   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1063438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063440   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1063441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063442   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1063443   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1063444   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1063445   +        S_Income  +     0.25564250606874 * S_Kidhome
1063446   +          +    -0.02786629817134 * S_MntFishProducts
1063447   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1063448   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1063449   +          +    -0.29199173107007 * S_MonthsAsCustomer
1063450   +          +    -0.59759788962473 * S_NumDealsPurchases
1063451   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1063452   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1063453   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1063454   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome +
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 *
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 *
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 *
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq +
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1063455   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1063456   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1063457   +        S_Income  +     0.07328887474153 * S_Kidhome
1063458   +          +    -0.23284570213322 * S_MntFishProducts
1063459   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1063460   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1063461   +          +     0.29669594858185 * S_MonthsAsCustomer
1063462   +          +    -0.51220833966596 * S_NumDealsPurchases
1063463   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1063464   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1063465   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1063466   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age +
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome +
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 *
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 *
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 *
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq +
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1063467   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1063468   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1063469   +        S_Income  +    -0.68209910558389 * S_Kidhome
1063470   +          +     0.23366174254474 * S_MntFishProducts
1063471   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1063472   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1063473   +          +    -0.05759532204753 * S_MonthsAsCustomer
1063474   +          +    -0.30170163047261 * S_NumDealsPurchases
1063475   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1063476   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1063477   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1063478   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome +
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 *
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 *
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 *
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq +
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1063479   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1063480   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1063481   +        S_Income  +     0.67855138873039 * S_Kidhome
1063482   +          +    -0.05297743313476 * S_MntFishProducts
1063483   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1063484   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1063485   +          +    -0.15817861274553 * S_MonthsAsCustomer
1063486   +          +     0.25133066233725 * S_NumDealsPurchases
1063487   +          +     0.08802636187267 * S_NumWebVisitsMonth
1063488   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1063489   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1063490   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome +
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 *
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 *
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 *
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq +
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1063491   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1063492   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1063493   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1063494   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1063495   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 *
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 +
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 *
HigherEducationBinary0 ;
1063496   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1063497   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1063498   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1063499   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1063500   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 *
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 +
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 *
HigherEducationBinary0 ;
1063501   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1063502   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1063503   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1063504   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1063505   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 *
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 +
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 *
HigherEducationBinary0 ;
1063506   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1063507   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1063508   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1063509   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1063510   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 *
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 +
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 *
HigherEducationBinary0 ;
1063511   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1063512   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1063513   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1063514   +          +      0.0528075343138 * Marital_StatusDivorced
1063515   +          +    -0.08269844855231 * Marital_StatusMarried
1063516   +          +     0.43411839786169 * Marital_StatusSingle
1063517   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 *
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried +
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1063518   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1063519   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1063520   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1063521   +          +    -0.12842912869907 * Marital_StatusDivorced
1063522   +          +     0.11838814754642 * Marital_StatusMarried
1063523   +          +     0.01184261900927 * Marital_StatusSingle
1063524   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 *
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried +
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1063525   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1063526   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1063527   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1063528   +          +    -0.22110722201709 * Marital_StatusDivorced
1063529   +          +      0.1355339029843 * Marital_StatusMarried
1063530   +          +    -0.33157273596382 * Marital_StatusSingle
1063531   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 *
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster +
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried +
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1063532   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1063533   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1063534   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1063535   +          +    -0.21663247467797 * Marital_StatusDivorced
1063536   +          +     1.11468603898508 * Marital_StatusMarried
1063537   +          +    -0.84252388146943 * Marital_StatusSingle
1063538   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 *
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried +
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1063539   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1063540   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1063541   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1063542   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1063543   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1063544   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1063545   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1063546   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1063547   +END;
MPRINT(EM_DIAGRAM):   END;
1063548   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1063549   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1063550   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1063551   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1063552   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1063553   +END;
MPRINT(EM_DIAGRAM):   END;
1063554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063555   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1063556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063557   +
1063558   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1063559   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1063560   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1063561   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1063562   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1063563   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063564   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1063565   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1063566   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1063567   +end;
MPRINT(EM_DIAGRAM):   end;
1063568   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063569   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1063570   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1063571   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1063572   +   end;
MPRINT(EM_DIAGRAM):   end;
1063573   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1063574   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1063575   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1063576   +   end;
MPRINT(EM_DIAGRAM):   end;
1063577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063578   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1063579   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1063580   +   end;
MPRINT(EM_DIAGRAM):   end;
1063581   +end;
MPRINT(EM_DIAGRAM):   end;
1063582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1063583   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1063584   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 +
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1063585   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1063586   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1063587   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1063588   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1063589   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1063590   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1063591   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1063592   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1063593   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1063594   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1063595   +END;
MPRINT(EM_DIAGRAM):   END;
1063596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1063597   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1063598   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1063599   +END;
MPRINT(EM_DIAGRAM):   END;
1063600   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1063601   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1063602   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1063603   +END;
MPRINT(EM_DIAGRAM):   END;
1063604   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1063605   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1063606   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1063607   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1063608   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1063609   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1063610   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1063611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063612   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1063613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1063614   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1063615   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1063616   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1063617   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1063618   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1063619   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1063620   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1063621   +END;
MPRINT(EM_DIAGRAM):   END;
1063622   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1063623   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1063624   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1063625   +drop
1063626   +H11
1063627   +H12
1063628   +H13
1063629   +H14
1063630   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1063631   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1063632   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1063633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063634   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1063635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063636   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1063637   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1063638   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1063639   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1063640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063641   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1063642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063643   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1063644   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1063645   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1063646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063647   +* Ensmbl11: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 2 of 5;
1063648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063650   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1063651   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1063652   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1063653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1063654   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1063655   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1063656   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1063657   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1063658   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1063659   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1063660   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1063661   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1063662   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1063663   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1063664   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1063665   +LENGTH _WARN_ $4
1063666   +      F_DepVar  $ 12
1063667   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1063668   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1063669   +
1063670   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1063671   +
1063672   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1063673   +
1063674   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1063675   +
1063676   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1063677   +
1063678   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1063679   +
1063680   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1063681   +
1063682   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1063683   +
1063684   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1063685   +
1063686   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1063687   +
1063688   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1063689   +
1063690   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1063691   +
1063692   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1063693   +
1063694   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1063695   +
1063696   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1063697   +
1063698   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1063699   +
1063700   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1063701   +
1063702   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1063703   +
1063704   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1063705   +
1063706   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1063707   +
1063708   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1063709   +
1063710   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1063711   +
1063712   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1063713   +
1063714   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1063715   +
1063716   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1063717   +
1063718   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1063719   +
1063720   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1063721   +
1063722   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1063723   +
1063724   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1063725   +
1063726   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1063727   +
1063728   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1063729   +
1063730   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1063731   +
1063732   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1063733   +
1063734   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1063735   +
1063736   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1063737   +
1063738   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1063739   +
1063740   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1063741   +
1063742   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1063743   +
1063744   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1063745   +
1063746   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1063747   +
1063748   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1063749   +
1063750   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1063751   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1063752   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1063753   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1063754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063756   +end;
MPRINT(EM_DIAGRAM):   end;
1063757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063759   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1063760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063762   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1063763   +   end;
MPRINT(EM_DIAGRAM):   end;
1063764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063765   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1063766   +   end;
MPRINT(EM_DIAGRAM):   end;
1063767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063768   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1063769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063771   +   end;
MPRINT(EM_DIAGRAM):   end;
1063772   +end;
MPRINT(EM_DIAGRAM):   end;
1063773   +
1063774   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1063775   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1063776   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1063777   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1063778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063780   +end;
MPRINT(EM_DIAGRAM):   end;
1063781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063783   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1063784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063785   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063786   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1063787   +   end;
MPRINT(EM_DIAGRAM):   end;
1063788   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063789   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1063790   +   end;
MPRINT(EM_DIAGRAM):   end;
1063791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063792   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1063793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063795   +   end;
MPRINT(EM_DIAGRAM):   end;
1063796   +end;
MPRINT(EM_DIAGRAM):   end;
1063797   +
1063798   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1063799   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1063800   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1063801   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1063802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063804   +end;
MPRINT(EM_DIAGRAM):   end;
1063805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063807   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1063808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063809   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063810   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1063811   +   end;
MPRINT(EM_DIAGRAM):   end;
1063812   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063813   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1063814   +   end;
MPRINT(EM_DIAGRAM):   end;
1063815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063816   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1063817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063819   +   end;
MPRINT(EM_DIAGRAM):   end;
1063820   +end;
MPRINT(EM_DIAGRAM):   end;
1063821   +
1063822   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1063823   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1063824   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1063825   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1063826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063828   +end;
MPRINT(EM_DIAGRAM):   end;
1063829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063831   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1063832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063834   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1063835   +   end;
MPRINT(EM_DIAGRAM):   end;
1063836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063837   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1063838   +   end;
MPRINT(EM_DIAGRAM):   end;
1063839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063840   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1063841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063843   +   end;
MPRINT(EM_DIAGRAM):   end;
1063844   +end;
MPRINT(EM_DIAGRAM):   end;
1063845   +
1063846   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1063847   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1063848   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1063849   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1063850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063852   +end;
MPRINT(EM_DIAGRAM):   end;
1063853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063855   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1063856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063858   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1063859   +   end;
MPRINT(EM_DIAGRAM):   end;
1063860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063861   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1063862   +   end;
MPRINT(EM_DIAGRAM):   end;
1063863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063864   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1063865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063867   +   end;
MPRINT(EM_DIAGRAM):   end;
1063868   +end;
MPRINT(EM_DIAGRAM):   end;
1063869   +
1063870   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1063871   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1063872   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1063873   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1063874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063876   +end;
MPRINT(EM_DIAGRAM):   end;
1063877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063879   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1063880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063881   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1063882   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1063883   +   end;
MPRINT(EM_DIAGRAM):   end;
1063884   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1063885   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1063886   +   end;
MPRINT(EM_DIAGRAM):   end;
1063887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063888   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1063889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063891   +   end;
MPRINT(EM_DIAGRAM):   end;
1063892   +end;
MPRINT(EM_DIAGRAM):   end;
1063893   +
1063894   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1063895   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1063896   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1063897   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1063898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063900   +end;
MPRINT(EM_DIAGRAM):   end;
1063901   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1063903   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1063904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063905   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1063906   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1063907   +   end;
MPRINT(EM_DIAGRAM):   end;
1063908   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1063909   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1063910   +   end;
MPRINT(EM_DIAGRAM):   end;
1063911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063912   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1063913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063915   +   end;
MPRINT(EM_DIAGRAM):   end;
1063916   +end;
MPRINT(EM_DIAGRAM):   end;
1063917   +
1063918   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1063919   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1063920   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1063921   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1063922   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1063923   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1063924   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1063925   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1063926   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1063927   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1063928   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1063929   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1063930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063932   +end;
MPRINT(EM_DIAGRAM):   end;
1063933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063934   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1063935   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1063936   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063937   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1063938   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1063939   +   end;
MPRINT(EM_DIAGRAM):   end;
1063940   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1063941   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1063942   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1063943   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1063944   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1063945   +   end;
MPRINT(EM_DIAGRAM):   end;
1063946   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1063947   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1063948   +   end;
MPRINT(EM_DIAGRAM):   end;
1063949   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1063950   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1063951   +   end;
MPRINT(EM_DIAGRAM):   end;
1063952   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1063953   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1063954   +   end;
MPRINT(EM_DIAGRAM):   end;
1063955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1063956   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1063957   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1063958   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1063959   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1063960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1063961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063962   +   end;
MPRINT(EM_DIAGRAM):   end;
1063963   +end;
MPRINT(EM_DIAGRAM):   end;
1063964   +
1063965   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1063966   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1063967   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1063968   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1063969   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1063970   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1063971   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1063972   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1063973   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1063974   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1063975   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1063976   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1063977   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1063978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1063979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1063980   +end;
MPRINT(EM_DIAGRAM):   end;
1063981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1063982   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1063983   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1063984   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1063985   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1063986   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1063987   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1063988   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1063989   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1063990   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063991   +         end;
MPRINT(EM_DIAGRAM):   end;
1063992   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1063993   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1063994   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1063995   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1063996   +            end;
MPRINT(EM_DIAGRAM):   end;
1063997   +         end;
MPRINT(EM_DIAGRAM):   end;
1063998   +      end;
MPRINT(EM_DIAGRAM):   end;
1063999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1064000   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1064001   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1064002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064003   +         end;
MPRINT(EM_DIAGRAM):   end;
1064004   +      end;
MPRINT(EM_DIAGRAM):   end;
1064005   +   end;
MPRINT(EM_DIAGRAM):   end;
1064006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064007   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1064008   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1064009   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064010   +      end;
MPRINT(EM_DIAGRAM):   end;
1064011   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1064012   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1064013   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1064014   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1064015   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1064016   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1064017   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064018   +         end;
MPRINT(EM_DIAGRAM):   end;
1064019   +      end;
MPRINT(EM_DIAGRAM):   end;
1064020   +   end;
MPRINT(EM_DIAGRAM):   end;
1064021   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1064022   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1064023   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1064024   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1064025   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1064026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064028   +   end;
MPRINT(EM_DIAGRAM):   end;
1064029   +end;
MPRINT(EM_DIAGRAM):   end;
1064030   +
1064031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064032   +*** Checking missing input Interval
1064033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1064034   +
1064035   +IF NMISS(
1064036   +   AcceptedCmpTotal ,
1064037   +   Age ,
1064038   +   Frq ,
1064039   +   Income ,
1064040   +   Kidhome ,
1064041   +   MntFishProducts ,
1064042   +   MntFruits ,
1064043   +   MntGoldProds ,
1064044   +   MntSweetProducts ,
1064045   +   MonthsAsCustomer ,
1064046   +   NumDealsPurchases ,
1064047   +   NumWebVisitsMonth ,
1064048   +   RFMstat ,
1064049   +   RMntFrq ,
1064050   +   Recency ,
1064051   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1064052   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1064053   +
1064054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064055   +END;
MPRINT(EM_DIAGRAM):   END;
1064056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064057   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1064058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064060   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1064061   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1064062   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1064063   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1064064   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1064065   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1064066   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1064067   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1064068   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1064069   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1064070   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1064071   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1064072   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1064073   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1064074   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1064075   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1064076   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1064077   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1064078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1064079   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1064080   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1064081   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1064082   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1064083   +END;
MPRINT(EM_DIAGRAM):   END;
1064084   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064085   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1064086   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1064087   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1064088   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1064089   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1064090   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1064091   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1064092   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1064093   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1064094   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1064095   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1064096   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1064097   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1064098   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1064099   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1064100   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1064101   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1064102   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1064103   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1064104   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1064105   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1064106   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1064107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1064108   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1064109   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1064110   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1064111   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1064112   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1064113   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1064114   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1064115   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1064116   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1064117   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1064118   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1064119   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1064120   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1064121   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1064122   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1064123   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1064124   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1064125   +END;
MPRINT(EM_DIAGRAM):   END;
1064126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064127   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1064128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064130   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1064131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064133   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1064134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064135   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064136   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1064137   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1064138   +        S_Income  +     0.21434017685167 * S_Kidhome
1064139   +          +    -0.00245095061163 * S_MntFishProducts
1064140   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1064141   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1064142   +          +     -0.0436897985886 * S_MonthsAsCustomer
1064143   +          +    -0.11066147452589 * S_NumDealsPurchases
1064144   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1064145   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1064146   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1064147   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age +
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome +
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 *
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth +
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency +
0.31802924624272 * S_Teenhome ;
1064148   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1064149   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1064150   +        S_Income  +    -0.34676303560555 * S_Kidhome
1064151   +          +    -0.19666313381749 * S_MntFishProducts
1064152   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1064153   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1064154   +          +     0.11921399006499 * S_MonthsAsCustomer
1064155   +          +    -0.67623098057964 * S_NumDealsPurchases
1064156   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1064157   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1064158   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1064159   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome +
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 *
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 *
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 *
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq +
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1064160   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1064161   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1064162   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1064163   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1064164   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 *
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 +
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 *
HigherEducationBinary0 ;
1064165   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1064166   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1064167   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1064168   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1064169   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 *
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 +
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 *
HigherEducationBinary0 ;
1064170   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1064171   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1064172   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1064173   +          +    -0.09599098826432 * Marital_StatusDivorced
1064174   +          +     0.29380773989654 * Marital_StatusMarried
1064175   +          +    -0.24344588832351 * Marital_StatusSingle
1064176   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 *
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried +
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1064177   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1064178   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1064179   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1064180   +          +    -0.18210246138549 * Marital_StatusDivorced
1064181   +          +    -0.33707503901978 * Marital_StatusMarried
1064182   +          +     0.45975144433549 * Marital_StatusSingle
1064183   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 *
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried +
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1064184   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1064185   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1064186   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1064187   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1064188   +END;
MPRINT(EM_DIAGRAM):   END;
1064189   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064190   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1064191   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1064192   +END;
MPRINT(EM_DIAGRAM):   END;
1064193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064194   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1064195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064196   +
1064197   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1064198   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1064199   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1064200   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1064201   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1064202   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064203   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1064204   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1064205   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1064206   +end;
MPRINT(EM_DIAGRAM):   end;
1064207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064208   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1064209   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1064210   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1064211   +   end;
MPRINT(EM_DIAGRAM):   end;
1064212   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1064213   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1064214   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1064215   +   end;
MPRINT(EM_DIAGRAM):   end;
1064216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064217   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1064218   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1064219   +   end;
MPRINT(EM_DIAGRAM):   end;
1064220   +end;
MPRINT(EM_DIAGRAM):   end;
1064221   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064222   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1064223   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1064224   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1064225   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1064226   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1064227   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1064228   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1064229   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1064230   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1064231   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1064232   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1064233   +END;
MPRINT(EM_DIAGRAM):   END;
1064234   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064235   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1064236   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1064237   +END;
MPRINT(EM_DIAGRAM):   END;
1064238   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1064239   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1064240   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1064241   +END;
MPRINT(EM_DIAGRAM):   END;
1064242   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1064243   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1064244   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1064245   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1064246   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1064247   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1064248   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1064249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064250   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1064251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064252   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1064253   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1064254   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1064255   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1064256   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1064257   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1064258   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1064259   +END;
MPRINT(EM_DIAGRAM):   END;
1064260   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1064261   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1064262   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1064263   +drop
1064264   +H11
1064265   +H12
1064266   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1064267   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1064268   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1064269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064270   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1064271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064272   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1064273   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1064274   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1064275   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1064276   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064277   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1064278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064279   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1064280   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1064281   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1064282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064283   +* Ensmbl11: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 3 of 5;
1064284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064286   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1064287   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1064288   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1064289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064290   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1064291   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1064292   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1064293   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1064294   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1064295   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1064296   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1064297   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1064298   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1064299   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1064300   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1064301   +LENGTH _WARN_ $4
1064302   +      F_DepVar  $ 12
1064303   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1064304   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1064305   +
1064306   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1064307   +
1064308   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1064309   +
1064310   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1064311   +
1064312   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1064313   +
1064314   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1064315   +
1064316   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1064317   +
1064318   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1064319   +
1064320   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1064321   +
1064322   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1064323   +
1064324   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1064325   +
1064326   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1064327   +
1064328   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1064329   +
1064330   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1064331   +
1064332   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1064333   +
1064334   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1064335   +
1064336   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1064337   +
1064338   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1064339   +
1064340   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1064341   +
1064342   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1064343   +
1064344   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1064345   +
1064346   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1064347   +
1064348   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1064349   +
1064350   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1064351   +
1064352   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1064353   +
1064354   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1064355   +
1064356   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1064357   +
1064358   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1064359   +
1064360   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1064361   +
1064362   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1064363   +
1064364   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1064365   +
1064366   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1064367   +
1064368   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1064369   +
1064370   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1064371   +
1064372   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1064373   +
1064374   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1064375   +
1064376   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1064377   +
1064378   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1064379   +
1064380   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1064381   +
1064382   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1064383   +
1064384   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1064385   +
1064386   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1064387   +
1064388   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1064389   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1064390   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1064391   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1064392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064394   +end;
MPRINT(EM_DIAGRAM):   end;
1064395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064397   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1064398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064399   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064400   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1064401   +   end;
MPRINT(EM_DIAGRAM):   end;
1064402   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064403   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1064404   +   end;
MPRINT(EM_DIAGRAM):   end;
1064405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064406   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1064407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064409   +   end;
MPRINT(EM_DIAGRAM):   end;
1064410   +end;
MPRINT(EM_DIAGRAM):   end;
1064411   +
1064412   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1064413   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1064414   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1064415   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1064416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064418   +end;
MPRINT(EM_DIAGRAM):   end;
1064419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064421   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1064422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064423   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064424   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1064425   +   end;
MPRINT(EM_DIAGRAM):   end;
1064426   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064427   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1064428   +   end;
MPRINT(EM_DIAGRAM):   end;
1064429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064430   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1064431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064433   +   end;
MPRINT(EM_DIAGRAM):   end;
1064434   +end;
MPRINT(EM_DIAGRAM):   end;
1064435   +
1064436   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1064437   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1064438   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1064439   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1064440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064442   +end;
MPRINT(EM_DIAGRAM):   end;
1064443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064445   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1064446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064447   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064448   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1064449   +   end;
MPRINT(EM_DIAGRAM):   end;
1064450   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064451   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1064452   +   end;
MPRINT(EM_DIAGRAM):   end;
1064453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064454   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1064455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064457   +   end;
MPRINT(EM_DIAGRAM):   end;
1064458   +end;
MPRINT(EM_DIAGRAM):   end;
1064459   +
1064460   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1064461   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1064462   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1064463   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1064464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064466   +end;
MPRINT(EM_DIAGRAM):   end;
1064467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064468   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064469   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1064470   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064471   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064472   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1064473   +   end;
MPRINT(EM_DIAGRAM):   end;
1064474   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064475   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1064476   +   end;
MPRINT(EM_DIAGRAM):   end;
1064477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064478   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1064479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064481   +   end;
MPRINT(EM_DIAGRAM):   end;
1064482   +end;
MPRINT(EM_DIAGRAM):   end;
1064483   +
1064484   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1064485   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1064486   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1064487   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1064488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064490   +end;
MPRINT(EM_DIAGRAM):   end;
1064491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064493   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1064494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064495   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064496   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1064497   +   end;
MPRINT(EM_DIAGRAM):   end;
1064498   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064499   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1064500   +   end;
MPRINT(EM_DIAGRAM):   end;
1064501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064502   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1064503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064505   +   end;
MPRINT(EM_DIAGRAM):   end;
1064506   +end;
MPRINT(EM_DIAGRAM):   end;
1064507   +
1064508   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1064509   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1064510   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1064511   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1064512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064514   +end;
MPRINT(EM_DIAGRAM):   end;
1064515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064517   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1064518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1064520   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1064521   +   end;
MPRINT(EM_DIAGRAM):   end;
1064522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1064523   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1064524   +   end;
MPRINT(EM_DIAGRAM):   end;
1064525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064526   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1064527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064529   +   end;
MPRINT(EM_DIAGRAM):   end;
1064530   +end;
MPRINT(EM_DIAGRAM):   end;
1064531   +
1064532   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1064533   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1064534   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1064535   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1064536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064538   +end;
MPRINT(EM_DIAGRAM):   end;
1064539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1064541   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1064542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064543   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1064544   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1064545   +   end;
MPRINT(EM_DIAGRAM):   end;
1064546   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1064547   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1064548   +   end;
MPRINT(EM_DIAGRAM):   end;
1064549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064550   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1064551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064553   +   end;
MPRINT(EM_DIAGRAM):   end;
1064554   +end;
MPRINT(EM_DIAGRAM):   end;
1064555   +
1064556   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1064557   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1064558   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1064559   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1064560   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1064561   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1064562   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1064563   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1064564   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1064565   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1064566   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1064567   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1064568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064570   +end;
MPRINT(EM_DIAGRAM):   end;
1064571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064572   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1064573   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1064574   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064575   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1064576   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1064577   +   end;
MPRINT(EM_DIAGRAM):   end;
1064578   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1064579   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1064580   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1064581   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1064582   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1064583   +   end;
MPRINT(EM_DIAGRAM):   end;
1064584   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1064585   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1064586   +   end;
MPRINT(EM_DIAGRAM):   end;
1064587   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1064588   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1064589   +   end;
MPRINT(EM_DIAGRAM):   end;
1064590   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1064591   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1064592   +   end;
MPRINT(EM_DIAGRAM):   end;
1064593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064594   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1064595   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1064596   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1064597   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1064598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064600   +   end;
MPRINT(EM_DIAGRAM):   end;
1064601   +end;
MPRINT(EM_DIAGRAM):   end;
1064602   +
1064603   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1064604   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1064605   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1064606   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1064607   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1064608   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1064609   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1064610   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1064611   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1064612   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1064613   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1064614   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1064615   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1064616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1064617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064618   +end;
MPRINT(EM_DIAGRAM):   end;
1064619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064620   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1064621   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1064622   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064623   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1064624   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1064625   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1064626   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1064627   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1064628   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064629   +         end;
MPRINT(EM_DIAGRAM):   end;
1064630   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1064631   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1064632   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1064633   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064634   +            end;
MPRINT(EM_DIAGRAM):   end;
1064635   +         end;
MPRINT(EM_DIAGRAM):   end;
1064636   +      end;
MPRINT(EM_DIAGRAM):   end;
1064637   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1064638   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1064639   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1064640   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064641   +         end;
MPRINT(EM_DIAGRAM):   end;
1064642   +      end;
MPRINT(EM_DIAGRAM):   end;
1064643   +   end;
MPRINT(EM_DIAGRAM):   end;
1064644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064645   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1064646   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1064647   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064648   +      end;
MPRINT(EM_DIAGRAM):   end;
1064649   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1064650   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1064651   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1064652   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1064653   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1064654   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1064655   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1064656   +         end;
MPRINT(EM_DIAGRAM):   end;
1064657   +      end;
MPRINT(EM_DIAGRAM):   end;
1064658   +   end;
MPRINT(EM_DIAGRAM):   end;
1064659   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1064660   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1064661   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1064662   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1064663   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1064664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1064665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064666   +   end;
MPRINT(EM_DIAGRAM):   end;
1064667   +end;
MPRINT(EM_DIAGRAM):   end;
1064668   +
1064669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064670   +*** Checking missing input Interval
1064671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1064672   +
1064673   +IF NMISS(
1064674   +   AcceptedCmpTotal ,
1064675   +   Age ,
1064676   +   Frq ,
1064677   +   Income ,
1064678   +   Kidhome ,
1064679   +   MntFishProducts ,
1064680   +   MntFruits ,
1064681   +   MntGoldProds ,
1064682   +   MntSweetProducts ,
1064683   +   MonthsAsCustomer ,
1064684   +   NumDealsPurchases ,
1064685   +   NumWebVisitsMonth ,
1064686   +   RFMstat ,
1064687   +   RMntFrq ,
1064688   +   Recency ,
1064689   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1064690   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1064691   +
1064692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1064693   +END;
MPRINT(EM_DIAGRAM):   END;
1064694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064695   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1064696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064697   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064698   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1064699   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1064700   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1064701   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1064702   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1064703   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1064704   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1064705   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1064706   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1064707   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1064708   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1064709   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1064710   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1064711   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1064712   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1064713   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1064714   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1064715   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1064716   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1064717   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1064718   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1064719   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1064720   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1064721   +END;
MPRINT(EM_DIAGRAM):   END;
1064722   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064723   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1064724   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1064725   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1064726   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1064727   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1064728   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1064729   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1064730   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1064731   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1064732   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1064733   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1064734   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1064735   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1064736   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1064737   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1064738   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1064739   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1064740   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1064741   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1064742   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1064743   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1064744   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1064745   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1064746   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1064747   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1064748   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1064749   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1064750   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1064751   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1064752   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1064753   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1064754   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1064755   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1064756   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1064757   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1064758   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1064759   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1064760   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1064761   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1064762   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1064763   +END;
MPRINT(EM_DIAGRAM):   END;
1064764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064765   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1064766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064768   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1064769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064771   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1064772   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064773   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064774   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1064775   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1064776   +        S_Income  +    -0.29829037747286 * S_Kidhome
1064777   +          +    -0.18720823453547 * S_MntFishProducts
1064778   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1064779   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1064780   +          +    -0.06646294977493 * S_MonthsAsCustomer
1064781   +          +    -0.37026551859537 * S_NumDealsPurchases
1064782   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1064783   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1064784   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1064785   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome +
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 *
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 *
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 *
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq +
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1064786   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1064787   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1064788   +        S_Income  +    -0.83201267605135 * S_Kidhome
1064789   +          +    -0.09483355610222 * S_MntFishProducts
1064790   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1064791   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1064792   +          +     0.36008195182034 * S_MonthsAsCustomer
1064793   +          +    -0.13663022832818 * S_NumDealsPurchases
1064794   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1064795   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1064796   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1064797   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome +
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 *
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth +
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency +
-0.85691575464107 * S_Teenhome ;
1064798   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1064799   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1064800   +        S_Income  +     0.25780281448124 * S_Kidhome
1064801   +          +     0.04440164182166 * S_MntFishProducts
1064802   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1064803   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1064804   +          +     0.11601256317603 * S_MonthsAsCustomer
1064805   +          +    -0.06382091961731 * S_NumDealsPurchases
1064806   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1064807   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1064808   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1064809   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age +
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome +
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 *
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth +
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency +
0.12723983872652 * S_Teenhome ;
1064810   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1064811   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1064812   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1064813   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1064814   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 *
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 +
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 *
HigherEducationBinary0 ;
1064815   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1064816   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1064817   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1064818   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1064819   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 *
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 +
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 *
HigherEducationBinary0 ;
1064820   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1064821   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1064822   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1064823   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1064824   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 *
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 +
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 *
HigherEducationBinary0 ;
1064825   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1064826   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1064827   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1064828   +          +     0.18754186259114 * Marital_StatusDivorced
1064829   +          +    -0.11988223819284 * Marital_StatusMarried
1064830   +          +    -0.02283707816223 * Marital_StatusSingle
1064831   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 *
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried +
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1064832   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1064833   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1064834   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1064835   +          +    -0.28983318463941 * Marital_StatusDivorced
1064836   +          +    -0.74851149560881 * Marital_StatusMarried
1064837   +          +      0.7618336919202 * Marital_StatusSingle
1064838   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 *
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried +
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1064839   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1064840   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1064841   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1064842   +          +    -0.33639004627791 * Marital_StatusDivorced
1064843   +          +     0.12327415586833 * Marital_StatusMarried
1064844   +          +      0.0060971946845 * Marital_StatusSingle
1064845   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 *
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried +
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1064846   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1064847   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1064848   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1064849   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1064850   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1064851   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1064852   +END;
MPRINT(EM_DIAGRAM):   END;
1064853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064854   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1064855   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1064856   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1064857   +END;
MPRINT(EM_DIAGRAM):   END;
1064858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064859   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1064860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064861   +
1064862   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1064863   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1064864   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1064865   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1064866   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1064867   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1064868   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1064869   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1064870   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1064871   +end;
MPRINT(EM_DIAGRAM):   end;
1064872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1064873   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1064874   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1064875   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1064876   +   end;
MPRINT(EM_DIAGRAM):   end;
1064877   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1064878   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1064879   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1064880   +   end;
MPRINT(EM_DIAGRAM):   end;
1064881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1064882   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1064883   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1064884   +   end;
MPRINT(EM_DIAGRAM):   end;
1064885   +end;
MPRINT(EM_DIAGRAM):   end;
1064886   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1064887   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1064888   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 +
-6.47403374532058 * H13 ;
1064889   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1064890   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1064891   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1064892   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
The SAS System
 
1064893   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1064894   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1064895   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1064896   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1064897   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1064898   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1064899   +END;
MPRINT(EM_DIAGRAM):   END;
1064900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1064901   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1064902   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1064903   +END;
MPRINT(EM_DIAGRAM):   END;
1064904   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1064905   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1064906   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1064907   +END;
MPRINT(EM_DIAGRAM):   END;
1064908   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1064909   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1064910   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1064911   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1064912   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1064913   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1064914   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1064915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064916   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1064917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1064918   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1064919   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1064920   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1064921   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1064922   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1064923   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1064924   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1064925   +END;
MPRINT(EM_DIAGRAM):   END;
1064926   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1064927   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1064928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1064929   +drop
1064930   +H11
1064931   +H12
1064932   +H13
1064933   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1064934   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1064935   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1064936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064937   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1064938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064939   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1064940   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1064941   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1064942   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1064943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064944   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1064945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064946   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1064947   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1064948   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1064949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064950   +* Ensmbl11: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 4 of 5;
1064951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064953   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1064954   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1064955   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1064956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1064957   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1064958   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1064959   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1064960   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1064961   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1064962   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1064963   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1064964   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1064965   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1064966   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1064967   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1064968   +LENGTH _WARN_ $4
1064969   +      F_DepVar  $ 12
1064970   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1064971   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1064972   +
1064973   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1064974   +
1064975   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1064976   +
1064977   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1064978   +
1064979   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1064980   +
1064981   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1064982   +
1064983   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1064984   +
1064985   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1064986   +
1064987   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1064988   +
1064989   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1064990   +
1064991   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1064992   +
1064993   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1064994   +
1064995   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1064996   +
1064997   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1064998   +
1064999   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1065000   +
1065001   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1065002   +
1065003   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1065004   +
1065005   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1065006   +
1065007   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1065008   +
1065009   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1065010   +
1065011   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1065012   +
1065013   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1065014   +
1065015   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1065016   +
1065017   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1065018   +
1065019   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1065020   +
1065021   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1065022   +
1065023   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1065024   +
1065025   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1065026   +
1065027   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1065028   +
1065029   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1065030   +
1065031   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1065032   +
1065033   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1065034   +
1065035   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1065036   +
1065037   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1065038   +
1065039   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1065040   +
1065041   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1065042   +
1065043   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1065044   +
1065045   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1065046   +
1065047   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1065048   +
1065049   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1065050   +
1065051   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1065052   +
1065053   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1065054   +
1065055   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1065056   +
1065057   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1065058   +
1065059   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1065060   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1065061   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1065062   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1065063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065065   +end;
MPRINT(EM_DIAGRAM):   end;
1065066   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065067   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065068   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1065069   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065070   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065071   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1065072   +   end;
MPRINT(EM_DIAGRAM):   end;
1065073   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065074   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1065075   +   end;
MPRINT(EM_DIAGRAM):   end;
1065076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065077   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1065078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065080   +   end;
MPRINT(EM_DIAGRAM):   end;
1065081   +end;
MPRINT(EM_DIAGRAM):   end;
1065082   +
1065083   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1065084   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1065085   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1065086   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1065087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065089   +end;
MPRINT(EM_DIAGRAM):   end;
1065090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065092   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1065093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065094   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065095   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1065096   +   end;
MPRINT(EM_DIAGRAM):   end;
1065097   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065098   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1065099   +   end;
MPRINT(EM_DIAGRAM):   end;
1065100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065101   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1065102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065104   +   end;
MPRINT(EM_DIAGRAM):   end;
1065105   +end;
MPRINT(EM_DIAGRAM):   end;
1065106   +
1065107   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1065108   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1065109   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1065110   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1065111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065113   +end;
MPRINT(EM_DIAGRAM):   end;
1065114   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065116   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1065117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065119   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1065120   +   end;
MPRINT(EM_DIAGRAM):   end;
1065121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065122   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1065123   +   end;
MPRINT(EM_DIAGRAM):   end;
1065124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065125   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1065126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065128   +   end;
MPRINT(EM_DIAGRAM):   end;
1065129   +end;
MPRINT(EM_DIAGRAM):   end;
1065130   +
1065131   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1065132   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1065133   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1065134   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1065135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065137   +end;
MPRINT(EM_DIAGRAM):   end;
1065138   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065140   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1065141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065143   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1065144   +   end;
MPRINT(EM_DIAGRAM):   end;
1065145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065146   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1065147   +   end;
MPRINT(EM_DIAGRAM):   end;
1065148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065149   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1065150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065152   +   end;
MPRINT(EM_DIAGRAM):   end;
1065153   +end;
MPRINT(EM_DIAGRAM):   end;
1065154   +
1065155   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1065156   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1065157   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1065158   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1065159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065161   +end;
MPRINT(EM_DIAGRAM):   end;
1065162   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065164   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1065165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065167   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1065168   +   end;
MPRINT(EM_DIAGRAM):   end;
1065169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065170   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1065171   +   end;
MPRINT(EM_DIAGRAM):   end;
1065172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065173   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1065174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065176   +   end;
MPRINT(EM_DIAGRAM):   end;
1065177   +end;
MPRINT(EM_DIAGRAM):   end;
1065178   +
1065179   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1065180   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1065181   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1065182   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1065183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065185   +end;
MPRINT(EM_DIAGRAM):   end;
1065186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065188   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1065189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065190   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065191   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1065192   +   end;
MPRINT(EM_DIAGRAM):   end;
1065193   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065194   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1065195   +   end;
MPRINT(EM_DIAGRAM):   end;
1065196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065197   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1065198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065200   +   end;
MPRINT(EM_DIAGRAM):   end;
1065201   +end;
MPRINT(EM_DIAGRAM):   end;
1065202   +
1065203   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1065204   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1065205   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1065206   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1065207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065209   +end;
MPRINT(EM_DIAGRAM):   end;
1065210   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065212   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1065213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065214   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1065215   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1065216   +   end;
MPRINT(EM_DIAGRAM):   end;
1065217   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1065218   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1065219   +   end;
MPRINT(EM_DIAGRAM):   end;
1065220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065221   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1065222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065224   +   end;
MPRINT(EM_DIAGRAM):   end;
1065225   +end;
MPRINT(EM_DIAGRAM):   end;
1065226   +
1065227   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1065228   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1065229   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1065230   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1065231   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1065232   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1065233   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1065234   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1065235   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1065236   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1065237   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1065238   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1065239   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065240   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065241   +end;
MPRINT(EM_DIAGRAM):   end;
1065242   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065243   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1065244   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1065245   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065246   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1065247   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1065248   +   end;
MPRINT(EM_DIAGRAM):   end;
1065249   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1065250   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1065251   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1065252   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1065253   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1065254   +   end;
MPRINT(EM_DIAGRAM):   end;
1065255   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1065256   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1065257   +   end;
MPRINT(EM_DIAGRAM):   end;
1065258   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1065259   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1065260   +   end;
MPRINT(EM_DIAGRAM):   end;
1065261   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1065262   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1065263   +   end;
MPRINT(EM_DIAGRAM):   end;
1065264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065265   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1065266   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1065267   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1065268   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1065269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065271   +   end;
MPRINT(EM_DIAGRAM):   end;
1065272   +end;
MPRINT(EM_DIAGRAM):   end;
1065273   +
1065274   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1065275   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1065276   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1065277   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1065278   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1065279   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1065280   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1065281   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1065282   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1065283   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1065284   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1065285   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1065286   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1065287   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065288   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065289   +end;
MPRINT(EM_DIAGRAM):   end;
1065290   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065291   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1065292   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1065293   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065294   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1065295   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1065296   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1065297   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1065298   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1065299   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1065300   +         end;
MPRINT(EM_DIAGRAM):   end;
1065301   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1065302   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1065303   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1065304   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1065305   +            end;
MPRINT(EM_DIAGRAM):   end;
1065306   +         end;
MPRINT(EM_DIAGRAM):   end;
1065307   +      end;
MPRINT(EM_DIAGRAM):   end;
1065308   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1065309   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1065310   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1065311   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1065312   +         end;
MPRINT(EM_DIAGRAM):   end;
1065313   +      end;
MPRINT(EM_DIAGRAM):   end;
1065314   +   end;
MPRINT(EM_DIAGRAM):   end;
1065315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065316   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1065317   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1065318   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1065319   +      end;
MPRINT(EM_DIAGRAM):   end;
1065320   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1065321   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1065322   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1065323   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1065324   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1065325   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1065326   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1065327   +         end;
MPRINT(EM_DIAGRAM):   end;
1065328   +      end;
MPRINT(EM_DIAGRAM):   end;
1065329   +   end;
MPRINT(EM_DIAGRAM):   end;
1065330   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1065331   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1065332   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1065333   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1065334   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1065335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065337   +   end;
MPRINT(EM_DIAGRAM):   end;
1065338   +end;
MPRINT(EM_DIAGRAM):   end;
1065339   +
1065340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065341   +*** Checking missing input Interval
1065342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1065343   +
1065344   +IF NMISS(
1065345   +   AcceptedCmpTotal ,
1065346   +   Age ,
1065347   +   Frq ,
1065348   +   Income ,
1065349   +   Kidhome ,
1065350   +   MntFishProducts ,
1065351   +   MntFruits ,
1065352   +   MntGoldProds ,
1065353   +   MntSweetProducts ,
1065354   +   MonthsAsCustomer ,
1065355   +   NumDealsPurchases ,
1065356   +   NumWebVisitsMonth ,
1065357   +   RFMstat ,
1065358   +   RMntFrq ,
1065359   +   Recency ,
1065360   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1065361   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1065362   +
1065363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065364   +END;
MPRINT(EM_DIAGRAM):   END;
1065365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065366   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1065367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065368   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1065369   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1065370   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1065371   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1065372   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1065373   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1065374   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1065375   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1065376   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1065377   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1065378   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1065379   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1065380   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1065381   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1065382   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1065383   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1065384   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1065385   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1065386   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1065387   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1065388   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1065389   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1065390   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1065391   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1065392   +END;
MPRINT(EM_DIAGRAM):   END;
1065393   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1065394   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1065395   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1065396   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1065397   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1065398   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1065399   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1065400   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1065401   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1065402   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1065403   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1065404   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1065405   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1065406   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1065407   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1065408   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1065409   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1065410   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1065411   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1065412   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1065413   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1065414   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1065415   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1065416   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1065417   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1065418   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1065419   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1065420   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1065421   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1065422   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1065423   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1065424   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1065425   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1065426   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1065427   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1065428   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1065429   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1065430   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1065431   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1065432   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1065433   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1065434   +END;
MPRINT(EM_DIAGRAM):   END;
1065435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065436   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1065437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065439   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1065440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065442   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1065443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065444   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1065445   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1065446   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1065447   +        S_Income  +     0.39869341630865 * S_Kidhome
1065448   +          +    -0.04263586382867 * S_MntFishProducts
1065449   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1065450   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1065451   +          +    -0.14308588367026 * S_MonthsAsCustomer
1065452   +          +    -0.01053346972758 * S_NumDealsPurchases
1065453   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1065454   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1065455   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1065456   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age +
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome +
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 *
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth +
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency +
0.55541282723709 * S_Teenhome ;
1065457   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1065458   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1065459   +        S_Income  +     0.31514301668626 * S_Kidhome
1065460   +          +    -0.05723808748191 * S_MntFishProducts
1065461   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1065462   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1065463   +          +    -0.48738730918684 * S_MonthsAsCustomer
1065464   +          +     0.31545795225489 * S_NumDealsPurchases
1065465   +          +     0.24686603252864 * S_NumWebVisitsMonth
1065466   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1065467   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1065468   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome +
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 *
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 *
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 *
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq +
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1065469   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1065470   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1065471   +        S_Income  +    -0.48452563006855 * S_Kidhome
1065472   +          +      0.1638851163007 * S_MntFishProducts
1065473   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1065474   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1065475   +          +    -0.09008316729574 * S_MonthsAsCustomer
1065476   +          +    -0.45452883452999 * S_NumDealsPurchases
1065477   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1065478   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1065479   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1065480   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome +
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 *
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 *
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 *
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq +
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1065481   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1065482   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1065483   +        S_Income  +    -0.62959343200613 * S_Kidhome
1065484   +          +    -0.08953561593231 * S_MntFishProducts
1065485   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1065486   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1065487   +          +    -0.04786752357029 * S_MonthsAsCustomer
1065488   +          +     0.01658790214447 * S_NumDealsPurchases
1065489   +          +     0.60508225698649 * S_NumWebVisitsMonth
1065490   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1065491   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1065492   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age +
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome +
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 *
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 *
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 *
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq +
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1065493   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1065494   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1065495   +        S_Income  +    -0.02417847760857 * S_Kidhome
1065496   +          +    -0.15499190740194 * S_MntFishProducts
1065497   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1065498   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1065499   +          +     0.03507116553703 * S_MonthsAsCustomer
1065500   +          +    -0.55190381693021 * S_NumDealsPurchases
1065501   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1065502   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1065503   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1065504   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome +
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 *
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 *
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 *
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq +
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1065505   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1065506   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1065507   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1065508   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1065509   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 *
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 +
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 *
HigherEducationBinary0 ;
1065510   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1065511   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1065512   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1065513   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1065514   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 *
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 +
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 *
HigherEducationBinary0 ;
1065515   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1065516   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1065517   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1065518   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1065519   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 *
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 +
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 *
HigherEducationBinary0 ;
1065520   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1065521   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1065522   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1065523   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1065524   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 *
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 +
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 *
HigherEducationBinary0 ;
1065525   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1065526   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1065527   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1065528   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1065529   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 *
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 +
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 *
HigherEducationBinary0 ;
1065530   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1065531   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1065532   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1065533   +          +    -0.41654638301737 * Marital_StatusDivorced
1065534   +          +     0.65956207700583 * Marital_StatusMarried
1065535   +          +    -0.52573042887166 * Marital_StatusSingle
1065536   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 *
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried +
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1065537   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1065538   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1065539   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1065540   +          +    -0.32313846862799 * Marital_StatusDivorced
1065541   +          +     0.15910539009887 * Marital_StatusMarried
1065542   +          +     0.28781821946114 * Marital_StatusSingle
1065543   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 *
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster +
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried +
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1065544   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1065545   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1065546   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1065547   +          +    -0.06481096024989 * Marital_StatusDivorced
1065548   +          +    -0.01184060710261 * Marital_StatusMarried
1065549   +          +    -0.04932258474026 * Marital_StatusSingle
1065550   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 *
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried +
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1065551   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1065552   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1065553   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1065554   +          +      0.2062190716357 * Marital_StatusDivorced
1065555   +          +      -0.523160668609 * Marital_StatusMarried
1065556   +          +     0.50687401816278 * Marital_StatusSingle
1065557   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 *
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster +
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried +
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1065558   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1065559   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1065560   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1065561   +          +     -0.1386176879533 * Marital_StatusDivorced
1065562   +          +    -0.17611433777439 * Marital_StatusMarried
1065563   +          +     0.09908348348999 * Marital_StatusSingle
1065564   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 *
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster +
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried +
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1065565   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1065566   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1065567   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1065568   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1065569   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1065570   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1065571   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1065572   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1065573   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1065574   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1065575   +END;
MPRINT(EM_DIAGRAM):   END;
1065576   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1065577   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1065578   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1065579   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1065580   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1065581   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1065582   +END;
MPRINT(EM_DIAGRAM):   END;
1065583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065584   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1065585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065586   +
1065587   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1065588   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1065589   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1065590   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1065591   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1065592   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065593   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1065594   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1065595   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1065596   +end;
MPRINT(EM_DIAGRAM):   end;
1065597   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065598   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1065599   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1065600   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1065601   +   end;
MPRINT(EM_DIAGRAM):   end;
1065602   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1065603   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1065604   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1065605   +   end;
MPRINT(EM_DIAGRAM):   end;
1065606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065607   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1065608   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1065609   +   end;
MPRINT(EM_DIAGRAM):   end;
1065610   +end;
MPRINT(EM_DIAGRAM):   end;
1065611   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1065612   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1065613   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1065614   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 +
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1065615   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1065616   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1065617   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1065618   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1065619   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1065620   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1065621   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1065622   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1065623   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1065624   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1065625   +END;
MPRINT(EM_DIAGRAM):   END;
1065626   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1065627   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1065628   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1065629   +END;
MPRINT(EM_DIAGRAM):   END;
1065630   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1065631   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1065632   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1065633   +END;
MPRINT(EM_DIAGRAM):   END;
1065634   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1065635   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1065636   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1065637   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1065638   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1065639   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1065640   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1065641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065642   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1065643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1065644   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1065645   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1065646   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1065647   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1065648   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1065649   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1065650   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1065651   +END;
MPRINT(EM_DIAGRAM):   END;
1065652   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1065653   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1065654   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1065655   +drop
1065656   +H11
1065657   +H12
1065658   +H13
1065659   +H14
1065660   +H15
1065661   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1065662   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1065663   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1065664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065665   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1065666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065667   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1065668   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1065669   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1065670   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1065671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065672   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1065673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065674   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1065675   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1065676   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1065677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065678   +* Ensmbl11: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 5 of 5;
1065679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065681   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1065682   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1065683   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1065684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1065685   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1065686   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1065687   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1065688   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1065689   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1065690   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1065691   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1065692   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1065693   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1065694   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1065695   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1065696   +LENGTH _WARN_ $4
1065697   +      F_DepVar  $ 12
1065698   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1065699   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1065700   +
1065701   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1065702   +
1065703   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1065704   +
1065705   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1065706   +
1065707   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1065708   +
1065709   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1065710   +
1065711   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1065712   +
1065713   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1065714   +
1065715   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1065716   +
1065717   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1065718   +
1065719   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1065720   +
1065721   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1065722   +
1065723   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1065724   +
1065725   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1065726   +
1065727   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1065728   +
1065729   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1065730   +
1065731   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1065732   +
1065733   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1065734   +
1065735   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1065736   +
1065737   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1065738   +
1065739   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1065740   +
1065741   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1065742   +
1065743   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1065744   +
1065745   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1065746   +
1065747   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1065748   +
1065749   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1065750   +
1065751   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1065752   +
1065753   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1065754   +
1065755   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1065756   +
1065757   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1065758   +
1065759   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1065760   +
1065761   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1065762   +
1065763   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1065764   +
1065765   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1065766   +
1065767   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1065768   +
1065769   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1065770   +
1065771   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1065772   +
1065773   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1065774   +
1065775   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1065776   +
1065777   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1065778   +
1065779   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1065780   +
1065781   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1065782   +
1065783   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1065784   +
1065785   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1065786   +
1065787   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1065788   +
1065789   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1065790   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1065791   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1065792   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1065793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065795   +end;
MPRINT(EM_DIAGRAM):   end;
1065796   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065797   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065798   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1065799   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065800   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065801   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1065802   +   end;
MPRINT(EM_DIAGRAM):   end;
1065803   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065804   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1065805   +   end;
MPRINT(EM_DIAGRAM):   end;
1065806   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065807   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1065808   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065809   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065810   +   end;
MPRINT(EM_DIAGRAM):   end;
1065811   +end;
MPRINT(EM_DIAGRAM):   end;
1065812   +
1065813   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1065814   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1065815   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1065816   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1065817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065819   +end;
MPRINT(EM_DIAGRAM):   end;
1065820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065821   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065822   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1065823   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065824   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065825   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1065826   +   end;
MPRINT(EM_DIAGRAM):   end;
1065827   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065828   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1065829   +   end;
MPRINT(EM_DIAGRAM):   end;
1065830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065831   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1065832   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065833   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065834   +   end;
MPRINT(EM_DIAGRAM):   end;
1065835   +end;
MPRINT(EM_DIAGRAM):   end;
1065836   +
1065837   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1065838   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1065839   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1065840   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1065841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065843   +end;
MPRINT(EM_DIAGRAM):   end;
1065844   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065846   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1065847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065848   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065849   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1065850   +   end;
MPRINT(EM_DIAGRAM):   end;
1065851   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065852   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1065853   +   end;
MPRINT(EM_DIAGRAM):   end;
1065854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065855   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1065856   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065857   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065858   +   end;
MPRINT(EM_DIAGRAM):   end;
1065859   +end;
MPRINT(EM_DIAGRAM):   end;
1065860   +
1065861   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1065862   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1065863   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1065864   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1065865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065867   +end;
MPRINT(EM_DIAGRAM):   end;
1065868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065870   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1065871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065873   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1065874   +   end;
MPRINT(EM_DIAGRAM):   end;
1065875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065876   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1065877   +   end;
MPRINT(EM_DIAGRAM):   end;
1065878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065879   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1065880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065882   +   end;
MPRINT(EM_DIAGRAM):   end;
1065883   +end;
MPRINT(EM_DIAGRAM):   end;
1065884   +
1065885   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1065886   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1065887   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1065888   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1065889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065891   +end;
MPRINT(EM_DIAGRAM):   end;
1065892   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065894   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1065895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065897   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1065898   +   end;
MPRINT(EM_DIAGRAM):   end;
1065899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065900   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1065901   +   end;
MPRINT(EM_DIAGRAM):   end;
1065902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065903   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1065904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065906   +   end;
MPRINT(EM_DIAGRAM):   end;
1065907   +end;
MPRINT(EM_DIAGRAM):   end;
1065908   +
1065909   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1065910   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1065911   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1065912   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1065913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065915   +end;
MPRINT(EM_DIAGRAM):   end;
1065916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065918   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1065919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1065921   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1065922   +   end;
MPRINT(EM_DIAGRAM):   end;
1065923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1065924   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1065925   +   end;
MPRINT(EM_DIAGRAM):   end;
1065926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065927   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1065928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065930   +   end;
MPRINT(EM_DIAGRAM):   end;
1065931   +end;
MPRINT(EM_DIAGRAM):   end;
1065932   +
1065933   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1065934   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1065935   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1065936   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1065937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065939   +end;
MPRINT(EM_DIAGRAM):   end;
1065940   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1065942   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1065943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065944   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1065945   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1065946   +   end;
MPRINT(EM_DIAGRAM):   end;
1065947   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1065948   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1065949   +   end;
MPRINT(EM_DIAGRAM):   end;
1065950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065951   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1065952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1065953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065954   +   end;
MPRINT(EM_DIAGRAM):   end;
1065955   +end;
MPRINT(EM_DIAGRAM):   end;
1065956   +
1065957   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1065958   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1065959   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1065960   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1065961   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1065962   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1065963   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1065964   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1065965   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1065966   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1065967   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1065968   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1065969   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1065970   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1065971   +end;
MPRINT(EM_DIAGRAM):   end;
1065972   +else do;
MPRINT(EM_DIAGRAM):   else do;
1065973   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1065974   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1065975   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1065976   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1065977   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1065978   +   end;
MPRINT(EM_DIAGRAM):   end;
1065979   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1065980   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1065981   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1065982   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1065983   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1065984   +   end;
MPRINT(EM_DIAGRAM):   end;
1065985   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1065986   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1065987   +   end;
MPRINT(EM_DIAGRAM):   end;
1065988   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1065989   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1065990   +   end;
MPRINT(EM_DIAGRAM):   end;
1065991   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1065992   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1065993   +   end;
MPRINT(EM_DIAGRAM):   end;
1065994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1065995   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1065996   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1065997   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1065998   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1065999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066001   +   end;
MPRINT(EM_DIAGRAM):   end;
1066002   +end;
MPRINT(EM_DIAGRAM):   end;
1066003   +
1066004   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1066005   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1066006   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1066007   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1066008   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1066009   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1066010   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1066011   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1066012   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1066013   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1066014   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1066015   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1066016   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1066017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066019   +end;
MPRINT(EM_DIAGRAM):   end;
1066020   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066021   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1066022   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1066023   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066024   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1066025   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1066026   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1066027   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1066028   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1066029   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066030   +         end;
MPRINT(EM_DIAGRAM):   end;
1066031   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1066032   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1066033   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1066034   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066035   +            end;
MPRINT(EM_DIAGRAM):   end;
1066036   +         end;
MPRINT(EM_DIAGRAM):   end;
1066037   +      end;
MPRINT(EM_DIAGRAM):   end;
1066038   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1066039   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1066040   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1066041   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066042   +         end;
MPRINT(EM_DIAGRAM):   end;
1066043   +      end;
MPRINT(EM_DIAGRAM):   end;
1066044   +   end;
MPRINT(EM_DIAGRAM):   end;
1066045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066046   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1066047   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1066048   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066049   +      end;
MPRINT(EM_DIAGRAM):   end;
1066050   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1066051   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1066052   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1066053   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1066054   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1066055   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1066056   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066057   +         end;
MPRINT(EM_DIAGRAM):   end;
1066058   +      end;
MPRINT(EM_DIAGRAM):   end;
1066059   +   end;
MPRINT(EM_DIAGRAM):   end;
1066060   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1066061   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1066062   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1066063   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1066064   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1066065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066067   +   end;
MPRINT(EM_DIAGRAM):   end;
1066068   +end;
MPRINT(EM_DIAGRAM):   end;
1066069   +
1066070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066071   +*** Checking missing input Interval
1066072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1066073   +
1066074   +IF NMISS(
1066075   +   AcceptedCmpTotal ,
1066076   +   Age ,
1066077   +   Frq ,
1066078   +   Income ,
1066079   +   Kidhome ,
1066080   +   MntFishProducts ,
1066081   +   MntFruits ,
1066082   +   MntGoldProds ,
1066083   +   MntSweetProducts ,
1066084   +   MonthsAsCustomer ,
1066085   +   NumDealsPurchases ,
1066086   +   NumWebVisitsMonth ,
1066087   +   RFMstat ,
1066088   +   RMntFrq ,
1066089   +   Recency ,
1066090   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1066091   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1066092   +
1066093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066094   +END;
MPRINT(EM_DIAGRAM):   END;
1066095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066096   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1066097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1066099   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1066100   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1066101   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1066102   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1066103   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1066104   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1066105   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1066106   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1066107   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1066108   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1066109   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1066110   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1066111   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1066112   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1066113   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1066114   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1066115   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1066116   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1066117   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1066118   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1066119   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1066120   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1066121   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1066122   +END;
MPRINT(EM_DIAGRAM):   END;
1066123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1066124   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1066125   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1066126   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1066127   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1066128   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1066129   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1066130   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1066131   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1066132   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1066133   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1066134   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1066135   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1066136   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1066137   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1066138   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1066139   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1066140   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1066141   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1066142   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1066143   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1066144   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1066145   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1066146   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1066147   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1066148   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1066149   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1066150   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1066151   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1066152   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1066153   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1066154   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1066155   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1066156   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1066157   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1066158   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1066159   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1066160   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1066161   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1066162   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1066163   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1066164   +END;
MPRINT(EM_DIAGRAM):   END;
1066165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066166   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1066167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066169   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1066170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066172   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1066173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066174   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1066175   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1066176   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1066177   +        S_Income  +    -0.52684337240504 * S_Kidhome
1066178   +          +     0.07835956947085 * S_MntFishProducts
1066179   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1066180   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1066181   +          +    -0.44463888327841 * S_MonthsAsCustomer
1066182   +          +    -0.20310227710644 * S_NumDealsPurchases
1066183   +          +     0.06594467408568 * S_NumWebVisitsMonth
1066184   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1066185   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1066186   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome +
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 *
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 *
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 *
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq +
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1066187   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1066188   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1066189   +        S_Income  +     0.91025818069308 * S_Kidhome
1066190   +          +     0.26585860774761 * S_MntFishProducts
1066191   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1066192   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1066193   +          +    -0.12421403342454 * S_MonthsAsCustomer
1066194   +          +     0.66931066909347 * S_NumDealsPurchases
1066195   +          +     0.35050056776957 * S_NumWebVisitsMonth
1066196   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1066197   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1066198   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome +
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 *
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 *
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 *
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq +
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1066199   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1066200   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1066201   +        S_Income  +     0.63027536562783 * S_Kidhome
1066202   +          +     0.15303249164566 * S_MntFishProducts
1066203   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1066204   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1066205   +          +    -0.21006970062531 * S_MonthsAsCustomer
1066206   +          +      0.2955774677605 * S_NumDealsPurchases
1066207   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1066208   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1066209   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1066210   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome +
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 *
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 *
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 *
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq +
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1066211   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1066212   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1066213   +        S_Income  +    -0.00985947331416 * S_Kidhome
1066214   +          +    -0.27114701164817 * S_MntFishProducts
1066215   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1066216   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1066217   +          +    -0.02702818828921 * S_MonthsAsCustomer
1066218   +          +    -0.63381188911946 * S_NumDealsPurchases
1066219   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1066220   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1066221   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1066222   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome +
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 *
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 *
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 *
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq +
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1066223   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1066224   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1066225   +        S_Income  +    -0.24206929946772 * S_Kidhome
1066226   +          +    -0.19039689229491 * S_MntFishProducts
1066227   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1066228   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1066229   +          +     0.03815221487927 * S_MonthsAsCustomer
1066230   +          +    -0.43579024169696 * S_NumDealsPurchases
1066231   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1066232   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1066233   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1066234   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age +
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome +
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 *
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 *
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 *
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq +
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1066235   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1066236   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1066237   +        S_Income  +    -0.25736924536467 * S_Kidhome
1066238   +          +    -0.04400855145817 * S_MntFishProducts
1066239   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1066240   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1066241   +          +     0.00265986106691 * S_MonthsAsCustomer
1066242   +          +     0.27331919080312 * S_NumDealsPurchases
1066243   +          +     0.22836119952787 * S_NumWebVisitsMonth
1066244   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1066245   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1066246   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome +
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 *
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 *
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 *
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq +
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1066247   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1066248   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1066249   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1066250   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1066251   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 *
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 +
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 *
HigherEducationBinary0 ;
1066252   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1066253   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1066254   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1066255   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1066256   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 *
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 +
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 *
HigherEducationBinary0 ;
1066257   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1066258   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1066259   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1066260   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1066261   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 *
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 +
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 *
HigherEducationBinary0 ;
1066262   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1066263   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1066264   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1066265   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1066266   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 *
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 +
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 *
HigherEducationBinary0 ;
1066267   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1066268   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1066269   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1066270   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1066271   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 *
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 +
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 *
HigherEducationBinary0 ;
1066272   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1066273   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1066274   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1066275   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1066276   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 *
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 +
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 *
HigherEducationBinary0 ;
1066277   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1066278   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1066279   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1066280   +          +     0.12502276672336 * Marital_StatusDivorced
1066281   +          +    -0.02606508453741 * Marital_StatusMarried
1066282   +          +      0.0418850245266 * Marital_StatusSingle
1066283   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 *
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried +
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1066284   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1066285   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1066286   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1066287   +          +      0.1943860669795 * Marital_StatusDivorced
1066288   +          +     -0.1529596261268 * Marital_StatusMarried
1066289   +          +     0.24187461301348 * Marital_StatusSingle
1066290   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 *
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried +
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1066291   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1066292   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1066293   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1066294   +          +    -0.19677652422622 * Marital_StatusDivorced
1066295   +          +     0.75897106429478 * Marital_StatusMarried
1066296   +          +    -0.66692260284833 * Marital_StatusSingle
1066297   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 *
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried +
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1066298   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1066299   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1066300   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1066301   +          +    -0.18964222971122 * Marital_StatusDivorced
1066302   +          +    -0.15222045956879 * Marital_StatusMarried
1066303   +          +     0.15455795695595 * Marital_StatusSingle
1066304   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 *
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried +
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1066305   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1066306   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1066307   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1066308   +          +    -0.10122776921995 * Marital_StatusDivorced
1066309   +          +     0.14126755564161 * Marital_StatusMarried
1066310   +          +    -0.18463644418978 * Marital_StatusSingle
1066311   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 *
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried +
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1066312   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1066313   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1066314   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1066315   +          +     0.05009431660662 * Marital_StatusDivorced
1066316   +          +    -0.38407798045329 * Marital_StatusMarried
1066317   +          +      0.3035257398654 * Marital_StatusSingle
1066318   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 *
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried +
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1066319   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1066320   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1066321   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1066322   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1066323   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1066324   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1066325   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1066326   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1066327   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1066328   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1066329   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1066330   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1066331   +END;
MPRINT(EM_DIAGRAM):   END;
1066332   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1066333   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1066334   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1066335   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1066336   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1066337   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1066338   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1066339   +END;
MPRINT(EM_DIAGRAM):   END;
1066340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066341   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1066342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066343   +
1066344   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1066345   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1066346   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1066347   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1066348   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1066349   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066350   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1066351   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1066352   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1066353   +end;
MPRINT(EM_DIAGRAM):   end;
1066354   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066355   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1066356   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1066357   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1066358   +   end;
MPRINT(EM_DIAGRAM):   end;
1066359   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1066360   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1066361   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1066362   +   end;
MPRINT(EM_DIAGRAM):   end;
1066363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066364   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1066365   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1066366   +   end;
MPRINT(EM_DIAGRAM):   end;
1066367   +end;
MPRINT(EM_DIAGRAM):   end;
1066368   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1066369   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1066370   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1066371   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 +
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 *
H16 ;
1066372   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1066373   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1066374   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1066375   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1066376   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1066377   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1066378   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1066379   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1066380   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1066381   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1066382   +END;
MPRINT(EM_DIAGRAM):   END;
1066383   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1066384   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1066385   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1066386   +END;
MPRINT(EM_DIAGRAM):   END;
1066387   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1066388   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1066389   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1066390   +END;
MPRINT(EM_DIAGRAM):   END;
1066391   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1066392   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1066393   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1066394   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1066395   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1066396   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1066397   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1066398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066399   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1066400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066401   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1066402   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1066403   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1066404   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1066405   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1066406   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1066407   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1066408   +END;
MPRINT(EM_DIAGRAM):   END;
1066409   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1066410   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1066411   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1066412   +drop
1066413   +H11
1066414   +H12
1066415   +H13
1066416   +H14
1066417   +H15
1066418   +H16
1066419   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1066420   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1066421   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1066422   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066423   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1066424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066425   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1066426   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1066427   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1066428   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1066429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066430   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1066431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066432   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1066433   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1066434   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1066435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066436   +* Ensmbl11: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Average Posteriors of 5 models;
1066437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066438   +P_DepVar1 = (
1066439   +Neural39_P_DepVar1 +
1066440   +Neural37_P_DepVar1 +
1066441   +Neural38_P_DepVar1 +
1066442   +Neural40_P_DepVar1 +
1066443   +Neural41_P_DepVar1
1066444   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural39_P_DepVar1 + Neural37_P_DepVar1 +
Neural38_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 )/5;
1066445   +P_DepVar0 = (
1066446   +Neural39_P_DepVar0 +
1066447   +Neural37_P_DepVar0 +
1066448   +Neural38_P_DepVar0 +
1066449   +Neural40_P_DepVar0 +
1066450   +Neural41_P_DepVar0
1066451   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural39_P_DepVar0 + Neural37_P_DepVar0 +
Neural38_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 )/5;
1066452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066453   +* Ensmbl11: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Classification Vars;
1066454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066455   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1066456   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1066457   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1066458   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1066459   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1066460   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1066461   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1066462   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1066463   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1066464   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1066465   +end;
MPRINT(EM_DIAGRAM):   end;
1066466   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1066467   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1066468   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1066469   +end;
MPRINT(EM_DIAGRAM):   end;
1066470   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1066471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066472   +* Ensmbl11: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Producing Unformatted variable;
1066473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066474   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1066475   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1066476   +else
1066477   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1066478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066479   +* Ensmbl11: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing _WARN_ Variable;
1066480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066481   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1066482   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1066483   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1066484   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1066484  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1066485   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1066485  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1066486   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1066486  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1066487   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1066487  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1066488   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1066488  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1066489   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1066489  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1066490   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1066490  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1066491   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1066491  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1066492   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1066492  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1066493   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1066493  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1066494   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1066494  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1066495   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1066495  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1066496   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1066496  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1066497   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1066497  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1066498   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1066498  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1066499   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1066499  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1066500   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1066500  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1066501   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1066501  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1066502   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1066502  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1066503   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1066503  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1066504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066505   +* Ensmbl11: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Residual Vars;
1066506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1066507   +if
1066508   +F_DepVar NE '1'
1066509   +AND F_DepVar NE '0'
1066510   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1066511   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1066512   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1066513   +end;
MPRINT(EM_DIAGRAM):   end;
1066514   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066515   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1066516   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1066517   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1066518   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1066519   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1066520   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1066521   +END;
MPRINT(EM_DIAGRAM):   END;
1066522   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1066523    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL39_VALIDATE.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1066524    quit;
1066525    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl11_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl11_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl11_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1066585    filename _pref
1066585  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
1066586    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1066587    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
1066588   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1066589   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1066590   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1066591   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1066592   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1066593   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1066594   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1066595   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1066596   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1066597   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1066598   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1066599   +LENGTH _WARN_ $4
1066600   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1066601   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1066602   +
1066603   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1066604   +
1066605   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1066606   +
1066607   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1066608   +
1066609   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1066610   +
1066611   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1066612   +
1066613   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1066614   +
1066615   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1066616   +
1066617   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1066618   +
1066619   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1066620   +
1066621   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1066622   +
1066623   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1066624   +
1066625   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1066626   +
1066627   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1066628   +
1066629   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1066630   +
1066631   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1066632   +
1066633   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1066634   +
1066635   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1066636   +
1066637   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1066638   +
1066639   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1066640   +
1066641   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1066642   +
1066643   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1066644   +
1066645   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1066646   +
1066647   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1066648   +
1066649   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1066650   +
1066651   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1066652   +
1066653   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1066654   +
1066655   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1066656   +
1066657   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1066658   +
1066659   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1066660   +
1066661   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1066662   +
1066663   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1066664   +
1066665   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1066666   +
1066667   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1066668   +
1066669   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1066670   +
1066671   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1066672   +
1066673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1066674   +
1066675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1066676   +
1066677   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1066678   +
1066679   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1066680   +
1066681   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1066682   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1066683   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1066684   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1066685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066687   +end;
MPRINT(EM_DIAGRAM):   end;
1066688   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066690   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1066691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066692   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066693   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1066694   +   end;
MPRINT(EM_DIAGRAM):   end;
1066695   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066696   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1066697   +   end;
MPRINT(EM_DIAGRAM):   end;
1066698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066699   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1066700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066702   +   end;
MPRINT(EM_DIAGRAM):   end;
1066703   +end;
MPRINT(EM_DIAGRAM):   end;
1066704   +
1066705   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1066706   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1066707   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1066708   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1066709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066711   +end;
MPRINT(EM_DIAGRAM):   end;
1066712   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066713   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066714   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1066715   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066716   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066717   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1066718   +   end;
MPRINT(EM_DIAGRAM):   end;
1066719   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066720   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1066721   +   end;
MPRINT(EM_DIAGRAM):   end;
1066722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066723   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1066724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066726   +   end;
MPRINT(EM_DIAGRAM):   end;
1066727   +end;
MPRINT(EM_DIAGRAM):   end;
1066728   +
1066729   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1066730   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1066731   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1066732   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1066733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066735   +end;
MPRINT(EM_DIAGRAM):   end;
1066736   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066738   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1066739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066740   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066741   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1066742   +   end;
MPRINT(EM_DIAGRAM):   end;
1066743   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066744   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1066745   +   end;
MPRINT(EM_DIAGRAM):   end;
1066746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066747   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1066748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066750   +   end;
MPRINT(EM_DIAGRAM):   end;
1066751   +end;
MPRINT(EM_DIAGRAM):   end;
1066752   +
1066753   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1066754   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1066755   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1066756   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1066757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066759   +end;
MPRINT(EM_DIAGRAM):   end;
1066760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066762   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1066763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066765   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1066766   +   end;
MPRINT(EM_DIAGRAM):   end;
1066767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066768   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1066769   +   end;
MPRINT(EM_DIAGRAM):   end;
1066770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066771   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1066772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066774   +   end;
MPRINT(EM_DIAGRAM):   end;
1066775   +end;
MPRINT(EM_DIAGRAM):   end;
1066776   +
1066777   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1066778   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1066779   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1066780   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1066781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066783   +end;
MPRINT(EM_DIAGRAM):   end;
1066784   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066786   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1066787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066789   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1066790   +   end;
MPRINT(EM_DIAGRAM):   end;
1066791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066792   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1066793   +   end;
MPRINT(EM_DIAGRAM):   end;
1066794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066795   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1066796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066798   +   end;
MPRINT(EM_DIAGRAM):   end;
1066799   +end;
MPRINT(EM_DIAGRAM):   end;
1066800   +
1066801   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1066802   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1066803   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1066804   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1066805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066807   +end;
MPRINT(EM_DIAGRAM):   end;
1066808   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066810   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1066811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1066813   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1066814   +   end;
MPRINT(EM_DIAGRAM):   end;
1066815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1066816   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1066817   +   end;
MPRINT(EM_DIAGRAM):   end;
1066818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066819   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1066820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066822   +   end;
MPRINT(EM_DIAGRAM):   end;
1066823   +end;
MPRINT(EM_DIAGRAM):   end;
1066824   +
1066825   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1066826   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1066827   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1066828   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1066829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066831   +end;
MPRINT(EM_DIAGRAM):   end;
1066832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1066834   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1066835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066836   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1066837   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1066838   +   end;
MPRINT(EM_DIAGRAM):   end;
1066839   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1066840   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1066841   +   end;
MPRINT(EM_DIAGRAM):   end;
1066842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066843   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1066844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066846   +   end;
MPRINT(EM_DIAGRAM):   end;
1066847   +end;
MPRINT(EM_DIAGRAM):   end;
1066848   +
1066849   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1066850   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1066851   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1066852   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1066853   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1066854   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1066855   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1066856   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1066857   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1066858   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1066859   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1066860   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1066861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066863   +end;
MPRINT(EM_DIAGRAM):   end;
1066864   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066865   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1066866   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1066867   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066868   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1066869   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1066870   +   end;
MPRINT(EM_DIAGRAM):   end;
1066871   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1066872   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1066873   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1066874   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1066875   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1066876   +   end;
MPRINT(EM_DIAGRAM):   end;
1066877   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1066878   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1066879   +   end;
MPRINT(EM_DIAGRAM):   end;
1066880   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1066881   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1066882   +   end;
MPRINT(EM_DIAGRAM):   end;
1066883   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1066884   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1066885   +   end;
MPRINT(EM_DIAGRAM):   end;
1066886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066887   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1066888   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1066889   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1066890   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1066891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066893   +   end;
MPRINT(EM_DIAGRAM):   end;
1066894   +end;
MPRINT(EM_DIAGRAM):   end;
1066895   +
1066896   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1066897   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1066898   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1066899   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1066900   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1066901   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1066902   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1066903   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1066904   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1066905   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1066906   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1066907   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1066908   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1066909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1066910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066911   +end;
MPRINT(EM_DIAGRAM):   end;
1066912   +else do;
MPRINT(EM_DIAGRAM):   else do;
1066913   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1066914   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1066915   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1066916   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1066917   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1066918   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1066919   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1066920   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1066921   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066922   +         end;
MPRINT(EM_DIAGRAM):   end;
1066923   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1066924   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1066925   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1066926   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066927   +            end;
MPRINT(EM_DIAGRAM):   end;
1066928   +         end;
MPRINT(EM_DIAGRAM):   end;
1066929   +      end;
MPRINT(EM_DIAGRAM):   end;
1066930   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1066931   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1066932   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1066933   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066934   +         end;
MPRINT(EM_DIAGRAM):   end;
1066935   +      end;
MPRINT(EM_DIAGRAM):   end;
1066936   +   end;
MPRINT(EM_DIAGRAM):   end;
1066937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1066938   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1066939   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1066940   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066941   +      end;
MPRINT(EM_DIAGRAM):   end;
1066942   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1066943   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1066944   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1066945   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1066946   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1066947   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1066948   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1066949   +         end;
MPRINT(EM_DIAGRAM):   end;
1066950   +      end;
MPRINT(EM_DIAGRAM):   end;
1066951   +   end;
MPRINT(EM_DIAGRAM):   end;
1066952   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1066953   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1066954   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1066955   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1066956   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1066957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1066958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066959   +   end;
MPRINT(EM_DIAGRAM):   end;
1066960   +end;
MPRINT(EM_DIAGRAM):   end;
1066961   +
1066962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066963   +*** Checking missing input Interval
1066964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1066965   +
1066966   +IF NMISS(
1066967   +   AcceptedCmpTotal ,
1066968   +   Age ,
1066969   +   Frq ,
1066970   +   Income ,
1066971   +   Kidhome ,
1066972   +   MntFishProducts ,
1066973   +   MntFruits ,
1066974   +   MntGoldProds ,
1066975   +   MntSweetProducts ,
1066976   +   MonthsAsCustomer ,
1066977   +   NumDealsPurchases ,
1066978   +   NumWebVisitsMonth ,
1066979   +   RFMstat ,
1066980   +   RMntFrq ,
1066981   +   Recency ,
1066982   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1066983   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1066984   +
1066985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1066986   +END;
MPRINT(EM_DIAGRAM):   END;
1066987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066988   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1066989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1066990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1066991   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1066992   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1066993   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1066994   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1066995   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1066996   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1066997   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1066998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1066999   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1067000   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1067001   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1067002   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1067003   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1067004   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1067005   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1067006   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1067007   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1067008   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1067009   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1067010   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1067011   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1067012   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1067013   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1067014   +END;
MPRINT(EM_DIAGRAM):   END;
1067015   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1067016   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1067017   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1067018   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1067019   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1067020   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1067021   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1067022   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1067023   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1067024   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1067025   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1067026   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1067027   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1067028   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1067029   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1067030   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1067031   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1067032   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1067033   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1067034   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1067035   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1067036   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1067037   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1067038   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1067039   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1067040   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1067041   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1067042   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1067043   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1067044   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1067045   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1067046   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1067047   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1067048   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1067049   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1067050   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1067051   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1067052   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1067053   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1067054   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1067055   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1067056   +END;
MPRINT(EM_DIAGRAM):   END;
1067057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067058   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1067059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067061   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1067062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067064   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1067065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067066   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1067067   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1067068   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1067069   +        S_Income  +     0.25564250606874 * S_Kidhome
1067070   +          +    -0.02786629817134 * S_MntFishProducts
1067071   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1067072   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1067073   +          +    -0.29199173107007 * S_MonthsAsCustomer
1067074   +          +    -0.59759788962473 * S_NumDealsPurchases
1067075   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1067076   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1067077   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1067078   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome +
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 *
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 *
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 *
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq +
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1067079   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1067080   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1067081   +        S_Income  +     0.07328887474153 * S_Kidhome
1067082   +          +    -0.23284570213322 * S_MntFishProducts
1067083   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1067084   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1067085   +          +     0.29669594858185 * S_MonthsAsCustomer
1067086   +          +    -0.51220833966596 * S_NumDealsPurchases
1067087   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1067088   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1067089   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1067090   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age +
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome +
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 *
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 *
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 *
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq +
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1067091   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1067092   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1067093   +        S_Income  +    -0.68209910558389 * S_Kidhome
1067094   +          +     0.23366174254474 * S_MntFishProducts
1067095   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1067096   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1067097   +          +    -0.05759532204753 * S_MonthsAsCustomer
1067098   +          +    -0.30170163047261 * S_NumDealsPurchases
1067099   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1067100   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1067101   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1067102   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome +
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 *
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 *
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 *
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq +
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1067103   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1067104   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1067105   +        S_Income  +     0.67855138873039 * S_Kidhome
1067106   +          +    -0.05297743313476 * S_MntFishProducts
1067107   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1067108   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1067109   +          +    -0.15817861274553 * S_MonthsAsCustomer
1067110   +          +     0.25133066233725 * S_NumDealsPurchases
1067111   +          +     0.08802636187267 * S_NumWebVisitsMonth
1067112   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1067113   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1067114   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome +
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 *
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 *
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 *
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq +
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1067115   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1067116   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1067117   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1067118   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1067119   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 *
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 +
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 *
HigherEducationBinary0 ;
1067120   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1067121   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1067122   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1067123   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1067124   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 *
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 +
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 *
HigherEducationBinary0 ;
1067125   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1067126   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1067127   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1067128   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1067129   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 *
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 +
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 *
HigherEducationBinary0 ;
1067130   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1067131   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1067132   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1067133   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1067134   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 *
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 +
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 *
HigherEducationBinary0 ;
1067135   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1067136   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1067137   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1067138   +          +      0.0528075343138 * Marital_StatusDivorced
1067139   +          +    -0.08269844855231 * Marital_StatusMarried
1067140   +          +     0.43411839786169 * Marital_StatusSingle
1067141   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 *
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried +
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1067142   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1067143   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1067144   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1067145   +          +    -0.12842912869907 * Marital_StatusDivorced
1067146   +          +     0.11838814754642 * Marital_StatusMarried
1067147   +          +     0.01184261900927 * Marital_StatusSingle
1067148   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 *
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried +
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1067149   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1067150   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1067151   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1067152   +          +    -0.22110722201709 * Marital_StatusDivorced
1067153   +          +      0.1355339029843 * Marital_StatusMarried
1067154   +          +    -0.33157273596382 * Marital_StatusSingle
1067155   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 *
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster +
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried +
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1067156   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1067157   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1067158   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1067159   +          +    -0.21663247467797 * Marital_StatusDivorced
1067160   +          +     1.11468603898508 * Marital_StatusMarried
1067161   +          +    -0.84252388146943 * Marital_StatusSingle
1067162   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 *
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried +
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1067163   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1067164   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1067165   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1067166   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1067167   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1067168   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1067169   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1067170   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1067171   +END;
MPRINT(EM_DIAGRAM):   END;
1067172   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1067173   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1067174   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1067175   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1067176   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1067177   +END;
MPRINT(EM_DIAGRAM):   END;
1067178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067179   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1067180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067181   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1067182   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1067183   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 +
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1067184   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1067185   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1067186   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1067187   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1067188   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1067189   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1067190   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1067191   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1067192   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1067193   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1067194   +END;
MPRINT(EM_DIAGRAM):   END;
1067195   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1067196   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1067197   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1067198   +END;
MPRINT(EM_DIAGRAM):   END;
1067199   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1067200   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1067201   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1067202   +END;
MPRINT(EM_DIAGRAM):   END;
1067203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067204   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1067205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067206   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1067207   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1067208   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1067209   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1067210   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1067211   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1067212   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1067213   +END;
MPRINT(EM_DIAGRAM):   END;
1067214   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1067215   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1067216   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1067217   +drop
1067218   +H11
1067219   +H12
1067220   +H13
1067221   +H14
1067222   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1067223   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1067224    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1067225    quit;
1067226    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1067227    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1067228    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1067229    retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
1067230    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1067231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1067232    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1067233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067235    proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
1067236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067238    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067239    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1067240    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1067241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067242    proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
1067243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1067244    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1067245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067248    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1067249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067250    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067251    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1067252    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1067252  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.
 
1067253    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067254    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1067255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067256    filename _pref
1067256  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1067257    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1067258    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1067259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1067260   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1067261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1067262   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1067263   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1067264   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1067265    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1067266    quit;
1067267    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1067268    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1067269    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1067270    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1067271    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1067272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067273    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1067274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067276    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1067277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067279    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067280    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1067281    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1067282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067283    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1067284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1067285    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1067286    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067288    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067289    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1067290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067291    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067292    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1067293    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1067293  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1067294    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067295    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1067296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067297    filename _pref
1067297  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1067298    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1067299    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1067300   +
1067301   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1067302   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1067302  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1067303   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1067304   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1067305   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1067306   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1067307   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1067308    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1067309    quit;
1067310    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1067311    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1067312    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1067313    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1067314    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1067315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067316    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1067317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067319    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1067320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067323    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1067324    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1067325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067326    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1067327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067328    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1067329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067330    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067331    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067332    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1067333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067334    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067335    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1067336    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1067336  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1067337    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067338    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1067339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067340    filename _pref
1067340  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1067341    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1067342    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1067343   +
1067344   +
1067345   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1067346   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1067347   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1067348   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1067349   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1067350   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067351   +
1067352   +
1067353   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1067354   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1067355   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1067356   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1067357   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1067358   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067359   +
1067360   +
1067361   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1067362   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1067363   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1067364   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1067365   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1067366   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067367   +
1067368   +
1067369   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1067370   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1067371   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1067372   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1067373   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1067374   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067375   +
1067376   +
1067377   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1067378   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1067379   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1067380   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1067381   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1067382   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067383   +
1067384   +
1067385   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1067386   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1067387   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1067388   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1067389   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1067390   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067391   +
1067392   +
1067393   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1067394   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1067395   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1067396   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1067397   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1067398   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067399   +
1067400   +
1067401   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1067402   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1067403   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1067404   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1067405   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1067406   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1067407   +if
1067408   +_FILTERNORM1 not in ( '.')
1067409   + and
1067410   +_FILTERNORM2 not in ( '.')
1067411   + and
1067412   +_FILTERNORM3 not in ( '.')
1067413   + and
1067414   +_FILTERNORM4 not in ( '.')
1067415   + and
1067416   +_FILTERNORM5 not in ( '.')
1067417   + and
1067418   +_FILTERNORM6 not in ( '.')
1067419   + and
1067420   +_FILTERNORM7 not in ( ' ')
1067421   + and
1067422   +_FILTERNORM8 not in ( ' ')
1067423   +and
1067424   +( Dt_Customer ne .)
1067425   +and ( Income ne . and (Income<=107000))
1067426   +and ( Kidhome ne .)
1067427   +and ( MntFishProducts ne .)
1067428   +and ( MntFruits ne .)
1067429   +and ( MntGoldProds ne .)
1067430   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1067431   +and ( MntSweetProducts ne .)
1067432   +and ( MntWines ne .)
1067433   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1067434   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1067435   +and ( NumStorePurchases ne .)
1067436   +and ( NumWebPurchases ne .)
1067437   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1067438   +and ( Recency ne .)
1067439   +and ( Teenhome ne .)
1067440   +and ( Year_Birth ne .)
1067441   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1067442   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1067443   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1067444   +end;
MPRINT(EM_DIAGRAM):   end;
1067445   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1067446   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1067447    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1067448    quit;
1067449    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1067450    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1067451    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1067452    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1067453    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1067454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067455    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1067456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067458    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1067459    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067460    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067461    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067462    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1067463    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1067464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067465    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1067466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1067467    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1067468    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067470    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1067471    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1067472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1067473    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067474    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1067475    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1067475  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1067476    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067477    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1067478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067479    %macro varDept(fcmpdata=,id=);
1067480    %global nobs&id scoreFlag&id;
1067481    %let scoreFlag&id = 0;
1067482    %if &id=1 or ^&fcmpStart %then %do;
1067483    proc sort data=&fcmpdata out=_temp&id nodupkey;
1067484    by NAME;
1067485    where id=&id and LHS in( %let j=1;
1067486    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1067487    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1067488    "&var" %let j = %eval(&j+1);
1067489    %end;
1067490    );
1067491    run;
1067492    %let dsid = %sysfunc(open(_temp&id));
1067493    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1067494    %let dsid = %sysfunc(close(&dsid));
1067495    %if &&nobs&id %then %do;
1067496    %let scoreFlag&id = 1;
1067497    %let fcmpStart = 1;
1067498    %end;
1067499    %else %let fcmpStart = 0;
1067500    %end;
1067501    %else %do;
1067502    proc sort data=&fcmpdata out=_tempid;
1067503    where id=&id;
1067504    by LHS;
1067505    run;
1067506    %let dsid = %sysfunc(open(_tempid));
1067507    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1067508    %let dsid = %sysfunc(close(&dsid));
1067509    %if ^&&nobs&id %then %do;
1067510    proc datasets lib=work nolist;
1067511    delete _tempid;
1067512    run;
1067513    quit;
1067514    %end;
1067515    %else %do;
1067516    data _tempAll;
1067517    set %let j=%eval(&id-1);
1067518    %do x=1 %to &j;
1067519    %if &&nobs&x %then %do;
1067520    _temp&x %end;
1067521    %end;
1067522    ;
1067523    run;
1067524    proc sql;
1067525    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1067525  ! work._tempid p2 where p.name=p2.lhs;
1067526    quit;
1067527    data _temp&id;
1067528    set _temp&id;
1067529    where LHS ne '' and NAME ne '' and Node ne '';
1067530    run;
1067531    proc datasets lib=work nolist;
1067532    delete _tempAll;
1067533    run;
1067534    %let dsid = %sysfunc(open(_temp&id));
1067535    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1067536    %let dsid = %sysfunc(close(&dsid));
1067537    %if ^&&nobs&id %then %do;
1067538    proc datasets lib=work nolist;
1067539    delete _temp&id;
1067540    run;
1067541    quit;
1067542    %end;
1067543    %else %do;
1067544    %let scoreFlag&id = 1;
1067545    data _temp&id;
1067546    set _temp&id;
1067547    where LHS ne NAME and node ne '';
1067548    run;
1067549    %let dsid = %sysfunc(open(_temp&id));
1067550    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1067551    %let dsid = %sysfunc(close(&dsid));
1067552    %if ^&&nobs&id %then %do;
1067553    proc datasets lib=work nolist;
1067554    delete _temp&id;
1067555    run;
1067556    quit;
1067557    %end;
1067558    %else %do;
1067559    proc sort data=_temp&id nodupkey;
1067560    by LHS NAME;
1067561    run;
1067562    %end;
1067563    %end;
1067564    %end;
1067565    %end;
1067566    %mend varDept;
1067567    %macro optCode(outdata=fcmpdata);
1067568    %global fcmpStart;
1067569    %let fcmpStart = 0;
1067570    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1067571    %let NumNodes=9;
1067572    %do k=1 %to &NumNodes;
1067573    %vardept(fcmpdata=&outdata, id=&k);
1067574    %end;
1067575    %mend optCode;
1067576    %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1067577    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1067578    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1067579    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1067580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067581    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1067582    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1067583    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1067584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067585    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1067586    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1067586  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1067587    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1067588    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1067589    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1067590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1067591    filename _pref
1067591  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
1067592    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1067593    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas.
1067594   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1067595   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1067596   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1067597   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1067598   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1067599   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1067600   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1067601   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1067602   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1067603   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1067604   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1067605   +LENGTH _WARN_ $4
1067606   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1067607   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1067608   +
1067609   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1067610   +
1067611   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1067612   +
1067613   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1067614   +
1067615   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1067616   +
1067617   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1067618   +
1067619   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1067620   +
1067621   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1067622   +
1067623   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1067624   +
1067625   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1067626   +
1067627   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1067628   +
1067629   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1067630   +
1067631   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1067632   +
1067633   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1067634   +
1067635   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1067636   +
1067637   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1067638   +
1067639   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1067640   +
1067641   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1067642   +
1067643   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1067644   +
1067645   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1067646   +
1067647   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1067648   +
1067649   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1067650   +
1067651   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1067652   +
1067653   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1067654   +
1067655   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1067656   +
1067657   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1067658   +
1067659   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1067660   +
1067661   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1067662   +
1067663   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1067664   +
1067665   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1067666   +
1067667   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1067668   +
1067669   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1067670   +
1067671   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1067672   +
1067673   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1067674   +
1067675   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1067676   +
1067677   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1067678   +
1067679   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1067680   +
1067681   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1067682   +
1067683   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1067684   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1067685   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1067686   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1067687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067689   +end;
MPRINT(EM_DIAGRAM):   end;
1067690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067692   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1067693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067695   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1067696   +   end;
MPRINT(EM_DIAGRAM):   end;
1067697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067698   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1067699   +   end;
MPRINT(EM_DIAGRAM):   end;
1067700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067701   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1067702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067704   +   end;
MPRINT(EM_DIAGRAM):   end;
1067705   +end;
MPRINT(EM_DIAGRAM):   end;
1067706   +
1067707   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1067708   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1067709   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1067710   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1067711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067713   +end;
MPRINT(EM_DIAGRAM):   end;
1067714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067716   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1067717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067718   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067719   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1067720   +   end;
MPRINT(EM_DIAGRAM):   end;
1067721   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067722   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1067723   +   end;
MPRINT(EM_DIAGRAM):   end;
1067724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067725   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1067726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067728   +   end;
MPRINT(EM_DIAGRAM):   end;
1067729   +end;
MPRINT(EM_DIAGRAM):   end;
1067730   +
1067731   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1067732   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1067733   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1067734   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1067735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067737   +end;
MPRINT(EM_DIAGRAM):   end;
1067738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067740   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1067741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067742   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067743   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1067744   +   end;
MPRINT(EM_DIAGRAM):   end;
1067745   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067746   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1067747   +   end;
MPRINT(EM_DIAGRAM):   end;
1067748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067749   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1067750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067752   +   end;
MPRINT(EM_DIAGRAM):   end;
1067753   +end;
MPRINT(EM_DIAGRAM):   end;
1067754   +
1067755   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1067756   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1067757   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1067758   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1067759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067761   +end;
MPRINT(EM_DIAGRAM):   end;
1067762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067764   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1067765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067767   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1067768   +   end;
MPRINT(EM_DIAGRAM):   end;
1067769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067770   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1067771   +   end;
MPRINT(EM_DIAGRAM):   end;
1067772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067773   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1067774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067776   +   end;
MPRINT(EM_DIAGRAM):   end;
1067777   +end;
MPRINT(EM_DIAGRAM):   end;
1067778   +
1067779   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1067780   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1067781   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1067782   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1067783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067785   +end;
MPRINT(EM_DIAGRAM):   end;
1067786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067788   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1067789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067791   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1067792   +   end;
MPRINT(EM_DIAGRAM):   end;
1067793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067794   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1067795   +   end;
MPRINT(EM_DIAGRAM):   end;
1067796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067797   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1067798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067800   +   end;
MPRINT(EM_DIAGRAM):   end;
1067801   +end;
MPRINT(EM_DIAGRAM):   end;
1067802   +
1067803   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1067804   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1067805   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1067806   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1067807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067809   +end;
MPRINT(EM_DIAGRAM):   end;
1067810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067812   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1067813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067814   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1067815   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1067816   +   end;
MPRINT(EM_DIAGRAM):   end;
1067817   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1067818   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1067819   +   end;
MPRINT(EM_DIAGRAM):   end;
1067820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067821   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1067822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067824   +   end;
MPRINT(EM_DIAGRAM):   end;
1067825   +end;
MPRINT(EM_DIAGRAM):   end;
1067826   +
1067827   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1067828   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1067829   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1067830   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1067831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067833   +end;
MPRINT(EM_DIAGRAM):   end;
1067834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1067836   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1067837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067838   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1067839   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1067840   +   end;
MPRINT(EM_DIAGRAM):   end;
1067841   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1067842   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1067843   +   end;
MPRINT(EM_DIAGRAM):   end;
1067844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067845   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1067846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067848   +   end;
MPRINT(EM_DIAGRAM):   end;
1067849   +end;
MPRINT(EM_DIAGRAM):   end;
1067850   +
1067851   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1067852   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1067853   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1067854   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1067855   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1067856   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1067857   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1067858   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1067859   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1067860   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1067861   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1067862   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1067863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067865   +end;
MPRINT(EM_DIAGRAM):   end;
1067866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067867   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1067868   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1067869   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067870   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1067871   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1067872   +   end;
MPRINT(EM_DIAGRAM):   end;
1067873   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1067874   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1067875   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1067876   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1067877   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1067878   +   end;
MPRINT(EM_DIAGRAM):   end;
1067879   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1067880   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1067881   +   end;
MPRINT(EM_DIAGRAM):   end;
1067882   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1067883   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1067884   +   end;
MPRINT(EM_DIAGRAM):   end;
1067885   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1067886   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1067887   +   end;
MPRINT(EM_DIAGRAM):   end;
1067888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067889   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1067890   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1067891   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1067892   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1067893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067895   +   end;
MPRINT(EM_DIAGRAM):   end;
1067896   +end;
MPRINT(EM_DIAGRAM):   end;
1067897   +
1067898   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1067899   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1067900   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1067901   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1067902   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1067903   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1067904   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1067905   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1067906   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1067907   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1067908   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1067909   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1067910   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1067911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1067912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067913   +end;
MPRINT(EM_DIAGRAM):   end;
1067914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1067915   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1067916   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1067917   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1067918   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1067919   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1067920   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1067921   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1067922   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1067923   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1067924   +         end;
MPRINT(EM_DIAGRAM):   end;
1067925   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1067926   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1067927   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1067928   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1067929   +            end;
MPRINT(EM_DIAGRAM):   end;
1067930   +         end;
MPRINT(EM_DIAGRAM):   end;
1067931   +      end;
MPRINT(EM_DIAGRAM):   end;
1067932   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1067933   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1067934   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1067935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1067936   +         end;
MPRINT(EM_DIAGRAM):   end;
1067937   +      end;
MPRINT(EM_DIAGRAM):   end;
1067938   +   end;
MPRINT(EM_DIAGRAM):   end;
1067939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1067940   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1067941   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1067942   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1067943   +      end;
MPRINT(EM_DIAGRAM):   end;
1067944   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1067945   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1067946   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1067947   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1067948   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1067949   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1067950   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1067951   +         end;
MPRINT(EM_DIAGRAM):   end;
1067952   +      end;
MPRINT(EM_DIAGRAM):   end;
1067953   +   end;
MPRINT(EM_DIAGRAM):   end;
1067954   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1067955   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1067956   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1067957   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1067958   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1067959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1067960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067961   +   end;
MPRINT(EM_DIAGRAM):   end;
1067962   +end;
MPRINT(EM_DIAGRAM):   end;
1067963   +
1067964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067965   +*** Checking missing input Interval
1067966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1067967   +
1067968   +IF NMISS(
1067969   +   AcceptedCmpTotal ,
1067970   +   Age ,
1067971   +   Frq ,
1067972   +   Income ,
1067973   +   Kidhome ,
1067974   +   MntFishProducts ,
1067975   +   MntFruits ,
1067976   +   MntGoldProds ,
1067977   +   MntSweetProducts ,
1067978   +   MonthsAsCustomer ,
1067979   +   NumDealsPurchases ,
1067980   +   NumWebVisitsMonth ,
1067981   +   RFMstat ,
1067982   +   RMntFrq ,
1067983   +   Recency ,
1067984   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1067985   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1067986   +
1067987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1067988   +END;
MPRINT(EM_DIAGRAM):   END;
1067989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067990   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1067991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1067992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1067993   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1067994   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1067995   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1067996   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1067997   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1067998   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1067999   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1068000   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1068001   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1068002   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1068003   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1068004   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1068005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1068006   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1068007   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1068008   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1068009   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1068010   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1068011   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1068012   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1068013   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1068014   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1068015   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1068016   +END;
MPRINT(EM_DIAGRAM):   END;
1068017   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1068018   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1068019   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1068020   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1068021   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1068022   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1068023   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1068024   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1068025   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1068026   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1068027   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1068028   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1068029   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1068030   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1068031   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1068032   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1068033   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1068034   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1068035   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1068036   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1068037   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1068038   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1068039   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1068040   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1068041   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1068042   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1068043   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1068044   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1068045   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1068046   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1068047   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1068048   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1068049   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1068050   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1068051   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1068052   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1068053   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1068054   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1068055   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1068056   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1068057   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1068058   +END;
MPRINT(EM_DIAGRAM):   END;
1068059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068060   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1068061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068063   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1068064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068066   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1068067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068068   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1068069   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1068070   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1068071   +        S_Income  +     0.21434017685167 * S_Kidhome
1068072   +          +    -0.00245095061163 * S_MntFishProducts
1068073   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1068074   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1068075   +          +     -0.0436897985886 * S_MonthsAsCustomer
1068076   +          +    -0.11066147452589 * S_NumDealsPurchases
1068077   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1068078   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1068079   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1068080   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age +
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome +
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 *
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth +
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency +
0.31802924624272 * S_Teenhome ;
1068081   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1068082   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1068083   +        S_Income  +    -0.34676303560555 * S_Kidhome
1068084   +          +    -0.19666313381749 * S_MntFishProducts
1068085   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1068086   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1068087   +          +     0.11921399006499 * S_MonthsAsCustomer
1068088   +          +    -0.67623098057964 * S_NumDealsPurchases
1068089   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1068090   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1068091   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1068092   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome +
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 *
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 *
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 *
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq +
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1068093   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1068094   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1068095   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1068096   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1068097   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 *
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 +
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 *
HigherEducationBinary0 ;
1068098   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1068099   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1068100   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1068101   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1068102   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 *
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 +
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 *
HigherEducationBinary0 ;
1068103   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1068104   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1068105   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1068106   +          +    -0.09599098826432 * Marital_StatusDivorced
1068107   +          +     0.29380773989654 * Marital_StatusMarried
1068108   +          +    -0.24344588832351 * Marital_StatusSingle
1068109   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 *
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried +
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1068110   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1068111   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1068112   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1068113   +          +    -0.18210246138549 * Marital_StatusDivorced
1068114   +          +    -0.33707503901978 * Marital_StatusMarried
1068115   +          +     0.45975144433549 * Marital_StatusSingle
1068116   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 *
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried +
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1068117   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1068118   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1068119   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1068120   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1068121   +END;
MPRINT(EM_DIAGRAM):   END;
1068122   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1068123   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1068124   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1068125   +END;
MPRINT(EM_DIAGRAM):   END;
1068126   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068127   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1068128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068129   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1068130   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1068131   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1068132   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1068133   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1068134   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1068135   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1068136   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1068137   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1068138   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1068139   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1068140   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1068141   +END;
MPRINT(EM_DIAGRAM):   END;
1068142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1068143   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1068144   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1068145   +END;
MPRINT(EM_DIAGRAM):   END;
1068146   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1068147   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1068148   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1068149   +END;
MPRINT(EM_DIAGRAM):   END;
1068150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068151   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1068152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068153   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1068154   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1068155   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1068156   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1068157   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1068158   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1068159   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1068160   +END;
MPRINT(EM_DIAGRAM):   END;
1068161   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1068162   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1068163   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1068164   +drop
1068165   +H11
1068166   +H12
1068167   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1068168   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1068169    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1068170    quit;
1068171    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1068172    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1068173    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1068174    retain ID 2 Node "Neural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural37";
1068175    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1068176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068177    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1068178    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068179    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068180    proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
1068181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068182    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068183    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068184    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1068185    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1068186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068187    proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
1068188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1068189    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1068190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068192    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068193    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1068194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068195    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068196    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1068197    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1068197  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 887 rows and 5 columns.
 
1068198    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068199    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1068200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 887 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 887 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068201    filename _pref
1068201  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1068202    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1068203    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1068204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1068205   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1068206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1068207   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1068208   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1068209   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1068210    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1068211    quit;
1068212    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1068213    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1068214    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1068215    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1068216    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1068217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068218    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1068219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068220    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068221    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1068222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068225    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1068226    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1068227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068228    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1068229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1068230    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1068231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068233    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068234    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1068235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068236    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068237    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1068238    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1068238  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1068239    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068240    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1068241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 891 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068242    filename _pref
1068242  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1068243    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1068244    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1068245   +
1068246   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1068247   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1068247  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1068248   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1068249   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1068250   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1068251   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1068252   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1068253    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1068254    quit;
1068255    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1068256    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1068257    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1068258    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1068259    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1068260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068261    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1068262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068264    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1068265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068267    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068268    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1068269    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1068270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068271    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1068272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068273    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1068274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068276    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068277    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1068278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068279    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068280    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1068281    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1068281  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1068282    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068283    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1068284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 930 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068285    filename _pref
1068285  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1068286    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1068287    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1068288   +
1068289   +
1068290   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1068291   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1068292   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1068293   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1068294   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1068295   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068296   +
1068297   +
1068298   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1068299   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1068300   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1068301   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1068302   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1068303   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068304   +
1068305   +
1068306   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1068307   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1068308   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1068309   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1068310   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1068311   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068312   +
1068313   +
1068314   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1068315   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1068316   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1068317   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1068318   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1068319   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068320   +
1068321   +
1068322   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1068323   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1068324   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1068325   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1068326   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1068327   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068328   +
1068329   +
1068330   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1068331   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1068332   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1068333   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1068334   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1068335   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068336   +
1068337   +
1068338   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1068339   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1068340   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1068341   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1068342   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1068343   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068344   +
1068345   +
1068346   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1068347   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1068348   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1068349   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1068350   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1068351   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1068352   +if
1068353   +_FILTERNORM1 not in ( '.')
1068354   + and
1068355   +_FILTERNORM2 not in ( '.')
1068356   + and
1068357   +_FILTERNORM3 not in ( '.')
1068358   + and
1068359   +_FILTERNORM4 not in ( '.')
1068360   + and
1068361   +_FILTERNORM5 not in ( '.')
1068362   + and
1068363   +_FILTERNORM6 not in ( '.')
1068364   + and
1068365   +_FILTERNORM7 not in ( ' ')
1068366   + and
1068367   +_FILTERNORM8 not in ( ' ')
1068368   +and
1068369   +( Dt_Customer ne .)
1068370   +and ( Income ne . and (Income<=107000))
1068371   +and ( Kidhome ne .)
1068372   +and ( MntFishProducts ne .)
1068373   +and ( MntFruits ne .)
1068374   +and ( MntGoldProds ne .)
1068375   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1068376   +and ( MntSweetProducts ne .)
1068377   +and ( MntWines ne .)
1068378   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1068379   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1068380   +and ( NumStorePurchases ne .)
1068381   +and ( NumWebPurchases ne .)
1068382   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1068383   +and ( Recency ne .)
1068384   +and ( Teenhome ne .)
1068385   +and ( Year_Birth ne .)
1068386   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1068387   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1068388   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1068389   +end;
MPRINT(EM_DIAGRAM):   end;
1068390   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1068391   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1068392    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1068393    quit;
1068394    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1068395    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1068396    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1068397    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1068398    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1068399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068400    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1068401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068403    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1068404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068407    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1068408    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1068409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068410    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1068411    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1068412    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1068413    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068415    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1068416    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1068417    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1068418    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068419    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1068420    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1068420  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1068421    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1068422    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1068423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068424    %macro varDept(fcmpdata=,id=);
1068425    %global nobs&id scoreFlag&id;
1068426    %let scoreFlag&id = 0;
1068427    %if &id=1 or ^&fcmpStart %then %do;
1068428    proc sort data=&fcmpdata out=_temp&id nodupkey;
1068429    by NAME;
1068430    where id=&id and LHS in( %let j=1;
1068431    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1068432    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1068433    "&var" %let j = %eval(&j+1);
1068434    %end;
1068435    );
1068436    run;
1068437    %let dsid = %sysfunc(open(_temp&id));
1068438    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1068439    %let dsid = %sysfunc(close(&dsid));
1068440    %if &&nobs&id %then %do;
1068441    %let scoreFlag&id = 1;
1068442    %let fcmpStart = 1;
1068443    %end;
1068444    %else %let fcmpStart = 0;
1068445    %end;
1068446    %else %do;
1068447    proc sort data=&fcmpdata out=_tempid;
1068448    where id=&id;
1068449    by LHS;
1068450    run;
1068451    %let dsid = %sysfunc(open(_tempid));
1068452    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1068453    %let dsid = %sysfunc(close(&dsid));
1068454    %if ^&&nobs&id %then %do;
1068455    proc datasets lib=work nolist;
1068456    delete _tempid;
1068457    run;
1068458    quit;
1068459    %end;
1068460    %else %do;
1068461    data _tempAll;
1068462    set %let j=%eval(&id-1);
1068463    %do x=1 %to &j;
1068464    %if &&nobs&x %then %do;
1068465    _temp&x %end;
1068466    %end;
1068467    ;
1068468    run;
1068469    proc sql;
1068470    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1068470  ! work._tempid p2 where p.name=p2.lhs;
1068471    quit;
1068472    data _temp&id;
1068473    set _temp&id;
1068474    where LHS ne '' and NAME ne '' and Node ne '';
1068475    run;
1068476    proc datasets lib=work nolist;
1068477    delete _tempAll;
1068478    run;
1068479    %let dsid = %sysfunc(open(_temp&id));
1068480    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1068481    %let dsid = %sysfunc(close(&dsid));
1068482    %if ^&&nobs&id %then %do;
1068483    proc datasets lib=work nolist;
1068484    delete _temp&id;
1068485    run;
1068486    quit;
1068487    %end;
1068488    %else %do;
1068489    %let scoreFlag&id = 1;
1068490    data _temp&id;
1068491    set _temp&id;
1068492    where LHS ne NAME and node ne '';
1068493    run;
1068494    %let dsid = %sysfunc(open(_temp&id));
1068495    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1068496    %let dsid = %sysfunc(close(&dsid));
1068497    %if ^&&nobs&id %then %do;
1068498    proc datasets lib=work nolist;
1068499    delete _temp&id;
1068500    run;
1068501    quit;
1068502    %end;
1068503    %else %do;
1068504    proc sort data=_temp&id nodupkey;
1068505    by LHS NAME;
1068506    run;
1068507    %end;
1068508    %end;
1068509    %end;
1068510    %end;
1068511    %mend varDept;
1068512    %macro optCode(outdata=fcmpdata);
1068513    %global fcmpStart;
1068514    %let fcmpStart = 0;
1068515    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1068516    %let NumNodes=9;
1068517    %do k=1 %to &NumNodes;
1068518    %vardept(fcmpdata=&outdata, id=&k);
1068519    %end;
1068520    %mend optCode;
1068521    %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1068522    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1068523    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1068524    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1068525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068526    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1068527    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1068528    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1068529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068530    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1068531    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1068531  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1068532    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1068533    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1068534    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1068535    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1068536    filename _pref
1068536  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
1068537    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1068538    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas.
1068539   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1068540   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1068541   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1068542   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1068543   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1068544   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1068545   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1068546   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1068547   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1068548   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1068549   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1068550   +LENGTH _WARN_ $4
1068551   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1068552   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1068553   +
1068554   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1068555   +
1068556   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1068557   +
1068558   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1068559   +
1068560   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1068561   +
1068562   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1068563   +
1068564   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1068565   +
1068566   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1068567   +
1068568   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1068569   +
1068570   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1068571   +
1068572   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1068573   +
1068574   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1068575   +
1068576   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1068577   +
1068578   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1068579   +
1068580   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1068581   +
1068582   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1068583   +
1068584   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1068585   +
1068586   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1068587   +
1068588   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1068589   +
1068590   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1068591   +
1068592   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1068593   +
1068594   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1068595   +
1068596   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1068597   +
1068598   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1068599   +
1068600   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1068601   +
1068602   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1068603   +
1068604   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1068605   +
1068606   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1068607   +
1068608   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1068609   +
1068610   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1068611   +
1068612   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1068613   +
1068614   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1068615   +
1068616   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1068617   +
1068618   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1068619   +
1068620   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1068621   +
1068622   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1068623   +
1068624   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1068625   +
1068626   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1068627   +
1068628   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1068629   +
1068630   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1068631   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1068632   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1068633   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1068634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068636   +end;
MPRINT(EM_DIAGRAM):   end;
1068637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068639   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1068640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068641   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068642   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1068643   +   end;
MPRINT(EM_DIAGRAM):   end;
1068644   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068645   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1068646   +   end;
MPRINT(EM_DIAGRAM):   end;
1068647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068648   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1068649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068651   +   end;
MPRINT(EM_DIAGRAM):   end;
1068652   +end;
MPRINT(EM_DIAGRAM):   end;
1068653   +
1068654   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1068655   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1068656   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1068657   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1068658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068660   +end;
MPRINT(EM_DIAGRAM):   end;
1068661   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068663   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1068664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068665   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068666   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1068667   +   end;
MPRINT(EM_DIAGRAM):   end;
1068668   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068669   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1068670   +   end;
MPRINT(EM_DIAGRAM):   end;
1068671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068672   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1068673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068675   +   end;
MPRINT(EM_DIAGRAM):   end;
1068676   +end;
MPRINT(EM_DIAGRAM):   end;
1068677   +
1068678   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1068679   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1068680   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1068681   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1068682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068684   +end;
MPRINT(EM_DIAGRAM):   end;
1068685   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068686   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068687   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1068688   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068689   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068690   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1068691   +   end;
MPRINT(EM_DIAGRAM):   end;
1068692   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068693   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1068694   +   end;
MPRINT(EM_DIAGRAM):   end;
1068695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068696   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1068697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068699   +   end;
MPRINT(EM_DIAGRAM):   end;
1068700   +end;
MPRINT(EM_DIAGRAM):   end;
1068701   +
1068702   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1068703   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1068704   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1068705   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1068706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068708   +end;
MPRINT(EM_DIAGRAM):   end;
1068709   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068710   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068711   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1068712   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068713   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068714   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1068715   +   end;
MPRINT(EM_DIAGRAM):   end;
1068716   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068717   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1068718   +   end;
MPRINT(EM_DIAGRAM):   end;
1068719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068720   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1068721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068723   +   end;
MPRINT(EM_DIAGRAM):   end;
1068724   +end;
MPRINT(EM_DIAGRAM):   end;
1068725   +
1068726   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1068727   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1068728   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1068729   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1068730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068732   +end;
MPRINT(EM_DIAGRAM):   end;
1068733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068735   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1068736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068738   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1068739   +   end;
MPRINT(EM_DIAGRAM):   end;
1068740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068741   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1068742   +   end;
MPRINT(EM_DIAGRAM):   end;
1068743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068744   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1068745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068747   +   end;
MPRINT(EM_DIAGRAM):   end;
1068748   +end;
MPRINT(EM_DIAGRAM):   end;
1068749   +
1068750   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1068751   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1068752   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1068753   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1068754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068756   +end;
MPRINT(EM_DIAGRAM):   end;
1068757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068759   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1068760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1068762   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1068763   +   end;
MPRINT(EM_DIAGRAM):   end;
1068764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1068765   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1068766   +   end;
MPRINT(EM_DIAGRAM):   end;
1068767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068768   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1068769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068771   +   end;
MPRINT(EM_DIAGRAM):   end;
1068772   +end;
MPRINT(EM_DIAGRAM):   end;
1068773   +
1068774   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1068775   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1068776   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1068777   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1068778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068780   +end;
MPRINT(EM_DIAGRAM):   end;
1068781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1068783   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1068784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068785   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1068786   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1068787   +   end;
MPRINT(EM_DIAGRAM):   end;
1068788   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1068789   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1068790   +   end;
MPRINT(EM_DIAGRAM):   end;
1068791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068792   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1068793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068795   +   end;
MPRINT(EM_DIAGRAM):   end;
1068796   +end;
MPRINT(EM_DIAGRAM):   end;
1068797   +
1068798   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1068799   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1068800   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1068801   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1068802   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1068803   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1068804   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1068805   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1068806   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1068807   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1068808   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1068809   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1068810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068812   +end;
MPRINT(EM_DIAGRAM):   end;
1068813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068814   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1068815   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1068816   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068817   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1068818   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1068819   +   end;
MPRINT(EM_DIAGRAM):   end;
1068820   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1068821   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1068822   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1068823   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1068824   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1068825   +   end;
MPRINT(EM_DIAGRAM):   end;
1068826   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1068827   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1068828   +   end;
MPRINT(EM_DIAGRAM):   end;
1068829   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1068830   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1068831   +   end;
MPRINT(EM_DIAGRAM):   end;
1068832   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1068833   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1068834   +   end;
MPRINT(EM_DIAGRAM):   end;
1068835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068836   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1068837   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1068838   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1068839   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1068840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068842   +   end;
MPRINT(EM_DIAGRAM):   end;
1068843   +end;
MPRINT(EM_DIAGRAM):   end;
1068844   +
1068845   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1068846   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1068847   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1068848   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1068849   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1068850   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1068851   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1068852   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1068853   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1068854   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1068855   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1068856   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1068857   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1068858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1068859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068860   +end;
MPRINT(EM_DIAGRAM):   end;
1068861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1068862   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1068863   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1068864   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1068865   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1068866   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1068867   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1068868   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1068869   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1068870   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1068871   +         end;
MPRINT(EM_DIAGRAM):   end;
1068872   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1068873   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1068874   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1068875   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1068876   +            end;
MPRINT(EM_DIAGRAM):   end;
1068877   +         end;
MPRINT(EM_DIAGRAM):   end;
1068878   +      end;
MPRINT(EM_DIAGRAM):   end;
1068879   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1068880   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1068881   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1068882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1068883   +         end;
MPRINT(EM_DIAGRAM):   end;
1068884   +      end;
MPRINT(EM_DIAGRAM):   end;
1068885   +   end;
MPRINT(EM_DIAGRAM):   end;
1068886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1068887   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1068888   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1068889   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1068890   +      end;
MPRINT(EM_DIAGRAM):   end;
1068891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1068892   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1068893   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1068894   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1068895   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1068896   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1068897   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1068898   +         end;
MPRINT(EM_DIAGRAM):   end;
1068899   +      end;
MPRINT(EM_DIAGRAM):   end;
1068900   +   end;
MPRINT(EM_DIAGRAM):   end;
1068901   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1068902   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1068903   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1068904   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1068905   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1068906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1068907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068908   +   end;
MPRINT(EM_DIAGRAM):   end;
1068909   +end;
MPRINT(EM_DIAGRAM):   end;
1068910   +
1068911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068912   +*** Checking missing input Interval
1068913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1068914   +
1068915   +IF NMISS(
1068916   +   AcceptedCmpTotal ,
1068917   +   Age ,
1068918   +   Frq ,
1068919   +   Income ,
1068920   +   Kidhome ,
1068921   +   MntFishProducts ,
1068922   +   MntFruits ,
1068923   +   MntGoldProds ,
1068924   +   MntSweetProducts ,
1068925   +   MonthsAsCustomer ,
1068926   +   NumDealsPurchases ,
1068927   +   NumWebVisitsMonth ,
1068928   +   RFMstat ,
1068929   +   RMntFrq ,
1068930   +   Recency ,
1068931   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1068932   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1068933   +
1068934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1068935   +END;
MPRINT(EM_DIAGRAM):   END;
1068936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068937   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1068938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1068939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1068940   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1068941   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1068942   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1068943   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1068944   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1068945   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1068946   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1068947   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1068948   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1068949   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1068950   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1068951   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1068952   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1068953   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1068954   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1068955   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1068956   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1068957   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1068958   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1068959   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1068960   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1068961   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1068962   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1068963   +END;
MPRINT(EM_DIAGRAM):   END;
1068964   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1068965   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1068966   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1068967   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1068968   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1068969   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1068970   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1068971   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1068972   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1068973   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1068974   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1068975   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1068976   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1068977   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1068978   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1068979   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1068980   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1068981   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1068982   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1068983   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1068984   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1068985   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1068986   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1068987   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1068988   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1068989   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1068990   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1068991   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1068992   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1068993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1068994   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1068995   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1068996   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1068997   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1068998   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1068999   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1069000   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1069001   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1069002   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1069003   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1069004   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1069005   +END;
MPRINT(EM_DIAGRAM):   END;
1069006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069007   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1069008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069010   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1069011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069013   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1069014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1069016   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1069017   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1069018   +        S_Income  +    -0.29829037747286 * S_Kidhome
1069019   +          +    -0.18720823453547 * S_MntFishProducts
1069020   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1069021   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1069022   +          +    -0.06646294977493 * S_MonthsAsCustomer
1069023   +          +    -0.37026551859537 * S_NumDealsPurchases
1069024   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1069025   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1069026   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1069027   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome +
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 *
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 *
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 *
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq +
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1069028   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1069029   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1069030   +        S_Income  +    -0.83201267605135 * S_Kidhome
1069031   +          +    -0.09483355610222 * S_MntFishProducts
1069032   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1069033   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1069034   +          +     0.36008195182034 * S_MonthsAsCustomer
1069035   +          +    -0.13663022832818 * S_NumDealsPurchases
1069036   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1069037   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1069038   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1069039   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome +
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 *
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth +
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency +
-0.85691575464107 * S_Teenhome ;
1069040   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1069041   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1069042   +        S_Income  +     0.25780281448124 * S_Kidhome
1069043   +          +     0.04440164182166 * S_MntFishProducts
1069044   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1069045   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1069046   +          +     0.11601256317603 * S_MonthsAsCustomer
1069047   +          +    -0.06382091961731 * S_NumDealsPurchases
1069048   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1069049   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1069050   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1069051   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age +
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome +
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 *
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth +
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency +
0.12723983872652 * S_Teenhome ;
1069052   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1069053   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1069054   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1069055   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1069056   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 *
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 +
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 *
HigherEducationBinary0 ;
1069057   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1069058   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1069059   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1069060   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1069061   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 *
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 +
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 *
HigherEducationBinary0 ;
1069062   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1069063   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1069064   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1069065   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1069066   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 *
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 +
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 *
HigherEducationBinary0 ;
1069067   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1069068   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1069069   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1069070   +          +     0.18754186259114 * Marital_StatusDivorced
1069071   +          +    -0.11988223819284 * Marital_StatusMarried
1069072   +          +    -0.02283707816223 * Marital_StatusSingle
1069073   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 *
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried +
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1069074   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1069075   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1069076   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1069077   +          +    -0.28983318463941 * Marital_StatusDivorced
1069078   +          +    -0.74851149560881 * Marital_StatusMarried
1069079   +          +      0.7618336919202 * Marital_StatusSingle
1069080   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 *
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried +
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1069081   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1069082   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1069083   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1069084   +          +    -0.33639004627791 * Marital_StatusDivorced
1069085   +          +     0.12327415586833 * Marital_StatusMarried
1069086   +          +      0.0060971946845 * Marital_StatusSingle
1069087   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 *
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried +
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1069088   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1069089   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1069090   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1069091   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1069092   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1069093   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1069094   +END;
MPRINT(EM_DIAGRAM):   END;
1069095   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1069096   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1069097   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1069098   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1069099   +END;
MPRINT(EM_DIAGRAM):   END;
1069100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069101   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1069102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1069104   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1069105   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 +
-6.47403374532058 * H13 ;
1069106   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1069107   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1069108   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1069109   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1069110   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1069111   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1069112   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1069113   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1069114   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1069115   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1069116   +END;
MPRINT(EM_DIAGRAM):   END;
1069117   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1069118   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1069119   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1069120   +END;
MPRINT(EM_DIAGRAM):   END;
1069121   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1069122   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1069123   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1069124   +END;
MPRINT(EM_DIAGRAM):   END;
1069125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069126   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1069127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069128   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1069129   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1069130   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1069131   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1069132   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1069133   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1069134   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1069135   +END;
MPRINT(EM_DIAGRAM):   END;
1069136   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1069137   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1069138   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1069139   +drop
1069140   +H11
1069141   +H12
1069142   +H13
1069143   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1069144   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1069145    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1069146    quit;
1069147    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1069148    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1069149    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1069150    retain ID 2 Node "Neural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural38";
1069151    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1069152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069153    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1069154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069156    proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
1069157    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069159    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069160    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1069161    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1069162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069163    proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
1069164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1069165    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1069166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069169    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1069170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069171    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069172    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1069173    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1069173  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 937 rows and 5 columns.
 
1069174    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069175    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1069176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 937 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 937 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069177    filename _pref
1069177  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1069178    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1069179    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1069180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1069181   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1069182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1069183   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1069184   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1069185   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1069186    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1069187    quit;
1069188    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1069189    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1069190    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1069191    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1069192    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1069193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069194    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1069195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069197    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1069198    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069200    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069201    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1069202    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1069203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069204    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1069205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1069206    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1069207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069210    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1069211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069212    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069213    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1069214    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1069214  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1069215    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069216    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1069217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069218    filename _pref
1069218  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1069219    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1069220    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1069221   +
1069222   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1069223   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1069223  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1069224   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1069225   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1069226   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1069227   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1069228   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1069229    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1069230    quit;
1069231    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1069232    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1069233    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1069234    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1069235    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1069236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069237    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1069238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069240    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1069241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069244    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1069245    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1069246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069247    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1069248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069249    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1069250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069253    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1069254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069255    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069256    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1069257    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1069257  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1069258    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069259    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1069260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 980 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069261    filename _pref
1069261  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1069262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1069263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1069264   +
1069265   +
1069266   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1069267   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1069268   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1069269   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1069270   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1069271   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069272   +
1069273   +
1069274   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1069275   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1069276   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1069277   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1069278   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1069279   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
The SAS System
 
1069280   +
1069281   +
1069282   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1069283   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1069284   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1069285   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1069286   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1069287   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069288   +
1069289   +
1069290   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1069291   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1069292   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1069293   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1069294   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1069295   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069296   +
1069297   +
1069298   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1069299   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1069300   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1069301   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1069302   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1069303   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069304   +
1069305   +
1069306   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1069307   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1069308   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1069309   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1069310   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1069311   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069312   +
1069313   +
1069314   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1069315   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1069316   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1069317   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1069318   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1069319   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069320   +
1069321   +
1069322   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1069323   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1069324   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1069325   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1069326   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1069327   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1069328   +if
1069329   +_FILTERNORM1 not in ( '.')
1069330   + and
1069331   +_FILTERNORM2 not in ( '.')
1069332   + and
1069333   +_FILTERNORM3 not in ( '.')
1069334   + and
1069335   +_FILTERNORM4 not in ( '.')
1069336   + and
1069337   +_FILTERNORM5 not in ( '.')
1069338   + and
1069339   +_FILTERNORM6 not in ( '.')
1069340   + and
1069341   +_FILTERNORM7 not in ( ' ')
1069342   + and
1069343   +_FILTERNORM8 not in ( ' ')
1069344   +and
1069345   +( Dt_Customer ne .)
1069346   +and ( Income ne . and (Income<=107000))
1069347   +and ( Kidhome ne .)
1069348   +and ( MntFishProducts ne .)
1069349   +and ( MntFruits ne .)
1069350   +and ( MntGoldProds ne .)
1069351   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1069352   +and ( MntSweetProducts ne .)
1069353   +and ( MntWines ne .)
1069354   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1069355   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1069356   +and ( NumStorePurchases ne .)
1069357   +and ( NumWebPurchases ne .)
1069358   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1069359   +and ( Recency ne .)
1069360   +and ( Teenhome ne .)
1069361   +and ( Year_Birth ne .)
1069362   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1069363   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1069364   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1069365   +end;
MPRINT(EM_DIAGRAM):   end;
1069366   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1069367   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1069368    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1069369    quit;
1069370    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1069371    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1069372    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1069373    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1069374    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1069375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069376    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1069377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069379    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1069380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069383    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1069384    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1069385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069386    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1069387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1069388    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1069389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1069392    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1069393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1069394    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1069396    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1069396  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1069397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069398    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1069399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1046 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069400    %macro varDept(fcmpdata=,id=);
1069401    %global nobs&id scoreFlag&id;
1069402    %let scoreFlag&id = 0;
1069403    %if &id=1 or ^&fcmpStart %then %do;
1069404    proc sort data=&fcmpdata out=_temp&id nodupkey;
1069405    by NAME;
1069406    where id=&id and LHS in( %let j=1;
1069407    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1069408    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1069409    "&var" %let j = %eval(&j+1);
1069410    %end;
1069411    );
1069412    run;
1069413    %let dsid = %sysfunc(open(_temp&id));
1069414    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1069415    %let dsid = %sysfunc(close(&dsid));
1069416    %if &&nobs&id %then %do;
1069417    %let scoreFlag&id = 1;
1069418    %let fcmpStart = 1;
1069419    %end;
1069420    %else %let fcmpStart = 0;
1069421    %end;
1069422    %else %do;
1069423    proc sort data=&fcmpdata out=_tempid;
1069424    where id=&id;
1069425    by LHS;
1069426    run;
1069427    %let dsid = %sysfunc(open(_tempid));
1069428    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1069429    %let dsid = %sysfunc(close(&dsid));
1069430    %if ^&&nobs&id %then %do;
1069431    proc datasets lib=work nolist;
1069432    delete _tempid;
1069433    run;
1069434    quit;
1069435    %end;
1069436    %else %do;
1069437    data _tempAll;
1069438    set %let j=%eval(&id-1);
1069439    %do x=1 %to &j;
1069440    %if &&nobs&x %then %do;
1069441    _temp&x %end;
1069442    %end;
1069443    ;
1069444    run;
1069445    proc sql;
1069446    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1069446  ! work._tempid p2 where p.name=p2.lhs;
1069447    quit;
1069448    data _temp&id;
1069449    set _temp&id;
1069450    where LHS ne '' and NAME ne '' and Node ne '';
1069451    run;
1069452    proc datasets lib=work nolist;
1069453    delete _tempAll;
1069454    run;
1069455    %let dsid = %sysfunc(open(_temp&id));
1069456    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1069457    %let dsid = %sysfunc(close(&dsid));
1069458    %if ^&&nobs&id %then %do;
1069459    proc datasets lib=work nolist;
1069460    delete _temp&id;
1069461    run;
1069462    quit;
1069463    %end;
1069464    %else %do;
1069465    %let scoreFlag&id = 1;
1069466    data _temp&id;
1069467    set _temp&id;
1069468    where LHS ne NAME and node ne '';
1069469    run;
1069470    %let dsid = %sysfunc(open(_temp&id));
1069471    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1069472    %let dsid = %sysfunc(close(&dsid));
1069473    %if ^&&nobs&id %then %do;
1069474    proc datasets lib=work nolist;
1069475    delete _temp&id;
1069476    run;
1069477    quit;
1069478    %end;
1069479    %else %do;
1069480    proc sort data=_temp&id nodupkey;
1069481    by LHS NAME;
1069482    run;
1069483    %end;
1069484    %end;
1069485    %end;
1069486    %end;
1069487    %mend varDept;
1069488    %macro optCode(outdata=fcmpdata);
1069489    %global fcmpStart;
1069490    %let fcmpStart = 0;
1069491    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1069492    %let NumNodes=9;
1069493    %do k=1 %to &NumNodes;
1069494    %vardept(fcmpdata=&outdata, id=&k);
1069495    %end;
1069496    %mend optCode;
1069497    %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1069498    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1069499    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1069500    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1069501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069502    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1069503    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1069504    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1069505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1069506    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1069507    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1069507  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1069508    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1069509    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1069510    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1069511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1069512    filename _pref
1069512  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
1069513    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1069514    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
1069515   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1069516   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1069517   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1069518   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1069519   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1069520   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1069521   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1069522   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1069523   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1069524   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1069525   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1069526   +LENGTH _WARN_ $4
1069527   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1069528   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1069529   +
1069530   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1069531   +
1069532   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1069533   +
1069534   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1069535   +
1069536   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1069537   +
1069538   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1069539   +
1069540   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1069541   +
1069542   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1069543   +
1069544   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1069545   +
1069546   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1069547   +
1069548   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1069549   +
1069550   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1069551   +
1069552   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1069553   +
1069554   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1069555   +
1069556   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1069557   +
1069558   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1069559   +
1069560   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1069561   +
1069562   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1069563   +
1069564   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1069565   +
1069566   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1069567   +
1069568   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1069569   +
1069570   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1069571   +
1069572   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1069573   +
1069574   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1069575   +
1069576   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1069577   +
1069578   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1069579   +
1069580   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1069581   +
1069582   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1069583   +
1069584   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1069585   +
1069586   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1069587   +
1069588   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1069589   +
1069590   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1069591   +
1069592   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1069593   +
1069594   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1069595   +
1069596   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1069597   +
1069598   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1069599   +
1069600   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1069601   +
1069602   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1069603   +
1069604   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1069605   +
1069606   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1069607   +
1069608   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1069609   +
1069610   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1069611   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1069612   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1069613   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1069614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069616   +end;
MPRINT(EM_DIAGRAM):   end;
1069617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069619   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1069620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069621   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069622   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1069623   +   end;
MPRINT(EM_DIAGRAM):   end;
1069624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069625   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1069626   +   end;
MPRINT(EM_DIAGRAM):   end;
1069627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069628   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1069629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069631   +   end;
MPRINT(EM_DIAGRAM):   end;
1069632   +end;
MPRINT(EM_DIAGRAM):   end;
1069633   +
1069634   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1069635   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1069636   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1069637   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1069638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069640   +end;
MPRINT(EM_DIAGRAM):   end;
1069641   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069642   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069643   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1069644   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069645   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069646   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1069647   +   end;
MPRINT(EM_DIAGRAM):   end;
1069648   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069649   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1069650   +   end;
MPRINT(EM_DIAGRAM):   end;
1069651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069652   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1069653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069655   +   end;
MPRINT(EM_DIAGRAM):   end;
1069656   +end;
MPRINT(EM_DIAGRAM):   end;
1069657   +
1069658   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1069659   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1069660   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1069661   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1069662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069664   +end;
MPRINT(EM_DIAGRAM):   end;
1069665   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069667   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1069668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069669   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069670   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1069671   +   end;
MPRINT(EM_DIAGRAM):   end;
1069672   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069673   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1069674   +   end;
MPRINT(EM_DIAGRAM):   end;
1069675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069676   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1069677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069679   +   end;
MPRINT(EM_DIAGRAM):   end;
1069680   +end;
MPRINT(EM_DIAGRAM):   end;
1069681   +
1069682   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1069683   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1069684   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1069685   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1069686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069688   +end;
MPRINT(EM_DIAGRAM):   end;
1069689   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069690   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069691   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1069692   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069693   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069694   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1069695   +   end;
MPRINT(EM_DIAGRAM):   end;
1069696   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069697   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1069698   +   end;
MPRINT(EM_DIAGRAM):   end;
1069699   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069700   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1069701   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069702   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069703   +   end;
MPRINT(EM_DIAGRAM):   end;
1069704   +end;
MPRINT(EM_DIAGRAM):   end;
1069705   +
1069706   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1069707   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1069708   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1069709   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1069710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069712   +end;
MPRINT(EM_DIAGRAM):   end;
1069713   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069715   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1069716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069718   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1069719   +   end;
MPRINT(EM_DIAGRAM):   end;
1069720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069721   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1069722   +   end;
MPRINT(EM_DIAGRAM):   end;
1069723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069724   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1069725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069727   +   end;
MPRINT(EM_DIAGRAM):   end;
1069728   +end;
MPRINT(EM_DIAGRAM):   end;
1069729   +
1069730   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1069731   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1069732   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1069733   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1069734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069736   +end;
MPRINT(EM_DIAGRAM):   end;
1069737   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069739   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1069740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1069742   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1069743   +   end;
MPRINT(EM_DIAGRAM):   end;
1069744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1069745   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1069746   +   end;
MPRINT(EM_DIAGRAM):   end;
1069747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069748   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1069749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069751   +   end;
MPRINT(EM_DIAGRAM):   end;
1069752   +end;
MPRINT(EM_DIAGRAM):   end;
1069753   +
1069754   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1069755   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1069756   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1069757   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1069758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069760   +end;
MPRINT(EM_DIAGRAM):   end;
1069761   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1069763   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1069764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069765   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1069766   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1069767   +   end;
MPRINT(EM_DIAGRAM):   end;
1069768   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1069769   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1069770   +   end;
MPRINT(EM_DIAGRAM):   end;
1069771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069772   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1069773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069775   +   end;
MPRINT(EM_DIAGRAM):   end;
1069776   +end;
MPRINT(EM_DIAGRAM):   end;
1069777   +
1069778   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1069779   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1069780   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1069781   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1069782   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1069783   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1069784   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1069785   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1069786   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1069787   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1069788   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1069789   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1069790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069792   +end;
MPRINT(EM_DIAGRAM):   end;
1069793   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069794   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1069795   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1069796   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069797   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1069798   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1069799   +   end;
MPRINT(EM_DIAGRAM):   end;
1069800   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1069801   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1069802   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1069803   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1069804   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1069805   +   end;
MPRINT(EM_DIAGRAM):   end;
1069806   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1069807   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1069808   +   end;
MPRINT(EM_DIAGRAM):   end;
1069809   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1069810   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1069811   +   end;
MPRINT(EM_DIAGRAM):   end;
1069812   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1069813   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1069814   +   end;
MPRINT(EM_DIAGRAM):   end;
1069815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069816   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1069817   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1069818   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1069819   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1069820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069822   +   end;
MPRINT(EM_DIAGRAM):   end;
1069823   +end;
MPRINT(EM_DIAGRAM):   end;
1069824   +
1069825   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1069826   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1069827   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1069828   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1069829   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1069830   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1069831   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1069832   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1069833   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1069834   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1069835   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1069836   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1069837   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1069838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1069839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069840   +end;
MPRINT(EM_DIAGRAM):   end;
1069841   +else do;
MPRINT(EM_DIAGRAM):   else do;
1069842   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1069843   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1069844   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1069845   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1069846   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1069847   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1069848   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1069849   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1069850   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1069851   +         end;
MPRINT(EM_DIAGRAM):   end;
1069852   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1069853   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1069854   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1069855   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1069856   +            end;
MPRINT(EM_DIAGRAM):   end;
1069857   +         end;
MPRINT(EM_DIAGRAM):   end;
1069858   +      end;
MPRINT(EM_DIAGRAM):   end;
1069859   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1069860   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1069861   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1069862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1069863   +         end;
MPRINT(EM_DIAGRAM):   end;
1069864   +      end;
MPRINT(EM_DIAGRAM):   end;
1069865   +   end;
MPRINT(EM_DIAGRAM):   end;
1069866   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1069867   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1069868   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1069869   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1069870   +      end;
MPRINT(EM_DIAGRAM):   end;
1069871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1069872   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1069873   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1069874   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1069875   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1069876   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1069877   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1069878   +         end;
MPRINT(EM_DIAGRAM):   end;
1069879   +      end;
MPRINT(EM_DIAGRAM):   end;
1069880   +   end;
MPRINT(EM_DIAGRAM):   end;
1069881   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1069882   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1069883   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1069884   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1069885   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1069886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1069887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069888   +   end;
MPRINT(EM_DIAGRAM):   end;
1069889   +end;
MPRINT(EM_DIAGRAM):   end;
1069890   +
1069891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069892   +*** Checking missing input Interval
1069893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1069894   +
1069895   +IF NMISS(
1069896   +   AcceptedCmpTotal ,
1069897   +   Age ,
1069898   +   Frq ,
1069899   +   Income ,
1069900   +   Kidhome ,
1069901   +   MntFishProducts ,
1069902   +   MntFruits ,
1069903   +   MntGoldProds ,
1069904   +   MntSweetProducts ,
1069905   +   MonthsAsCustomer ,
1069906   +   NumDealsPurchases ,
1069907   +   NumWebVisitsMonth ,
1069908   +   RFMstat ,
1069909   +   RMntFrq ,
1069910   +   Recency ,
1069911   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1069912   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1069913   +
1069914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1069915   +END;
MPRINT(EM_DIAGRAM):   END;
1069916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069917   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1069918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1069920   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1069921   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1069922   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1069923   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1069924   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1069925   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1069926   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1069927   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1069928   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1069929   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1069930   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1069931   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1069932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1069933   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1069934   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1069935   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1069936   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1069937   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1069938   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1069939   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1069940   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1069941   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1069942   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1069943   +END;
MPRINT(EM_DIAGRAM):   END;
1069944   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1069945   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1069946   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1069947   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1069948   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1069949   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1069950   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1069951   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1069952   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1069953   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1069954   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1069955   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1069956   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1069957   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1069958   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1069959   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1069960   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1069961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1069962   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1069963   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1069964   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1069965   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1069966   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1069967   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1069968   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1069969   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1069970   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1069971   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1069972   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1069973   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1069974   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1069975   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1069976   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1069977   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1069978   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1069979   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1069980   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1069981   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1069982   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1069983   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1069984   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1069985   +END;
MPRINT(EM_DIAGRAM):   END;
1069986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069987   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1069988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069990   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1069991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069993   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1069994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1069995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1069996   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1069997   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1069998   +        S_Income  +     0.39869341630865 * S_Kidhome
1069999   +          +    -0.04263586382867 * S_MntFishProducts
1070000   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1070001   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1070002   +          +    -0.14308588367026 * S_MonthsAsCustomer
1070003   +          +    -0.01053346972758 * S_NumDealsPurchases
1070004   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1070005   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1070006   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1070007   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age +
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome +
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 *
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth +
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency +
0.55541282723709 * S_Teenhome ;
1070008   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1070009   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1070010   +        S_Income  +     0.31514301668626 * S_Kidhome
1070011   +          +    -0.05723808748191 * S_MntFishProducts
1070012   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1070013   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1070014   +          +    -0.48738730918684 * S_MonthsAsCustomer
1070015   +          +     0.31545795225489 * S_NumDealsPurchases
1070016   +          +     0.24686603252864 * S_NumWebVisitsMonth
1070017   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1070018   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1070019   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome +
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 *
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 *
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 *
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq +
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1070020   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1070021   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1070022   +        S_Income  +    -0.48452563006855 * S_Kidhome
1070023   +          +      0.1638851163007 * S_MntFishProducts
1070024   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1070025   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1070026   +          +    -0.09008316729574 * S_MonthsAsCustomer
1070027   +          +    -0.45452883452999 * S_NumDealsPurchases
1070028   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1070029   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1070030   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1070031   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome +
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 *
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 *
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 *
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq +
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1070032   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1070033   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1070034   +        S_Income  +    -0.62959343200613 * S_Kidhome
1070035   +          +    -0.08953561593231 * S_MntFishProducts
1070036   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1070037   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1070038   +          +    -0.04786752357029 * S_MonthsAsCustomer
1070039   +          +     0.01658790214447 * S_NumDealsPurchases
1070040   +          +     0.60508225698649 * S_NumWebVisitsMonth
1070041   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1070042   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1070043   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age +
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome +
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 *
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 *
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 *
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq +
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1070044   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1070045   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1070046   +        S_Income  +    -0.02417847760857 * S_Kidhome
1070047   +          +    -0.15499190740194 * S_MntFishProducts
1070048   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1070049   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1070050   +          +     0.03507116553703 * S_MonthsAsCustomer
1070051   +          +    -0.55190381693021 * S_NumDealsPurchases
1070052   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1070053   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1070054   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1070055   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome +
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 *
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 *
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 *
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq +
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1070056   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1070057   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1070058   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1070059   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1070060   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 *
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 +
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 *
HigherEducationBinary0 ;
1070061   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1070062   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1070063   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1070064   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1070065   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 *
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 +
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 *
HigherEducationBinary0 ;
1070066   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1070067   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1070068   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1070069   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1070070   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 *
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 +
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 *
HigherEducationBinary0 ;
1070071   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1070072   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1070073   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1070074   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1070075   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 *
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 +
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 *
HigherEducationBinary0 ;
1070076   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1070077   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1070078   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1070079   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1070080   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 *
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 +
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 *
HigherEducationBinary0 ;
1070081   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1070082   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1070083   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1070084   +          +    -0.41654638301737 * Marital_StatusDivorced
1070085   +          +     0.65956207700583 * Marital_StatusMarried
1070086   +          +    -0.52573042887166 * Marital_StatusSingle
1070087   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 *
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried +
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1070088   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1070089   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1070090   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1070091   +          +    -0.32313846862799 * Marital_StatusDivorced
1070092   +          +     0.15910539009887 * Marital_StatusMarried
1070093   +          +     0.28781821946114 * Marital_StatusSingle
1070094   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 *
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster +
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried +
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1070095   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1070096   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1070097   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1070098   +          +    -0.06481096024989 * Marital_StatusDivorced
1070099   +          +    -0.01184060710261 * Marital_StatusMarried
1070100   +          +    -0.04932258474026 * Marital_StatusSingle
1070101   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 *
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried +
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1070102   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1070103   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1070104   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1070105   +          +      0.2062190716357 * Marital_StatusDivorced
1070106   +          +      -0.523160668609 * Marital_StatusMarried
1070107   +          +     0.50687401816278 * Marital_StatusSingle
1070108   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 *
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster +
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried +
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1070109   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1070110   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1070111   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1070112   +          +     -0.1386176879533 * Marital_StatusDivorced
1070113   +          +    -0.17611433777439 * Marital_StatusMarried
1070114   +          +     0.09908348348999 * Marital_StatusSingle
1070115   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 *
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster +
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried +
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1070116   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1070117   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1070118   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1070119   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1070120   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1070121   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1070122   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1070123   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1070124   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1070125   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1070126   +END;
MPRINT(EM_DIAGRAM):   END;
1070127   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1070128   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1070129   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1070130   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1070131   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1070132   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1070133   +END;
MPRINT(EM_DIAGRAM):   END;
1070134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070135   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1070136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1070138   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1070139   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1070140   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 +
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1070141   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1070142   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1070143   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1070144   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1070145   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1070146   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1070147   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1070148   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1070149   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1070150   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1070151   +END;
MPRINT(EM_DIAGRAM):   END;
1070152   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1070153   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1070154   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1070155   +END;
MPRINT(EM_DIAGRAM):   END;
1070156   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1070157   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1070158   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1070159   +END;
MPRINT(EM_DIAGRAM):   END;
1070160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070161   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1070162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070163   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1070164   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1070165   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1070166   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1070167   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1070168   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1070169   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1070170   +END;
MPRINT(EM_DIAGRAM):   END;
1070171   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1070172   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1070173   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1070174   +drop
1070175   +H11
1070176   +H12
1070177   +H13
1070178   +H14
1070179   +H15
1070180   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1070181   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1070182    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1070183    quit;
1070184    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1070185    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1070186    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1070187    retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
1070188    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1070189    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070190    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1070191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070193    proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
1070194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070196    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070197    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1070198    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1070199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070200    proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
1070201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1070202    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1070203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070206    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1070207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070208    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070209    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1070210    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1070210  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.
 
1070211    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070212    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1070213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070214    filename _pref
1070214  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1070215    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1070216    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1070217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1070218   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1070219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1070220   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1070221   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1070222   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1070223    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1070224    quit;
1070225    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1070226    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1070227    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1070228    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1070229    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1070230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070231    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1070232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070234    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1070235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070237    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070238    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1070239    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1070240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070241    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1070242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1070243    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1070244    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070245    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070246    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070247    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1070248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070249    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070250    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1070251    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1070251  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1070252    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070253    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1070254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070255    filename _pref
1070255  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1070256    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1070257    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1070258   +
1070259   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1070260   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1070260  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1070261   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1070262   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1070263   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1070264   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1070265   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1070266    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1070267    quit;
1070268    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1070269    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1070270    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1070271    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1070272    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1070273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070274    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1070275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070277    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1070278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070279    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070280    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070281    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1070282    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1070283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070284    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1070285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070286    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1070287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070289    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070290    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1070291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070292    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070293    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1070294    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1070294  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1070295    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070296    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1070297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070298    filename _pref
1070298  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1070299    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1070300    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1070301   +
1070302   +
1070303   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1070304   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1070305   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1070306   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1070307   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1070308   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070309   +
1070310   +
1070311   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1070312   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1070313   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1070314   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1070315   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1070316   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070317   +
1070318   +
1070319   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1070320   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1070321   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1070322   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1070323   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1070324   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070325   +
1070326   +
1070327   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1070328   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1070329   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1070330   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1070331   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1070332   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070333   +
1070334   +
1070335   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1070336   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1070337   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1070338   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1070339   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1070340   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070341   +
1070342   +
1070343   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1070344   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1070345   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1070346   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1070347   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1070348   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070349   +
1070350   +
1070351   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1070352   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1070353   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1070354   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1070355   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1070356   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070357   +
1070358   +
1070359   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1070360   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1070361   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1070362   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1070363   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1070364   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1070365   +if
1070366   +_FILTERNORM1 not in ( '.')
1070367   + and
1070368   +_FILTERNORM2 not in ( '.')
1070369   + and
1070370   +_FILTERNORM3 not in ( '.')
1070371   + and
1070372   +_FILTERNORM4 not in ( '.')
1070373   + and
1070374   +_FILTERNORM5 not in ( '.')
1070375   + and
1070376   +_FILTERNORM6 not in ( '.')
1070377   + and
1070378   +_FILTERNORM7 not in ( ' ')
1070379   + and
1070380   +_FILTERNORM8 not in ( ' ')
1070381   +and
1070382   +( Dt_Customer ne .)
1070383   +and ( Income ne . and (Income<=107000))
1070384   +and ( Kidhome ne .)
1070385   +and ( MntFishProducts ne .)
1070386   +and ( MntFruits ne .)
1070387   +and ( MntGoldProds ne .)
1070388   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1070389   +and ( MntSweetProducts ne .)
1070390   +and ( MntWines ne .)
1070391   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1070392   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1070393   +and ( NumStorePurchases ne .)
1070394   +and ( NumWebPurchases ne .)
1070395   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1070396   +and ( Recency ne .)
1070397   +and ( Teenhome ne .)
1070398   +and ( Year_Birth ne .)
1070399   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1070400   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1070401   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1070402   +end;
MPRINT(EM_DIAGRAM):   end;
1070403   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1070404   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1070405    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1070406    quit;
1070407    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1070408    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1070409    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1070410    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1070411    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1070412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070413    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1070414    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070415    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070416    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1070417    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070418    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070419    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070420    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1070421    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1070422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070423    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1070424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1070425    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1070426    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070427    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070428    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1070429    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1070430    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1070431    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070432    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1070433    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1070433  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1070434    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070435    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1070436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070437    %macro varDept(fcmpdata=,id=);
1070438    %global nobs&id scoreFlag&id;
1070439    %let scoreFlag&id = 0;
1070440    %if &id=1 or ^&fcmpStart %then %do;
1070441    proc sort data=&fcmpdata out=_temp&id nodupkey;
1070442    by NAME;
1070443    where id=&id and LHS in( %let j=1;
1070444    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1070445    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1070446    "&var" %let j = %eval(&j+1);
1070447    %end;
1070448    );
1070449    run;
1070450    %let dsid = %sysfunc(open(_temp&id));
1070451    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1070452    %let dsid = %sysfunc(close(&dsid));
1070453    %if &&nobs&id %then %do;
1070454    %let scoreFlag&id = 1;
1070455    %let fcmpStart = 1;
1070456    %end;
1070457    %else %let fcmpStart = 0;
1070458    %end;
1070459    %else %do;
1070460    proc sort data=&fcmpdata out=_tempid;
1070461    where id=&id;
1070462    by LHS;
1070463    run;
1070464    %let dsid = %sysfunc(open(_tempid));
1070465    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1070466    %let dsid = %sysfunc(close(&dsid));
1070467    %if ^&&nobs&id %then %do;
1070468    proc datasets lib=work nolist;
1070469    delete _tempid;
1070470    run;
1070471    quit;
1070472    %end;
1070473    %else %do;
1070474    data _tempAll;
1070475    set %let j=%eval(&id-1);
1070476    %do x=1 %to &j;
1070477    %if &&nobs&x %then %do;
1070478    _temp&x %end;
1070479    %end;
1070480    ;
1070481    run;
1070482    proc sql;
1070483    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1070483  ! work._tempid p2 where p.name=p2.lhs;
1070484    quit;
1070485    data _temp&id;
1070486    set _temp&id;
1070487    where LHS ne '' and NAME ne '' and Node ne '';
1070488    run;
1070489    proc datasets lib=work nolist;
1070490    delete _tempAll;
1070491    run;
1070492    %let dsid = %sysfunc(open(_temp&id));
1070493    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1070494    %let dsid = %sysfunc(close(&dsid));
1070495    %if ^&&nobs&id %then %do;
1070496    proc datasets lib=work nolist;
1070497    delete _temp&id;
1070498    run;
1070499    quit;
1070500    %end;
1070501    %else %do;
1070502    %let scoreFlag&id = 1;
1070503    data _temp&id;
1070504    set _temp&id;
1070505    where LHS ne NAME and node ne '';
1070506    run;
1070507    %let dsid = %sysfunc(open(_temp&id));
1070508    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1070509    %let dsid = %sysfunc(close(&dsid));
1070510    %if ^&&nobs&id %then %do;
1070511    proc datasets lib=work nolist;
1070512    delete _temp&id;
1070513    run;
1070514    quit;
1070515    %end;
1070516    %else %do;
1070517    proc sort data=_temp&id nodupkey;
1070518    by LHS NAME;
1070519    run;
1070520    %end;
1070521    %end;
1070522    %end;
1070523    %end;
1070524    %mend varDept;
1070525    %macro optCode(outdata=fcmpdata);
1070526    %global fcmpStart;
1070527    %let fcmpStart = 0;
1070528    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1070529    %let NumNodes=9;
1070530    %do k=1 %to &NumNodes;
1070531    %vardept(fcmpdata=&outdata, id=&k);
1070532    %end;
1070533    %mend optCode;
1070534    %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1070535    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1070536    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1070537    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1070538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070539    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1070540    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1070541    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1070542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070543    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1070544    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1070544  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1070545    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1070546    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1070547    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1070548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1070549    filename _pref
1070549  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
1070550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1070551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
1070552   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1070553   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1070554   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1070555   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1070556   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1070557   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1070558   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1070559   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1070560   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1070561   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1070562   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1070563   +LENGTH _WARN_ $4
1070564   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1070565   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1070566   +
1070567   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1070568   +
1070569   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1070570   +
1070571   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1070572   +
1070573   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1070574   +
1070575   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1070576   +
1070577   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1070578   +
1070579   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1070580   +
1070581   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1070582   +
1070583   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1070584   +
1070585   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1070586   +
1070587   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1070588   +
1070589   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1070590   +
1070591   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1070592   +
1070593   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1070594   +
1070595   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1070596   +
1070597   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1070598   +
1070599   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1070600   +
1070601   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1070602   +
1070603   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1070604   +
1070605   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1070606   +
1070607   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1070608   +
1070609   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1070610   +
1070611   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1070612   +
1070613   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1070614   +
1070615   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1070616   +
1070617   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1070618   +
1070619   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1070620   +
1070621   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1070622   +
1070623   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1070624   +
1070625   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1070626   +
1070627   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1070628   +
1070629   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1070630   +
1070631   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1070632   +
1070633   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1070634   +
1070635   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1070636   +
1070637   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1070638   +
1070639   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1070640   +
1070641   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1070642   +
1070643   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1070644   +
1070645   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1070646   +
1070647   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1070648   +
1070649   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1070650   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1070651   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1070652   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1070653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070655   +end;
MPRINT(EM_DIAGRAM):   end;
1070656   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070657   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070658   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1070659   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070660   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070661   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1070662   +   end;
MPRINT(EM_DIAGRAM):   end;
1070663   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070664   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1070665   +   end;
MPRINT(EM_DIAGRAM):   end;
1070666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070667   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1070668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070670   +   end;
MPRINT(EM_DIAGRAM):   end;
1070671   +end;
MPRINT(EM_DIAGRAM):   end;
1070672   +
1070673   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1070674   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1070675   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1070676   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1070677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070679   +end;
MPRINT(EM_DIAGRAM):   end;
1070680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070682   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1070683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070684   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070685   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1070686   +   end;
MPRINT(EM_DIAGRAM):   end;
1070687   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070688   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1070689   +   end;
MPRINT(EM_DIAGRAM):   end;
1070690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070691   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1070692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070694   +   end;
MPRINT(EM_DIAGRAM):   end;
1070695   +end;
MPRINT(EM_DIAGRAM):   end;
1070696   +
1070697   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1070698   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1070699   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1070700   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1070701   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070703   +end;
MPRINT(EM_DIAGRAM):   end;
1070704   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070705   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070706   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1070707   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070708   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070709   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1070710   +   end;
MPRINT(EM_DIAGRAM):   end;
1070711   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070712   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1070713   +   end;
MPRINT(EM_DIAGRAM):   end;
1070714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070715   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1070716   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070717   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070718   +   end;
MPRINT(EM_DIAGRAM):   end;
1070719   +end;
MPRINT(EM_DIAGRAM):   end;
1070720   +
1070721   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1070722   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1070723   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1070724   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1070725   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070726   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070727   +end;
MPRINT(EM_DIAGRAM):   end;
1070728   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070729   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070730   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1070731   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070732   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070733   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1070734   +   end;
MPRINT(EM_DIAGRAM):   end;
1070735   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070736   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1070737   +   end;
MPRINT(EM_DIAGRAM):   end;
1070738   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070739   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1070740   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070741   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070742   +   end;
MPRINT(EM_DIAGRAM):   end;
1070743   +end;
MPRINT(EM_DIAGRAM):   end;
1070744   +
1070745   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1070746   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1070747   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1070748   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1070749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070751   +end;
MPRINT(EM_DIAGRAM):   end;
1070752   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070754   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1070755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070756   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070757   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1070758   +   end;
MPRINT(EM_DIAGRAM):   end;
1070759   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070760   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1070761   +   end;
MPRINT(EM_DIAGRAM):   end;
1070762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070763   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1070764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070766   +   end;
MPRINT(EM_DIAGRAM):   end;
1070767   +end;
MPRINT(EM_DIAGRAM):   end;
1070768   +
1070769   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1070770   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1070771   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1070772   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1070773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070775   +end;
MPRINT(EM_DIAGRAM):   end;
1070776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070778   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1070779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1070781   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1070782   +   end;
MPRINT(EM_DIAGRAM):   end;
1070783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1070784   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1070785   +   end;
MPRINT(EM_DIAGRAM):   end;
1070786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070787   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1070788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070790   +   end;
MPRINT(EM_DIAGRAM):   end;
1070791   +end;
MPRINT(EM_DIAGRAM):   end;
1070792   +
1070793   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1070794   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1070795   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1070796   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1070797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070799   +end;
MPRINT(EM_DIAGRAM):   end;
1070800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1070802   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1070803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070804   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1070805   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1070806   +   end;
MPRINT(EM_DIAGRAM):   end;
1070807   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1070808   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1070809   +   end;
MPRINT(EM_DIAGRAM):   end;
1070810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070811   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1070812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070814   +   end;
MPRINT(EM_DIAGRAM):   end;
1070815   +end;
MPRINT(EM_DIAGRAM):   end;
1070816   +
1070817   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1070818   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1070819   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1070820   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1070821   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1070822   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1070823   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1070824   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1070825   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1070826   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1070827   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1070828   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1070829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070831   +end;
MPRINT(EM_DIAGRAM):   end;
1070832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070833   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1070834   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1070835   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070836   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1070837   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1070838   +   end;
MPRINT(EM_DIAGRAM):   end;
1070839   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1070840   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1070841   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1070842   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1070843   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1070844   +   end;
MPRINT(EM_DIAGRAM):   end;
1070845   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1070846   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1070847   +   end;
MPRINT(EM_DIAGRAM):   end;
1070848   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1070849   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1070850   +   end;
MPRINT(EM_DIAGRAM):   end;
1070851   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1070852   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1070853   +   end;
MPRINT(EM_DIAGRAM):   end;
1070854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070855   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1070856   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1070857   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1070858   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1070859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070861   +   end;
MPRINT(EM_DIAGRAM):   end;
1070862   +end;
MPRINT(EM_DIAGRAM):   end;
1070863   +
1070864   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1070865   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1070866   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1070867   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1070868   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1070869   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1070870   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1070871   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1070872   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1070873   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1070874   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1070875   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1070876   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1070877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1070878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070879   +end;
MPRINT(EM_DIAGRAM):   end;
1070880   +else do;
MPRINT(EM_DIAGRAM):   else do;
1070881   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1070882   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1070883   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1070884   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1070885   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1070886   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1070887   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1070888   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1070889   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1070890   +         end;
MPRINT(EM_DIAGRAM):   end;
1070891   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1070892   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1070893   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1070894   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1070895   +            end;
MPRINT(EM_DIAGRAM):   end;
1070896   +         end;
MPRINT(EM_DIAGRAM):   end;
1070897   +      end;
MPRINT(EM_DIAGRAM):   end;
1070898   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1070899   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1070900   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1070901   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1070902   +         end;
MPRINT(EM_DIAGRAM):   end;
1070903   +      end;
MPRINT(EM_DIAGRAM):   end;
1070904   +   end;
MPRINT(EM_DIAGRAM):   end;
1070905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1070906   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1070907   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1070908   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1070909   +      end;
MPRINT(EM_DIAGRAM):   end;
1070910   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1070911   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1070912   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1070913   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1070914   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1070915   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1070916   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1070917   +         end;
MPRINT(EM_DIAGRAM):   end;
1070918   +      end;
MPRINT(EM_DIAGRAM):   end;
1070919   +   end;
MPRINT(EM_DIAGRAM):   end;
1070920   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1070921   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1070922   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1070923   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1070924   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1070925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1070926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070927   +   end;
MPRINT(EM_DIAGRAM):   end;
1070928   +end;
MPRINT(EM_DIAGRAM):   end;
1070929   +
1070930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070931   +*** Checking missing input Interval
1070932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1070933   +
1070934   +IF NMISS(
1070935   +   AcceptedCmpTotal ,
1070936   +   Age ,
1070937   +   Frq ,
1070938   +   Income ,
1070939   +   Kidhome ,
1070940   +   MntFishProducts ,
1070941   +   MntFruits ,
1070942   +   MntGoldProds ,
1070943   +   MntSweetProducts ,
1070944   +   MonthsAsCustomer ,
1070945   +   NumDealsPurchases ,
1070946   +   NumWebVisitsMonth ,
1070947   +   RFMstat ,
1070948   +   RMntFrq ,
1070949   +   Recency ,
1070950   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome ,
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer ,
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1070951   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1070952   +
1070953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1070954   +END;
MPRINT(EM_DIAGRAM):   END;
1070955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070956   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1070957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1070958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1070959   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1070960   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1070961   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1070962   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1070963   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1070964   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1070965   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1070966   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1070967   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1070968   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1070969   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1070970   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1070971   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1070972   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1070973   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1070974   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1070975   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1070976   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1070977   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1070978   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1070979   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1070980   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1070981   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1070982   +END;
MPRINT(EM_DIAGRAM):   END;
1070983   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1070984   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1070985   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1070986   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1070987   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1070988   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1070989   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1070990   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1070991   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1070992   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1070993   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1070994   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1070995   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1070996   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1070997   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1070998   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1070999   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1071000   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1071001   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1071002   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1071003   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1071004   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1071005   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1071006   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1071007   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1071008   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1071009   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1071010   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1071011   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1071012   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1071013   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1071014   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1071015   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1071016   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1071017   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1071018   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1071019   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1071020   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1071021   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1071022   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1071023   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1071024   +END;
MPRINT(EM_DIAGRAM):   END;
1071025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071026   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1071027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071029   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1071030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071032   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1071033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071034   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1071035   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1071036   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1071037   +        S_Income  +    -0.52684337240504 * S_Kidhome
1071038   +          +     0.07835956947085 * S_MntFishProducts
1071039   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1071040   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1071041   +          +    -0.44463888327841 * S_MonthsAsCustomer
1071042   +          +    -0.20310227710644 * S_NumDealsPurchases
1071043   +          +     0.06594467408568 * S_NumWebVisitsMonth
1071044   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1071045   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1071046   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome +
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 *
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 *
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 *
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq +
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1071047   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1071048   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1071049   +        S_Income  +     0.91025818069308 * S_Kidhome
1071050   +          +     0.26585860774761 * S_MntFishProducts
1071051   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1071052   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1071053   +          +    -0.12421403342454 * S_MonthsAsCustomer
1071054   +          +     0.66931066909347 * S_NumDealsPurchases
1071055   +          +     0.35050056776957 * S_NumWebVisitsMonth
1071056   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1071057   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1071058   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome +
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 *
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 *
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 *
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq +
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1071059   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1071060   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1071061   +        S_Income  +     0.63027536562783 * S_Kidhome
1071062   +          +     0.15303249164566 * S_MntFishProducts
1071063   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1071064   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1071065   +          +    -0.21006970062531 * S_MonthsAsCustomer
1071066   +          +      0.2955774677605 * S_NumDealsPurchases
1071067   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1071068   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1071069   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1071070   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome +
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 *
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 *
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 *
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq +
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1071071   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1071072   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1071073   +        S_Income  +    -0.00985947331416 * S_Kidhome
1071074   +          +    -0.27114701164817 * S_MntFishProducts
1071075   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1071076   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1071077   +          +    -0.02702818828921 * S_MonthsAsCustomer
1071078   +          +    -0.63381188911946 * S_NumDealsPurchases
1071079   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1071080   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1071081   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1071082   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome +
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 *
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 *
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 *
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq +
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1071083   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1071084   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1071085   +        S_Income  +    -0.24206929946772 * S_Kidhome
1071086   +          +    -0.19039689229491 * S_MntFishProducts
1071087   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1071088   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1071089   +          +     0.03815221487927 * S_MonthsAsCustomer
1071090   +          +    -0.43579024169696 * S_NumDealsPurchases
1071091   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1071092   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1071093   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1071094   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age +
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome +
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 *
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 *
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 *
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq +
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1071095   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1071096   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1071097   +        S_Income  +    -0.25736924536467 * S_Kidhome
1071098   +          +    -0.04400855145817 * S_MntFishProducts
1071099   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1071100   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1071101   +          +     0.00265986106691 * S_MonthsAsCustomer
1071102   +          +     0.27331919080312 * S_NumDealsPurchases
1071103   +          +     0.22836119952787 * S_NumWebVisitsMonth
1071104   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1071105   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1071106   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome +
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 *
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 *
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 *
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq +
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1071107   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1071108   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1071109   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1071110   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1071111   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 *
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 +
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 *
HigherEducationBinary0 ;
1071112   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1071113   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1071114   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1071115   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1071116   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 *
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 +
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 *
HigherEducationBinary0 ;
1071117   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1071118   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1071119   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1071120   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1071121   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 *
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 +
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 *
HigherEducationBinary0 ;
1071122   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1071123   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1071124   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1071125   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1071126   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 *
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 +
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 *
HigherEducationBinary0 ;
1071127   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1071128   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1071129   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1071130   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1071131   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 *
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 +
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 *
HigherEducationBinary0 ;
1071132   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1071133   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1071134   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1071135   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1071136   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 *
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 +
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 *
HigherEducationBinary0 ;
1071137   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1071138   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1071139   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1071140   +          +     0.12502276672336 * Marital_StatusDivorced
1071141   +          +    -0.02606508453741 * Marital_StatusMarried
1071142   +          +      0.0418850245266 * Marital_StatusSingle
1071143   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 *
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried +
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1071144   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1071145   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1071146   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1071147   +          +      0.1943860669795 * Marital_StatusDivorced
1071148   +          +     -0.1529596261268 * Marital_StatusMarried
1071149   +          +     0.24187461301348 * Marital_StatusSingle
1071150   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 *
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried +
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1071151   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1071152   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1071153   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1071154   +          +    -0.19677652422622 * Marital_StatusDivorced
1071155   +          +     0.75897106429478 * Marital_StatusMarried
1071156   +          +    -0.66692260284833 * Marital_StatusSingle
1071157   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 *
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried +
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1071158   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1071159   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1071160   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1071161   +          +    -0.18964222971122 * Marital_StatusDivorced
1071162   +          +    -0.15222045956879 * Marital_StatusMarried
1071163   +          +     0.15455795695595 * Marital_StatusSingle
1071164   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 *
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried +
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1071165   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1071166   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1071167   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1071168   +          +    -0.10122776921995 * Marital_StatusDivorced
1071169   +          +     0.14126755564161 * Marital_StatusMarried
1071170   +          +    -0.18463644418978 * Marital_StatusSingle
1071171   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 *
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried +
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1071172   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1071173   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1071174   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1071175   +          +     0.05009431660662 * Marital_StatusDivorced
1071176   +          +    -0.38407798045329 * Marital_StatusMarried
1071177   +          +      0.3035257398654 * Marital_StatusSingle
1071178   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 *
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried +
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1071179   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1071180   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1071181   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1071182   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1071183   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1071184   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1071185   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1071186   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1071187   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1071188   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1071189   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1071190   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1071191   +END;
MPRINT(EM_DIAGRAM):   END;
1071192   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1071193   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1071194   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1071195   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1071196   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1071197   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1071198   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1071199   +END;
MPRINT(EM_DIAGRAM):   END;
1071200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071201   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1071202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1071204   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1071205   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1071206   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 +
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 *
H16 ;
1071207   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1071208   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1071209   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1071210   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1071211   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1071212   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1071213   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1071214   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1071215   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1071216   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1071217   +END;
MPRINT(EM_DIAGRAM):   END;
1071218   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1071219   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1071220   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1071221   +END;
MPRINT(EM_DIAGRAM):   END;
1071222   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1071223   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1071224   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1071225   +END;
MPRINT(EM_DIAGRAM):   END;
1071226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071227   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1071228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1071229   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1071230   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1071231   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1071232   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1071233   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1071234   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1071235   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1071236   +END;
MPRINT(EM_DIAGRAM):   END;
1071237   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1071238   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1071239   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1071240   +drop
1071241   +H11
1071242   +H12
1071243   +H13
1071244   +H14
1071245   +H15
1071246   +H16
1071247   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1071248   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1071249    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1071250    quit;
1071251    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1071252    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1071253    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1071254    retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
1071255    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1071256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071257    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1071258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071260    proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
1071261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071263    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071264    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1071265    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1071266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071267    proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
1071268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1071269    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1071270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071273    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1071274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071275    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071276    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1071277    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1071277  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.
 
1071278    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071279    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1071280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071281    filename _pref
1071281  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1071282    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1071283    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1071284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1071285   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1071286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1071287   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1071288   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1071289   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1071290    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1071291    quit;
1071292    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1071293    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1071294    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1071295    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1071296    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1071297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071298    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1071299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071301    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1071302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071304    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071305    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1071306    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1071307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071308    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1071309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1071310    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1071311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071314    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1071315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071316    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1071318    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1071318  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1071319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071320    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1071321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071322    filename _pref
1071322  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1071323    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1071324    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1071325   +
1071326   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1071327   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1071327  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1071328   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1071329   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1071330   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1071331   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1071332   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1071333    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1071334    quit;
1071335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1071336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1071337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1071338    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1071339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1071340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1071342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071344    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1071345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1071349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1071350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071351    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1071352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1071354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1071358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071359    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1071361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1071361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1071362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071363    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1071364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071365    filename _pref
1071365  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1071366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1071367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1071368   +
1071369   +
1071370   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1071371   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1071372   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1071373   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1071374   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1071375   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071376   +
1071377   +
1071378   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1071379   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1071380   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1071381   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1071382   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1071383   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071384   +
1071385   +
1071386   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1071387   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1071388   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1071389   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1071390   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1071391   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071392   +
1071393   +
1071394   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1071395   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1071396   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1071397   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1071398   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1071399   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071400   +
1071401   +
1071402   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1071403   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1071404   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1071405   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1071406   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1071407   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071408   +
1071409   +
1071410   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1071411   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1071412   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1071413   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1071414   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1071415   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071416   +
1071417   +
1071418   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1071419   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1071420   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1071421   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1071422   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1071423   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071424   +
1071425   +
1071426   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1071427   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1071428   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1071429   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1071430   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1071431   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1071432   +if
1071433   +_FILTERNORM1 not in ( '.')
1071434   + and
1071435   +_FILTERNORM2 not in ( '.')
1071436   + and
1071437   +_FILTERNORM3 not in ( '.')
1071438   + and
1071439   +_FILTERNORM4 not in ( '.')
1071440   + and
1071441   +_FILTERNORM5 not in ( '.')
1071442   + and
1071443   +_FILTERNORM6 not in ( '.')
1071444   + and
1071445   +_FILTERNORM7 not in ( ' ')
1071446   + and
1071447   +_FILTERNORM8 not in ( ' ')
1071448   +and
1071449   +( Dt_Customer ne .)
1071450   +and ( Income ne . and (Income<=107000))
1071451   +and ( Kidhome ne .)
1071452   +and ( MntFishProducts ne .)
1071453   +and ( MntFruits ne .)
1071454   +and ( MntGoldProds ne .)
1071455   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1071456   +and ( MntSweetProducts ne .)
1071457   +and ( MntWines ne .)
1071458   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1071459   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1071460   +and ( NumStorePurchases ne .)
1071461   +and ( NumWebPurchases ne .)
1071462   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1071463   +and ( Recency ne .)
1071464   +and ( Teenhome ne .)
1071465   +and ( Year_Birth ne .)
1071466   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1071467   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1071468   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1071469   +end;
MPRINT(EM_DIAGRAM):   end;
1071470   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1071471   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1071472    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1071473    quit;
1071474    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1071475    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1071476    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1071477    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1071478    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1071479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071480    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1071481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071483    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1071484    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071486    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071487    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1071488    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1071489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071490    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1071491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1071492    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1071493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1071496    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1071497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1071498    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071499    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1071500    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1071500  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1071501    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071502    proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
1071503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071504    %macro varDept(fcmpdata=,id=);
1071505    %global nobs&id scoreFlag&id;
1071506    %let scoreFlag&id = 0;
1071507    %if &id=1 or ^&fcmpStart %then %do;
1071508    proc sort data=&fcmpdata out=_temp&id nodupkey;
1071509    by NAME;
1071510    where id=&id and LHS in( %let j=1;
1071511    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1071512    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1071513    "&var" %let j = %eval(&j+1);
1071514    %end;
1071515    );
1071516    run;
1071517    %let dsid = %sysfunc(open(_temp&id));
1071518    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1071519    %let dsid = %sysfunc(close(&dsid));
1071520    %if &&nobs&id %then %do;
1071521    %let scoreFlag&id = 1;
1071522    %let fcmpStart = 1;
1071523    %end;
1071524    %else %let fcmpStart = 0;
1071525    %end;
1071526    %else %do;
1071527    proc sort data=&fcmpdata out=_tempid;
1071528    where id=&id;
1071529    by LHS;
1071530    run;
1071531    %let dsid = %sysfunc(open(_tempid));
1071532    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1071533    %let dsid = %sysfunc(close(&dsid));
1071534    %if ^&&nobs&id %then %do;
1071535    proc datasets lib=work nolist;
1071536    delete _tempid;
1071537    run;
1071538    quit;
1071539    %end;
1071540    %else %do;
1071541    data _tempAll;
1071542    set %let j=%eval(&id-1);
1071543    %do x=1 %to &j;
1071544    %if &&nobs&x %then %do;
1071545    _temp&x %end;
1071546    %end;
1071547    ;
1071548    run;
1071549    proc sql;
1071550    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1071550  ! work._tempid p2 where p.name=p2.lhs;
1071551    quit;
1071552    data _temp&id;
1071553    set _temp&id;
1071554    where LHS ne '' and NAME ne '' and Node ne '';
1071555    run;
1071556    proc datasets lib=work nolist;
1071557    delete _tempAll;
1071558    run;
1071559    %let dsid = %sysfunc(open(_temp&id));
1071560    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1071561    %let dsid = %sysfunc(close(&dsid));
1071562    %if ^&&nobs&id %then %do;
1071563    proc datasets lib=work nolist;
1071564    delete _temp&id;
1071565    run;
1071566    quit;
1071567    %end;
1071568    %else %do;
1071569    %let scoreFlag&id = 1;
1071570    data _temp&id;
1071571    set _temp&id;
1071572    where LHS ne NAME and node ne '';
1071573    run;
1071574    %let dsid = %sysfunc(open(_temp&id));
1071575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1071576    %let dsid = %sysfunc(close(&dsid));
1071577    %if ^&&nobs&id %then %do;
1071578    proc datasets lib=work nolist;
1071579    delete _temp&id;
1071580    run;
1071581    quit;
1071582    %end;
1071583    %else %do;
1071584    proc sort data=_temp&id nodupkey;
1071585    by LHS NAME;
1071586    run;
1071587    %end;
1071588    %end;
1071589    %end;
1071590    %end;
1071591    %mend varDept;
1071592    %macro optCode(outdata=fcmpdata);
1071593    %global fcmpStart;
1071594    %let fcmpStart = 0;
1071595    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1071596    %let NumNodes=9;
1071597    %do k=1 %to &NumNodes;
1071598    %vardept(fcmpdata=&outdata, id=&k);
1071599    %end;
1071600    %mend optCode;
1071601    %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1071602    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1071603    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1071604    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1071605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071606    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1071607    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1071608    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1071609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071610    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1071611    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1071611  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1071612    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1071613    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1071614    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1071615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071616    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1071617    * Ensmbl11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing metadata for TRAIN data;
1071618    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl11_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl11_TRAIN out=WORK.M0J9HUNY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J9HUNY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J9HUNY(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0J9HUNY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0J9HUNY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M214E3TR NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2G57NBN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   set WORK.M214E3TR;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl11";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1071930    data EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMINFO;
1071931    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1071932    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1071933    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1071937    run;
1071938    proc sort data = EMWS8.Ensmbl11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl11_EMINFO NOTHREADS;
1071939    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1071940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL11_EMINFO.
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071941    proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural39_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1071942    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1071943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL39_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1071944    proc sort data = EMWS8.Ensmbl11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1071945    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1071946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071947    data EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMINFO;
1071948    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1071949    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1071950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071951    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1071952    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1071953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1071954    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL11_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3T2I_M1
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3T2I_M1 new;
MPRINT(EM_DIAGRAM):   run;
1071978    data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMOUTFIT;
1071979    set EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMOUTFIT;
1071980    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1071981    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1071981  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1071982    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1071983    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL11_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL11_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071984    proc sort data=EMWS8.Ensmbl11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl11_EMREPORTFIT nothreads;
1071985    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1071986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL11_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL11_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071987    %let _EMwarndup = 0;
1071988    %let _EMtargetdup =;
1071989    %let _EMASEtargetdup =;
1071990    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1071991    set EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMOUTFIT;
1071992    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1071993    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1071994    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1071995    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1071996    end;
MPRINT(EM_DIAGRAM):   end;
1071997    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1071998    proc sort data=EMWS8.Neural39_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural39_CMeta_TRAIN out=WORK.SUBSETINMETA;
1071999    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1072000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL39_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1072001    proc sort data=EMWS8.Ensmbl11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl11_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1072002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1072003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1072004    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1072005    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1072006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1072007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1072008    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1072009    set EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_CMeta_TRAIN;
1072010    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1072010  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1072011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1072012    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1072013    set EMWS8.Ensmbl11_TRAIN(keep=
1072014    F_DepVar
1072015    I_DepVar
1072016    P_DepVar0
1072017    P_DepVar1
1072018    R_DepVar0
1072019    R_DepVar1
1072020    U_DepVar
1072021    _WARN_
1072022    DepVar
1072023    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1072024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL39_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl11_2ESTSS1 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_2ESTSS1;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_2ESTSS1(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_2ESTSS1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_2ESTSS1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0002274809 OVLMAX 0.9967144125 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1076290    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1076291    set EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_CMeta_TRAIN;
1076292    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1076292  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1076293    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1076294    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1076295    set EMWS8.Ensmbl11_VALIDATE(keep=
1076296    F_DepVar
1076297    I_DepVar
1076298    P_DepVar0
1076299    P_DepVar1
1076300    R_DepVar0
1076301    R_DepVar1
1076302    U_DepVar
1076303    _WARN_
1076304    DepVar
1076305    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1076306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: View EMWS8.ENSMBL11_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL39_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL11_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.13 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl11_0GEPUAL nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_0GEPUAL;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_0GEPUAL(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMCLASSIFICATION WORK.Ensmbl11_0GEPUAL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_0GEPUAL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural39_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0002365048 OVLMAX 0.9989650018 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1080581    %let _cn = %sysfunc(getoption(CENTER));
1080582    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1080583    proc print data=EMWS8.Ensmbl11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMREPORTFIT noobs label;
1080584    var STAT LABEL TRAIN
1080585    VALIDATE
1080586    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1080587    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1080588    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1080589    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1080590    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 927.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1080591    title10;
MPRINT(EM_DIAGRAM):   title10;
1080592    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1080593    proc sort data=EMWS8.Ensmbl11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl11_EMCLASSIFICATION nothreads;
1080594    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1080595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL11_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1080596    %let _cn = %sysfunc(getoption(CENTER));
1080597    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1080598    proc print data=EMWS8.Ensmbl11_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMCLASSIFICATION noobs label;
1080599    var from into pct_row pct_col count percent
1080600    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1080601    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1080602    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1080603    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1080604    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1080605    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1080606    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1080607    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1080608    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1080609    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1080610    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1080611    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 928.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1080612    title9;
MPRINT(EM_DIAGRAM):   title9;
1080613    title10;
MPRINT(EM_DIAGRAM):   title10;
1080614    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1080615    %let _cn = %sysfunc(getoption(CENTER));
1080616    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1080617    data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMEVENTREPORT;
1080618    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1080618  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1080619    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1080619  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1080619  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1080619  ! FALSEEVENT
1080620    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1080620  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1080620  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1080621       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1080622    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1080623    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1080624    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1080625    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1080626    set EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMEVENTREPORT;
1080627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL11_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL11_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1080628    proc print data=EMWS8.Ensmbl11_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMEVENTREPORT noobs label;
1080629    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1080630    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1080631    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1080632    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL11_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 929.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1080633    title10;
MPRINT(EM_DIAGRAM):   title10;
1080634    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1080635    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1080636    modify Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1080637    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1080638    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1080638  ! ;
MPRINT(EM_DIAGRAM):   run;
1080639    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL11_EMRANK.DATA.
1080640    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
1080641    %let _cn = %sysfunc(getoption(CENTER));
1080642    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1080643    proc print data=EMWS8.Ensmbl11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMRANK label noobs;
1080644    var
1080645    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1080646    by
1080647    notsorted DATAROLE
1080648    notsorted TARGET
1080649    notsorted TARGETLABEL
1080650    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1080651    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1080652    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1080653    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 930.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1080654    title10;
MPRINT(EM_DIAGRAM):   title10;
1080655    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1080656    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1080657    modify Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1080658    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1080658  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1080659    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1080659  ! ;
MPRINT(EM_DIAGRAM):   run;
1080660    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL11_EMSCOREDIST.DATA.
1080661    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
