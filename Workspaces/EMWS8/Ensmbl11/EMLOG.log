*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                13.33 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.32 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                13.32 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3CVEXOW "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3CVEXOW new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.32 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ' VALUES=(VALUE1='Y' )[82739] MAX=1 EXCEEDMAXVALUE='' )[82743] )[82737] VALIDCHOICES=(CHOICE1='Y' )[82741] )[83025] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")' DEFAULT='
82747] RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D")) or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[82751] )[82749] )[82745] TARGET=(WHERE='ROLE = "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[
82755] RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[82761] MIN=1 MAX=1 EXCEEDMAXVALUE='N' )[82759] )[82757] )[82753] )[82735]
38561      proc freq data=EMWS8.Ensmbl11_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl11_VariableSet noprint;
38562      table ROLE*LEVEL/out=WORK.Ensmbl11META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl11META;
38563      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL11_VARIABLESET.
NOTE: The data set WORK.ENSMBL11META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38564      proc print data=WORK.Ensmbl11META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11META label noobs;
38565      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
38566      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
38567      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38568      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
38569      run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL11META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38570      title10;
MPRINT(EM_DIAGRAM):   title10;
38571      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural40_TRAIN EMWS8.Neural40_TRAIN
EMWS8.Neural40_TRAIN EMWS8.Neural40_TRAIN EMWS8 Neural40_TRAIN
EMWS8.Neural40_TRAIN EMWS8.Neural40_TRAIN
EMWS8.Neural40_TRAIN EMWS8.Neural40_TRAIN EMWS8 Neural40_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural40_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural40_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
38600      data WORK.Ensmbl11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
38601      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
38602      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
38603         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
38604      set EMWS8.NEURAL40_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL40_DEPVAR_DM( where=(_TYPE_="TARGET"));
38605      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
38606      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
38607      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
38608      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
38609      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
38610      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
38611      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
38612      end;
MPRINT(EM_DIAGRAM):   end;
38613      output;
MPRINT(EM_DIAGRAM):   output;
38614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL40_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL11_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38615      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38616      proc print data=WORK.Ensmbl11_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11_EVENT noobs label;
38617      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
38618      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38619      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
38620      run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL11_EVENT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38621      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
38622      proc print data = EMWS8.Neural40_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural40_DepVar_DM noobs label;
38623      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
38624      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
38625      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
38626      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38627      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
38628      run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL40_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38629      title10;
MPRINT(EM_DIAGRAM):   title10;
38630      %let groupid =;
38631      %let endGroupid =;
38632      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
38633      set EMWS8.Neural40_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_EMINFO;
38634      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
38635      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
38636      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
38637      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL40_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38638      %let groupid =;
38639      %let endGroupid =;
38640      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
38641      set EMWS8.AutoNeural39_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural39_EMINFO;
38642      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
38643      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
38644      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
38645      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL39_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38646      %let groupid =;
38647      %let endGroupid =;
38648      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
38649      set EMWS8.AutoNeural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural38_EMINFO;
38650      where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
38651      if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
38652      else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
38653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL38_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38654      data WORK.Ensmbl11;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11;
38655      length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
38656      label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
38657      nodeid="NEURAL40";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL40";
38658      model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
38659      output;
MPRINT(EM_DIAGRAM):   output;
38660      nodeid="AUTONEURAL39";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL39";
38661      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
38662      output;
MPRINT(EM_DIAGRAM):   output;
38663      nodeid="AUTONEURAL38";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL38";
38664      model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
38665      output;
MPRINT(EM_DIAGRAM):   output;
38666      ;
MPRINT(EM_DIAGRAM):   ;
38667      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL11 has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38668      title;
MPRINT(EM_DIAGRAM):   title;
38669      proc print data=WORK.Ensmbl11 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl11 label noobs;
38670      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
38671      title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
38672      run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL11.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38673      title9;
MPRINT(EM_DIAGRAM):   title9;
38674      title10;
MPRINT(EM_DIAGRAM):   title10;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
38675      data WORK.M261V5EJ;
MPRINT(EM_DIAGRAM):    data WORK.M261V5EJ;
38676      set WORK.M261V5EJ;
MPRINT(EM_DIAGRAM):   set WORK.M261V5EJ;
38677      where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
38678      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M261V5EJ.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M261V5EJ has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38679      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
38680      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
38681      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38682      %macro DMDBClass;
38683          DepVar(DESC)
38684      %mend DMDBClass;
38685      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38686      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
38687      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
38688      %macro DMDBVar;
38689
38690      %mend DMDBVar;
38691      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38692      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
38693      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38694      proc dmdb batch data=EMWS8.Neural40_TRAIN
38695      dmdbcat=WORK.EM_DMDB
38696      maxlevel = 513
38697      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural40_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
38698      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
38699      target
38700      DepVar
38701      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
38702      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL40_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
38703      quit;
38704      *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2EDQKBK "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2EDQKBK new;
MPRINT(EM_DIAGRAM):   run;
38806      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring NEURAL40_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38807      *------------------------------------------------------------*;
38808      * Ensmbl11: Scoring NEURAL40_TRAIN data;
38809      *------------------------------------------------------------*;
38810      data EMWS8.Ensmbl11_TRAIN
38811      / view=EMWS8.Ensmbl11_TRAIN
38812      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_TRAIN / view=EMWS8.Ensmbl11_TRAIN ;
38813      set EMWS8.Neural40_TRAIN
38814      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_TRAIN ;
38815      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas.
38816     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38817     +* Ensmbl11: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Combine model for DepVar;
38818     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38819     +* Ensmbl11: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 1 of 3;
38820     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38821     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38822     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
38823     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
38824     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
38825     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38826     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38827     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
38828     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
38829     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
38830     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38831     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38832     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
38833     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
38834     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
38835     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38836     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38837     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
38838     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
38839     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
38840     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38841     +
38842     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
38843     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
38844     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
38845     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
38846     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
38847     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
38848     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
38849     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38850     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
38851     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
38852     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
38853     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38854     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38855     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
38856     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38857     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
38858     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
38859     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
38860     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38861     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
38862     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
38863     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
38864     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38865     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38866     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
38867     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
38868     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
38869     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38870     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38871     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
38872     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
38873     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
38874     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38875     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
38876     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
38877     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
38878     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
38879     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
38880     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
38881     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
38882     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
38883     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
38884     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
38885     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
38886     +LENGTH _WARN_ $4
38887     +      F_DepVar  $ 12
38888     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
38889     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
38890     +
38891     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
38892     +
38893     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
38894     +
38895     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
38896     +
38897     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
38898     +
38899     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
38900     +
38901     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
38902     +
38903     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
38904     +
38905     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
38906     +
38907     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
38908     +
38909     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
38910     +
38911     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
38912     +
38913     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
38914     +
38915     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
38916     +
38917     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
38918     +
38919     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
38920     +
38921     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
38922     +
38923     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
38924     +
38925     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
38926     +
38927     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
38928     +
38929     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
38930     +
38931     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
38932     +
38933     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
38934     +
38935     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
38936     +
38937     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
38938     +
38939     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
38940     +
38941     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
38942     +
38943     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
38944     +
38945     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
38946     +
38947     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
38948     +
38949     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
38950     +
38951     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
38952     +
38953     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
38954     +
38955     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
38956     +
38957     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
38958     +
38959     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
38960     +
38961     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
38962     +
38963     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
38964     +
38965     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
38966     +
38967     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
38968     +
38969     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
38970     +
38971     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
38972     +
38973     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
38974     +
38975     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
38976     +
38977     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
38978     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
38979     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
38980     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
38981     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
38982     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
38983     +end;
MPRINT(EM_DIAGRAM):   end;
38984     +else do;
MPRINT(EM_DIAGRAM):   else do;
38985     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
38986     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
38987     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
38988     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
38989     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
38990     +   end;
38991     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
38992     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
38993     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
38994     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
38995     +      AcceptedCmp10 = .;
38996     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
38997     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
38998     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
38999     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
39000     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39001     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39002     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   end;
39003     +if missing( AcceptedCmp2 ) then do;
39004     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   else do;
39005     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39006     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39007     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
39008     +else do;
39009     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39010     +   _dm12 = put( AcceptedCmp2 , BEST. );
39011     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39012     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
39013     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
39014     +   end;
39015     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
39016     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39017     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39018     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39019     +      AcceptedCmp20 = .;
39020     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
39021     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
39022     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
39023     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
39024     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39025     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39026     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   end;
39027     +if missing( AcceptedCmp3 ) then do;
39028     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   else do;
39029     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39030     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39031     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
39032     +else do;
39033     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39034     +   _dm12 = put( AcceptedCmp3 , BEST. );
39035     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39036     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
39037     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
39038     +   end;
39039     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
39040     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39041     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39042     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39043     +      AcceptedCmp30 = .;
39044     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
39045     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
39046     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
39047     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
39048     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39049     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39050     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   end;
39051     +if missing( AcceptedCmp4 ) then do;
39052     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   else do;
39053     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39054     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39055     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
39056     +else do;
39057     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39058     +   _dm12 = put( AcceptedCmp4 , BEST. );
39059     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39060     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
39061     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
39062     +   end;
39063     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
39064     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39065     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39066     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39067     +      AcceptedCmp40 = .;
39068     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
39069     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
39070     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
39071     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
39072     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39073     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39074     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   end;
39075     +if missing( AcceptedCmp5 ) then do;
39076     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   else do;
39077     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39078     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39079     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
39080     +else do;
39081     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39082     +   _dm12 = put( AcceptedCmp5 , BEST. );
39083     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39084     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
39085     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
39086     +   end;
39087     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
39088     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39089     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39090     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39091     +      AcceptedCmp50 = .;
39092     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
39093     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
39094     +   end;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
39095     +end;
MPRINT(EM_DIAGRAM):   Complain0 = .;
39096     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39097     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39098     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   end;
39099     +if missing( Complain ) then do;
39100     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   else do;
39101     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39102     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39103     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
39104     +else do;
39105     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39106     +   _dm12 = put( Complain , BEST. );
39107     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39108     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
39109     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
39110     +   end;
39111     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
39112     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39113     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39114     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39115     +      Complain0 = .;
39116     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
39117     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
39118     +   end;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
39119     +end;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
39120     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39121     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39122     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   end;
39123     +if missing( HigherEducationBinary ) then do;
39124     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   else do;
39125     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39126     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39127     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
39128     +else do;
39129     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39130     +   _dm12 = put( HigherEducationBinary , BEST12. );
39131     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
39132     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
39133     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
39134     +   end;
39135     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
39136     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39137     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39138     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39139     +      HigherEducationBinary0 = .;
39140     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
39141     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
39142     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
39143     +end;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
39144     +
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
39145     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
39146     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
39147     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
39148     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
39149     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
39150     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
39151     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
39152     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39153     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39154     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
39155     +   EducationGraduation = .;
39156     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   else do;
39157     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
39158     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
39159     +end;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
39160     +else do;
39161     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(DMNORMIP):   call dmnorm(_dm10,
39162     +   _dm10 = put( Education , $10. );
39163     +   %DMNORMIP( _dm10 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
39164     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
39165     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
39166     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
39167     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
39168     +      Education2n_Cycle = -1;
39169     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
39170     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
39171     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
39172     +   end;
39173     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
39174     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
39175     +   end;
39176     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
39177     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
39178     +   end;
39179     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
39180     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
39181     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
39182     +   else do;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39183     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39184     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
39185     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   end;
39186     +      EducationMaster = .;
39187     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
39188     +      _DM_BAD = 1;
39189     +   end;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
39190     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
39191     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
39192     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
39193     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
39194     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
39195     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
39196     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
39197     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
39198     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
39199     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
39200     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39201     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39202     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
39203     +   Marital_StatusSingle = .;
39204     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
39205     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
39206     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
39207     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
39208     +else do;
39209     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
39210     +   _dm8 = put( Marital_Status , $8. );
39211     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
39212     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39213     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
39214     +      if _dm8 <= 'MARRIED'  then do;
39215     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
39216     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
39217     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
39218     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39219     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39220     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
39221     +               Marital_StatusMarried = 1;
39222     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
39223     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
39224     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
39225     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39226     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39227     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
39228     +            Marital_StatusSingle = 1;
39229     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
39230     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
39231     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
39232     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39233     +   else do;
MPRINT(EM_DIAGRAM):   end;
39234     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
39235     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
39236     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
39237     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
39238     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
39239     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39240     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
39241     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
39242     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
39243     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
39244     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
39245     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
39246     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
39247     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
39248     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39249     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39250     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
39251     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
39252     +      Marital_StatusTogether = .;
39253     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
39254     +      _DM_BAD = 1;
39255     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
39256     +end;
39257     +
39258     +*** *************************;
39259     +*** Checking missing input Interval
39260     +*** *************************;
39261     +
39262     +IF NMISS(
39263     +   AcceptedCmpTotal ,
39264     +   Age ,
39265     +   Frq ,
39266     +   Income ,
39267     +   Kidhome ,
39268     +   MntFishProducts ,
39269     +   MntFruits ,
39270     +   MntGoldProds ,
39271     +   MntSweetProducts ,
39272     +   MonthsAsCustomer ,
39273     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
39274     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
39275     +   RFMstat ,
39276     +   RMntFrq ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39277     +   Recency ,
MPRINT(EM_DIAGRAM):   END;
39278     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
39279     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
39280     +
MPRINT(EM_DIAGRAM):   *** *************************;
39281     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
39282     +END;
39283     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
39284     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
39285     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
39286     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
39287     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
39288     +        AcceptedCmpTotal ;
39289     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
39290     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
39291     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
39292     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
39293     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
39294     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
39295     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
39296     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
39297     +        MntGoldProds ;
39298     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
39299     +        MntSweetProducts ;
39300     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
39301     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
39302     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
39303     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
39304     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
39305     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
39306     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
39307     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE DO;
39308     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
39309     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
39310     +END;
39311     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
39312     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
39313     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
39314     +        AcceptedCmpTotal ;
39315     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
39316     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
39317     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
39318     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
39319     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
39320     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
39321     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
39322     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
39323     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
39324     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
39325     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
39326     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
39327     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
39328     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
39329     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
39330     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
39331     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
39332     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
39333     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
39334     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
39335     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
39336     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
39337     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
39338     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
39339     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
39340     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
39341     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
39342     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
39343     +        NumWebVisitsMonth ;
39344     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
39345     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
39346     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
39347     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
39348     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
39349     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
39350     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
39351     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
39352     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
39353     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
39354     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** *************************;
39355     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
39356     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
39357     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
39358     +*** *************************;
39359     +*** *************************;
39360     +*** Writing the Node H1 ;
39361     +*** *************************;
39362     +IF _DM_BAD EQ 0 THEN DO;
39363     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
39364     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
39365     +        S_Income  +     0.39760289149752 * S_Kidhome
39366     +          +     -0.0376693415484 * S_MntFishProducts
39367     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
39368     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
39369     +          +    -0.13043754404228 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + -0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + -0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits
+ 0.03640992016126 * S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 *
S_RMntFrq + 0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
39370     +          +     -0.0139146653349 * S_NumDealsPurchases
39371     +          +    -0.01539820220757 * S_NumWebVisitsMonth
39372     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
39373     +        S_RMntFrq  +     0.55149605442396 * S_Recency
39374     +          +     0.54614592562743 * S_Teenhome ;
39375     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
39376     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
39377     +        S_Income  +     0.31208673256073 * S_Kidhome
39378     +          +    -0.04911763008195 * S_MntFishProducts
39379     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
39380     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
39381     +          +    -0.48577934340503 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age + -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + -0.04911763008195 * S_MntFishProducts + 0.04440357574827 *
S_MntFruits + 0.18064625439163 * S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat +
-0.01845944589462 * S_RMntFrq + -0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
39382     +          +     0.31218334237091 * S_NumDealsPurchases
39383     +          +     0.24212805498377 * S_NumWebVisitsMonth
39384     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
39385     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
39386     +          +    -0.32721006241811 * S_Teenhome ;
39387     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
39388     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
39389     +        S_Income  +    -0.48748003518551 * S_Kidhome
39390     +          +     0.15434683428908 * S_MntFishProducts
39391     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
39392     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
39393     +          +    -0.07405705160744 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age + -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 0.15434683428908 * S_MntFishProducts + 0.06482294164983 *
S_MntFruits + -0.54308686262134 * S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat +
-0.49659927360573 * S_RMntFrq + 0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
39394     +          +    -0.44979778263337 * S_NumDealsPurchases
39395     +          +    -0.51422673599958 * S_NumWebVisitsMonth
39396     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
39397     +        S_RMntFrq  +     0.79850779605341 * S_Recency
39398     +          +    -0.01021777395977 * S_Teenhome ;
39399     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
39400     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
39401     +        S_Income  +    -0.62401744170985 * S_Kidhome
39402     +          +    -0.08499883212951 * S_MntFishProducts
39403     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
39404     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
39405     +          +    -0.04051431518694 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + -0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits
+ -0.00355780886042 * S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 *
S_RMntFrq + -0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
39406     +          +     0.00788125797776 * S_NumDealsPurchases
39407     +          +     0.59495434076477 * S_NumWebVisitsMonth
39408     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
39409     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
39410     +          +    -0.33321827557738 * S_Teenhome ;
39411     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
39412     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
39413     +        S_Income  +     -0.0256051183156 * S_Kidhome
39414     +          +    -0.15661247042419 * S_MntFishProducts
39415     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
39416     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
39417     +          +     0.03994503424293 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age + 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + -0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits
+ 0.02103897411055 * S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer + -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + -0.06088682875304 * S_RFMstat + -0.16953747051887 *
S_RMntFrq + 0.66048924026365 * S_Recency + -0.18125808371879 * S_Teenhome ;
39418     +          +    -0.53734193208154 * S_NumDealsPurchases
39419     +          +    -0.58547802324835 * S_NumWebVisitsMonth
39420     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
39421     +        S_RMntFrq  +     0.66048924026365 * S_Recency
39422     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 +
-0.29371842867452 * HigherEducationBinary0 ;
39423     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
39424     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
39425     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
39426     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
39427     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 +
0.26244151632714 * HigherEducationBinary0 ;
39428     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
39429     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
39430     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
39431     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
39432     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 +
0.12575052691333 * HigherEducationBinary0 ;
39433     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
39434     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
39435     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
39436     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
39437     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 +
0.03016266549641 * HigherEducationBinary0 ;
39438     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
39439     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
39440     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
39441     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
39442     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 +
0.16683238673979 * HigherEducationBinary0 ;
39443     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
39444     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
39445     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
39446     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
39447     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
39448     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
39449     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster + -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 *
Marital_StatusMarried + -0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
39450     +        EducationGraduation  +     0.23295390047952 * EducationMaster
39451     +          +    -0.41529808115031 * Marital_StatusDivorced
39452     +          +     0.65264978817749 * Marital_StatusMarried
39453     +          +    -0.52150453945732 * Marital_StatusSingle
39454     +          +     0.69963607397544 * Marital_StatusTogether ;
39455     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
39456     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + -0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 *
Marital_StatusMarried + 0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
39457     +        EducationGraduation  +     0.04425534246646 * EducationMaster
39458     +          +    -0.32207382402099 * Marital_StatusDivorced
39459     +          +     0.16112567537413 * Marital_StatusMarried
39460     +          +     0.28859198712458 * Marital_StatusSingle
39461     +          +    -0.31707896724726 * Marital_StatusTogether ;
39462     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
39463     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster + -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 *
Marital_StatusMarried + -0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
39464     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
39465     +          +    -0.06823118087629 * Marital_StatusDivorced
39466     +          +    -0.01696675344176 * Marital_StatusMarried
39467     +          +    -0.04922830766868 * Marital_StatusSingle
39468     +          +    -0.15449558545998 * Marital_StatusTogether ;
39469     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
39470     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 *
Marital_StatusMarried + 0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
39471     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
39472     +          +     0.20346888384065 * Marital_StatusDivorced
39473     +          +     -0.5246097720646 * Marital_StatusMarried
39474     +          +     0.50991923175058 * Marital_StatusSingle
39475     +          +    -0.15346924309445 * Marital_StatusTogether ;
39476     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
39477     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + -0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 *
Marital_StatusMarried + 0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
39478     +        EducationGraduation  +     0.03117170136897 * EducationMaster
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
39479     +          +    -0.14128509643843 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
39480     +          +    -0.17344467864829 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
39481     +          +     0.09201105049634 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
39482     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
39483     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
39484     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
39485     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
39486     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
39487     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
39488     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   END;
39489     +   H12  = TANH(H12 );
39490     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   ELSE DO;
39491     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H11 = .;
39492     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H12 = .;
39493     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
39494     +ELSE DO;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
39495     +   H11  = .;
MPRINT(EM_DIAGRAM):   END;
39496     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
39497     +   H13  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
39498     +   H14  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
39499     +   H15  = .;
39500     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
39501     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
39502     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
39503     +*** *************************;
39504     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
39505     +*** Generate dummy variables for DepVar ;
39506     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
39507     +label F_DepVar = 'From: DepVar' ;
39508     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
39509     +F_DepVar = put( DepVar , BEST. );
39510     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
39511     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
39512     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
39513     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
39514     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
39515     +else do;
MPRINT(EM_DIAGRAM):   end;
39516     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
39517     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
39518     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
39519     +   end;
MPRINT(EM_DIAGRAM):   end;
39520     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
39521     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
39522     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
39523     +   end;
MPRINT(EM_DIAGRAM):   end;
39524     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
39525     +      DepVar1 = .;
39526     +      DepVar0 = .;
39527     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + -2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
39528     +end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
39529     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
39530     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
39531     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
39532     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
39533     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
39534     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
39535     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
39536     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
39537     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
39538     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
39539     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
39540     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
39541     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
39542     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
39543     +END;
MPRINT(EM_DIAGRAM):   END;
39544     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
39545     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
39546     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
39547     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
39548     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
39549     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
39550     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
39551     +END;
39552     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
39553     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
39554     +*** ******************************;
39555     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
39556     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
39557     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
39558     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
39559     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
39560     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
39561     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
39562     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
39563     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
39564     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
39565     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
39566     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
39567     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
39568     +   U_DepVar  =                    0;
39569     +END;
39570     +********************************;
39571     +*** End Scoring Code for Neural;
39572     +********************************;
39573     +drop
39574     +H11
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
39575     +H12
MPRINT(EM_DIAGRAM):   drop S_:;
39576     +H13
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
39577     +H14
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39578     +H15
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
39579     +;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39580     +drop S_:;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
39581     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
39582     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
39583     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
39584     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39585     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
39586     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39587     +drop Neural40_P_DepVar0;
39588     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
39589     +*------------------------------------------------------------*;
39590     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
39591     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
39592     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39593     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39594     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
39595     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
39596     +* Ensmbl11: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
39597     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
39598     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
39599     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
39600     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
39601     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
39602     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
39603     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
39604     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
39605     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
39606     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
39607     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
39608     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
39609     + _MAX_ = .;
39610     + _MAXP_ = .;
39611     + _SUM_ = .;
39612     + _NTRIALS = .;
39613     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
39614     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
39615     +      F_DepVar  $ 12
39616     +;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
39617     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
39618     +
39619     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
39620     +
39621     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
39622     +
39623     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
39624     +
39625     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
39626     +
39627     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
39628     +
39629     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
39630     +
39631     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
39632     +
39633     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
39634     +
39635     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
39636     +
39637     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
39638     +
39639     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
39640     +
39641     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
39642     +
39643     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
39644     +
39645     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
39646     +
39647     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
39648     +
39649     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
39650     +
39651     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
39652     +
39653     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
39654     +
39655     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
39656     +
39657     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
39658     +
39659     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
39660     +
39661     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
39662     +
39663     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
39664     +
39665     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
39666     +
39667     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
39668     +
39669     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
39670     +
39671     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
39672     +
39673     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
39674     +
39675     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
39676     +
39677     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
39678     +
39679     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
39680     +
39681     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
39682     +
39683     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
39684     +
39685     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
39686     +
39687     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
39688     +
39689     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
39690     +
39691     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
39692     +
39693     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
39694     +
39695     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
39696     +
39697     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
39698     +
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
39699     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
39700     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39701     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39702     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   end;
39703     +if missing( AcceptedCmp1 ) then do;
39704     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   else do;
39705     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39706     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39707     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
39708     +else do;
39709     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39710     +   _dm12 = put( AcceptedCmp1 , BEST. );
39711     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39712     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
39713     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
39714     +   end;
39715     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
39716     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39717     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39718     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39719     +      AcceptedCmp10 = .;
39720     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
39721     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
39722     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
39723     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
39724     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39725     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39726     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   end;
39727     +if missing( AcceptedCmp2 ) then do;
39728     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   else do;
39729     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39730     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39731     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
39732     +else do;
39733     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39734     +   _dm12 = put( AcceptedCmp2 , BEST. );
39735     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39736     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
39737     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
39738     +   end;
39739     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
39740     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39741     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39742     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39743     +      AcceptedCmp20 = .;
39744     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
39745     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
39746     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
39747     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
39748     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39749     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39750     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   end;
39751     +if missing( AcceptedCmp3 ) then do;
39752     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   else do;
39753     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39754     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39755     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
39756     +else do;
39757     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39758     +   _dm12 = put( AcceptedCmp3 , BEST. );
39759     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39760     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
39761     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
39762     +   end;
39763     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
39764     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39765     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39766     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39767     +      AcceptedCmp30 = .;
39768     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
39769     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
39770     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
39771     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
39772     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39773     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39774     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   end;
39775     +if missing( AcceptedCmp4 ) then do;
39776     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   else do;
39777     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39778     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39779     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
39780     +else do;
39781     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39782     +   _dm12 = put( AcceptedCmp4 , BEST. );
39783     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39784     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
39785     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
39786     +   end;
39787     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
39788     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39789     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39790     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39791     +      AcceptedCmp40 = .;
39792     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
39793     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
39794     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
39795     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
39796     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39797     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39798     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   end;
39799     +if missing( AcceptedCmp5 ) then do;
39800     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   else do;
39801     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39802     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39803     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
39804     +else do;
39805     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39806     +   _dm12 = put( AcceptedCmp5 , BEST. );
39807     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39808     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
39809     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
39810     +   end;
39811     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
39812     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39813     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
The SAS System
 
39814     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39815     +      AcceptedCmp50 = .;
39816     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
39817     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
39818     +   end;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
39819     +end;
MPRINT(EM_DIAGRAM):   Complain0 = .;
39820     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39821     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39822     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   end;
39823     +if missing( Complain ) then do;
39824     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   else do;
39825     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39826     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39827     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
39828     +else do;
39829     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39830     +   _dm12 = put( Complain , BEST. );
39831     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
39832     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
39833     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
39834     +   end;
39835     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
39836     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39837     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39838     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39839     +      Complain0 = .;
39840     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
39841     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
39842     +   end;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
39843     +end;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
39844     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39845     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39846     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   end;
39847     +if missing( HigherEducationBinary ) then do;
39848     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   else do;
39849     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
39850     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
39851     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
39852     +else do;
39853     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
39854     +   _dm12 = put( HigherEducationBinary , BEST12. );
39855     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
39856     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
39857     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
39858     +   end;
39859     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
39860     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39861     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39862     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39863     +      HigherEducationBinary0 = .;
39864     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
39865     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
39866     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
39867     +end;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
39868     +
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
39869     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
39870     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
39871     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
39872     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
39873     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
39874     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
39875     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
39876     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39877     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39878     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
39879     +   EducationGraduation = .;
39880     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   else do;
39881     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
39882     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
39883     +end;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
39884     +else do;
39885     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(DMNORMIP):   call dmnorm(_dm10,
39886     +   _dm10 = put( Education , $10. );
39887     +   %DMNORMIP( _dm10 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
39888     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
39889     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
39890     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
39891     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
39892     +      Education2n_Cycle = -1;
39893     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
39894     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
39895     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
39896     +   end;
39897     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
39898     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
39899     +   end;
39900     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
39901     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
39902     +   end;
39903     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
39904     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
39905     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
39906     +   else do;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39907     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39908     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
39909     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   end;
39910     +      EducationMaster = .;
39911     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
39912     +      _DM_BAD = 1;
39913     +   end;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
39914     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
39915     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
39916     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
39917     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
39918     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
39919     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
39920     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
39921     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
39922     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
39923     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
39924     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
39925     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39926     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
39927     +   Marital_StatusSingle = .;
39928     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
39929     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
39930     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
39931     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
39932     +else do;
39933     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
39934     +   _dm8 = put( Marital_Status , $8. );
39935     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
39936     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39937     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
39938     +      if _dm8 <= 'MARRIED'  then do;
39939     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
39940     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
39941     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
39942     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39943     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39944     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
39945     +               Marital_StatusMarried = 1;
39946     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
39947     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
39948     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
39949     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39950     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
39951     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
39952     +            Marital_StatusSingle = 1;
39953     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
39954     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
39955     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
39956     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39957     +   else do;
MPRINT(EM_DIAGRAM):   end;
39958     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
39959     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
39960     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
39961     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
39962     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
39963     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
39964     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
39965     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
39966     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
39967     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
39968     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
39969     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
39970     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
39971     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
39972     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
39973     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
39974     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
39975     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
39976     +      Marital_StatusTogether = .;
39977     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
39978     +      _DM_BAD = 1;
39979     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
39980     +end;
39981     +
39982     +*** *************************;
39983     +*** Checking missing input Interval
39984     +*** *************************;
39985     +
39986     +IF NMISS(
39987     +   AcceptedCmpTotal ,
39988     +   Age ,
39989     +   Frq ,
39990     +   Income ,
39991     +   Kidhome ,
39992     +   MntFishProducts ,
39993     +   MntFruits ,
39994     +   MntGoldProds ,
39995     +   MntSweetProducts ,
39996     +   MonthsAsCustomer ,
39997     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
39998     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
39999     +   RFMstat ,
40000     +   RMntFrq ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40001     +   Recency ,
MPRINT(EM_DIAGRAM):   END;
40002     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
40003     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
40004     +
MPRINT(EM_DIAGRAM):   *** *************************;
40005     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40006     +END;
40007     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
40008     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
40009     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
40010     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
40011     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
40012     +        AcceptedCmpTotal ;
40013     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
40014     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
40015     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
40016     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
40017     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
40018     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
40019     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
40020     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
40021     +        MntGoldProds ;
40022     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
40023     +        MntSweetProducts ;
40024     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
40025     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
40026     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
40027     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
40028     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
40029     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
40030     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
40031     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE DO;
40032     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
40033     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
40034     +END;
40035     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
40036     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
40037     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
40038     +        AcceptedCmpTotal ;
40039     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
40040     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
40041     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
40042     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
40043     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
40044     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
40045     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
40046     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
40047     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
40048     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
40049     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
40050     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
40051     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
40052     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
40053     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
40054     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
40055     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
40056     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
40057     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
40058     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
40059     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
40060     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
40061     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
40062     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
40063     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
40064     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
40065     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
40066     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
40067     +        NumWebVisitsMonth ;
40068     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
40069     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
40070     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
40071     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
40072     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
40073     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
40074     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
40075     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40076     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
40077     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40078     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
40079     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
40080     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40081     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40082     +*** *************************;
40083     +*** *************************;
40084     +*** Writing the Node H1x1_ ;
40085     +*** *************************;
40086     +IF _DM_BAD EQ 0 THEN DO;
40087     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
40088     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
40089     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
40090     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
40091     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
40092     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
40093     +          +     -0.1740957673716 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 *
S_MntFruits + 0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat +
0.26260869862277 * S_RMntFrq + -0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
40094     +          +     0.66565026405117 * S_NumDealsPurchases
40095     +          +     0.43247206282836 * S_NumWebVisitsMonth
40096     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
40097     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
40098     +          +     0.44490818869588 * S_Teenhome ;
40099     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
40100     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
40101     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
40102     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
40103     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
40104     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
40105     +          +    -0.06176784990963 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 *
S_MntFruits + 0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 * S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat +
-0.13250191926905 * S_RMntFrq + 0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
40106     +          +    -0.11740415005833 * S_NumDealsPurchases
40107     +          +    -0.17084845478672 * S_NumWebVisitsMonth
40108     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
40109     +        S_RMntFrq  +     0.54983271222574 * S_Recency
40110     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 * AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 +
-0.4767771812126 * HigherEducationBinary0 ;
40111     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
40112     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
40113     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
40114     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
40115     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 +
-0.27229992860702 * HigherEducationBinary0 ;
40116     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
40117     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
40118     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
40119     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
40120     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
40121     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
40122     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + -0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 0.44505766937623
* Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 0.38638180853046 * Marital_StatusTogether ;
40123     +        EducationGraduation  +     0.22632282500966 * EducationMaster
40124     +          +     -0.0800438380883 * Marital_StatusDivorced
40125     +          +     0.44505766937623 * Marital_StatusMarried
40126     +          +    -0.57546515626468 * Marital_StatusSingle
40127     +          +     0.38638180853046 * Marital_StatusTogether ;
40128     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
40129     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + -0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 * EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617
* Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * Marital_StatusTogether ;
40130     +        EducationGraduation  +      0.0794165981215 * EducationMaster
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
40131     +          +    -0.20291653465543 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
40132     +          +     0.39547414450617 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
40133     +          +    -0.37001331184001 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
40134     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
40135     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
40136     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
40137     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
40138     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
40139     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
40140     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
40141     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
40142     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
40143     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
40144     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   END;
40145     +   _SUM_ = _SUM_ + H1x1_3 ;
40146     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   ELSE DO;
40147     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
40148     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
40149     +END;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
40150     +ELSE DO;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
40151     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
40152     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
40153     +   H1x1_3  = .;
40154     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
40155     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
40156     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
40157     +*** *************************;
40158     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
40159     +*** Generate dummy variables for DepVar ;
40160     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
40161     +label F_DepVar = 'From: DepVar' ;
40162     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
40163     +F_DepVar = put( DepVar , BEST. );
40164     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
40165     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
40166     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
40167     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
40168     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
40169     +else do;
MPRINT(EM_DIAGRAM):   end;
40170     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
40171     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
40172     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
40173     +   end;
MPRINT(EM_DIAGRAM):   end;
40174     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
40175     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
40176     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
40177     +   end;
MPRINT(EM_DIAGRAM):   end;
40178     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40179     +      DepVar1 = .;
40180     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 10.3301873876241 * H1x1_3 ;
40181     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
40182     +end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
40183     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
40184     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
40185     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
40186     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
40187     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
40188     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
40189     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
40190     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
40191     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
40192     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
40193     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
40194     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
40195     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
40196     +END;
MPRINT(EM_DIAGRAM):   END;
40197     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
40198     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
40199     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
40200     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
40201     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
40202     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
40203     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
40204     +END;
40205     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
40206     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
40207     +*** ******************************;
40208     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
40209     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
40210     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
40211     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
40212     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
40213     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
40214     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
40215     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
40216     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
40217     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
40218     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
40219     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
40220     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
40221     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
40222     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
40223     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40224     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
40225     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40226     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
40227     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
40228     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
40229     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
40230     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40231     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
40232     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40233     +drop AutoNeural39_P_DepVar0;
40234     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
40235     +*------------------------------------------------------------*;
40236     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
40237     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
40238     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40239     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40240     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
40241     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
40242     +* Ensmbl11: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
40243     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40244     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
40245     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
40246     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   ***********************************;
40247     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
40248     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
40249     +***********************************;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
40250     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
40251     +***********************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
40252     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
40253     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
40254     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
40255     + _MAX_ = .;
40256     + _MAXP_ = .;
40257     + _SUM_ = .;
40258     + _NTRIALS = .;
40259     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
40260     +LENGTH _WARN_ $4
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
40261     +      F_DepVar  $ 12
40262     +;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
40263     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
40264     +
40265     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
40266     +
40267     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
40268     +
40269     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
40270     +
40271     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
40272     +
40273     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
40274     +
40275     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
40276     +
40277     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
40278     +
40279     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
40280     +
40281     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
40282     +
40283     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
40284     +
40285     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
40286     +
40287     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
40288     +
40289     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
40290     +
40291     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
40292     +
40293     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
40294     +
40295     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
40296     +
40297     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
40298     +
40299     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
40300     +
40301     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
40302     +
40303     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
40304     +
40305     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
40306     +
40307     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
40308     +
40309     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
40310     +
40311     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
40312     +
40313     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
40314     +
40315     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
40316     +
40317     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
40318     +
40319     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
40320     +
40321     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
40322     +
40323     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
40324     +
40325     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
40326     +
40327     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
40328     +
40329     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
40330     +
40331     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
40332     +
40333     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
40334     +
40335     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
40336     +
40337     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
40338     +
40339     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
40340     +
40341     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
40342     +
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
40343     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
40344     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40345     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40346     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   end;
40347     +if missing( AcceptedCmp1 ) then do;
40348     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   else do;
40349     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40350     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40351     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
40352     +else do;
40353     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40354     +   _dm12 = put( AcceptedCmp1 , BEST. );
40355     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40356     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
40357     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   end;
40358     +   end;
40359     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
40360     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40361     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40362     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40363     +      AcceptedCmp10 = .;
40364     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
40365     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
40366     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
40367     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
40368     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40369     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40370     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   end;
40371     +if missing( AcceptedCmp2 ) then do;
40372     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   else do;
40373     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40374     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40375     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
40376     +else do;
40377     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40378     +   _dm12 = put( AcceptedCmp2 , BEST. );
40379     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40380     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
40381     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   end;
40382     +   end;
40383     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
40384     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40385     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40386     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40387     +      AcceptedCmp20 = .;
40388     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
40389     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
40390     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
40391     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
40392     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40393     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40394     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   end;
40395     +if missing( AcceptedCmp3 ) then do;
40396     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   else do;
40397     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40398     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40399     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
40400     +else do;
40401     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40402     +   _dm12 = put( AcceptedCmp3 , BEST. );
40403     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40404     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
40405     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   end;
40406     +   end;
40407     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
40408     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40409     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40410     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40411     +      AcceptedCmp30 = .;
40412     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
40413     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
40414     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
40415     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
40416     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40417     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40418     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   end;
40419     +if missing( AcceptedCmp4 ) then do;
40420     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   else do;
40421     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40422     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40423     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
40424     +else do;
40425     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40426     +   _dm12 = put( AcceptedCmp4 , BEST. );
40427     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40428     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
40429     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   end;
40430     +   end;
40431     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
40432     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40433     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40434     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40435     +      AcceptedCmp40 = .;
40436     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
40437     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
40438     +   end;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
40439     +end;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
40440     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40441     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40442     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   end;
40443     +if missing( AcceptedCmp5 ) then do;
40444     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   else do;
40445     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40446     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40447     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
40448     +else do;
40449     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40450     +   _dm12 = put( AcceptedCmp5 , BEST. );
40451     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40452     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
40453     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   end;
40454     +   end;
40455     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
40456     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40457     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40458     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40459     +      AcceptedCmp50 = .;
40460     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
40461     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
40462     +   end;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
40463     +end;
MPRINT(EM_DIAGRAM):   Complain0 = .;
40464     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40465     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40466     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   end;
40467     +if missing( Complain ) then do;
40468     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   else do;
40469     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40470     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40471     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
40472     +else do;
40473     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40474     +   _dm12 = put( Complain , BEST. );
40475     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
40476     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
40477     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   end;
40478     +   end;
40479     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Complain0 = .;
40480     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40481     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40482     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40483     +      Complain0 = .;
40484     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
40485     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
40486     +   end;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
40487     +end;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
40488     +
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40489     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40490     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   end;
40491     +if missing( HigherEducationBinary ) then do;
40492     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   else do;
40493     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
40494     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
40495     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
40496     +else do;
40497     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
40498     +   _dm12 = put( HigherEducationBinary , BEST12. );
40499     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
40500     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
40501     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   end;
40502     +   end;
40503     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
40504     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40505     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40506     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40507     +      HigherEducationBinary0 = .;
40508     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
40509     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
40510     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
40511     +end;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
40512     +
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
40513     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
40514     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
40515     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
40516     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
40517     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
40518     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
40519     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
40520     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40521     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40522     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
40523     +   EducationGraduation = .;
40524     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   else do;
40525     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
40526     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
40527     +end;
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
40528     +else do;
40529     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(DMNORMIP):   call dmnorm(_dm10,
40530     +   _dm10 = put( Education , $10. );
40531     +   %DMNORMIP( _dm10 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
40532     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
40533     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
40534     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
40535     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
40536     +      Education2n_Cycle = -1;
40537     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
40538     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
40539     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   end;
40540     +   end;
40541     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
40542     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   end;
40543     +   end;
40544     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
40545     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   end;
40546     +   end;
40547     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
40548     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
40549     +   end;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
40550     +   else do;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40551     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40552     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   end;
40553     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   end;
40554     +      EducationMaster = .;
40555     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
40556     +      _DM_BAD = 1;
40557     +   end;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
40558     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
40559     +
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
40560     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
40561     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
40562     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
40563     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
40564     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
40565     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
40566     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
40567     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
40568     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
40569     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40570     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
40571     +   Marital_StatusSingle = .;
40572     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   else do;
40573     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
40574     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
40575     +end;
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
40576     +else do;
40577     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(DMNORMIP):   call dmnorm(_dm8,
40578     +   _dm8 = put( Marital_Status , $8. );
40579     +   %DMNORMIP( _dm8 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
40580     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
40581     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
40582     +      if _dm8 <= 'MARRIED'  then do;
40583     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   else do;
40584     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
40585     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
40586     +         end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
40587     +         else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40588     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   end;
40589     +               Marital_StatusMarried = 1;
40590     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
40591     +            end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
40592     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
40593     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
40594     +      else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
40595     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   end;
40596     +            Marital_StatusSingle = 1;
40597     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
40598     +         end;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
40599     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
40600     +   end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
40601     +   else do;
MPRINT(EM_DIAGRAM):   end;
40602     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   else do;
40603     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
40604     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
40605     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
40606     +      else do;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
40607     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
40608     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   end;
40609     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   end;
40610     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   end;
40611     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
40612     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
40613     +         end;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
40614     +      end;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
40615     +   end;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
40616     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
40617     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40618     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   end;
40619     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   end;
40620     +      Marital_StatusTogether = .;
40621     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
40622     +      _DM_BAD = 1;
40623     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
40624     +end;
40625     +
40626     +*** *************************;
40627     +*** Checking missing input Interval
40628     +*** *************************;
40629     +
40630     +IF NMISS(
40631     +   AcceptedCmpTotal ,
40632     +   Age ,
40633     +   Frq ,
40634     +   Income ,
40635     +   Kidhome ,
40636     +   MntFishProducts ,
40637     +   MntFruits ,
40638     +   MntGoldProds ,
40639     +   MntSweetProducts ,
40640     +   MonthsAsCustomer ,
40641     +   NumDealsPurchases ,
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
40642     +   NumWebVisitsMonth ,
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
40643     +   RFMstat ,
40644     +   RMntFrq ,
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
40645     +   Recency ,
MPRINT(EM_DIAGRAM):   END;
40646     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
40647     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
40648     +
MPRINT(EM_DIAGRAM):   *** *************************;
40649     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40650     +END;
40651     +*** *************************;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
40652     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
40653     +*** *************************;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
40654     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
40655     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
40656     +        AcceptedCmpTotal ;
40657     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
40658     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
40659     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
40660     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
40661     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
40662     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
40663     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
40664     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
40665     +        MntGoldProds ;
40666     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
40667     +        MntSweetProducts ;
40668     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
40669     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
40670     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
40671     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
40672     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
40673     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   END;
40674     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
40675     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE DO;
40676     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
40677     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
40678     +END;
40679     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
40680     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
40681     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
40682     +        AcceptedCmpTotal ;
40683     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
40684     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
40685     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
40686     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
40687     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
40688     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
40689     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
40690     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
40691     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
40692     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
40693     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
40694     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
40695     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
40696     +         ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
40697     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
40698     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
40699     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
40700     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
40701     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
40702     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
40703     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
40704     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
40705     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
40706     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
40707     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
40708     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
40709     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
40710     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
40711     +        NumWebVisitsMonth ;
40712     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
40713     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
40714     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
40715     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
40716     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
40717     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
40718     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
40719     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40720     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
40721     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40722     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** *************************;
40723     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
40724     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
40725     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40726     +*** *************************;
40727     +*** *************************;
40728     +*** Writing the Node H1x1_ ;
40729     +*** *************************;
40730     +IF _DM_BAD EQ 0 THEN DO;
40731     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
40732     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
40733     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
40734     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
40735     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
40736     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
40737     +          +     0.07696704519183 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome + -0.02139676364759 * S_MntFishProducts + -0.06309036790386 *
S_MntFruits + -0.02579098391162 * S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat +
0.16731511643557 * S_RMntFrq + -0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
40738     +          +     0.06885982009617 * S_NumDealsPurchases
40739     +          +     0.18284147478918 * S_NumWebVisitsMonth
40740     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
40741     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
40742     +          +    -0.45659275487674 * S_Teenhome ;
40743     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
40744     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
40745     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
40746     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
40747     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
40748     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
40749     +          +     0.19400730773464 * S_MonthsAsCustomer
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age + 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + -0.61585865165341 * S_MntFishProducts + 0.48583904586511 *
S_MntFruits + -0.38353134378746 * S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer + -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + -0.4953702697801 * S_RFMstat +
-0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + -0.04271320094349 * S_Teenhome ;
40750     +          +    -1.36455521037197 * S_NumDealsPurchases
40751     +          +    -1.07068059346196 * S_NumWebVisitsMonth
40752     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
40753     +        S_RMntFrq  +     1.36066079800227 * S_Recency
40754     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 * AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + -0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 +
0.36349047632504 * HigherEducationBinary0 ;
40755     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
40756     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
40757     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
40758     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
40759     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + -0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 +
0.47014175146609 * HigherEducationBinary0 ;
40760     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
40761     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
40762     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
40763     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
40764     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
40765     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
40766     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 * EducationMaster + 0.23432241402098 * Marital_StatusDivorced +
-0.46302700269027 * Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * Marital_StatusTogether ;
40767     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
40768     +          +     0.23432241402098 * Marital_StatusDivorced
40769     +          +    -0.46302700269027 * Marital_StatusMarried
40770     +          +      0.4032168653504 * Marital_StatusSingle
40771     +          +    -0.44795341835702 * Marital_StatusTogether ;
40772     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
40773     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 * EducationMaster + -0.31347503340603 * Marital_StatusDivorced +
-0.20319530959178 * Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * Marital_StatusTogether ;
40774     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
40775     +          +    -0.31347503340603 * Marital_StatusDivorced
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
40776     +          +    -0.20319530959178 * Marital_StatusMarried
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
40777     +          +     0.48298350411196 * Marital_StatusSingle
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
40778     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
40779     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
40780     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   END;
40781     +   DROP _EXP_BAR;
40782     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   ELSE DO;
40783     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
40784     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
40785     +END;
MPRINT(EM_DIAGRAM):   END;
40786     +ELSE DO;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
40787     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
40788     +   H1x1_2  = .;
40789     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
40790     +*** *************************;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
40791     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
40792     +*** *************************;
40793     +
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
40794     +*** Generate dummy variables for DepVar ;
40795     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
40796     +label F_DepVar = 'From: DepVar' ;
40797     +length F_DepVar $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
40798     +F_DepVar = put( DepVar , BEST. );
40799     +%DMNORMIP( F_DepVar )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
MPRINT(EM_DIAGRAM):   end;
40800     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   else do;
40801     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
40802     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
40803     +end;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
40804     +else do;
MPRINT(EM_DIAGRAM):   end;
40805     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
40806     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
40807     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
40808     +   end;
MPRINT(EM_DIAGRAM):   end;
40809     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
40810     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
40811     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
40812     +   end;
MPRINT(EM_DIAGRAM):   end;
40813     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
40814     +      DepVar1 = .;
40815     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
40816     +   end;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
40817     +end;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
40818     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
40819     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
40820     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
40821     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
40822     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
40823     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
40824     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
40825     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
40826     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   END;
40827     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
40828     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
40829     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
40830     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
40831     +END;
MPRINT(EM_DIAGRAM):   END;
40832     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
40833     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
40834     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   END;
40835     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
40836     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
40837     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   *** ******************************;
40838     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
40839     +END;
40840     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
40841     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
40842     +*** ******************************;
40843     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
40844     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
40845     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   *** *************************;
40846     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
40847     +*** *************************;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
40848     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
40849     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
40850     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
40851     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
40852     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   END;
40853     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
40854     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
40855     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
40856     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   drop S_:;
40857     +END;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
40858     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40859     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
40860     +********************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40861     +drop S_:;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
40862     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
40863     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
40864     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
40865     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40866     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
40867     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40868     +drop AutoNeural38_P_DepVar0;
40869     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
40870     +*------------------------------------------------------------*;
40871     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
40872     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
40873     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40874     +drop AutoNeural38_WARN_;
40875     +AutoNeural38_WARN_ = _WARN_;
40876     +*------------------------------------------------------------*;
40877     +* Ensmbl11: Average Posteriors of 3 models;
40878     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + AutoNeural38_P_DepVar1 )/3;
40879     +P_DepVar1 = (
40880     +Neural40_P_DepVar1 +
40881     +AutoNeural39_P_DepVar1 +
40882     +AutoNeural38_P_DepVar1
40883     +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + AutoNeural38_P_DepVar0 )/3;
40884     +P_DepVar0 = (
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40885     +Neural40_P_DepVar0 +
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Classification Vars;
40886     +AutoNeural39_P_DepVar0 +
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40887     +AutoNeural38_P_DepVar0
40888     +)/3;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. Use the LENGTH statement as the very first statement in the DATA STEP to declare the length of a character variable.
40889     +*------------------------------------------------------------*;
40890     +* Ensmbl11: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
40891     +*------------------------------------------------------------*;
40892     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length _format $200;
40893     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   drop _format;
MPRINT(EM_DIAGRAM):   _format= ' ';
40894     +length _format $200;
MPRINT(EM_DIAGRAM):   _p_= 0;
MPRINT(EM_DIAGRAM):   drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
40895     +drop _format;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
40896     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= '1';
40897     +_p_= 0;
MPRINT(EM_DIAGRAM):   end;
40898     +drop _p_;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
40899     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
40900     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _format= '0';
40901     +_format= '1';
MPRINT(EM_DIAGRAM):   end;
40902     +end;
40903     +if P_DepVar0 > _p_ then do;
40904     +_p_= P_DepVar0;
40905     +_format= '0';
40906     +end;
40907     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
40908     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
40909     +* Ensmbl11: Producing Unformatted variable;
40910     +*------------------------------------------------------------*;
40911     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
40912     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40913     +else
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing _WARN_ Variable;
40914     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
40915     +*------------------------------------------------------------*;
40916     +* Ensmbl11: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
40917     +*------------------------------------------------------------*;
40918     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   _WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
40919     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
40920     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
40921     +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
40922     +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
40923     +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
40924     +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
40925     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
40926     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
40927     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
40928     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40929     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Residual Vars;
40930     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40931     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
40932     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
40933     +*------------------------------------------------------------*;
40934     +* Ensmbl11: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
40935     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
40936     +if
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
40937     +F_DepVar NE '1'
MPRINT(EM_DIAGRAM):   end;
40938     +AND F_DepVar NE '0'
40939     +then do;
MPRINT(EM_DIAGRAM):   else do;
40940     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
40941     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
40942     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
40943     +else do;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
40944     +R_DepVar1 = -P_DepVar1;
40945     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
40946     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   END;
40947     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
40948     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
40949     +OTHERWISE;
40950     +END;
40951     +END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
40952      run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL11_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
40953      quit;
40954      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
40955      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring NEURAL40_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40956      *------------------------------------------------------------*;
40957      * Ensmbl11: Scoring NEURAL40_VALIDATE data;
40958      *------------------------------------------------------------*;
40959      data EMWS8.Ensmbl11_VALIDATE
40960      / view=EMWS8.Ensmbl11_VALIDATE
40961      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_VALIDATE / view=EMWS8.Ensmbl11_VALIDATE ;
40962      set EMWS8.Neural40_VALIDATE
40963      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_VALIDATE ;
40964      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMFLOWSCORE.sas.
40965     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40966     +* Ensmbl11: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Combine model for DepVar;
40967     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40968     +* Ensmbl11: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 1 of 3;
40969     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40970     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40971     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
40972     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
40973     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
40974     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40975     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40976     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
40977     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
40978     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
40979     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40980     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40981     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
40982     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
40983     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
40984     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40985     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40986     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
40987     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
40988     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
40989     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40990     +
40991     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
40992     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
40993     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
40994     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
40995     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
40996     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
40997     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
40998     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
40999     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
41000     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
41001     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
41002     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41003     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41004     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
41005     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41006     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
41007     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
41008     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
41009     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41010     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
41011     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
41012     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
41013     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41014     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41015     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
41016     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
41017     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
41018     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41019     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41020     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
41021     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
41022     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
41023     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41024     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41025     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
41026     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41027     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
41028     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
41029     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
41030     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
41031     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
41032     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
41033     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
41034     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
41035     +LENGTH _WARN_ $4
41036     +      F_DepVar  $ 12
41037     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
41038     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
41039     +
41040     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
41041     +
41042     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
41043     +
41044     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
41045     +
41046     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
41047     +
41048     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
41049     +
41050     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
41051     +
41052     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
41053     +
41054     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
41055     +
41056     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
41057     +
41058     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
41059     +
41060     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
41061     +
41062     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
41063     +
41064     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
41065     +
41066     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
41067     +
41068     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
41069     +
41070     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
41071     +
41072     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
41073     +
41074     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
41075     +
41076     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
41077     +
41078     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
41079     +
41080     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
41081     +
41082     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
41083     +
41084     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
41085     +
41086     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
41087     +
41088     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
41089     +
41090     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
41091     +
41092     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
41093     +
41094     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
41095     +
41096     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
41097     +
41098     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
41099     +
41100     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
41101     +
41102     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
41103     +
41104     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
41105     +
41106     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
41107     +
41108     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
41109     +
41110     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
41111     +
41112     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
41113     +
41114     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
41115     +
41116     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
41117     +
41118     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
41119     +
41120     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
41121     +
41122     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
41123     +
41124     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
41125     +
41126     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
41127     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
41128     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
41129     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
41130     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41131     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41132     +end;
MPRINT(EM_DIAGRAM):   end;
41133     +else do;
MPRINT(EM_DIAGRAM):   else do;
41134     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41135     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
41136     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41137     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41138     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
41139     +   end;
MPRINT(EM_DIAGRAM):   end;
41140     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41141     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
41142     +   end;
MPRINT(EM_DIAGRAM):   end;
41143     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41144     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
41145     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41146     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41147     +   end;
MPRINT(EM_DIAGRAM):   end;
41148     +end;
MPRINT(EM_DIAGRAM):   end;
41149     +
41150     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
41151     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
41152     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
41153     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
41154     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41155     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41156     +end;
MPRINT(EM_DIAGRAM):   end;
41157     +else do;
MPRINT(EM_DIAGRAM):   else do;
41158     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41159     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
41160     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41161     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41162     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
41163     +   end;
MPRINT(EM_DIAGRAM):   end;
41164     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41165     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
41166     +   end;
MPRINT(EM_DIAGRAM):   end;
41167     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41168     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
41169     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41170     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41171     +   end;
MPRINT(EM_DIAGRAM):   end;
41172     +end;
MPRINT(EM_DIAGRAM):   end;
41173     +
41174     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
41175     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
41176     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
41177     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
41178     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41179     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41180     +end;
MPRINT(EM_DIAGRAM):   end;
41181     +else do;
MPRINT(EM_DIAGRAM):   else do;
41182     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41183     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
41184     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41185     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41186     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
41187     +   end;
MPRINT(EM_DIAGRAM):   end;
41188     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41189     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
41190     +   end;
MPRINT(EM_DIAGRAM):   end;
41191     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41192     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
41193     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41194     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41195     +   end;
MPRINT(EM_DIAGRAM):   end;
41196     +end;
MPRINT(EM_DIAGRAM):   end;
41197     +
41198     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
41199     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
41200     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
41201     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
41202     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41203     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41204     +end;
MPRINT(EM_DIAGRAM):   end;
41205     +else do;
MPRINT(EM_DIAGRAM):   else do;
41206     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41207     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
41208     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41209     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41210     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
41211     +   end;
MPRINT(EM_DIAGRAM):   end;
41212     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41213     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
41214     +   end;
MPRINT(EM_DIAGRAM):   end;
41215     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41216     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
41217     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41218     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41219     +   end;
MPRINT(EM_DIAGRAM):   end;
41220     +end;
MPRINT(EM_DIAGRAM):   end;
41221     +
41222     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
41223     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
41224     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
41225     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
41226     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41227     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41228     +end;
MPRINT(EM_DIAGRAM):   end;
41229     +else do;
MPRINT(EM_DIAGRAM):   else do;
41230     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41231     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
41232     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41233     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41234     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
41235     +   end;
MPRINT(EM_DIAGRAM):   end;
41236     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41237     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
41238     +   end;
MPRINT(EM_DIAGRAM):   end;
41239     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41240     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
41241     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41242     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41243     +   end;
MPRINT(EM_DIAGRAM):   end;
41244     +end;
MPRINT(EM_DIAGRAM):   end;
41245     +
41246     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
41247     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
41248     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
41249     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
41250     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41251     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41252     +end;
MPRINT(EM_DIAGRAM):   end;
41253     +else do;
MPRINT(EM_DIAGRAM):   else do;
41254     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41255     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
41256     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41257     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41258     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
41259     +   end;
MPRINT(EM_DIAGRAM):   end;
41260     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41261     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
41262     +   end;
MPRINT(EM_DIAGRAM):   end;
41263     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41264     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
41265     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41266     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41267     +   end;
MPRINT(EM_DIAGRAM):   end;
41268     +end;
MPRINT(EM_DIAGRAM):   end;
41269     +
41270     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
41271     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
41272     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
41273     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
41274     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41275     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41276     +end;
MPRINT(EM_DIAGRAM):   end;
41277     +else do;
MPRINT(EM_DIAGRAM):   else do;
41278     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41279     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
41280     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41281     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
41282     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
41283     +   end;
MPRINT(EM_DIAGRAM):   end;
41284     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
41285     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
41286     +   end;
MPRINT(EM_DIAGRAM):   end;
41287     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41288     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
41289     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41290     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41291     +   end;
MPRINT(EM_DIAGRAM):   end;
41292     +end;
MPRINT(EM_DIAGRAM):   end;
41293     +
41294     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
41295     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
41296     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41297     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
41298     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
41299     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
41300     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
41301     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
41302     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
41303     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
41304     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
41305     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
41306     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41307     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41308     +end;
MPRINT(EM_DIAGRAM):   end;
41309     +else do;
MPRINT(EM_DIAGRAM):   else do;
41310     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
41311     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
41312     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41313     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
41314     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
41315     +   end;
MPRINT(EM_DIAGRAM):   end;
41316     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
41317     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
41318     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
41319     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
41320     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
41321     +   end;
MPRINT(EM_DIAGRAM):   end;
41322     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
41323     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
41324     +   end;
MPRINT(EM_DIAGRAM):   end;
41325     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
41326     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
41327     +   end;
MPRINT(EM_DIAGRAM):   end;
41328     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
41329     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
41330     +   end;
MPRINT(EM_DIAGRAM):   end;
41331     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41332     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
41333     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
41334     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
41335     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
41336     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41337     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41338     +   end;
MPRINT(EM_DIAGRAM):   end;
41339     +end;
MPRINT(EM_DIAGRAM):   end;
41340     +
41341     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
41342     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
41343     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
41344     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
41345     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
41346     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
41347     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
41348     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
41349     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
41350     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
41351     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
41352     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
41353     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
41354     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41355     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41356     +end;
MPRINT(EM_DIAGRAM):   end;
41357     +else do;
MPRINT(EM_DIAGRAM):   else do;
41358     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
41359     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
41360     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41361     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
41362     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
41363     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
41364     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
41365     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
41366     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41367     +         end;
MPRINT(EM_DIAGRAM):   end;
41368     +         else do;
MPRINT(EM_DIAGRAM):   else do;
41369     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
41370     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
41371     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41372     +            end;
MPRINT(EM_DIAGRAM):   end;
41373     +         end;
MPRINT(EM_DIAGRAM):   end;
41374     +      end;
MPRINT(EM_DIAGRAM):   end;
41375     +      else do;
MPRINT(EM_DIAGRAM):   else do;
41376     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
41377     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
41378     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41379     +         end;
MPRINT(EM_DIAGRAM):   end;
41380     +      end;
MPRINT(EM_DIAGRAM):   end;
41381     +   end;
MPRINT(EM_DIAGRAM):   end;
41382     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41383     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
41384     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
41385     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41386     +      end;
MPRINT(EM_DIAGRAM):   end;
41387     +      else do;
MPRINT(EM_DIAGRAM):   else do;
41388     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
41389     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
41390     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
41391     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
41392     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
41393     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
41394     +         end;
MPRINT(EM_DIAGRAM):   end;
41395     +      end;
MPRINT(EM_DIAGRAM):   end;
41396     +   end;
MPRINT(EM_DIAGRAM):   end;
41397     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
41398     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
41399     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
41400     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
41401     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
41402     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41403     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41404     +   end;
MPRINT(EM_DIAGRAM):   end;
41405     +end;
MPRINT(EM_DIAGRAM):   end;
41406     +
41407     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41408     +*** Checking missing input Interval
41409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
41410     +
41411     +IF NMISS(
41412     +   AcceptedCmpTotal ,
41413     +   Age ,
41414     +   Frq ,
41415     +   Income ,
41416     +   Kidhome ,
41417     +   MntFishProducts ,
41418     +   MntFruits ,
41419     +   MntGoldProds ,
41420     +   MntSweetProducts ,
41421     +   MonthsAsCustomer ,
41422     +   NumDealsPurchases ,
41423     +   NumWebVisitsMonth ,
41424     +   RFMstat ,
41425     +   RMntFrq ,
41426     +   Recency ,
41427     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
41428     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
41429     +
41430     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41431     +END;
MPRINT(EM_DIAGRAM):   END;
41432     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41433     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
41434     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41435     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41436     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
41437     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
41438     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
41439     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
41440     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
41441     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
41442     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
41443     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
41444     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
41445     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
41446     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
41447     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
41448     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
41449     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
41450     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
41451     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
41452     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
41453     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
41454     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
41455     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
41456     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
41457     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
41458     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
41459     +END;
MPRINT(EM_DIAGRAM):   END;
41460     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
41461     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
41462     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
41463     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
41464     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
41465     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
41466     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
41467     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
41468     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
41469     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
41470     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
41471     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
41472     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
41473     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
41474     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
41475     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
41476     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
41477     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
41478     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
41479     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
41480     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
41481     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
41482     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
41483     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
41484     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
41485     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
41486     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
41487     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
41488     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
41489     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
41490     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
41491     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
41492     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
41493     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
41494     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
41495     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
41496     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
41497     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
41498     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
41499     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
41500     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
41501     +END;
MPRINT(EM_DIAGRAM):   END;
41502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41503     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
41504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41505     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41506     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
41507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41508     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41509     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
41510     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41511     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41512     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
41513     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
41514     +        S_Income  +     0.39760289149752 * S_Kidhome
41515     +          +     -0.0376693415484 * S_MntFishProducts
41516     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
41517     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
41518     +          +    -0.13043754404228 * S_MonthsAsCustomer
41519     +          +     -0.0139146653349 * S_NumDealsPurchases
41520     +          +    -0.01539820220757 * S_NumWebVisitsMonth
41521     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
41522     +        S_RMntFrq  +     0.55149605442396 * S_Recency
41523     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + -0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + -0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits
+ 0.03640992016126 * S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 *
S_RMntFrq + 0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
41524     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
41525     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
41526     +        S_Income  +     0.31208673256073 * S_Kidhome
41527     +          +    -0.04911763008195 * S_MntFishProducts
41528     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
41529     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
41530     +          +    -0.48577934340503 * S_MonthsAsCustomer
41531     +          +     0.31218334237091 * S_NumDealsPurchases
41532     +          +     0.24212805498377 * S_NumWebVisitsMonth
41533     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
41534     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
41535     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age + -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + -0.04911763008195 * S_MntFishProducts + 0.04440357574827 *
S_MntFruits + 0.18064625439163 * S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat +
-0.01845944589462 * S_RMntFrq + -0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
41536     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
41537     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
41538     +        S_Income  +    -0.48748003518551 * S_Kidhome
41539     +          +     0.15434683428908 * S_MntFishProducts
41540     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
41541     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
41542     +          +    -0.07405705160744 * S_MonthsAsCustomer
41543     +          +    -0.44979778263337 * S_NumDealsPurchases
41544     +          +    -0.51422673599958 * S_NumWebVisitsMonth
41545     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
41546     +        S_RMntFrq  +     0.79850779605341 * S_Recency
41547     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age + -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 0.15434683428908 * S_MntFishProducts + 0.06482294164983 *
S_MntFruits + -0.54308686262134 * S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat +
-0.49659927360573 * S_RMntFrq + 0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
41548     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
41549     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
41550     +        S_Income  +    -0.62401744170985 * S_Kidhome
41551     +          +    -0.08499883212951 * S_MntFishProducts
41552     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
41553     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
41554     +          +    -0.04051431518694 * S_MonthsAsCustomer
41555     +          +     0.00788125797776 * S_NumDealsPurchases
41556     +          +     0.59495434076477 * S_NumWebVisitsMonth
41557     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
41558     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
41559     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + -0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits
+ -0.00355780886042 * S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 *
S_RMntFrq + -0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
41560     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
41561     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
41562     +        S_Income  +     -0.0256051183156 * S_Kidhome
41563     +          +    -0.15661247042419 * S_MntFishProducts
41564     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
41565     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
41566     +          +     0.03994503424293 * S_MonthsAsCustomer
41567     +          +    -0.53734193208154 * S_NumDealsPurchases
41568     +          +    -0.58547802324835 * S_NumWebVisitsMonth
41569     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
41570     +        S_RMntFrq  +     0.66048924026365 * S_Recency
41571     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age + 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + -0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits
+ 0.02103897411055 * S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer + -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + -0.06088682875304 * S_RFMstat + -0.16953747051887 *
S_RMntFrq + 0.66048924026365 * S_Recency + -0.18125808371879 * S_Teenhome ;
41572     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
41573     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
41574     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
41575     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
41576     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 +
-0.29371842867452 * HigherEducationBinary0 ;
41577     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
41578     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
41579     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
41580     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
41581     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 +
0.26244151632714 * HigherEducationBinary0 ;
41582     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
41583     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
41584     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
41585     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
41586     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 +
0.12575052691333 * HigherEducationBinary0 ;
41587     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
41588     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
41589     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
41590     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
41591     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 +
0.03016266549641 * HigherEducationBinary0 ;
41592     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
41593     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
41594     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
41595     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
41596     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 +
0.16683238673979 * HigherEducationBinary0 ;
41597     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
41598     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
41599     +        EducationGraduation  +     0.23295390047952 * EducationMaster
41600     +          +    -0.41529808115031 * Marital_StatusDivorced
41601     +          +     0.65264978817749 * Marital_StatusMarried
41602     +          +    -0.52150453945732 * Marital_StatusSingle
41603     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster + -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 *
Marital_StatusMarried + -0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
41604     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
41605     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
41606     +        EducationGraduation  +     0.04425534246646 * EducationMaster
41607     +          +    -0.32207382402099 * Marital_StatusDivorced
41608     +          +     0.16112567537413 * Marital_StatusMarried
41609     +          +     0.28859198712458 * Marital_StatusSingle
41610     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + -0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 *
Marital_StatusMarried + 0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
41611     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
41612     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
41613     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
41614     +          +    -0.06823118087629 * Marital_StatusDivorced
41615     +          +    -0.01696675344176 * Marital_StatusMarried
41616     +          +    -0.04922830766868 * Marital_StatusSingle
41617     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster + -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 *
Marital_StatusMarried + -0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
41618     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
41619     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
41620     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
41621     +          +     0.20346888384065 * Marital_StatusDivorced
41622     +          +     -0.5246097720646 * Marital_StatusMarried
41623     +          +     0.50991923175058 * Marital_StatusSingle
41624     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 *
Marital_StatusMarried + 0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
41625     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
41626     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
41627     +        EducationGraduation  +     0.03117170136897 * EducationMaster
41628     +          +    -0.14128509643843 * Marital_StatusDivorced
41629     +          +    -0.17344467864829 * Marital_StatusMarried
41630     +          +     0.09201105049634 * Marital_StatusSingle
41631     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + -0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 *
Marital_StatusMarried + 0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
41632     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
41633     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
41634     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
41635     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
41636     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
41637     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
41638     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
41639     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
41640     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
41641     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
41642     +END;
MPRINT(EM_DIAGRAM):   END;
41643     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
41644     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
41645     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
41646     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
41647     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
41648     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
41649     +END;
MPRINT(EM_DIAGRAM):   END;
41650     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41651     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
41652     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41653     +
41654     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
41655     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
41656     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
41657     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
41658     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
41659     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41660     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
41661     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
41662     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
41663     +end;
MPRINT(EM_DIAGRAM):   end;
41664     +else do;
MPRINT(EM_DIAGRAM):   else do;
41665     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
41666     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
41667     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
41668     +   end;
MPRINT(EM_DIAGRAM):   end;
41669     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
41670     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
41671     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
41672     +   end;
MPRINT(EM_DIAGRAM):   end;
41673     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41674     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
41675     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
41676     +   end;
MPRINT(EM_DIAGRAM):   end;
41677     +end;
MPRINT(EM_DIAGRAM):   end;
41678     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
41679     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
41680     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
41681     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + -2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
41682     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
41683     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
41684     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
41685     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
41686     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
41687     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
41688     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
41689     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
41690     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
41691     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
41692     +END;
MPRINT(EM_DIAGRAM):   END;
41693     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
41694     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
41695     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
41696     +END;
MPRINT(EM_DIAGRAM):   END;
41697     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
41698     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
41699     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
41700     +END;
MPRINT(EM_DIAGRAM):   END;
41701     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
41702     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
41703     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
41704     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
41705     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
41706     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
41707     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
41708     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41709     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
41710     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
41711     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
41712     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
41713     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
41714     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
41715     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
41716     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
41717     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
41718     +END;
MPRINT(EM_DIAGRAM):   END;
41719     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
41720     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
41721     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
41722     +drop
41723     +H11
41724     +H12
41725     +H13
41726     +H14
41727     +H15
41728     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
41729     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
41730     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
41731     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41732     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
41733     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41734     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
41735     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
41736     +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
41737     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
41738     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41739     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
41740     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41741     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
41742     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
41743     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
41744     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41745     +* Ensmbl11: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 2 of 3;
41746     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41747     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41748     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
41749     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
41750     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
41751     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
41752     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41753     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
41754     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
41755     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
41756     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
41757     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
41758     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
41759     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
41760     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
41761     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
41762     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
41763     +LENGTH _WARN_ $4
41764     +      F_DepVar  $ 12
41765     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
41766     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
41767     +
41768     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
41769     +
41770     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
41771     +
41772     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
41773     +
41774     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
41775     +
41776     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
41777     +
41778     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
41779     +
41780     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
41781     +
41782     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
41783     +
41784     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
41785     +
41786     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
41787     +
41788     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
41789     +
41790     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
41791     +
41792     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
41793     +
41794     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
41795     +
41796     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
41797     +
41798     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
41799     +
41800     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
41801     +
41802     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
41803     +
41804     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
41805     +
41806     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
41807     +
41808     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
41809     +
41810     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
41811     +
41812     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
41813     +
41814     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
41815     +
41816     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
41817     +
41818     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
41819     +
41820     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
41821     +
41822     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
41823     +
41824     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
41825     +
41826     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
41827     +
41828     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
41829     +
41830     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
41831     +
41832     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
41833     +
41834     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
41835     +
41836     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
41837     +
41838     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
41839     +
41840     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
41841     +
41842     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
41843     +
41844     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
41845     +
41846     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
41847     +
41848     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
41849     +
41850     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
41851     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
41852     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
41853     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
41854     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41855     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41856     +end;
MPRINT(EM_DIAGRAM):   end;
41857     +else do;
MPRINT(EM_DIAGRAM):   else do;
41858     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41859     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
41860     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41861     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41862     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
41863     +   end;
MPRINT(EM_DIAGRAM):   end;
41864     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41865     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
41866     +   end;
MPRINT(EM_DIAGRAM):   end;
41867     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41868     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
41869     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41870     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41871     +   end;
MPRINT(EM_DIAGRAM):   end;
41872     +end;
MPRINT(EM_DIAGRAM):   end;
41873     +
41874     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
41875     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
41876     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
41877     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
41878     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41879     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41880     +end;
MPRINT(EM_DIAGRAM):   end;
41881     +else do;
MPRINT(EM_DIAGRAM):   else do;
41882     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41883     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
41884     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41885     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41886     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
41887     +   end;
MPRINT(EM_DIAGRAM):   end;
41888     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41889     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
41890     +   end;
MPRINT(EM_DIAGRAM):   end;
41891     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41892     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
41893     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41894     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41895     +   end;
MPRINT(EM_DIAGRAM):   end;
41896     +end;
MPRINT(EM_DIAGRAM):   end;
41897     +
41898     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
41899     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
41900     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
41901     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
41902     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41903     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41904     +end;
MPRINT(EM_DIAGRAM):   end;
41905     +else do;
MPRINT(EM_DIAGRAM):   else do;
41906     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41907     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
41908     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41909     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41910     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
41911     +   end;
MPRINT(EM_DIAGRAM):   end;
41912     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41913     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
41914     +   end;
MPRINT(EM_DIAGRAM):   end;
41915     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41916     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
41917     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41918     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41919     +   end;
MPRINT(EM_DIAGRAM):   end;
41920     +end;
MPRINT(EM_DIAGRAM):   end;
41921     +
41922     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
41923     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
41924     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
41925     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
41926     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41927     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41928     +end;
MPRINT(EM_DIAGRAM):   end;
41929     +else do;
MPRINT(EM_DIAGRAM):   else do;
41930     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41931     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
41932     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41933     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41934     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
41935     +   end;
MPRINT(EM_DIAGRAM):   end;
41936     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41937     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
41938     +   end;
MPRINT(EM_DIAGRAM):   end;
41939     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41940     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
41941     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41942     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41943     +   end;
MPRINT(EM_DIAGRAM):   end;
41944     +end;
MPRINT(EM_DIAGRAM):   end;
41945     +
41946     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
41947     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
41948     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
41949     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
41950     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41951     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41952     +end;
MPRINT(EM_DIAGRAM):   end;
41953     +else do;
MPRINT(EM_DIAGRAM):   else do;
41954     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41955     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
41956     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41957     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41958     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
41959     +   end;
MPRINT(EM_DIAGRAM):   end;
41960     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41961     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
41962     +   end;
MPRINT(EM_DIAGRAM):   end;
41963     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41964     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
41965     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41966     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41967     +   end;
MPRINT(EM_DIAGRAM):   end;
41968     +end;
MPRINT(EM_DIAGRAM):   end;
41969     +
41970     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
41971     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
41972     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
41973     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
41974     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41975     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41976     +end;
MPRINT(EM_DIAGRAM):   end;
41977     +else do;
MPRINT(EM_DIAGRAM):   else do;
41978     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
41979     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
41980     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
41981     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
41982     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
41983     +   end;
MPRINT(EM_DIAGRAM):   end;
41984     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
41985     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
41986     +   end;
MPRINT(EM_DIAGRAM):   end;
41987     +   else do;
MPRINT(EM_DIAGRAM):   else do;
41988     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
41989     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
41990     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
41991     +   end;
MPRINT(EM_DIAGRAM):   end;
41992     +end;
MPRINT(EM_DIAGRAM):   end;
41993     +
41994     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
41995     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
41996     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
41997     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
41998     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
41999     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42000     +end;
MPRINT(EM_DIAGRAM):   end;
42001     +else do;
MPRINT(EM_DIAGRAM):   else do;
42002     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42003     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
42004     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42005     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
42006     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
42007     +   end;
MPRINT(EM_DIAGRAM):   end;
42008     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
42009     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
42010     +   end;
MPRINT(EM_DIAGRAM):   end;
42011     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42012     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
42013     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42014     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42015     +   end;
MPRINT(EM_DIAGRAM):   end;
42016     +end;
MPRINT(EM_DIAGRAM):   end;
42017     +
42018     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
42019     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
42020     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42021     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
42022     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
42023     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
42024     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
42025     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
42026     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
42027     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
42028     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
42029     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
42030     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42031     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42032     +end;
MPRINT(EM_DIAGRAM):   end;
42033     +else do;
MPRINT(EM_DIAGRAM):   else do;
42034     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
42035     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
42036     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42037     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
42038     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
42039     +   end;
MPRINT(EM_DIAGRAM):   end;
42040     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
42041     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
42042     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
42043     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
42044     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
42045     +   end;
MPRINT(EM_DIAGRAM):   end;
42046     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
42047     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
42048     +   end;
MPRINT(EM_DIAGRAM):   end;
42049     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
42050     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
42051     +   end;
MPRINT(EM_DIAGRAM):   end;
42052     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
42053     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
42054     +   end;
MPRINT(EM_DIAGRAM):   end;
42055     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42056     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
42057     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
42058     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
42059     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
42060     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42061     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42062     +   end;
MPRINT(EM_DIAGRAM):   end;
42063     +end;
MPRINT(EM_DIAGRAM):   end;
42064     +
42065     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
42066     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
42067     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
42068     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42069     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
42070     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
42071     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
42072     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
42073     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
42074     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42075     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42076     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42077     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42078     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42079     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42080     +end;
MPRINT(EM_DIAGRAM):   end;
42081     +else do;
MPRINT(EM_DIAGRAM):   else do;
42082     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
42083     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
42084     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42085     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
42086     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
42087     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
42088     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
42089     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
42090     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42091     +         end;
MPRINT(EM_DIAGRAM):   end;
42092     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42093     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
42094     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
42095     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42096     +            end;
MPRINT(EM_DIAGRAM):   end;
42097     +         end;
MPRINT(EM_DIAGRAM):   end;
42098     +      end;
MPRINT(EM_DIAGRAM):   end;
42099     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42100     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
42101     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
42102     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42103     +         end;
MPRINT(EM_DIAGRAM):   end;
42104     +      end;
MPRINT(EM_DIAGRAM):   end;
42105     +   end;
MPRINT(EM_DIAGRAM):   end;
42106     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42107     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
42108     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
42109     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42110     +      end;
MPRINT(EM_DIAGRAM):   end;
42111     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42112     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
42113     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
42114     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
42115     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
42116     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
42117     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42118     +         end;
MPRINT(EM_DIAGRAM):   end;
42119     +      end;
MPRINT(EM_DIAGRAM):   end;
42120     +   end;
MPRINT(EM_DIAGRAM):   end;
42121     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42122     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42123     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42124     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42125     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42126     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42127     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42128     +   end;
MPRINT(EM_DIAGRAM):   end;
42129     +end;
MPRINT(EM_DIAGRAM):   end;
42130     +
42131     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42132     +*** Checking missing input Interval
42133     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42134     +
42135     +IF NMISS(
42136     +   AcceptedCmpTotal ,
42137     +   Age ,
42138     +   Frq ,
42139     +   Income ,
42140     +   Kidhome ,
42141     +   MntFishProducts ,
42142     +   MntFruits ,
42143     +   MntGoldProds ,
42144     +   MntSweetProducts ,
42145     +   MonthsAsCustomer ,
42146     +   NumDealsPurchases ,
42147     +   NumWebVisitsMonth ,
42148     +   RFMstat ,
42149     +   RMntFrq ,
42150     +   Recency ,
42151     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
42152     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42153     +
42154     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42155     +END;
MPRINT(EM_DIAGRAM):   END;
42156     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42157     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
42158     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42159     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42160     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42161     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42162     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
42163     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42164     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42165     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
42166     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
42167     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
42168     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
42169     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
42170     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42171     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
42172     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
42173     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
42174     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
42175     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
42176     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42177     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
42178     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42179     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42180     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
42181     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42182     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42183     +END;
MPRINT(EM_DIAGRAM):   END;
42184     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42185     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
42186     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42187     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42188     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
42189     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
42190     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
42191     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42192     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
42193     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42194     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
42195     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
42196     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
42197     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
42198     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
42199     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
42200     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
42201     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
42202     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
42203     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
42204     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42205     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
42206     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
42207     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
42208     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
42209     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
42210     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
42211     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
42212     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
42213     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42214     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
42215     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
42216     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42217     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
42218     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42219     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
42220     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
42221     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
42222     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42223     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
42224     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42225     +END;
MPRINT(EM_DIAGRAM):   END;
42226     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42227     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
42228     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42229     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42230     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
42231     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42232     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42233     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
42234     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42235     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42236     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
42237     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
42238     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
42239     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
42240     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
42241     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
42242     +          +     -0.1740957673716 * S_MonthsAsCustomer
42243     +          +     0.66565026405117 * S_NumDealsPurchases
42244     +          +     0.43247206282836 * S_NumWebVisitsMonth
42245     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
42246     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
42247     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 *
S_MntFruits + 0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat +
0.26260869862277 * S_RMntFrq + -0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
42248     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
42249     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
42250     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
42251     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
42252     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
42253     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
42254     +          +    -0.06176784990963 * S_MonthsAsCustomer
42255     +          +    -0.11740415005833 * S_NumDealsPurchases
42256     +          +    -0.17084845478672 * S_NumWebVisitsMonth
42257     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
42258     +        S_RMntFrq  +     0.54983271222574 * S_Recency
42259     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 *
S_MntFruits + 0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 * S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat +
-0.13250191926905 * S_RMntFrq + 0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
42260     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
42261     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
42262     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
42263     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
42264     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 * AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 +
-0.4767771812126 * HigherEducationBinary0 ;
42265     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
42266     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
42267     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
42268     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
42269     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 +
-0.27229992860702 * HigherEducationBinary0 ;
42270     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
42271     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
42272     +        EducationGraduation  +     0.22632282500966 * EducationMaster
42273     +          +     -0.0800438380883 * Marital_StatusDivorced
42274     +          +     0.44505766937623 * Marital_StatusMarried
42275     +          +    -0.57546515626468 * Marital_StatusSingle
42276     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + -0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 0.44505766937623
* Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 0.38638180853046 * Marital_StatusTogether ;
42277     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
42278     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
42279     +        EducationGraduation  +      0.0794165981215 * EducationMaster
42280     +          +    -0.20291653465543 * Marital_StatusDivorced
42281     +          +     0.39547414450617 * Marital_StatusMarried
42282     +          +    -0.37001331184001 * Marital_StatusSingle
42283     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + -0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 * EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617
* Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * Marital_StatusTogether ;
42284     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
42285     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
42286     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
42287     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
42288     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42289     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
42290     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
42291     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
42292     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
42293     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
42294     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
42295     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
42296     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
42297     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
42298     +END;
MPRINT(EM_DIAGRAM):   END;
42299     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42300     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
42301     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
42302     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
42303     +END;
MPRINT(EM_DIAGRAM):   END;
42304     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42305     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
42306     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42307     +
42308     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
42309     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
42310     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42311     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
42312     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
42313     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42314     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
42315     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42316     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42317     +end;
MPRINT(EM_DIAGRAM):   end;
42318     +else do;
MPRINT(EM_DIAGRAM):   else do;
42319     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
42320     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
42321     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
42322     +   end;
MPRINT(EM_DIAGRAM):   end;
42323     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
42324     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
42325     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
42326     +   end;
MPRINT(EM_DIAGRAM):   end;
42327     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42328     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42329     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42330     +   end;
MPRINT(EM_DIAGRAM):   end;
42331     +end;
MPRINT(EM_DIAGRAM):   end;
42332     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42333     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
42334     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 10.3301873876241 * H1x1_3 ;
42335     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
42336     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
42337     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
42338     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42339     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
42340     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
42341     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
42342     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
42343     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
42344     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
42345     +END;
MPRINT(EM_DIAGRAM):   END;
42346     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42347     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
42348     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
42349     +END;
MPRINT(EM_DIAGRAM):   END;
42350     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
42351     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
42352     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
42353     +END;
MPRINT(EM_DIAGRAM):   END;
42354     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
42355     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
42356     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
42357     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
42358     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
42359     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
42360     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
42361     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42362     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
42363     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42364     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
42365     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
42366     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
42367     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
42368     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
42369     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
42370     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
42371     +END;
MPRINT(EM_DIAGRAM):   END;
42372     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
42373     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
42374     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
42375     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
42376     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
42377     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42378     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
42379     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42380     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
42381     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
42382     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
42383     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
42384     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42385     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
42386     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42387     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
42388     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
42389     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
42390     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42391     +* Ensmbl11: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Scoring Code of model 3 of 3;
42392     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42393     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42394     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
42395     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
42396     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
42397     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42398     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
42399     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
42400     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
42401     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
42402     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
42403     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
42404     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
42405     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
42406     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
42407     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
42408     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
42409     +LENGTH _WARN_ $4
42410     +      F_DepVar  $ 12
42411     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
42412     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
42413     +
42414     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
42415     +
42416     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
42417     +
42418     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
42419     +
42420     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
42421     +
42422     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
42423     +
42424     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
42425     +
42426     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
42427     +
42428     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
42429     +
42430     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
42431     +
42432     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
42433     +
42434     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
42435     +
42436     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
42437     +
42438     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
42439     +
42440     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
42441     +
42442     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
42443     +
42444     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
42445     +
42446     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
42447     +
42448     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
42449     +
42450     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
42451     +
42452     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
42453     +
42454     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
42455     +
42456     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
42457     +
42458     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
42459     +
42460     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
42461     +
42462     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
42463     +
42464     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
42465     +
42466     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
42467     +
42468     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
42469     +
42470     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
42471     +
42472     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
42473     +
42474     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
42475     +
42476     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
42477     +
42478     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
42479     +
42480     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42481     +
42482     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
42483     +
42484     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
42485     +
42486     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
42487     +
42488     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
42489     +
42490     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
42491     +
42492     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
42493     +
42494     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
42495     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
42496     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
42497     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
42498     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42499     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42500     +end;
MPRINT(EM_DIAGRAM):   end;
42501     +else do;
MPRINT(EM_DIAGRAM):   else do;
42502     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42503     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
42504     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42505     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42506     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
42507     +   end;
MPRINT(EM_DIAGRAM):   end;
42508     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42509     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
42510     +   end;
MPRINT(EM_DIAGRAM):   end;
42511     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42512     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
42513     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42514     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42515     +   end;
MPRINT(EM_DIAGRAM):   end;
42516     +end;
MPRINT(EM_DIAGRAM):   end;
42517     +
42518     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
42519     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
42520     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
42521     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
42522     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42523     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42524     +end;
MPRINT(EM_DIAGRAM):   end;
42525     +else do;
MPRINT(EM_DIAGRAM):   else do;
42526     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42527     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
42528     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42529     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42530     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
42531     +   end;
MPRINT(EM_DIAGRAM):   end;
42532     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42533     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
42534     +   end;
MPRINT(EM_DIAGRAM):   end;
42535     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42536     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
42537     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42538     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42539     +   end;
MPRINT(EM_DIAGRAM):   end;
42540     +end;
MPRINT(EM_DIAGRAM):   end;
42541     +
42542     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
42543     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
42544     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
42545     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
42546     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42547     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42548     +end;
MPRINT(EM_DIAGRAM):   end;
42549     +else do;
MPRINT(EM_DIAGRAM):   else do;
42550     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42551     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
42552     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42553     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42554     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
42555     +   end;
MPRINT(EM_DIAGRAM):   end;
42556     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42557     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
42558     +   end;
MPRINT(EM_DIAGRAM):   end;
42559     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42560     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
42561     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42562     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42563     +   end;
MPRINT(EM_DIAGRAM):   end;
42564     +end;
MPRINT(EM_DIAGRAM):   end;
42565     +
42566     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
42567     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
42568     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
42569     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
42570     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42571     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42572     +end;
MPRINT(EM_DIAGRAM):   end;
42573     +else do;
MPRINT(EM_DIAGRAM):   else do;
42574     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42575     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
42576     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42577     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42578     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
42579     +   end;
MPRINT(EM_DIAGRAM):   end;
42580     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42581     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
42582     +   end;
MPRINT(EM_DIAGRAM):   end;
42583     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42584     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
42585     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42586     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42587     +   end;
MPRINT(EM_DIAGRAM):   end;
42588     +end;
MPRINT(EM_DIAGRAM):   end;
42589     +
42590     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
42591     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
42592     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
42593     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
42594     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42595     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42596     +end;
MPRINT(EM_DIAGRAM):   end;
42597     +else do;
MPRINT(EM_DIAGRAM):   else do;
42598     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42599     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
42600     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42601     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42602     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
42603     +   end;
MPRINT(EM_DIAGRAM):   end;
42604     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42605     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
42606     +   end;
MPRINT(EM_DIAGRAM):   end;
42607     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42608     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
42609     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42610     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42611     +   end;
MPRINT(EM_DIAGRAM):   end;
42612     +end;
MPRINT(EM_DIAGRAM):   end;
42613     +
42614     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
42615     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
42616     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
42617     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
42618     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42619     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42620     +end;
MPRINT(EM_DIAGRAM):   end;
42621     +else do;
MPRINT(EM_DIAGRAM):   else do;
42622     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42623     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
42624     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42625     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
42626     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
42627     +   end;
MPRINT(EM_DIAGRAM):   end;
42628     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
42629     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
42630     +   end;
MPRINT(EM_DIAGRAM):   end;
42631     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42632     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
42633     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42634     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42635     +   end;
MPRINT(EM_DIAGRAM):   end;
42636     +end;
MPRINT(EM_DIAGRAM):   end;
42637     +
42638     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
42639     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
42640     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
42641     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
42642     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42643     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42644     +end;
MPRINT(EM_DIAGRAM):   end;
42645     +else do;
MPRINT(EM_DIAGRAM):   else do;
42646     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
42647     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
42648     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42649     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
42650     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
42651     +   end;
MPRINT(EM_DIAGRAM):   end;
42652     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
42653     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
42654     +   end;
MPRINT(EM_DIAGRAM):   end;
42655     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42656     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
42657     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42658     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42659     +   end;
MPRINT(EM_DIAGRAM):   end;
42660     +end;
MPRINT(EM_DIAGRAM):   end;
42661     +
42662     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
42663     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
42664     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42665     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
42666     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
42667     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
42668     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
42669     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
42670     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
42671     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
42672     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
42673     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
42674     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42675     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42676     +end;
MPRINT(EM_DIAGRAM):   end;
42677     +else do;
MPRINT(EM_DIAGRAM):   else do;
42678     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
42679     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
42680     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42681     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
42682     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
42683     +   end;
MPRINT(EM_DIAGRAM):   end;
42684     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
42685     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
42686     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
42687     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
42688     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
42689     +   end;
MPRINT(EM_DIAGRAM):   end;
42690     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
42691     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
42692     +   end;
MPRINT(EM_DIAGRAM):   end;
42693     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
42694     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
42695     +   end;
MPRINT(EM_DIAGRAM):   end;
42696     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
42697     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
42698     +   end;
MPRINT(EM_DIAGRAM):   end;
42699     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42700     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
42701     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
42702     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
42703     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
42704     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42705     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42706     +   end;
MPRINT(EM_DIAGRAM):   end;
42707     +end;
MPRINT(EM_DIAGRAM):   end;
42708     +
42709     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
42710     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
42711     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
42712     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
42713     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
42714     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
42715     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
42716     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
42717     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
42718     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42719     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42720     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42721     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42722     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
42723     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42724     +end;
MPRINT(EM_DIAGRAM):   end;
42725     +else do;
MPRINT(EM_DIAGRAM):   else do;
42726     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
42727     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
42728     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42729     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
42730     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
42731     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
42732     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
42733     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
42734     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42735     +         end;
MPRINT(EM_DIAGRAM):   end;
42736     +         else do;
MPRINT(EM_DIAGRAM):   else do;
42737     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
42738     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
42739     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42740     +            end;
MPRINT(EM_DIAGRAM):   end;
42741     +         end;
MPRINT(EM_DIAGRAM):   end;
42742     +      end;
MPRINT(EM_DIAGRAM):   end;
42743     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42744     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
42745     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
42746     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42747     +         end;
MPRINT(EM_DIAGRAM):   end;
42748     +      end;
MPRINT(EM_DIAGRAM):   end;
42749     +   end;
MPRINT(EM_DIAGRAM):   end;
42750     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42751     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
42752     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
42753     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42754     +      end;
MPRINT(EM_DIAGRAM):   end;
42755     +      else do;
MPRINT(EM_DIAGRAM):   else do;
42756     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
42757     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
42758     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
42759     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
42760     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
42761     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
42762     +         end;
MPRINT(EM_DIAGRAM):   end;
42763     +      end;
MPRINT(EM_DIAGRAM):   end;
42764     +   end;
MPRINT(EM_DIAGRAM):   end;
42765     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
42766     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
42767     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
42768     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
42769     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
42770     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
42771     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42772     +   end;
MPRINT(EM_DIAGRAM):   end;
42773     +end;
MPRINT(EM_DIAGRAM):   end;
42774     +
42775     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42776     +*** Checking missing input Interval
42777     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
42778     +
42779     +IF NMISS(
42780     +   AcceptedCmpTotal ,
42781     +   Age ,
42782     +   Frq ,
42783     +   Income ,
42784     +   Kidhome ,
42785     +   MntFishProducts ,
42786     +   MntFruits ,
42787     +   MntGoldProds ,
42788     +   MntSweetProducts ,
42789     +   MonthsAsCustomer ,
42790     +   NumDealsPurchases ,
42791     +   NumWebVisitsMonth ,
42792     +   RFMstat ,
42793     +   RMntFrq ,
42794     +   Recency ,
42795     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
42796     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
42797     +
42798     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
42799     +END;
MPRINT(EM_DIAGRAM):   END;
42800     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42801     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
42802     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42803     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42804     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42805     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42806     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
42807     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42808     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42809     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
42810     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
42811     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
42812     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
42813     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
42814     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42815     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
42816     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
42817     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
42818     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
42819     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
42820     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42821     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
42822     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42823     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42824     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
42825     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42826     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42827     +END;
MPRINT(EM_DIAGRAM):   END;
42828     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42829     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
42830     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
42831     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
42832     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
42833     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
42834     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
42835     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
42836     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
42837     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
42838     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
42839     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
42840     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
42841     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
42842     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
42843     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
42844     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
42845     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
42846     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
42847     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
42848     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
42849     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
42850     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
42851     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
42852     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
42853     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
42854     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
42855     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
42856     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
42857     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
42858     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
42859     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
42860     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
42861     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
42862     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
42863     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
42864     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
42865     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
42866     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
42867     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
42868     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
42869     +END;
MPRINT(EM_DIAGRAM):   END;
42870     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42871     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
42872     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42873     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42874     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
42875     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42876     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42877     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
42878     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42879     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42880     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
42881     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
42882     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
42883     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
42884     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
42885     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
42886     +          +     0.07696704519183 * S_MonthsAsCustomer
42887     +          +     0.06885982009617 * S_NumDealsPurchases
42888     +          +     0.18284147478918 * S_NumWebVisitsMonth
42889     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
42890     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
42891     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome + -0.02139676364759 * S_MntFishProducts + -0.06309036790386 *
S_MntFruits + -0.02579098391162 * S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat +
0.16731511643557 * S_RMntFrq + -0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
42892     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
42893     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
42894     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
42895     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
42896     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
42897     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
42898     +          +     0.19400730773464 * S_MonthsAsCustomer
42899     +          +    -1.36455521037197 * S_NumDealsPurchases
42900     +          +    -1.07068059346196 * S_NumWebVisitsMonth
42901     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
42902     +        S_RMntFrq  +     1.36066079800227 * S_Recency
42903     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age + 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + -0.61585865165341 * S_MntFishProducts + 0.48583904586511 *
S_MntFruits + -0.38353134378746 * S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer + -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + -0.4953702697801 * S_RFMstat +
-0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + -0.04271320094349 * S_Teenhome ;
42904     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
42905     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
42906     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
42907     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
42908     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 * AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + -0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 +
0.36349047632504 * HigherEducationBinary0 ;
42909     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
42910     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
42911     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
42912     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
42913     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + -0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 +
0.47014175146609 * HigherEducationBinary0 ;
42914     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
42915     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
42916     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
42917     +          +     0.23432241402098 * Marital_StatusDivorced
42918     +          +    -0.46302700269027 * Marital_StatusMarried
42919     +          +      0.4032168653504 * Marital_StatusSingle
42920     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 * EducationMaster + 0.23432241402098 * Marital_StatusDivorced +
-0.46302700269027 * Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * Marital_StatusTogether ;
42921     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
42922     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
42923     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
42924     +          +    -0.31347503340603 * Marital_StatusDivorced
42925     +          +    -0.20319530959178 * Marital_StatusMarried
42926     +          +     0.48298350411196 * Marital_StatusSingle
42927     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 * EducationMaster + -0.31347503340603 * Marital_StatusDivorced +
-0.20319530959178 * Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * Marital_StatusTogether ;
42928     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
42929     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
42930     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
42931     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
42932     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
42933     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
42934     +END;
MPRINT(EM_DIAGRAM):   END;
42935     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42936     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
42937     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
42938     +END;
MPRINT(EM_DIAGRAM):   END;
42939     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42940     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
42941     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42942     +
42943     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
42944     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
42945     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
42946     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
42947     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
42948     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
42949     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
42950     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42951     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42952     +end;
MPRINT(EM_DIAGRAM):   end;
42953     +else do;
MPRINT(EM_DIAGRAM):   else do;
42954     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
42955     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
42956     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
42957     +   end;
MPRINT(EM_DIAGRAM):   end;
42958     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
42959     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
42960     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
42961     +   end;
MPRINT(EM_DIAGRAM):   end;
42962     +   else do;
MPRINT(EM_DIAGRAM):   else do;
42963     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
42964     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
42965     +   end;
MPRINT(EM_DIAGRAM):   end;
42966     +end;
MPRINT(EM_DIAGRAM):   end;
42967     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
42968     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
42969     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
42970     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
42971     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
42972     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
42973     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
42974     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
42975     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
42976     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
42977     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
42978     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
42979     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
42980     +END;
MPRINT(EM_DIAGRAM):   END;
42981     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
42982     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
42983     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
42984     +END;
MPRINT(EM_DIAGRAM):   END;
42985     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
42986     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
42987     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
42988     +END;
MPRINT(EM_DIAGRAM):   END;
42989     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
42990     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
42991     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
42992     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
42993     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
42994     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
42995     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
42996     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42997     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
42998     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
42999     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
43000     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
43001     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
43002     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
43003     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
43004     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
43005     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
43006     +END;
MPRINT(EM_DIAGRAM):   END;
43007     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
43008     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
43009     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
43010     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
43011     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
43012     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43013     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
43014     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43015     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
43016     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
43017     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
43018     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
43019     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43020     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
43021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43022     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
43023     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
43024     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
43025     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43026     +* Ensmbl11: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Average Posteriors of 3 models;
43027     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43028     +P_DepVar1 = (
43029     +Neural40_P_DepVar1 +
43030     +AutoNeural39_P_DepVar1 +
43031     +AutoNeural38_P_DepVar1
43032     +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + AutoNeural38_P_DepVar1 )/3;
43033     +P_DepVar0 = (
43034     +Neural40_P_DepVar0 +
43035     +AutoNeural39_P_DepVar0 +
43036     +AutoNeural38_P_DepVar0
43037     +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + AutoNeural38_P_DepVar0 )/3;
43038     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43039     +* Ensmbl11: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Classification Vars;
43040     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43041     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. Use the LENGTH statement as the very first statement in the DATA STEP to declare the length of a character variable.
43042     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
43043     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
43044     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
43045     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
43046     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
43047     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
43048     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
43049     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
43050     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
43051     +end;
MPRINT(EM_DIAGRAM):   end;
43052     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
43053     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
43054     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
43055     +end;
MPRINT(EM_DIAGRAM):   end;
43056     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43057     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43058     +* Ensmbl11: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Producing Unformatted variable;
43059     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43060     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
43061     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
43062     +else
43063     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
43064     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43065     +* Ensmbl11: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing _WARN_ Variable;
43066     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43067     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
43068     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
43069     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
43070     +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
43071     +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
43072     +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
43073     +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
43074     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
43075     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
43076     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
43077     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
43078     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
43079     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
43080     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
43081     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
43082     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43083     +* Ensmbl11: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing Residual Vars;
43084     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43085     +if
43086     +F_DepVar NE '1'
43087     +AND F_DepVar NE '0'
43088     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
43089     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
43090     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
43091     +end;
MPRINT(EM_DIAGRAM):   end;
43092     +else do;
MPRINT(EM_DIAGRAM):   else do;
43093     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
43094     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
43095     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
43096     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
43097     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
43098     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
43099     +END;
MPRINT(EM_DIAGRAM):   END;
43100     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43101      run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL11_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
43102      quit;
43103      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl11_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl11_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl11_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
43163      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
43164      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
43165      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
43166     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
43167     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
43168     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
43169     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
43170     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
43171     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
43172     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
43173     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
43174     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
43175     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
43176     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
43177     +LENGTH _WARN_ $4
43178     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
43179     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
43180     +
43181     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
43182     +
43183     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
43184     +
43185     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
43186     +
43187     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
43188     +
43189     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
43190     +
43191     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
43192     +
43193     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
43194     +
43195     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
43196     +
43197     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
43198     +
43199     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
43200     +
43201     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
43202     +
43203     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
43204     +
43205     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
43206     +
43207     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
43208     +
43209     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
43210     +
43211     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
43212     +
43213     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
43214     +
43215     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
43216     +
43217     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
43218     +
43219     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
43220     +
43221     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
43222     +
43223     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
43224     +
43225     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
43226     +
43227     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
43228     +
43229     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
43230     +
43231     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
43232     +
43233     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
43234     +
43235     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
43236     +
43237     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
43238     +
43239     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
43240     +
43241     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
43242     +
43243     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
43244     +
43245     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
43246     +
43247     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
43248     +
43249     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
43250     +
43251     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
43252     +
43253     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
43254     +
43255     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
43256     +
43257     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
43258     +
43259     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
43260     +
43261     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
43262     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
43263     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
43264     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
43265     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43266     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43267     +end;
MPRINT(EM_DIAGRAM):   end;
43268     +else do;
MPRINT(EM_DIAGRAM):   else do;
43269     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43270     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
43271     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43272     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43273     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
43274     +   end;
MPRINT(EM_DIAGRAM):   end;
43275     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43276     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
43277     +   end;
MPRINT(EM_DIAGRAM):   end;
43278     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43279     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
43280     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43281     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43282     +   end;
MPRINT(EM_DIAGRAM):   end;
43283     +end;
MPRINT(EM_DIAGRAM):   end;
43284     +
43285     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
43286     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
43287     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
43288     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
43289     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43290     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43291     +end;
MPRINT(EM_DIAGRAM):   end;
43292     +else do;
MPRINT(EM_DIAGRAM):   else do;
43293     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43294     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
43295     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43296     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43297     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
43298     +   end;
MPRINT(EM_DIAGRAM):   end;
43299     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43300     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
43301     +   end;
MPRINT(EM_DIAGRAM):   end;
43302     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43303     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
43304     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43305     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43306     +   end;
MPRINT(EM_DIAGRAM):   end;
43307     +end;
MPRINT(EM_DIAGRAM):   end;
43308     +
43309     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
43310     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
43311     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
43312     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
43313     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43314     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43315     +end;
MPRINT(EM_DIAGRAM):   end;
43316     +else do;
MPRINT(EM_DIAGRAM):   else do;
43317     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43318     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
43319     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43320     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43321     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
43322     +   end;
MPRINT(EM_DIAGRAM):   end;
43323     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43324     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
43325     +   end;
MPRINT(EM_DIAGRAM):   end;
43326     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43327     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
43328     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43329     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43330     +   end;
MPRINT(EM_DIAGRAM):   end;
43331     +end;
MPRINT(EM_DIAGRAM):   end;
43332     +
43333     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
43334     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
43335     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
43336     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
43337     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43338     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43339     +end;
MPRINT(EM_DIAGRAM):   end;
43340     +else do;
MPRINT(EM_DIAGRAM):   else do;
43341     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43342     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
43343     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43344     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43345     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
43346     +   end;
MPRINT(EM_DIAGRAM):   end;
43347     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43348     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
43349     +   end;
MPRINT(EM_DIAGRAM):   end;
43350     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43351     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
43352     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43353     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43354     +   end;
MPRINT(EM_DIAGRAM):   end;
43355     +end;
MPRINT(EM_DIAGRAM):   end;
43356     +
43357     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
43358     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
43359     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
43360     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
43361     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43362     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43363     +end;
MPRINT(EM_DIAGRAM):   end;
43364     +else do;
MPRINT(EM_DIAGRAM):   else do;
43365     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43366     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
43367     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43368     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43369     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
43370     +   end;
MPRINT(EM_DIAGRAM):   end;
43371     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43372     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
43373     +   end;
MPRINT(EM_DIAGRAM):   end;
43374     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43375     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
43376     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43377     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43378     +   end;
MPRINT(EM_DIAGRAM):   end;
43379     +end;
MPRINT(EM_DIAGRAM):   end;
43380     +
43381     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
43382     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
43383     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
43384     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
43385     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43386     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43387     +end;
MPRINT(EM_DIAGRAM):   end;
43388     +else do;
MPRINT(EM_DIAGRAM):   else do;
43389     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43390     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
43391     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43392     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
43393     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
43394     +   end;
MPRINT(EM_DIAGRAM):   end;
43395     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
43396     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
43397     +   end;
MPRINT(EM_DIAGRAM):   end;
43398     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43399     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
43400     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43401     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43402     +   end;
MPRINT(EM_DIAGRAM):   end;
43403     +end;
MPRINT(EM_DIAGRAM):   end;
43404     +
43405     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
43406     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
43407     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
43408     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
43409     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43410     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43411     +end;
MPRINT(EM_DIAGRAM):   end;
43412     +else do;
MPRINT(EM_DIAGRAM):   else do;
43413     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
43414     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
43415     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43416     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
43417     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
43418     +   end;
MPRINT(EM_DIAGRAM):   end;
43419     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
43420     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
43421     +   end;
MPRINT(EM_DIAGRAM):   end;
43422     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43423     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
43424     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43425     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43426     +   end;
MPRINT(EM_DIAGRAM):   end;
43427     +end;
MPRINT(EM_DIAGRAM):   end;
43428     +
43429     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
43430     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
43431     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
43432     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
43433     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
43434     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
43435     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
43436     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
43437     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
43438     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
43439     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
43440     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
43441     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43442     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43443     +end;
MPRINT(EM_DIAGRAM):   end;
43444     +else do;
MPRINT(EM_DIAGRAM):   else do;
43445     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
43446     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
43447     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43448     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
43449     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
43450     +   end;
MPRINT(EM_DIAGRAM):   end;
43451     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
43452     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
43453     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
43454     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
43455     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
43456     +   end;
MPRINT(EM_DIAGRAM):   end;
43457     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
43458     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
43459     +   end;
MPRINT(EM_DIAGRAM):   end;
43460     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
43461     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
43462     +   end;
MPRINT(EM_DIAGRAM):   end;
43463     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
43464     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
43465     +   end;
MPRINT(EM_DIAGRAM):   end;
43466     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43467     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
43468     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
43469     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
43470     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
43471     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43472     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43473     +   end;
MPRINT(EM_DIAGRAM):   end;
43474     +end;
MPRINT(EM_DIAGRAM):   end;
43475     +
43476     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
43477     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
43478     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
43479     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
43480     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
43481     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
43482     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
43483     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
43484     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
43485     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43486     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43487     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43488     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43489     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
43490     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43491     +end;
MPRINT(EM_DIAGRAM):   end;
43492     +else do;
MPRINT(EM_DIAGRAM):   else do;
43493     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
43494     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
43495     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
43496     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
43497     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
43498     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
43499     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
43500     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
43501     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43502     +         end;
MPRINT(EM_DIAGRAM):   end;
43503     +         else do;
MPRINT(EM_DIAGRAM):   else do;
43504     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
43505     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
43506     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43507     +            end;
MPRINT(EM_DIAGRAM):   end;
43508     +         end;
MPRINT(EM_DIAGRAM):   end;
43509     +      end;
MPRINT(EM_DIAGRAM):   end;
43510     +      else do;
MPRINT(EM_DIAGRAM):   else do;
43511     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
43512     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
43513     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43514     +         end;
MPRINT(EM_DIAGRAM):   end;
43515     +      end;
MPRINT(EM_DIAGRAM):   end;
43516     +   end;
MPRINT(EM_DIAGRAM):   end;
43517     +   else do;
MPRINT(EM_DIAGRAM):   else do;
43518     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
43519     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
43520     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43521     +      end;
MPRINT(EM_DIAGRAM):   end;
43522     +      else do;
MPRINT(EM_DIAGRAM):   else do;
43523     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
43524     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
43525     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
43526     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
43527     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
43528     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
43529     +         end;
MPRINT(EM_DIAGRAM):   end;
43530     +      end;
MPRINT(EM_DIAGRAM):   end;
43531     +   end;
MPRINT(EM_DIAGRAM):   end;
43532     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
43533     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
43534     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
43535     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
43536     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
43537     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
43538     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43539     +   end;
MPRINT(EM_DIAGRAM):   end;
43540     +end;
MPRINT(EM_DIAGRAM):   end;
43541     +
43542     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43543     +*** Checking missing input Interval
43544     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
43545     +
43546     +IF NMISS(
43547     +   AcceptedCmpTotal ,
43548     +   Age ,
43549     +   Frq ,
43550     +   Income ,
43551     +   Kidhome ,
43552     +   MntFishProducts ,
43553     +   MntFruits ,
43554     +   MntGoldProds ,
43555     +   MntSweetProducts ,
43556     +   MonthsAsCustomer ,
43557     +   NumDealsPurchases ,
43558     +   NumWebVisitsMonth ,
43559     +   RFMstat ,
43560     +   RMntFrq ,
43561     +   Recency ,
43562     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
43563     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
43564     +
43565     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
43566     +END;
MPRINT(EM_DIAGRAM):   END;
43567     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43568     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
43569     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43570     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43571     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
43572     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
43573     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
43574     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
43575     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43576     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
43577     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
43578     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
43579     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
43580     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
43581     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
43582     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
43583     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
43584     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
43585     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
43586     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
43587     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43588     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
43589     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43590     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
43591     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
43592     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43593     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43594     +END;
MPRINT(EM_DIAGRAM):   END;
43595     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43596     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
43597     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
43598     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
43599     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
43600     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
43601     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
43602     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
43603     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
43604     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
43605     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
43606     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
43607     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
43608     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
43609     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
43610     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
43611     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
43612     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
43613     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
43614     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
43615     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
43616     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
43617     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
43618     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
43619     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
43620     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
43621     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
43622     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
43623     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
43624     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
43625     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
43626     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
43627     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
43628     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
43629     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
43630     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
43631     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
43632     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
43633     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
43634     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
43635     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
43636     +END;
MPRINT(EM_DIAGRAM):   END;
43637     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43638     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
43639     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43640     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43641     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
43642     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43643     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43644     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
43645     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43646     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43647     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
43648     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
43649     +        S_Income  +     0.39760289149752 * S_Kidhome
43650     +          +     -0.0376693415484 * S_MntFishProducts
43651     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
43652     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
43653     +          +    -0.13043754404228 * S_MonthsAsCustomer
43654     +          +     -0.0139146653349 * S_NumDealsPurchases
43655     +          +    -0.01539820220757 * S_NumWebVisitsMonth
43656     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
43657     +        S_RMntFrq  +     0.55149605442396 * S_Recency
43658     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + -0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + -0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits
+ 0.03640992016126 * S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 *
S_RMntFrq + 0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
43659     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
43660     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
43661     +        S_Income  +     0.31208673256073 * S_Kidhome
43662     +          +    -0.04911763008195 * S_MntFishProducts
43663     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
43664     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
43665     +          +    -0.48577934340503 * S_MonthsAsCustomer
43666     +          +     0.31218334237091 * S_NumDealsPurchases
43667     +          +     0.24212805498377 * S_NumWebVisitsMonth
43668     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
43669     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
43670     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age + -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + -0.04911763008195 * S_MntFishProducts + 0.04440357574827 *
S_MntFruits + 0.18064625439163 * S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat +
-0.01845944589462 * S_RMntFrq + -0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
43671     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
43672     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
43673     +        S_Income  +    -0.48748003518551 * S_Kidhome
43674     +          +     0.15434683428908 * S_MntFishProducts
43675     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
43676     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
43677     +          +    -0.07405705160744 * S_MonthsAsCustomer
43678     +          +    -0.44979778263337 * S_NumDealsPurchases
43679     +          +    -0.51422673599958 * S_NumWebVisitsMonth
43680     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
43681     +        S_RMntFrq  +     0.79850779605341 * S_Recency
43682     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age + -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 0.15434683428908 * S_MntFishProducts + 0.06482294164983 *
S_MntFruits + -0.54308686262134 * S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat +
-0.49659927360573 * S_RMntFrq + 0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
43683     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
43684     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
43685     +        S_Income  +    -0.62401744170985 * S_Kidhome
43686     +          +    -0.08499883212951 * S_MntFishProducts
43687     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
43688     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
43689     +          +    -0.04051431518694 * S_MonthsAsCustomer
43690     +          +     0.00788125797776 * S_NumDealsPurchases
43691     +          +     0.59495434076477 * S_NumWebVisitsMonth
43692     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
43693     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
43694     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + -0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits
+ -0.00355780886042 * S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 *
S_RMntFrq + -0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
43695     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
43696     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
43697     +        S_Income  +     -0.0256051183156 * S_Kidhome
43698     +          +    -0.15661247042419 * S_MntFishProducts
43699     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
43700     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
43701     +          +     0.03994503424293 * S_MonthsAsCustomer
43702     +          +    -0.53734193208154 * S_NumDealsPurchases
43703     +          +    -0.58547802324835 * S_NumWebVisitsMonth
43704     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
43705     +        S_RMntFrq  +     0.66048924026365 * S_Recency
43706     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age + 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + -0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits
+ 0.02103897411055 * S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer + -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + -0.06088682875304 * S_RFMstat + -0.16953747051887 *
S_RMntFrq + 0.66048924026365 * S_Recency + -0.18125808371879 * S_Teenhome ;
43707     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
43708     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
43709     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
43710     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
43711     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 +
-0.29371842867452 * HigherEducationBinary0 ;
43712     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
43713     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
43714     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
43715     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
43716     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 +
0.26244151632714 * HigherEducationBinary0 ;
43717     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
43718     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
43719     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
43720     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
43721     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 +
0.12575052691333 * HigherEducationBinary0 ;
43722     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
43723     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
43724     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
43725     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
43726     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 +
0.03016266549641 * HigherEducationBinary0 ;
43727     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
43728     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
43729     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
43730     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
43731     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 +
0.16683238673979 * HigherEducationBinary0 ;
43732     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
43733     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
43734     +        EducationGraduation  +     0.23295390047952 * EducationMaster
43735     +          +    -0.41529808115031 * Marital_StatusDivorced
43736     +          +     0.65264978817749 * Marital_StatusMarried
43737     +          +    -0.52150453945732 * Marital_StatusSingle
43738     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster + -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 *
Marital_StatusMarried + -0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
43739     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
43740     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
43741     +        EducationGraduation  +     0.04425534246646 * EducationMaster
43742     +          +    -0.32207382402099 * Marital_StatusDivorced
43743     +          +     0.16112567537413 * Marital_StatusMarried
43744     +          +     0.28859198712458 * Marital_StatusSingle
43745     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + -0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 *
Marital_StatusMarried + 0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
43746     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
43747     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
43748     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
43749     +          +    -0.06823118087629 * Marital_StatusDivorced
43750     +          +    -0.01696675344176 * Marital_StatusMarried
43751     +          +    -0.04922830766868 * Marital_StatusSingle
43752     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster + -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 *
Marital_StatusMarried + -0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
43753     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
43754     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
43755     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
43756     +          +     0.20346888384065 * Marital_StatusDivorced
43757     +          +     -0.5246097720646 * Marital_StatusMarried
43758     +          +     0.50991923175058 * Marital_StatusSingle
43759     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 *
Marital_StatusMarried + 0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
43760     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
43761     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
43762     +        EducationGraduation  +     0.03117170136897 * EducationMaster
43763     +          +    -0.14128509643843 * Marital_StatusDivorced
43764     +          +    -0.17344467864829 * Marital_StatusMarried
43765     +          +     0.09201105049634 * Marital_StatusSingle
43766     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + -0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 *
Marital_StatusMarried + 0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
43767     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
43768     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
43769     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
43770     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
43771     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
43772     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
43773     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
43774     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
43775     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
43776     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
43777     +END;
MPRINT(EM_DIAGRAM):   END;
43778     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43779     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
43780     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
43781     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
43782     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
43783     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
43784     +END;
MPRINT(EM_DIAGRAM):   END;
43785     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43786     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
43787     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43788     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
43789     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
43790     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
43791     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + -2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
43792     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
43793     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
43794     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
43795     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
43796     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
43797     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
43798     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
43799     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
43800     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
43801     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
43802     +END;
MPRINT(EM_DIAGRAM):   END;
43803     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43804     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
43805     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
43806     +END;
MPRINT(EM_DIAGRAM):   END;
43807     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
43808     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
43809     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
43810     +END;
MPRINT(EM_DIAGRAM):   END;
43811     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43812     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
43813     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
43814     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
43815     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
43816     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
43817     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
43818     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
43819     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
43820     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
43821     +END;
MPRINT(EM_DIAGRAM):   END;
43822     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
43823     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
43824     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
43825     +drop
43826     +H11
43827     +H12
43828     +H13
43829     +H14
43830     +H15
43831     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
43832     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43833      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
43834      quit;
43835      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
43836      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
43837      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
43838      retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
43839      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
43840      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43841      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
43842      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43843      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43844      proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
43845      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43846      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
43847      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43848      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
43849      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
43850      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43851      proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
43852      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
43853      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
43854      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43855      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43856      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43857      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
43858      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43859      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43860      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
43861      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.
 
43862      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43863      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
43864      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43865      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
43866      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
43867      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
43868     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43869     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
43870     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43871     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
43872     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
43873     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43874      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
43875      quit;
43876      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
43877      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
43878      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
43879      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
43880      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
43881      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43882      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
43883      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43884      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43885      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
43886      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43887      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43888      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43889      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
43890      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
43891      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43892      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
43893      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43894      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
43895      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43896      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43897      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43898      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
43899      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43900      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43901      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
43902      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
43903      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43904      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
43905      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43906      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
43907      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
43908      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
43909     +
43910     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
43911     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
43912     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
43913     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
43914     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
43915     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
43916     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43917      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
43918      quit;
43919      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
43920      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
43921      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
43922      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
43923      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
43924      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43925      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
43926      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43927      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43928      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
43929      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43930      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43931      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43932      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
43933      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
43934      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43935      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
43936      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43937      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
43938      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43939      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43940      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
43941      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
43942      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
43943      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43944      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
43945      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
43946      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
43947      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
43948      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
43949      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
43950      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
43951      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
43952     +
43953     +
43954     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
43955     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
43956     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
43957     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
43958     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
43959     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43960     +
43961     +
43962     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
43963     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
43964     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
43965     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
43966     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
43967     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43968     +
43969     +
43970     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
43971     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
43972     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
43973     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
43974     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
43975     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43976     +
43977     +
43978     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
43979     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
43980     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
43981     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
43982     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
43983     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43984     +
43985     +
43986     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
43987     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
43988     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
43989     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
43990     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
43991     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
43992     +
43993     +
43994     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
43995     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
43996     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
43997     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
43998     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
43999     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44000     +
44001     +
44002     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
44003     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
44004     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
44005     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
44006     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
44007     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44008     +
44009     +
44010     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
44011     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
44012     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
44013     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
44014     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
44015     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44016     +if
44017     +_FILTERNORM1 not in ( '.')
44018     + and
44019     +_FILTERNORM2 not in ( '.')
44020     + and
44021     +_FILTERNORM3 not in ( '.')
44022     + and
44023     +_FILTERNORM4 not in ( '.')
44024     + and
44025     +_FILTERNORM5 not in ( '.')
44026     + and
44027     +_FILTERNORM6 not in ( '.')
44028     + and
44029     +_FILTERNORM7 not in ( ' ')
44030     + and
44031     +_FILTERNORM8 not in ( ' ')
44032     +and
44033     +( Dt_Customer ne .)
44034     +and ( Income ne . and (Income<=107000))
44035     +and ( Kidhome ne .)
44036     +and ( MntFishProducts ne .)
44037     +and ( MntFruits ne .)
44038     +and ( MntGoldProds ne .)
44039     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
44040     +and ( MntSweetProducts ne .)
44041     +and ( MntWines ne .)
44042     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
44043     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
44044     +and ( NumStorePurchases ne .)
44045     +and ( NumWebPurchases ne .)
44046     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
44047     +and ( Recency ne .)
44048     +and ( Teenhome ne .)
44049     +and ( Year_Birth ne .)
44050     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
44051     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
44052     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
44053     +end;
MPRINT(EM_DIAGRAM):   end;
44054     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
44055     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
44056      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44057      quit;
44058      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
44059      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
44060      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
44061      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
44062      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
44063      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44064      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
44065      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44066      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44067      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
44068      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44069      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44070      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44071      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
44072      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
44073      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44074      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
44075      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
44076      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
44077      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44078      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44079      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44080      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
44081      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44082      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44083      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
44084      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
44085      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44086      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
44087      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44088      %macro varDept(fcmpdata=,id=);
44089      %global nobs&id scoreFlag&id;
44090      %let scoreFlag&id = 0;
44091      %if &id=1 or ^&fcmpStart %then %do;
44092      proc sort data=&fcmpdata out=_temp&id nodupkey;
44093      by NAME;
44094      where id=&id and LHS in( %let j=1;
44095      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
44096      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
44097      "&var" %let j = %eval(&j+1);
44098      %end;
44099      );
44100      run;
44101      %let dsid = %sysfunc(open(_temp&id));
44102      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
44103      %let dsid = %sysfunc(close(&dsid));
44104      %if &&nobs&id %then %do;
44105      %let scoreFlag&id = 1;
44106      %let fcmpStart = 1;
44107      %end;
44108      %else %let fcmpStart = 0;
44109      %end;
44110      %else %do;
44111      proc sort data=&fcmpdata out=_tempid;
44112      where id=&id;
44113      by LHS;
44114      run;
44115      %let dsid = %sysfunc(open(_tempid));
44116      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
44117      %let dsid = %sysfunc(close(&dsid));
44118      %if ^&&nobs&id %then %do;
44119      proc datasets lib=work nolist;
44120      delete _tempid;
44121      run;
44122      quit;
44123      %end;
44124      %else %do;
44125      data _tempAll;
44126      set %let j=%eval(&id-1);
44127      %do x=1 %to &j;
44128      %if &&nobs&x %then %do;
44129      _temp&x %end;
44130      %end;
44131      ;
44132      run;
44133      proc sql;
44134      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
44135      quit;
44136      data _temp&id;
44137      set _temp&id;
44138      where LHS ne '' and NAME ne '' and Node ne '';
44139      run;
44140      proc datasets lib=work nolist;
44141      delete _tempAll;
44142      run;
44143      %let dsid = %sysfunc(open(_temp&id));
44144      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
44145      %let dsid = %sysfunc(close(&dsid));
44146      %if ^&&nobs&id %then %do;
44147      proc datasets lib=work nolist;
44148      delete _temp&id;
44149      run;
44150      quit;
44151      %end;
44152      %else %do;
44153      %let scoreFlag&id = 1;
44154      data _temp&id;
44155      set _temp&id;
44156      where LHS ne NAME and node ne '';
44157      run;
44158      %let dsid = %sysfunc(open(_temp&id));
44159      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
44160      %let dsid = %sysfunc(close(&dsid));
44161      %if ^&&nobs&id %then %do;
44162      proc datasets lib=work nolist;
44163      delete _temp&id;
44164      run;
44165      quit;
44166      %end;
44167      %else %do;
44168      proc sort data=_temp&id nodupkey;
44169      by LHS NAME;
44170      run;
44171      %end;
44172      %end;
44173      %end;
44174      %end;
44175      %mend varDept;
44176      %macro optCode(outdata=fcmpdata);
44177      %global fcmpStart;
44178      %let fcmpStart = 0;
44179      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
44180      %let NumNodes=9;
44181      %do k=1 %to &NumNodes;
44182      %vardept(fcmpdata=&outdata, id=&k);
44183      %end;
44184      %mend optCode;
44185      %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 106 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
44186      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
44187      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
44188      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
44189      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44190      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
44191      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
44192      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
44193      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
44194      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
44195      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
44196      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44197      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
44198      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
44199      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44200      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
44201      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
44202      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
44203     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
44204     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
44205     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
44206     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
44207     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
44208     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
44209     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
44210     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
44211     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
44212     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
44213     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
44214     +LENGTH _WARN_ $4
44215     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
44216     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
44217     +
44218     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
44219     +
44220     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
44221     +
44222     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
44223     +
44224     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
44225     +
44226     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
44227     +
44228     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
44229     +
44230     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
44231     +
44232     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
44233     +
44234     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
44235     +
44236     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
44237     +
44238     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
44239     +
44240     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
44241     +
44242     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
44243     +
44244     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
44245     +
44246     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
44247     +
44248     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
44249     +
44250     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
44251     +
44252     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
44253     +
44254     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
44255     +
44256     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
44257     +
44258     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
44259     +
44260     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
44261     +
44262     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
44263     +
44264     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
44265     +
44266     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
44267     +
44268     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
44269     +
44270     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
44271     +
44272     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
44273     +
44274     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
44275     +
44276     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
44277     +
44278     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
44279     +
44280     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
44281     +
44282     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
44283     +
44284     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
44285     +
44286     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
44287     +
44288     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
44289     +
44290     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
44291     +
44292     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
44293     +
44294     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
44295     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
44296     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
44297     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
44298     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44299     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44300     +end;
MPRINT(EM_DIAGRAM):   end;
44301     +else do;
MPRINT(EM_DIAGRAM):   else do;
44302     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44303     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
44304     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44305     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44306     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
44307     +   end;
MPRINT(EM_DIAGRAM):   end;
44308     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44309     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
44310     +   end;
MPRINT(EM_DIAGRAM):   end;
44311     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44312     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
44313     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44314     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44315     +   end;
MPRINT(EM_DIAGRAM):   end;
44316     +end;
MPRINT(EM_DIAGRAM):   end;
44317     +
44318     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
44319     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
44320     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
44321     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
44322     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44323     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44324     +end;
MPRINT(EM_DIAGRAM):   end;
44325     +else do;
MPRINT(EM_DIAGRAM):   else do;
44326     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44327     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
44328     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44329     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44330     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
44331     +   end;
MPRINT(EM_DIAGRAM):   end;
44332     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44333     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
44334     +   end;
MPRINT(EM_DIAGRAM):   end;
44335     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44336     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
44337     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44338     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44339     +   end;
MPRINT(EM_DIAGRAM):   end;
44340     +end;
MPRINT(EM_DIAGRAM):   end;
44341     +
44342     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
44343     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
44344     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
44345     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
44346     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44347     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44348     +end;
MPRINT(EM_DIAGRAM):   end;
44349     +else do;
MPRINT(EM_DIAGRAM):   else do;
44350     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44351     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
44352     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44353     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44354     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
44355     +   end;
MPRINT(EM_DIAGRAM):   end;
44356     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44357     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
44358     +   end;
MPRINT(EM_DIAGRAM):   end;
44359     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44360     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
44361     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44362     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44363     +   end;
MPRINT(EM_DIAGRAM):   end;
44364     +end;
MPRINT(EM_DIAGRAM):   end;
44365     +
44366     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
44367     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
44368     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
44369     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
44370     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44371     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44372     +end;
MPRINT(EM_DIAGRAM):   end;
44373     +else do;
MPRINT(EM_DIAGRAM):   else do;
44374     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44375     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
44376     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44377     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44378     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
44379     +   end;
MPRINT(EM_DIAGRAM):   end;
44380     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44381     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
44382     +   end;
MPRINT(EM_DIAGRAM):   end;
44383     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44384     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
44385     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44386     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44387     +   end;
MPRINT(EM_DIAGRAM):   end;
44388     +end;
MPRINT(EM_DIAGRAM):   end;
44389     +
44390     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
44391     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
44392     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
44393     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
44394     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44395     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44396     +end;
MPRINT(EM_DIAGRAM):   end;
44397     +else do;
MPRINT(EM_DIAGRAM):   else do;
44398     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44399     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
44400     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44401     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44402     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
44403     +   end;
MPRINT(EM_DIAGRAM):   end;
44404     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44405     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
44406     +   end;
MPRINT(EM_DIAGRAM):   end;
44407     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44408     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
44409     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44410     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44411     +   end;
MPRINT(EM_DIAGRAM):   end;
44412     +end;
MPRINT(EM_DIAGRAM):   end;
44413     +
44414     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
44415     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
44416     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
44417     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
44418     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44419     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44420     +end;
MPRINT(EM_DIAGRAM):   end;
44421     +else do;
MPRINT(EM_DIAGRAM):   else do;
44422     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44423     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
44424     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44425     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
44426     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
44427     +   end;
MPRINT(EM_DIAGRAM):   end;
44428     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
44429     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
44430     +   end;
MPRINT(EM_DIAGRAM):   end;
44431     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44432     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
44433     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44434     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44435     +   end;
MPRINT(EM_DIAGRAM):   end;
44436     +end;
MPRINT(EM_DIAGRAM):   end;
44437     +
44438     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
44439     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
44440     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
44441     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
44442     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44443     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44444     +end;
MPRINT(EM_DIAGRAM):   end;
44445     +else do;
MPRINT(EM_DIAGRAM):   else do;
44446     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
44447     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
44448     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44449     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
44450     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
44451     +   end;
MPRINT(EM_DIAGRAM):   end;
44452     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
44453     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
44454     +   end;
MPRINT(EM_DIAGRAM):   end;
44455     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44456     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
44457     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44458     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44459     +   end;
MPRINT(EM_DIAGRAM):   end;
44460     +end;
MPRINT(EM_DIAGRAM):   end;
44461     +
44462     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
44463     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
44464     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
44465     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
44466     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
44467     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
44468     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
44469     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
44470     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
44471     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
44472     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
44473     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
44474     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44475     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44476     +end;
MPRINT(EM_DIAGRAM):   end;
44477     +else do;
MPRINT(EM_DIAGRAM):   else do;
44478     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
44479     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
44480     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44481     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
44482     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
44483     +   end;
MPRINT(EM_DIAGRAM):   end;
44484     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
44485     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
44486     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
44487     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
44488     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
44489     +   end;
MPRINT(EM_DIAGRAM):   end;
44490     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
44491     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
44492     +   end;
MPRINT(EM_DIAGRAM):   end;
44493     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
44494     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
44495     +   end;
MPRINT(EM_DIAGRAM):   end;
44496     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
44497     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
44498     +   end;
MPRINT(EM_DIAGRAM):   end;
44499     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44500     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
44501     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
44502     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
44503     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
44504     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44505     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44506     +   end;
MPRINT(EM_DIAGRAM):   end;
44507     +end;
MPRINT(EM_DIAGRAM):   end;
44508     +
44509     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
44510     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
44511     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
44512     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
44513     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
44514     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
44515     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
44516     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
44517     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
44518     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
44519     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
44520     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
44521     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
44522     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
44523     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44524     +end;
MPRINT(EM_DIAGRAM):   end;
44525     +else do;
MPRINT(EM_DIAGRAM):   else do;
44526     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
44527     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
44528     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
44529     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
44530     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
44531     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
44532     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
44533     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
44534     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44535     +         end;
MPRINT(EM_DIAGRAM):   end;
44536     +         else do;
MPRINT(EM_DIAGRAM):   else do;
44537     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
44538     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
44539     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44540     +            end;
MPRINT(EM_DIAGRAM):   end;
44541     +         end;
MPRINT(EM_DIAGRAM):   end;
44542     +      end;
MPRINT(EM_DIAGRAM):   end;
44543     +      else do;
MPRINT(EM_DIAGRAM):   else do;
44544     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
44545     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
44546     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44547     +         end;
MPRINT(EM_DIAGRAM):   end;
44548     +      end;
MPRINT(EM_DIAGRAM):   end;
44549     +   end;
MPRINT(EM_DIAGRAM):   end;
44550     +   else do;
MPRINT(EM_DIAGRAM):   else do;
44551     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
44552     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
44553     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44554     +      end;
MPRINT(EM_DIAGRAM):   end;
44555     +      else do;
MPRINT(EM_DIAGRAM):   else do;
44556     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
44557     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
44558     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
44559     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
44560     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
44561     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
44562     +         end;
MPRINT(EM_DIAGRAM):   end;
44563     +      end;
MPRINT(EM_DIAGRAM):   end;
44564     +   end;
MPRINT(EM_DIAGRAM):   end;
44565     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
44566     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
44567     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
44568     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
44569     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
44570     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
44571     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44572     +   end;
MPRINT(EM_DIAGRAM):   end;
44573     +end;
MPRINT(EM_DIAGRAM):   end;
44574     +
44575     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44576     +*** Checking missing input Interval
44577     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
44578     +
44579     +IF NMISS(
44580     +   AcceptedCmpTotal ,
44581     +   Age ,
44582     +   Frq ,
44583     +   Income ,
44584     +   Kidhome ,
44585     +   MntFishProducts ,
44586     +   MntFruits ,
44587     +   MntGoldProds ,
44588     +   MntSweetProducts ,
44589     +   MonthsAsCustomer ,
44590     +   NumDealsPurchases ,
44591     +   NumWebVisitsMonth ,
44592     +   RFMstat ,
44593     +   RMntFrq ,
44594     +   Recency ,
44595     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
44596     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
44597     +
44598     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
44599     +END;
MPRINT(EM_DIAGRAM):   END;
44600     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44601     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
44602     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44603     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44604     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
44605     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
44606     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
44607     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
44608     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
44609     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
44610     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
44611     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
44612     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
44613     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
44614     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
44615     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
44616     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
44617     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
44618     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
44619     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
44620     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
44621     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
44622     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
44623     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
44624     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
44625     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
44626     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
44627     +END;
MPRINT(EM_DIAGRAM):   END;
44628     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
44629     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
44630     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
44631     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
44632     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
44633     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
44634     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
44635     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
44636     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
44637     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
44638     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
44639     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
44640     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
44641     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
44642     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
44643     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
44644     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
44645     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
44646     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
44647     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
44648     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
44649     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
44650     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
44651     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
44652     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
44653     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
44654     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
44655     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
44656     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
44657     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
44658     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
44659     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
44660     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
44661     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
44662     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
44663     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
44664     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
44665     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
44666     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
44667     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
44668     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
44669     +END;
MPRINT(EM_DIAGRAM):   END;
44670     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44671     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
44672     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44673     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44674     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
44675     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44676     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44677     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
44678     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44679     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44680     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
44681     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
44682     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
44683     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
44684     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
44685     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
44686     +          +     -0.1740957673716 * S_MonthsAsCustomer
44687     +          +     0.66565026405117 * S_NumDealsPurchases
44688     +          +     0.43247206282836 * S_NumWebVisitsMonth
44689     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
44690     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
44691     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 *
S_MntFruits + 0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat +
0.26260869862277 * S_RMntFrq + -0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
44692     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
44693     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
44694     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
44695     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
44696     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
44697     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
44698     +          +    -0.06176784990963 * S_MonthsAsCustomer
44699     +          +    -0.11740415005833 * S_NumDealsPurchases
44700     +          +    -0.17084845478672 * S_NumWebVisitsMonth
44701     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
44702     +        S_RMntFrq  +     0.54983271222574 * S_Recency
44703     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 *
S_MntFruits + 0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 * S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat +
-0.13250191926905 * S_RMntFrq + 0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
44704     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
44705     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
44706     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
44707     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
44708     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 * AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 +
-0.4767771812126 * HigherEducationBinary0 ;
44709     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
44710     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
44711     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
44712     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
44713     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 +
-0.27229992860702 * HigherEducationBinary0 ;
44714     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
44715     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
44716     +        EducationGraduation  +     0.22632282500966 * EducationMaster
44717     +          +     -0.0800438380883 * Marital_StatusDivorced
44718     +          +     0.44505766937623 * Marital_StatusMarried
44719     +          +    -0.57546515626468 * Marital_StatusSingle
44720     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + -0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 0.44505766937623
* Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 0.38638180853046 * Marital_StatusTogether ;
44721     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
44722     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
44723     +        EducationGraduation  +      0.0794165981215 * EducationMaster
44724     +          +    -0.20291653465543 * Marital_StatusDivorced
44725     +          +     0.39547414450617 * Marital_StatusMarried
44726     +          +    -0.37001331184001 * Marital_StatusSingle
44727     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + -0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 * EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617
* Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * Marital_StatusTogether ;
44728     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
44729     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
44730     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
44731     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
44732     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44733     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
44734     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
44735     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
44736     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
44737     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
44738     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
44739     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
44740     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
44741     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
44742     +END;
MPRINT(EM_DIAGRAM):   END;
44743     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
44744     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
44745     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
44746     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
44747     +END;
MPRINT(EM_DIAGRAM):   END;
44748     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44749     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
44750     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44751     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
44752     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
44753     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 10.3301873876241 * H1x1_3 ;
44754     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
44755     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
44756     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
44757     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
44758     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
44759     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
44760     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
44761     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
44762     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
44763     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
44764     +END;
MPRINT(EM_DIAGRAM):   END;
44765     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
44766     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
44767     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
44768     +END;
MPRINT(EM_DIAGRAM):   END;
44769     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
44770     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
44771     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
44772     +END;
MPRINT(EM_DIAGRAM):   END;
44773     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44774     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
44775     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
44776     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
44777     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
44778     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
44779     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
44780     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
44781     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
44782     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
44783     +END;
MPRINT(EM_DIAGRAM):   END;
44784     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
44785     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
44786     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
44787     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
44788      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44789      quit;
44790      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
44791      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
44792      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
44793      retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
44794      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
44795      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44796      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
44797      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44798      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44799      proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
44800      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44801      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
44802      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44803      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
44804      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
44805      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44806      proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
44807      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
44808      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
44809      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44810      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44811      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44812      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
44813      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44814      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44815      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
44816      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.
 
44817      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44818      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
44819      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44820      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
44821      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
44822      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
44823     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44824     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
44825     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
44826     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
44827     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
44828     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
44829      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44830      quit;
44831      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
44832      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
The SAS System
 
44833      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
44834      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
44835      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
44836      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44837      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
44838      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44839      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44840      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
44841      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44842      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44843      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44844      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
44845      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
44846      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44847      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
44848      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
44849      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
44850      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44851      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44852      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44853      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
44854      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44855      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44856      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
44857      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
44858      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44859      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
44860      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44861      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
44862      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
44863      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
44864     +
44865     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
44866     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
44867     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
44868     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
44869     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
44870     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
44871     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
44872      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
44873      quit;
44874      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
44875      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
44876      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
44877      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
44878      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
44879      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44880      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
44881      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44882      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44883      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
44884      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44885      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44886      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44887      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
44888      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
44889      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44890      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
44891      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
44892      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
44893      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44894      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44895      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
44896      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
44897      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
44898      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44899      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
44900      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
44901      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
44902      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
44903      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
44904      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
44905      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
44906      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
44907     +
44908     +
44909     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
44910     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
44911     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
44912     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
44913     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
44914     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44915     +
44916     +
44917     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
44918     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
44919     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
44920     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
44921     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
44922     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44923     +
44924     +
44925     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
44926     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
44927     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
44928     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
44929     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
44930     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44931     +
44932     +
44933     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
44934     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
44935     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
44936     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
44937     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
44938     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44939     +
44940     +
44941     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
44942     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
44943     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
44944     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
44945     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
44946     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44947     +
44948     +
44949     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
44950     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
44951     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
44952     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
44953     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
44954     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44955     +
44956     +
44957     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
44958     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
44959     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
44960     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
44961     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
44962     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44963     +
44964     +
44965     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
44966     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
44967     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
44968     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
44969     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
44970     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
44971     +if
44972     +_FILTERNORM1 not in ( '.')
44973     + and
44974     +_FILTERNORM2 not in ( '.')
44975     + and
44976     +_FILTERNORM3 not in ( '.')
44977     + and
44978     +_FILTERNORM4 not in ( '.')
44979     + and
44980     +_FILTERNORM5 not in ( '.')
44981     + and
44982     +_FILTERNORM6 not in ( '.')
44983     + and
44984     +_FILTERNORM7 not in ( ' ')
44985     + and
44986     +_FILTERNORM8 not in ( ' ')
44987     +and
44988     +( Dt_Customer ne .)
44989     +and ( Income ne . and (Income<=107000))
44990     +and ( Kidhome ne .)
44991     +and ( MntFishProducts ne .)
44992     +and ( MntFruits ne .)
44993     +and ( MntGoldProds ne .)
44994     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
44995     +and ( MntSweetProducts ne .)
44996     +and ( MntWines ne .)
44997     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
44998     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
44999     +and ( NumStorePurchases ne .)
45000     +and ( NumWebPurchases ne .)
45001     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
45002     +and ( Recency ne .)
45003     +and ( Teenhome ne .)
45004     +and ( Year_Birth ne .)
45005     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
45006     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
45007     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
45008     +end;
MPRINT(EM_DIAGRAM):   end;
45009     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
45010     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45011      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45012      quit;
45013      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
45014      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
45015      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
45016      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
45017      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
45018      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45019      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
45020      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45021      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45022      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
45023      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45024      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
45025      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45026      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
45027      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
45028      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45029      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
45030      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45031      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
45032      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45033      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45034      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45035      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
45036      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45037      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45038      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45039      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
45040      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45041      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
45042      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45043      %macro varDept(fcmpdata=,id=);
45044      %global nobs&id scoreFlag&id;
45045      %let scoreFlag&id = 0;
45046      %if &id=1 or ^&fcmpStart %then %do;
45047      proc sort data=&fcmpdata out=_temp&id nodupkey;
45048      by NAME;
45049      where id=&id and LHS in( %let j=1;
45050      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
45051      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
45052      "&var" %let j = %eval(&j+1);
45053      %end;
45054      );
45055      run;
45056      %let dsid = %sysfunc(open(_temp&id));
45057      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
45058      %let dsid = %sysfunc(close(&dsid));
45059      %if &&nobs&id %then %do;
45060      %let scoreFlag&id = 1;
45061      %let fcmpStart = 1;
45062      %end;
45063      %else %let fcmpStart = 0;
45064      %end;
45065      %else %do;
45066      proc sort data=&fcmpdata out=_tempid;
45067      where id=&id;
45068      by LHS;
45069      run;
45070      %let dsid = %sysfunc(open(_tempid));
45071      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
45072      %let dsid = %sysfunc(close(&dsid));
45073      %if ^&&nobs&id %then %do;
45074      proc datasets lib=work nolist;
45075      delete _tempid;
45076      run;
45077      quit;
45078      %end;
45079      %else %do;
45080      data _tempAll;
45081      set %let j=%eval(&id-1);
45082      %do x=1 %to &j;
45083      %if &&nobs&x %then %do;
45084      _temp&x %end;
45085      %end;
45086      ;
45087      run;
45088      proc sql;
45089      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
45090      quit;
45091      data _temp&id;
45092      set _temp&id;
45093      where LHS ne '' and NAME ne '' and Node ne '';
45094      run;
45095      proc datasets lib=work nolist;
45096      delete _tempAll;
45097      run;
45098      %let dsid = %sysfunc(open(_temp&id));
45099      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
45100      %let dsid = %sysfunc(close(&dsid));
45101      %if ^&&nobs&id %then %do;
45102      proc datasets lib=work nolist;
45103      delete _temp&id;
45104      run;
45105      quit;
45106      %end;
45107      %else %do;
45108      %let scoreFlag&id = 1;
45109      data _temp&id;
45110      set _temp&id;
45111      where LHS ne NAME and node ne '';
45112      run;
45113      %let dsid = %sysfunc(open(_temp&id));
45114      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
45115      %let dsid = %sysfunc(close(&dsid));
45116      %if ^&&nobs&id %then %do;
45117      proc datasets lib=work nolist;
45118      delete _temp&id;
45119      run;
45120      quit;
45121      %end;
45122      %else %do;
45123      proc sort data=_temp&id nodupkey;
45124      by LHS NAME;
45125      run;
45126      %end;
45127      %end;
45128      %end;
45129      %end;
45130      %mend varDept;
45131      %macro optCode(outdata=fcmpdata);
45132      %global fcmpStart;
45133      %let fcmpStart = 0;
45134      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
45135      %let NumNodes=9;
45136      %do k=1 %to &NumNodes;
45137      %vardept(fcmpdata=&outdata, id=&k);
45138      %end;
45139      %mend optCode;
45140      %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
45141      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
45142      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
45143      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
45144      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45145      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
45146      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
45147      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
45148      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45149      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45150      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
45151      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45152      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
45153      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
45154      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45155      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
45156      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
45157      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
45158     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
45159     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
45160     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
45161     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
45162     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
45163     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
45164     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
45165     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
45166     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
45167     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
45168     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
45169     +LENGTH _WARN_ $4
45170     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
45171     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
45172     +
45173     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
45174     +
45175     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
45176     +
45177     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
45178     +
45179     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
45180     +
45181     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
45182     +
45183     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
45184     +
45185     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
45186     +
45187     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
45188     +
45189     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
45190     +
45191     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
45192     +
45193     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
45194     +
45195     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
45196     +
45197     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
45198     +
45199     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
45200     +
45201     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
45202     +
45203     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
45204     +
45205     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
45206     +
45207     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
45208     +
45209     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
45210     +
45211     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
45212     +
45213     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
45214     +
45215     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
45216     +
45217     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
45218     +
45219     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
45220     +
45221     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
45222     +
45223     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
45224     +
45225     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
45226     +
45227     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
45228     +
45229     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
45230     +
45231     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
45232     +
45233     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
45234     +
45235     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
45236     +
45237     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
45238     +
45239     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
45240     +
45241     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
45242     +
45243     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
45244     +
45245     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
45246     +
45247     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
45248     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
45249     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
45250     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
45251     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45252     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45253     +end;
MPRINT(EM_DIAGRAM):   end;
45254     +else do;
MPRINT(EM_DIAGRAM):   else do;
45255     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45256     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
45257     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45258     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45259     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
45260     +   end;
MPRINT(EM_DIAGRAM):   end;
45261     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45262     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
45263     +   end;
MPRINT(EM_DIAGRAM):   end;
45264     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45265     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
45266     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45267     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45268     +   end;
MPRINT(EM_DIAGRAM):   end;
45269     +end;
MPRINT(EM_DIAGRAM):   end;
45270     +
45271     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
45272     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
45273     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
45274     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
45275     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45276     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45277     +end;
MPRINT(EM_DIAGRAM):   end;
45278     +else do;
MPRINT(EM_DIAGRAM):   else do;
45279     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45280     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
45281     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45282     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45283     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
45284     +   end;
MPRINT(EM_DIAGRAM):   end;
45285     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45286     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
45287     +   end;
MPRINT(EM_DIAGRAM):   end;
45288     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45289     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
45290     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45291     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45292     +   end;
MPRINT(EM_DIAGRAM):   end;
45293     +end;
MPRINT(EM_DIAGRAM):   end;
45294     +
45295     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
45296     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
45297     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
45298     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
45299     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45300     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45301     +end;
MPRINT(EM_DIAGRAM):   end;
45302     +else do;
MPRINT(EM_DIAGRAM):   else do;
45303     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45304     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
45305     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45306     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45307     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
45308     +   end;
MPRINT(EM_DIAGRAM):   end;
45309     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45310     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
45311     +   end;
MPRINT(EM_DIAGRAM):   end;
45312     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45313     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
45314     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45315     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45316     +   end;
MPRINT(EM_DIAGRAM):   end;
45317     +end;
MPRINT(EM_DIAGRAM):   end;
45318     +
45319     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
45320     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
45321     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
45322     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
45323     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45324     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45325     +end;
MPRINT(EM_DIAGRAM):   end;
45326     +else do;
MPRINT(EM_DIAGRAM):   else do;
45327     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45328     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
45329     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45330     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45331     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
45332     +   end;
MPRINT(EM_DIAGRAM):   end;
45333     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45334     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
45335     +   end;
MPRINT(EM_DIAGRAM):   end;
45336     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45337     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
45338     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45339     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45340     +   end;
MPRINT(EM_DIAGRAM):   end;
45341     +end;
MPRINT(EM_DIAGRAM):   end;
45342     +
45343     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
45344     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
45345     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
45346     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
45347     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45348     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45349     +end;
MPRINT(EM_DIAGRAM):   end;
45350     +else do;
MPRINT(EM_DIAGRAM):   else do;
45351     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45352     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
45353     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45354     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45355     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
45356     +   end;
MPRINT(EM_DIAGRAM):   end;
45357     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45358     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
45359     +   end;
MPRINT(EM_DIAGRAM):   end;
45360     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45361     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
45362     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45363     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45364     +   end;
MPRINT(EM_DIAGRAM):   end;
45365     +end;
MPRINT(EM_DIAGRAM):   end;
45366     +
45367     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
45368     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
45369     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
45370     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
45371     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45372     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45373     +end;
MPRINT(EM_DIAGRAM):   end;
45374     +else do;
MPRINT(EM_DIAGRAM):   else do;
45375     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45376     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
45377     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45378     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
45379     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
45380     +   end;
MPRINT(EM_DIAGRAM):   end;
45381     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
45382     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
45383     +   end;
MPRINT(EM_DIAGRAM):   end;
45384     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45385     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
45386     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45387     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45388     +   end;
MPRINT(EM_DIAGRAM):   end;
45389     +end;
MPRINT(EM_DIAGRAM):   end;
45390     +
45391     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
45392     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
45393     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
45394     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
45395     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45396     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45397     +end;
MPRINT(EM_DIAGRAM):   end;
45398     +else do;
MPRINT(EM_DIAGRAM):   else do;
45399     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
45400     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
45401     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45402     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
45403     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
45404     +   end;
MPRINT(EM_DIAGRAM):   end;
45405     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
45406     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
45407     +   end;
MPRINT(EM_DIAGRAM):   end;
45408     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45409     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
45410     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45411     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45412     +   end;
MPRINT(EM_DIAGRAM):   end;
45413     +end;
MPRINT(EM_DIAGRAM):   end;
45414     +
45415     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
45416     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
45417     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
45418     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
45419     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
45420     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
45421     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
45422     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
45423     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
45424     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
45425     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
45426     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
45427     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45428     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45429     +end;
MPRINT(EM_DIAGRAM):   end;
45430     +else do;
MPRINT(EM_DIAGRAM):   else do;
45431     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
45432     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
45433     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45434     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
45435     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
45436     +   end;
MPRINT(EM_DIAGRAM):   end;
45437     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
45438     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
45439     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
45440     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
45441     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
45442     +   end;
MPRINT(EM_DIAGRAM):   end;
45443     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
45444     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
45445     +   end;
MPRINT(EM_DIAGRAM):   end;
45446     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
45447     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
45448     +   end;
MPRINT(EM_DIAGRAM):   end;
45449     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
45450     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
45451     +   end;
MPRINT(EM_DIAGRAM):   end;
45452     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45453     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
45454     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
45455     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
45456     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
45457     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45458     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45459     +   end;
MPRINT(EM_DIAGRAM):   end;
45460     +end;
MPRINT(EM_DIAGRAM):   end;
45461     +
45462     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
45463     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
45464     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle Marital_StatusTogether ;
45465     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
45466     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
45467     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
45468     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
45469     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
45470     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
45471     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45472     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45473     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45474     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45475     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
45476     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45477     +end;
MPRINT(EM_DIAGRAM):   end;
45478     +else do;
MPRINT(EM_DIAGRAM):   else do;
45479     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
45480     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
45481     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
45482     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
45483     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
45484     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
45485     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
45486     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
45487     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45488     +         end;
MPRINT(EM_DIAGRAM):   end;
45489     +         else do;
MPRINT(EM_DIAGRAM):   else do;
45490     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
45491     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
45492     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45493     +            end;
MPRINT(EM_DIAGRAM):   end;
45494     +         end;
MPRINT(EM_DIAGRAM):   end;
45495     +      end;
MPRINT(EM_DIAGRAM):   end;
45496     +      else do;
MPRINT(EM_DIAGRAM):   else do;
45497     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
45498     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
45499     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45500     +         end;
MPRINT(EM_DIAGRAM):   end;
45501     +      end;
MPRINT(EM_DIAGRAM):   end;
45502     +   end;
MPRINT(EM_DIAGRAM):   end;
45503     +   else do;
MPRINT(EM_DIAGRAM):   else do;
45504     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
45505     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
45506     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45507     +      end;
MPRINT(EM_DIAGRAM):   end;
45508     +      else do;
MPRINT(EM_DIAGRAM):   else do;
45509     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
45510     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
45511     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
45512     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
45513     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
45514     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
45515     +         end;
MPRINT(EM_DIAGRAM):   end;
45516     +      end;
MPRINT(EM_DIAGRAM):   end;
45517     +   end;
MPRINT(EM_DIAGRAM):   end;
45518     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
45519     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
45520     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
45521     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
45522     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
45523     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
45524     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45525     +   end;
MPRINT(EM_DIAGRAM):   end;
45526     +end;
MPRINT(EM_DIAGRAM):   end;
45527     +
45528     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45529     +*** Checking missing input Interval
45530     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
45531     +
45532     +IF NMISS(
45533     +   AcceptedCmpTotal ,
45534     +   Age ,
45535     +   Frq ,
45536     +   Income ,
45537     +   Kidhome ,
45538     +   MntFishProducts ,
45539     +   MntFruits ,
45540     +   MntGoldProds ,
45541     +   MntSweetProducts ,
45542     +   MonthsAsCustomer ,
45543     +   NumDealsPurchases ,
45544     +   NumWebVisitsMonth ,
45545     +   RFMstat ,
45546     +   RMntFrq ,
45547     +   Recency ,
45548     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
45549     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
45550     +
45551     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
45552     +END;
MPRINT(EM_DIAGRAM):   END;
45553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45554     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
45555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45556     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45557     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
45558     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
45559     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
45560     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
45561     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45562     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
45563     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
45564     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
45565     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
45566     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
45567     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
45568     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
45569     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
45570     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
45571     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
45572     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
45573     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45574     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
45575     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45576     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
45577     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
45578     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45579     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45580     +END;
MPRINT(EM_DIAGRAM):   END;
45581     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
45582     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
45583     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
45584     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * AcceptedCmpTotal ;
45585     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
45586     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
45587     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
45588     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
45589     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
45590     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
45591     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
45592     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
45593     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
45594     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
45595     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * MntFishProducts ;
45596     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
45597     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
45598     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
45599     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
45600     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
45601     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
45602     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
45603     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
45604     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * MntSweetProducts ;
45605     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
45606     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
45607     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * MonthsAsCustomer ;
45608     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
45609     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
45610     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * NumDealsPurchases ;
45611     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
45612     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
45613     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * NumWebVisitsMonth ;
45614     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
45615     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
45616     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
45617     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
45618     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
45619     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
45620     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
45621     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
45622     +END;
MPRINT(EM_DIAGRAM):   END;
45623     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45624     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
45625     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45626     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45627     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
45628     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45629     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45630     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
45631     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45632     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45633     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
45634     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
45635     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
45636     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
45637     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
45638     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
45639     +          +     0.07696704519183 * S_MonthsAsCustomer
45640     +          +     0.06885982009617 * S_NumDealsPurchases
45641     +          +     0.18284147478918 * S_NumWebVisitsMonth
45642     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
45643     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
45644     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome + -0.02139676364759 * S_MntFishProducts + -0.06309036790386 *
S_MntFruits + -0.02579098391162 * S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat +
0.16731511643557 * S_RMntFrq + -0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
45645     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
45646     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
45647     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
45648     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
45649     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
45650     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
45651     +          +     0.19400730773464 * S_MonthsAsCustomer
45652     +          +    -1.36455521037197 * S_NumDealsPurchases
45653     +          +    -1.07068059346196 * S_NumWebVisitsMonth
45654     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
45655     +        S_RMntFrq  +     1.36066079800227 * S_Recency
45656     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age + 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + -0.61585865165341 * S_MntFishProducts + 0.48583904586511 *
S_MntFruits + -0.38353134378746 * S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer + -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + -0.4953702697801 * S_RFMstat +
-0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + -0.04271320094349 * S_Teenhome ;
45657     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
45658     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
45659     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
45660     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
45661     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 * AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + -0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 +
0.36349047632504 * HigherEducationBinary0 ;
45662     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
45663     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
45664     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
45665     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
45666     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + -0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 +
0.47014175146609 * HigherEducationBinary0 ;
45667     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
45668     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
45669     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
45670     +          +     0.23432241402098 * Marital_StatusDivorced
45671     +          +    -0.46302700269027 * Marital_StatusMarried
45672     +          +      0.4032168653504 * Marital_StatusSingle
45673     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 * EducationMaster + 0.23432241402098 * Marital_StatusDivorced +
-0.46302700269027 * Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * Marital_StatusTogether ;
45674     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
45675     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
45676     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
45677     +          +    -0.31347503340603 * Marital_StatusDivorced
45678     +          +    -0.20319530959178 * Marital_StatusMarried
45679     +          +     0.48298350411196 * Marital_StatusSingle
45680     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 * EducationMaster + -0.31347503340603 * Marital_StatusDivorced +
-0.20319530959178 * Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * Marital_StatusTogether ;
45681     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
45682     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
45683     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
45684     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
45685     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
45686     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
45687     +END;
MPRINT(EM_DIAGRAM):   END;
45688     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
45689     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
45690     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
45691     +END;
MPRINT(EM_DIAGRAM):   END;
45692     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45693     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
45694     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45695     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
45696     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
45697     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
45698     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
45699     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
45700     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
45701     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
45702     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
45703     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
45704     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
45705     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
45706     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
45707     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
45708     +END;
MPRINT(EM_DIAGRAM):   END;
45709     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
45710     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
45711     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
45712     +END;
MPRINT(EM_DIAGRAM):   END;
45713     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
45714     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
45715     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
45716     +END;
MPRINT(EM_DIAGRAM):   END;
45717     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45718     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
45719     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
45720     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
45721     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
45722     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
45723     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
45724     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
45725     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
45726     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
45727     +END;
MPRINT(EM_DIAGRAM):   END;
45728     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
45729     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
45730     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
45731     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45732      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45733      quit;
45734      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
45735      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
45736      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
45737      retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
45738      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
45739      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45740      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
45741      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45742      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45743      proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
45744      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45746      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45747      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
45748      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
45749      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45750      proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
45751      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45752      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
45753      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45754      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45755      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45756      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
45757      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45758      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45759      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45760      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.
 
45761      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45762      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
45763      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45764      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
45765      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
45766      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
45767     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45768     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
45769     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
45770     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
45771     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
45772     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45773      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45774      quit;
45775      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
45776      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
45777      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
45778      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
45779      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
45780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45781      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
45782      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45783      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45784      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
45785      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45786      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45787      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45788      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
45789      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
45790      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45791      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
45792      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
45793      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
45794      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45795      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45796      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45797      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
45798      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45799      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45800      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45801      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
45802      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45803      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
45804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45805      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
45806      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
45807      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
45808     +
45809     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
45810     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
MPRINT(EM_DIAGRAM):   Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
45811     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
45812     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
45813     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
45814     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
45815     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45816      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45817      quit;
45818      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
45819      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
45820      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
45821      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
45822      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
45823      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45824      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
45825      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45826      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45827      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
45828      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45829      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45830      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45831      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
45832      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
45833      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45834      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
45835      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45836      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
45837      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45838      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45839      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45840      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
45841      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45842      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45843      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45844      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
45845      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45846      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
45847      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45848      filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
45849      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
45850      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
45851     +
45852     +
45853     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
45854     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
45855     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
45856     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
45857     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
45858     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45859     +
45860     +
45861     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
45862     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
45863     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
45864     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
45865     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
45866     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45867     +
45868     +
45869     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
45870     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
45871     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
45872     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
45873     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
45874     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45875     +
45876     +
45877     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
45878     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
45879     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
45880     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
45881     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
45882     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45883     +
45884     +
45885     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
45886     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
45887     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
45888     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
45889     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
45890     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45891     +
45892     +
45893     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
45894     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
45895     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
45896     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
45897     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
45898     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45899     +
45900     +
45901     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
45902     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
45903     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
45904     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
45905     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
45906     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45907     +
45908     +
45909     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
45910     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
45911     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
45912     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
45913     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
45914     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
45915     +if
45916     +_FILTERNORM1 not in ( '.')
45917     + and
45918     +_FILTERNORM2 not in ( '.')
45919     + and
45920     +_FILTERNORM3 not in ( '.')
45921     + and
45922     +_FILTERNORM4 not in ( '.')
45923     + and
45924     +_FILTERNORM5 not in ( '.')
45925     + and
45926     +_FILTERNORM6 not in ( '.')
45927     + and
45928     +_FILTERNORM7 not in ( ' ')
45929     + and
45930     +_FILTERNORM8 not in ( ' ')
45931     +and
45932     +( Dt_Customer ne .)
45933     +and ( Income ne . and (Income<=107000))
45934     +and ( Kidhome ne .)
45935     +and ( MntFishProducts ne .)
45936     +and ( MntFruits ne .)
45937     +and ( MntGoldProds ne .)
45938     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
45939     +and ( MntSweetProducts ne .)
45940     +and ( MntWines ne .)
45941     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
45942     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
45943     +and ( NumStorePurchases ne .)
45944     +and ( NumWebPurchases ne .)
45945     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
45946     +and ( Recency ne .)
45947     +and ( Teenhome ne .)
45948     +and ( Year_Birth ne .)
45949     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and _FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and _FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8
not in ( ' ') and ( Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne . and (MntMeatProducts<=964)) and ( MntSweetProducts ne
.) and ( MntWines ne .) and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( NumWebVisitsMonth ne . and
(NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne .) and ( Year_Birth ne .) then do;
45950     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
45951     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
45952     +end;
MPRINT(EM_DIAGRAM):   end;
45953     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
45954     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
45955      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
45956      quit;
45957      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
45958      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
45959      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
45960      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
45961      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
45962      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45963      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
45964      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45965      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45966      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
45967      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45968      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45969      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45970      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
45971      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
45972      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45973      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
45974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45975      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
45976      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45977      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
45978      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
45979      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
45980      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
45981      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45982      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
45983      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
45984      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45985      proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl11_FCMP data=_tempx;
45986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL11_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL11_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
45987      %macro varDept(fcmpdata=,id=);
45988      %global nobs&id scoreFlag&id;
45989      %let scoreFlag&id = 0;
45990      %if &id=1 or ^&fcmpStart %then %do;
45991      proc sort data=&fcmpdata out=_temp&id nodupkey;
45992      by NAME;
45993      where id=&id and LHS in( %let j=1;
45994      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
45995      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
45996      "&var" %let j = %eval(&j+1);
45997      %end;
45998      );
45999      run;
46000      %let dsid = %sysfunc(open(_temp&id));
46001      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
46002      %let dsid = %sysfunc(close(&dsid));
46003      %if &&nobs&id %then %do;
46004      %let scoreFlag&id = 1;
46005      %let fcmpStart = 1;
46006      %end;
46007      %else %let fcmpStart = 0;
46008      %end;
46009      %else %do;
46010      proc sort data=&fcmpdata out=_tempid;
46011      where id=&id;
46012      by LHS;
46013      run;
46014      %let dsid = %sysfunc(open(_tempid));
46015      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
46016      %let dsid = %sysfunc(close(&dsid));
46017      %if ^&&nobs&id %then %do;
46018      proc datasets lib=work nolist;
46019      delete _tempid;
46020      run;
46021      quit;
46022      %end;
46023      %else %do;
46024      data _tempAll;
46025      set %let j=%eval(&id-1);
46026      %do x=1 %to &j;
46027      %if &&nobs&x %then %do;
46028      _temp&x %end;
46029      %end;
46030      ;
46031      run;
46032      proc sql;
46033      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
46034      quit;
46035      data _temp&id;
46036      set _temp&id;
46037      where LHS ne '' and NAME ne '' and Node ne '';
46038      run;
46039      proc datasets lib=work nolist;
46040      delete _tempAll;
46041      run;
46042      %let dsid = %sysfunc(open(_temp&id));
46043      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
46044      %let dsid = %sysfunc(close(&dsid));
46045      %if ^&&nobs&id %then %do;
46046      proc datasets lib=work nolist;
46047      delete _temp&id;
46048      run;
46049      quit;
46050      %end;
46051      %else %do;
46052      %let scoreFlag&id = 1;
46053      data _temp&id;
46054      set _temp&id;
46055      where LHS ne NAME and node ne '';
46056      run;
46057      %let dsid = %sysfunc(open(_temp&id));
46058      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
46059      %let dsid = %sysfunc(close(&dsid));
46060      %if ^&&nobs&id %then %do;
46061      proc datasets lib=work nolist;
46062      delete _temp&id;
46063      run;
46064      quit;
46065      %end;
46066      %else %do;
46067      proc sort data=_temp&id nodupkey;
46068      by LHS NAME;
46069      run;
46070      %end;
46071      %end;
46072      %end;
46073      %end;
46074      %mend varDept;
46075      %macro optCode(outdata=fcmpdata);
46076      %global fcmpStart;
46077      %let fcmpStart = 0;
46078      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
46079      %let NumNodes=9;
46080      %do k=1 %to &NumNodes;
46081      %vardept(fcmpdata=&outdata, id=&k);
46082      %end;
46083      %mend optCode;
46084      %optcode(outData=EMWS8.Ensmbl11_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 112 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl11_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
46085      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
46086      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
46087      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
46088      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46089      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
46090      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
46091      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
46092      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46093      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
46094      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
46095      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46096      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
46097      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
46098      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46099      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
46100      * Ensmbl11: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Computing metadata for TRAIN data;
46101      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl11_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl11_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl11_TRAIN out=WORK.M21LQU_G noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21LQU_G;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M21LQU_G(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21LQU_G;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M21LQU_G;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3JVKDXV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RDMAYG(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   set WORK.M3JVKDXV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl11";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl11";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl11: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" "P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl11";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
46421      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
46422      set EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMINFO;
46423      where DATA='Ensmbl11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl11' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
46424      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL11_EMINFO.
      WHERE (DATA='Ensmbl11') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46425      data EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMINFO;
46426      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
46427      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
46428      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
46432      run;
46433      data EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMINFO;
46434      set EMWS8.Ensmbl11_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMINFO WORK.MODELTEMP_INFO;
46435      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL11_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46436      proc sort data = EMWS8.Ensmbl11_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl11_EMINFO NOTHREADS;
46437      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
46438      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL11_EMINFO.
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46439      proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
46440      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
46441      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46442      proc sort data = EMWS8.Ensmbl11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl11_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
46443      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
46444      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL11_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46445      data EMWS8.Ensmbl11_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMINFO;
46446      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
46447      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
46448      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL11_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
46449      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
46450      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
46451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
46452      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL11_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39P32JH "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl11\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39P32JH new;
MPRINT(EM_DIAGRAM):   run;
46476      data EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMOUTFIT;
46477      set EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMOUTFIT;
46478      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
46479      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
46480      if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
46481      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL11_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL11_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46482      proc sort data=EMWS8.Ensmbl11_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl11_EMREPORTFIT nothreads;
46483      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
46484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL11_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL11_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46485      %let _EMwarndup = 0;
46486      %let _EMtargetdup =;
46487      %let _EMASEtargetdup =;
46488      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
46489      set EMWS8.Ensmbl11_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMOUTFIT;
46490      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
46491      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
46492      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
46493      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
46494      end;
MPRINT(EM_DIAGRAM):   end;
46495      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL11_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46496      proc sort data=EMWS8.Neural40_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural40_CMeta_TRAIN out=WORK.SUBSETINMETA;
46497      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
46498      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL40_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46499      proc sort data=EMWS8.Ensmbl11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl11_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
46500      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
46501      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL11_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46502      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
46503      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
46504      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
46505      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46506      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
46507      set EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_CMeta_TRAIN;
46508      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
46509      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
46510      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
46511      set EMWS8.Ensmbl11_TRAIN(keep=
46512      F_DepVar
46513      I_DepVar
46514      P_DepVar0
46515      P_DepVar1
46516      R_DepVar0
46517      R_DepVar1
46518      U_DepVar
46519      _WARN_
46520      DepVar
46521      );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
46522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: View EMWS8.ENSMBL11_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL40_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL11_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl11_0D987DH nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_0D987DH;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_0D987DH(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_0D987DH;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_0D987DH;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359 _NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0004020789 OVLMAX 0.9985498869 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS)) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
50788      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
50789      set EMWS8.Ensmbl11_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_CMeta_TRAIN;
50790      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
50790    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
50791      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
50792      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
50793      set EMWS8.Ensmbl11_VALIDATE(keep=
50794      F_DepVar
50795      I_DepVar
50796      P_DepVar0
50797      P_DepVar1
50798      R_DepVar0
50799      R_DepVar1
50800      U_DepVar
50801      _WARN_
50802      DepVar
50803      );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
50804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: View EMWS8.ENSMBL11_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL40_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL11_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl11_2LZ8DPI nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl11_2LZ8DPI;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_2LZ8DPI(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMCLASSIFICATION WORK.Ensmbl11_2LZ8DPI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl11_2LZ8DPI;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0004365702 OVLMAX 0.9961763715 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
55079      %let _cn = %sysfunc(getoption(CENTER));
55080      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
55081      proc print data=EMWS8.Ensmbl11_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMREPORTFIT noobs label;
55082      var STAT LABEL TRAIN
55083      VALIDATE
55084      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
55085      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
55086      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
55087      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
55088      run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL11_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
55089      title10;
MPRINT(EM_DIAGRAM):   title10;
55090      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
55091      proc sort data=EMWS8.Ensmbl11_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl11_EMCLASSIFICATION nothreads;
55092      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
55093      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL11_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
55094      %let _cn = %sysfunc(getoption(CENTER));
55095      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
55096      proc print data=EMWS8.Ensmbl11_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMCLASSIFICATION noobs label;
55097      var from into pct_row pct_col count percent
55098      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
55099      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
55100      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
55101      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
55102      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
55103      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
55104      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
55105      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
55106      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
55107      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
55108      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
55109      run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL11_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
55110      title9;
MPRINT(EM_DIAGRAM):   title9;
55111      title10;
MPRINT(EM_DIAGRAM):   title10;
55112      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
55113      %let _cn = %sysfunc(getoption(CENTER));
55114      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
55115      data EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl11_EMEVENTREPORT;
55116      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
55116    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
55117      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
55117    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
55117    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
55117    ! FALSEEVENT
55118      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
55118    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
55118    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
55119         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
55120      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
55121      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
55122      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
55123      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
55124      set EMWS8.Ensmbl11_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl11_EMEVENTREPORT;
55125      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL11_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL11_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
55126      proc print data=EMWS8.Ensmbl11_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMEVENTREPORT noobs label;
55127      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
55128      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
55129      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
55130      run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL11_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
55131      title10;
MPRINT(EM_DIAGRAM):   title10;
55132      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
55133      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
55134      modify Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl11_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
55135      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
55136      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
55136    ! ;
MPRINT(EM_DIAGRAM):   run;
55137      run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL11_EMRANK.DATA.
55138      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
55139      %let _cn = %sysfunc(getoption(CENTER));
55140      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
55141      proc print data=EMWS8.Ensmbl11_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMRANK label noobs;
55142      var
55143      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
55144      by
55145      notsorted DATAROLE
55146      notsorted TARGET
55147      notsorted TARGETLABEL
55148      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
55149      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
55150      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
55151      run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL11_EMRANK.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
55152      title10;
MPRINT(EM_DIAGRAM):   title10;
55153      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
55154      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
55155      modify Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl11_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
55156      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
55156    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
55157      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
55157    ! ;
MPRINT(EM_DIAGRAM):   run;
55158      run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL11_EMSCOREDIST.DATA.
55159      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl11_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
