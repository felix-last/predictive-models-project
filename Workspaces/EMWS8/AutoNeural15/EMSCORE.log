MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.49 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.49 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3A1HI1L 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3A1HI1L new;
MPRINT(EM_DIAGRAM):   run;
1742307    filename emflow
1742307  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural15: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1742308    *------------------------------------------------------------*;
1742309    * AutoNeural15: Scoring DATA data;
1742310    *------------------------------------------------------------*;
1742311    data EMWS8.AutoNeural15_TRAIN
1742312    / view=EMWS8.AutoNeural15_TRAIN
1742313    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural15_TRAIN / view=EMWS8.AutoNeural15_TRAIN ;
1742314    set EMWS8.PRINCOMP_TRAIN
1742315    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1742316    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas.
1742317   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1742318   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1742319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1742320   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1742321   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1742322   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1742323   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1742324   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1742325   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1742326   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1742327   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1742328   +LENGTH _WARN_ $4
1742329   +      F_DepVar  $ 12
1742330   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1742331   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1742332   +
1742333   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1742334   +
1742335   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1742336   +
1742337   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1742338   +
1742339   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1742340   +
1742341   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1742342   +
1742343   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1742344   +
1742345   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1742346   +
1742347   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1742348   +
1742349   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1742350   +
1742351   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1742352   +
1742353   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1742354   +
1742355   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1742356   +
1742357   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1742358   +
1742359   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1742360   +
1742361   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1742362   +
1742363   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1742364   +
1742365   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1742366   +
1742367   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1742368   +
1742369   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1742370   +
1742371   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1742372   +
1742373   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1742374   +
1742375   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1742376   +
1742377   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1742378   +
1742379   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1742380   +
1742381   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1742382   +
1742383   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1742384   +
1742385   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1742386   +
1742387   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1742388   +
1742389   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1742390   +
1742391   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1742392   +
1742393   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1742394   +
1742395   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1742396   +
1742397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742398   +*** Checking missing input Interval
1742399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1742400   +
1742401   +IF NMISS(
1742402   +   PC_1 ,
1742403   +   PC_10 ,
1742404   +   PC_11 ,
1742405   +   PC_12 ,
1742406   +   PC_13 ,
1742407   +   PC_14 ,
1742408   +   PC_15 ,
1742409   +   PC_16 ,
1742410   +   PC_17 ,
1742411   +   PC_2 ,
1742412   +   PC_3 ,
1742413   +   PC_4 ,
1742414   +   PC_5 ,
1742415   +   PC_6 ,
1742416   +   PC_7 ,
1742417   +   PC_8 ,
1742418   +   PC_9 ,
1742419   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1742420   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1742421   +
1742422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1742423   +END;
MPRINT(EM_DIAGRAM):   END;
1742424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742425   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1742426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742427   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742428   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1742429   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1742430   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1742431   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1742432   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1742433   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1742434   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1742435   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1742436   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1742437   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1742438   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1742439   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1742440   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1742441   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1742442   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1742443   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1742444   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1742445   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1742446   +END;
MPRINT(EM_DIAGRAM):   END;
1742447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742448   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1742449   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1742450   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1742451   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1742452   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1742453   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1742454   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1742455   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1742456   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1742457   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1742458   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1742459   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1742460   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1742461   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1742462   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1742463   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1742464   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1742465   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1742466   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1742467   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1742468   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1742469   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1742470   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1742471   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1742472   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1742473   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1742474   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1742475   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1742476   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1742477   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1742478   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1742479   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1742480   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1742481   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1742482   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1742483   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1742484   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1742485   +END;
MPRINT(EM_DIAGRAM):   END;
1742486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742487   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1742488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742489   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742490   +   H1x1_1  =    -2.58508868488235 * S_PC_1  +     1.20007982706189 * S_PC_10
1742491   +          +    -0.55565639779815 * S_PC_11  +     0.42317882296086 * S_PC_12
1742492   +          +    -0.39102984690832 * S_PC_13  +     1.05246495427875 * S_PC_14
1742493   +          +    -0.58858040806579 * S_PC_15  +     0.16812135442896 * S_PC_16
1742494   +          +    -1.30829654451836 * S_PC_17  +    -2.61122952105175 * S_PC_2
1742495   +          +    -1.57692647141984 * S_PC_3  +    -0.31590297708381 * S_PC_4
1742496   +          +       0.489265046162 * S_PC_5  +    -1.38472485127924 * S_PC_6
1742497   +          +    -0.01563533914193 * S_PC_7  +     -0.6220319651245 * S_PC_8
1742498   +          +    -0.94386327209471 * S_PC_9  +     0.31441338384554 *
1742499   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.58508868488235 * S_PC_1 + 1.20007982706189 * S_PC_10 + 
-0.55565639779815 * S_PC_11 + 0.42317882296086 * S_PC_12 + -0.39102984690832 * S_PC_13 + 
1.05246495427875 * S_PC_14 + -0.58858040806579 * S_PC_15 + 0.16812135442896 * S_PC_16 + 
-1.30829654451836 * S_PC_17 + -2.61122952105175 * S_PC_2 + -1.57692647141984 * S_PC_3 + 
-0.31590297708381 * S_PC_4 + 0.489265046162 * S_PC_5 + -1.38472485127924 * S_PC_6 + 
-0.01563533914193 * S_PC_7 + -0.6220319651245 * S_PC_8 + -0.94386327209471 * S_PC_9 + 
0.31441338384554 * S_Year_Birth ;
1742500   +   H1x1_2  =     0.88777260450227 * S_PC_1  +     -1.5367639113177 * S_PC_10
1742501   +          +     1.56830295981223 * S_PC_11  +     0.99729222277828 * S_PC_12
1742502   +          +    -3.16964209677897 * S_PC_13  +     2.61234813943117 * S_PC_14
1742503   +          +    -2.07656542974589 * S_PC_15  +    -0.17130313863934 * S_PC_16
1742504   +          +    -1.77044440944524 * S_PC_17  +     -0.2326644061385 * S_PC_2
1742505   +          +    -0.50943100620403 * S_PC_3  +     -0.3771206330134 * S_PC_4
1742506   +          +     0.32903380119716 * S_PC_5  +     0.23500282354372 * S_PC_6
1742507   +          +     0.58321759475834 * S_PC_7  +     0.45713287668241 * S_PC_8
1742508   +          +     0.88501117322549 * S_PC_9  +     0.68863619416424 *
1742509   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.88777260450227 * S_PC_1 + -1.5367639113177 * S_PC_10 + 
1.56830295981223 * S_PC_11 + 0.99729222277828 * S_PC_12 + -3.16964209677897 * S_PC_13 + 
2.61234813943117 * S_PC_14 + -2.07656542974589 * S_PC_15 + -0.17130313863934 * S_PC_16 + 
-1.77044440944524 * S_PC_17 + -0.2326644061385 * S_PC_2 + -0.50943100620403 * S_PC_3 + 
-0.3771206330134 * S_PC_4 + 0.32903380119716 * S_PC_5 + 0.23500282354372 * S_PC_6 + 
0.58321759475834 * S_PC_7 + 0.45713287668241 * S_PC_8 + 0.88501117322549 * S_PC_9 + 
0.68863619416424 * S_Year_Birth ;
1742510   +   H1x1_3  =     2.99334493741188 * S_PC_1  +    -0.44820958746633 * S_PC_10
1742511   +          +    -1.81438443050646 * S_PC_11  +    -1.04708024487716 * S_PC_12
1742512   +          +     0.36182350856973 * S_PC_13  +    -0.99795057503429 * S_PC_14
1742513   +          +    -0.02306764030001 * S_PC_15  +    -0.00603151951721 * S_PC_16
1742514   +          +     0.23899250295769 * S_PC_17  +    -0.63426905864888 * S_PC_2
1742515   +          +      0.5135153086796 * S_PC_3  +    -1.92061969649311 * S_PC_4
1742516   +          +     2.09424768438312 * S_PC_5  +    -0.37281390402835 * S_PC_6
1742517   +          +    -0.21099687178729 * S_PC_7  +    -0.94566915175486 * S_PC_8
1742518   +          +     1.46507718843169 * S_PC_9  +     0.06013448238612 *
1742519   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.99334493741188 * S_PC_1 + -0.44820958746633 * S_PC_10 + 
-1.81438443050646 * S_PC_11 + -1.04708024487716 * S_PC_12 + 0.36182350856973 * S_PC_13 + 
-0.99795057503429 * S_PC_14 + -0.02306764030001 * S_PC_15 + -0.00603151951721 * S_PC_16 + 
0.23899250295769 * S_PC_17 + -0.63426905864888 * S_PC_2 + 0.5135153086796 * S_PC_3 + 
-1.92061969649311 * S_PC_4 + 2.09424768438312 * S_PC_5 + -0.37281390402835 * S_PC_6 + 
-0.21099687178729 * S_PC_7 + -0.94566915175486 * S_PC_8 + 1.46507718843169 * S_PC_9 + 
0.06013448238612 * S_Year_Birth ;
1742520   +   H1x1_4  =     1.48987731423111 * S_PC_1  +    -1.85153148919211 * S_PC_10
1742521   +          +     -0.3389631560558 * S_PC_11  +    -0.12094342653401 * S_PC_12
1742522   +          +     2.05415609819201 * S_PC_13  +    -1.30754774387893 * S_PC_14
1742523   +          +     0.34915072276302 * S_PC_15  +     0.02455144958584 * S_PC_16
1742524   +          +     0.38662422903481 * S_PC_17  +     1.43658486127495 * S_PC_2
1742525   +          +     1.92483521589652 * S_PC_3  +    -0.93439620595414 * S_PC_4
1742526   +          +    -0.77664128208153 * S_PC_5  +    -1.45726475701533 * S_PC_6
1742527   +          +     0.66785571790949 * S_PC_7  +     -1.1372136165809 * S_PC_8
1742528   +          +    -0.02398295407417 * S_PC_9  +    -1.36554091812833 *
1742529   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.48987731423111 * S_PC_1 + -1.85153148919211 * S_PC_10 + 
-0.3389631560558 * S_PC_11 + -0.12094342653401 * S_PC_12 + 2.05415609819201 * S_PC_13 + 
-1.30754774387893 * S_PC_14 + 0.34915072276302 * S_PC_15 + 0.02455144958584 * S_PC_16 + 
0.38662422903481 * S_PC_17 + 1.43658486127495 * S_PC_2 + 1.92483521589652 * S_PC_3 + 
-0.93439620595414 * S_PC_4 + -0.77664128208153 * S_PC_5 + -1.45726475701533 * S_PC_6 + 
0.66785571790949 * S_PC_7 + -1.1372136165809 * S_PC_8 + -0.02398295407417 * S_PC_9 + 
-1.36554091812833 * S_Year_Birth ;
1742530   +   H1x1_5  =     1.13575402726629 * S_PC_1  +     0.67756826691669 * S_PC_10
1742531   +          +     3.09231877746483 * S_PC_11  +     0.56222338879196 * S_PC_12
1742532   +          +     -0.4403693524401 * S_PC_13  +     0.01110919443997 * S_PC_14
1742533   +          +    -0.52868244078885 * S_PC_15  +     -1.9766891325667 * S_PC_16
1742534   +          +    -1.05639309934463 * S_PC_17  +    -0.38843367864894 * S_PC_2
1742535   +          +    -0.05728416413602 * S_PC_3  +    -3.35395833599874 * S_PC_4
1742536   +          +     2.51080150023951 * S_PC_5  +     0.43960143741785 * S_PC_6
1742537   +          +      0.3591018924288 * S_PC_7  +     -0.7654535838821 * S_PC_8
1742538   +          +    -1.84832829530688 * S_PC_9  +    -0.95742566630573 *
1742539   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.13575402726629 * S_PC_1 + 0.67756826691669 * S_PC_10 + 
3.09231877746483 * S_PC_11 + 0.56222338879196 * S_PC_12 + -0.4403693524401 * S_PC_13 + 
0.01110919443997 * S_PC_14 + -0.52868244078885 * S_PC_15 + -1.9766891325667 * S_PC_16 + 
-1.05639309934463 * S_PC_17 + -0.38843367864894 * S_PC_2 + -0.05728416413602 * S_PC_3 + 
-3.35395833599874 * S_PC_4 + 2.51080150023951 * S_PC_5 + 0.43960143741785 * S_PC_6 + 
0.3591018924288 * S_PC_7 + -0.7654535838821 * S_PC_8 + -1.84832829530688 * S_PC_9 + 
-0.95742566630573 * S_Year_Birth ;
1742540   +   H1x1_6  =     3.38937489297591 * S_PC_1  +     0.94282490059107 * S_PC_10
1742541   +          +    -0.53657045226494 * S_PC_11  +     0.30588002409044 * S_PC_12
1742542   +          +     2.11431823492509 * S_PC_13  +     0.80354979489665 * S_PC_14
1742543   +          +    -1.39191827031951 * S_PC_15  +    -2.35881541761373 * S_PC_16
1742544   +          +    -0.50612708923609 * S_PC_17  +     3.22648821227008 * S_PC_2
1742545   +          +    -0.95208596310227 * S_PC_3  +     1.47823552386659 * S_PC_4
1742546   +          +       0.805694341473 * S_PC_5  +     0.50622170985074 * S_PC_6
1742547   +          +     0.27100305891282 * S_PC_7  +    -0.61070899906227 * S_PC_8
1742548   +          +     0.41488115968405 * S_PC_9  +     0.21679617310735 *
1742549   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.38937489297591 * S_PC_1 + 0.94282490059107 * S_PC_10 + 
-0.53657045226494 * S_PC_11 + 0.30588002409044 * S_PC_12 + 2.11431823492509 * S_PC_13 + 
0.80354979489665 * S_PC_14 + -1.39191827031951 * S_PC_15 + -2.35881541761373 * S_PC_16 + 
-0.50612708923609 * S_PC_17 + 3.22648821227008 * S_PC_2 + -0.95208596310227 * S_PC_3 + 
1.47823552386659 * S_PC_4 + 0.805694341473 * S_PC_5 + 0.50622170985074 * S_PC_6 + 
0.27100305891282 * S_PC_7 + -0.61070899906227 * S_PC_8 + 0.41488115968405 * S_PC_9 + 
0.21679617310735 * S_Year_Birth ;
1742550   +   H1x1_7  =     1.24857319335592 * S_PC_1  +    -1.54585129542958 * S_PC_10
1742551   +          +     0.20374990912286 * S_PC_11  +     0.67651255064544 * S_PC_12
1742552   +          +    -0.08934011035185 * S_PC_13  +     0.17928775158548 * S_PC_14
1742553   +          +    -0.58728512459532 * S_PC_15  +    -0.25865188138967 * S_PC_16
1742554   +          +     0.03670265464573 * S_PC_17  +    -1.99195066147747 * S_PC_2
1742555   +          +    -0.39069389727288 * S_PC_3  +     2.07633421509856 * S_PC_4
1742556   +          +     -3.6389806439859 * S_PC_5  +     0.16416743850622 * S_PC_6
1742557   +          +    -0.88404145577722 * S_PC_7  +     0.26579739303631 * S_PC_8
1742558   +          +    -0.60630749755757 * S_PC_9  +    -0.48806868744766 *
1742559   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.24857319335592 * S_PC_1 + -1.54585129542958 * S_PC_10 + 
0.20374990912286 * S_PC_11 + 0.67651255064544 * S_PC_12 + -0.08934011035185 * S_PC_13 + 
0.17928775158548 * S_PC_14 + -0.58728512459532 * S_PC_15 + -0.25865188138967 * S_PC_16 + 
0.03670265464573 * S_PC_17 + -1.99195066147747 * S_PC_2 + -0.39069389727288 * S_PC_3 + 
2.07633421509856 * S_PC_4 + -3.6389806439859 * S_PC_5 + 0.16416743850622 * S_PC_6 + 
-0.88404145577722 * S_PC_7 + 0.26579739303631 * S_PC_8 + -0.60630749755757 * S_PC_9 + 
-0.48806868744766 * S_Year_Birth ;
1742560   +   H1x1_1  =     3.04814503173639 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.04814503173639 + H1x1_1 ;
1742561   +   H1x1_2  =     0.84692088384215 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.84692088384215 + H1x1_2 ;
1742562   +   H1x1_3  =     -4.4673681519001 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.4673681519001 + H1x1_3 ;
1742563   +   H1x1_4  =     3.86809032308226 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.86809032308226 + H1x1_4 ;
1742564   +   H1x1_5  =    -2.92592869915112 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.92592869915112 + H1x1_5 ;
1742565   +   H1x1_6  =    -2.81049837671073 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.81049837671073 + H1x1_6 ;
1742566   +   H1x1_7  =     1.32306129907914 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.32306129907914 + H1x1_7 ;
1742567   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1742568   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1742569   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1742570   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1742571   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1742572   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1742573   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1742574   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1742575   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
1742576   +END;
MPRINT(EM_DIAGRAM):   END;
1742577   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742578   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1742579   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1742580   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1742581   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1742582   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1742583   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1742584   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1742585   +END;
MPRINT(EM_DIAGRAM):   END;
1742586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742587   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1742588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742589   +
1742590   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1742591   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1742592   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1742593   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1742594   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1742595   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1742596   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1742597   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1742598   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1742599   +end;
MPRINT(EM_DIAGRAM):   end;
1742600   +else do;
MPRINT(EM_DIAGRAM):   else do;
1742601   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1742602   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1742603   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1742604   +   end;
MPRINT(EM_DIAGRAM):   end;
1742605   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1742606   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1742607   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1742608   +   end;
MPRINT(EM_DIAGRAM):   end;
1742609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1742610   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1742611   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1742612   +   end;
MPRINT(EM_DIAGRAM):   end;
1742613   +end;
MPRINT(EM_DIAGRAM):   end;
1742614   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742615   +   P_DepVar1  =    -3.64327321711916 * H1x1_1  +     5.38823627761681 * H1x1_2
1742616   +          +     5.52777341732681 * H1x1_3  +    -5.13480555699473 * H1x1_4
1742617   +          +    -6.08116192343294 * H1x1_5  +    -4.72257685787279 * H1x1_6
1742618   +          +     10.0081185533487 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.64327321711916 * H1x1_1 + 5.38823627761681 * H1x1_2 + 
5.52777341732681 * H1x1_3 + -5.13480555699473 * H1x1_4 + -6.08116192343294 * H1x1_5 + 
-4.72257685787279 * H1x1_6 + 10.0081185533487 * H1x1_7 ;
1742619   +   P_DepVar1  =     -4.2842153593235 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.2842153593235 + P_DepVar1 ;
1742620   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1742621   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1742622   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1742623   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1742624   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1742625   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1742626   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1742627   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1742628   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1742629   +END;
MPRINT(EM_DIAGRAM):   END;
1742630   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742631   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1742632   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1742633   +END;
MPRINT(EM_DIAGRAM):   END;
1742634   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1742635   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1742636   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1742637   +END;
MPRINT(EM_DIAGRAM):   END;
1742638   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1742639   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1742640   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1742641   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1742642   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1742643   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1742644   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1742645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742646   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1742647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742648   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1742649   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1742650   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1742651   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1742652   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1742653   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1742654   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1742655   +END;
MPRINT(EM_DIAGRAM):   END;
1742656   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1742657   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1742658   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1742659   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1742660    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL15_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1742661    quit;
1742662    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1742663    filename emflow
1742663  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural15: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1742664    *------------------------------------------------------------*;
1742665    * AutoNeural15: Scoring VALIDATE data;
1742666    *------------------------------------------------------------*;
1742667    data EMWS8.AutoNeural15_VALIDATE
1742668    / view=EMWS8.AutoNeural15_VALIDATE
1742669    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural15_VALIDATE / view=EMWS8.AutoNeural15_VALIDATE ;
1742670    set EMWS8.PRINCOMP_VALIDATE
1742671    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1742672    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\EMFLOWSCORE.sas.
1742673   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1742674   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1742675   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1742676   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1742677   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1742678   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1742679   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1742680   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1742681   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1742682   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1742683   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1742684   +LENGTH _WARN_ $4
1742685   +      F_DepVar  $ 12
1742686   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1742687   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1742688   +
1742689   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1742690   +
1742691   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1742692   +
1742693   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1742694   +
1742695   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1742696   +
1742697   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1742698   +
1742699   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1742700   +
1742701   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1742702   +
1742703   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1742704   +
1742705   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1742706   +
1742707   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1742708   +
1742709   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1742710   +
1742711   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1742712   +
1742713   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1742714   +
1742715   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1742716   +
1742717   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1742718   +
1742719   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1742720   +
1742721   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1742722   +
1742723   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1742724   +
1742725   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1742726   +
1742727   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1742728   +
1742729   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1742730   +
1742731   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1742732   +
1742733   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1742734   +
1742735   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1742736   +
1742737   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1742738   +
1742739   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1742740   +
1742741   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1742742   +
1742743   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1742744   +
1742745   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1742746   +
1742747   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1742748   +
1742749   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1742750   +
1742751   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1742752   +
1742753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742754   +*** Checking missing input Interval
1742755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1742756   +
1742757   +IF NMISS(
1742758   +   PC_1 ,
1742759   +   PC_10 ,
1742760   +   PC_11 ,
1742761   +   PC_12 ,
1742762   +   PC_13 ,
1742763   +   PC_14 ,
1742764   +   PC_15 ,
1742765   +   PC_16 ,
1742766   +   PC_17 ,
1742767   +   PC_2 ,
1742768   +   PC_3 ,
1742769   +   PC_4 ,
1742770   +   PC_5 ,
1742771   +   PC_6 ,
1742772   +   PC_7 ,
1742773   +   PC_8 ,
1742774   +   PC_9 ,
1742775   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1742776   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1742777   +
1742778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1742779   +END;
MPRINT(EM_DIAGRAM):   END;
1742780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742781   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1742782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742783   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742784   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1742785   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1742786   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1742787   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1742788   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1742789   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1742790   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1742791   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1742792   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1742793   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1742794   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1742795   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1742796   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1742797   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1742798   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1742799   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1742800   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1742801   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1742802   +END;
MPRINT(EM_DIAGRAM):   END;
1742803   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742804   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1742805   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1742806   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1742807   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1742808   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1742809   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1742810   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1742811   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1742812   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1742813   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1742814   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1742815   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1742816   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1742817   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1742818   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1742819   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1742820   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1742821   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1742822   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1742823   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1742824   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1742825   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1742826   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1742827   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1742828   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1742829   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1742830   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1742831   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1742832   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1742833   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1742834   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1742835   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1742836   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1742837   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1742838   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1742839   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1742840   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1742841   +END;
MPRINT(EM_DIAGRAM):   END;
1742842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742843   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1742844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742846   +   H1x1_1  =    -2.58508868488235 * S_PC_1  +     1.20007982706189 * S_PC_10
1742847   +          +    -0.55565639779815 * S_PC_11  +     0.42317882296086 * S_PC_12
1742848   +          +    -0.39102984690832 * S_PC_13  +     1.05246495427875 * S_PC_14
1742849   +          +    -0.58858040806579 * S_PC_15  +     0.16812135442896 * S_PC_16
1742850   +          +    -1.30829654451836 * S_PC_17  +    -2.61122952105175 * S_PC_2
1742851   +          +    -1.57692647141984 * S_PC_3  +    -0.31590297708381 * S_PC_4
1742852   +          +       0.489265046162 * S_PC_5  +    -1.38472485127924 * S_PC_6
1742853   +          +    -0.01563533914193 * S_PC_7  +     -0.6220319651245 * S_PC_8
1742854   +          +    -0.94386327209471 * S_PC_9  +     0.31441338384554 *
1742855   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.58508868488235 * S_PC_1 + 1.20007982706189 * S_PC_10 + 
-0.55565639779815 * S_PC_11 + 0.42317882296086 * S_PC_12 + -0.39102984690832 * S_PC_13 + 
1.05246495427875 * S_PC_14 + -0.58858040806579 * S_PC_15 + 0.16812135442896 * S_PC_16 + 
-1.30829654451836 * S_PC_17 + -2.61122952105175 * S_PC_2 + -1.57692647141984 * S_PC_3 + 
-0.31590297708381 * S_PC_4 + 0.489265046162 * S_PC_5 + -1.38472485127924 * S_PC_6 + 
-0.01563533914193 * S_PC_7 + -0.6220319651245 * S_PC_8 + -0.94386327209471 * S_PC_9 + 
0.31441338384554 * S_Year_Birth ;
1742856   +   H1x1_2  =     0.88777260450227 * S_PC_1  +     -1.5367639113177 * S_PC_10
1742857   +          +     1.56830295981223 * S_PC_11  +     0.99729222277828 * S_PC_12
1742858   +          +    -3.16964209677897 * S_PC_13  +     2.61234813943117 * S_PC_14
1742859   +          +    -2.07656542974589 * S_PC_15  +    -0.17130313863934 * S_PC_16
1742860   +          +    -1.77044440944524 * S_PC_17  +     -0.2326644061385 * S_PC_2
1742861   +          +    -0.50943100620403 * S_PC_3  +     -0.3771206330134 * S_PC_4
1742862   +          +     0.32903380119716 * S_PC_5  +     0.23500282354372 * S_PC_6
1742863   +          +     0.58321759475834 * S_PC_7  +     0.45713287668241 * S_PC_8
1742864   +          +     0.88501117322549 * S_PC_9  +     0.68863619416424 *
1742865   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.88777260450227 * S_PC_1 + -1.5367639113177 * S_PC_10 + 
1.56830295981223 * S_PC_11 + 0.99729222277828 * S_PC_12 + -3.16964209677897 * S_PC_13 + 
2.61234813943117 * S_PC_14 + -2.07656542974589 * S_PC_15 + -0.17130313863934 * S_PC_16 + 
-1.77044440944524 * S_PC_17 + -0.2326644061385 * S_PC_2 + -0.50943100620403 * S_PC_3 + 
-0.3771206330134 * S_PC_4 + 0.32903380119716 * S_PC_5 + 0.23500282354372 * S_PC_6 + 
0.58321759475834 * S_PC_7 + 0.45713287668241 * S_PC_8 + 0.88501117322549 * S_PC_9 + 
0.68863619416424 * S_Year_Birth ;
1742866   +   H1x1_3  =     2.99334493741188 * S_PC_1  +    -0.44820958746633 * S_PC_10
1742867   +          +    -1.81438443050646 * S_PC_11  +    -1.04708024487716 * S_PC_12
1742868   +          +     0.36182350856973 * S_PC_13  +    -0.99795057503429 * S_PC_14
1742869   +          +    -0.02306764030001 * S_PC_15  +    -0.00603151951721 * S_PC_16
1742870   +          +     0.23899250295769 * S_PC_17  +    -0.63426905864888 * S_PC_2
1742871   +          +      0.5135153086796 * S_PC_3  +    -1.92061969649311 * S_PC_4
1742872   +          +     2.09424768438312 * S_PC_5  +    -0.37281390402835 * S_PC_6
1742873   +          +    -0.21099687178729 * S_PC_7  +    -0.94566915175486 * S_PC_8
1742874   +          +     1.46507718843169 * S_PC_9  +     0.06013448238612 *
1742875   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.99334493741188 * S_PC_1 + -0.44820958746633 * S_PC_10 + 
-1.81438443050646 * S_PC_11 + -1.04708024487716 * S_PC_12 + 0.36182350856973 * S_PC_13 + 
-0.99795057503429 * S_PC_14 + -0.02306764030001 * S_PC_15 + -0.00603151951721 * S_PC_16 + 
0.23899250295769 * S_PC_17 + -0.63426905864888 * S_PC_2 + 0.5135153086796 * S_PC_3 + 
-1.92061969649311 * S_PC_4 + 2.09424768438312 * S_PC_5 + -0.37281390402835 * S_PC_6 + 
-0.21099687178729 * S_PC_7 + -0.94566915175486 * S_PC_8 + 1.46507718843169 * S_PC_9 + 
0.06013448238612 * S_Year_Birth ;
1742876   +   H1x1_4  =     1.48987731423111 * S_PC_1  +    -1.85153148919211 * S_PC_10
1742877   +          +     -0.3389631560558 * S_PC_11  +    -0.12094342653401 * S_PC_12
1742878   +          +     2.05415609819201 * S_PC_13  +    -1.30754774387893 * S_PC_14
1742879   +          +     0.34915072276302 * S_PC_15  +     0.02455144958584 * S_PC_16
1742880   +          +     0.38662422903481 * S_PC_17  +     1.43658486127495 * S_PC_2
1742881   +          +     1.92483521589652 * S_PC_3  +    -0.93439620595414 * S_PC_4
1742882   +          +    -0.77664128208153 * S_PC_5  +    -1.45726475701533 * S_PC_6
1742883   +          +     0.66785571790949 * S_PC_7  +     -1.1372136165809 * S_PC_8
1742884   +          +    -0.02398295407417 * S_PC_9  +    -1.36554091812833 *
1742885   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.48987731423111 * S_PC_1 + -1.85153148919211 * S_PC_10 + 
-0.3389631560558 * S_PC_11 + -0.12094342653401 * S_PC_12 + 2.05415609819201 * S_PC_13 + 
-1.30754774387893 * S_PC_14 + 0.34915072276302 * S_PC_15 + 0.02455144958584 * S_PC_16 + 
0.38662422903481 * S_PC_17 + 1.43658486127495 * S_PC_2 + 1.92483521589652 * S_PC_3 + 
-0.93439620595414 * S_PC_4 + -0.77664128208153 * S_PC_5 + -1.45726475701533 * S_PC_6 + 
0.66785571790949 * S_PC_7 + -1.1372136165809 * S_PC_8 + -0.02398295407417 * S_PC_9 + 
-1.36554091812833 * S_Year_Birth ;
1742886   +   H1x1_5  =     1.13575402726629 * S_PC_1  +     0.67756826691669 * S_PC_10
1742887   +          +     3.09231877746483 * S_PC_11  +     0.56222338879196 * S_PC_12
1742888   +          +     -0.4403693524401 * S_PC_13  +     0.01110919443997 * S_PC_14
1742889   +          +    -0.52868244078885 * S_PC_15  +     -1.9766891325667 * S_PC_16
1742890   +          +    -1.05639309934463 * S_PC_17  +    -0.38843367864894 * S_PC_2
1742891   +          +    -0.05728416413602 * S_PC_3  +    -3.35395833599874 * S_PC_4
1742892   +          +     2.51080150023951 * S_PC_5  +     0.43960143741785 * S_PC_6
1742893   +          +      0.3591018924288 * S_PC_7  +     -0.7654535838821 * S_PC_8
1742894   +          +    -1.84832829530688 * S_PC_9  +    -0.95742566630573 *
1742895   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.13575402726629 * S_PC_1 + 0.67756826691669 * S_PC_10 + 
3.09231877746483 * S_PC_11 + 0.56222338879196 * S_PC_12 + -0.4403693524401 * S_PC_13 + 
0.01110919443997 * S_PC_14 + -0.52868244078885 * S_PC_15 + -1.9766891325667 * S_PC_16 + 
-1.05639309934463 * S_PC_17 + -0.38843367864894 * S_PC_2 + -0.05728416413602 * S_PC_3 + 
-3.35395833599874 * S_PC_4 + 2.51080150023951 * S_PC_5 + 0.43960143741785 * S_PC_6 + 
0.3591018924288 * S_PC_7 + -0.7654535838821 * S_PC_8 + -1.84832829530688 * S_PC_9 + 
-0.95742566630573 * S_Year_Birth ;
1742896   +   H1x1_6  =     3.38937489297591 * S_PC_1  +     0.94282490059107 * S_PC_10
1742897   +          +    -0.53657045226494 * S_PC_11  +     0.30588002409044 * S_PC_12
1742898   +          +     2.11431823492509 * S_PC_13  +     0.80354979489665 * S_PC_14
1742899   +          +    -1.39191827031951 * S_PC_15  +    -2.35881541761373 * S_PC_16
1742900   +          +    -0.50612708923609 * S_PC_17  +     3.22648821227008 * S_PC_2
1742901   +          +    -0.95208596310227 * S_PC_3  +     1.47823552386659 * S_PC_4
1742902   +          +       0.805694341473 * S_PC_5  +     0.50622170985074 * S_PC_6
1742903   +          +     0.27100305891282 * S_PC_7  +    -0.61070899906227 * S_PC_8
1742904   +          +     0.41488115968405 * S_PC_9  +     0.21679617310735 *
1742905   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.38937489297591 * S_PC_1 + 0.94282490059107 * S_PC_10 + 
-0.53657045226494 * S_PC_11 + 0.30588002409044 * S_PC_12 + 2.11431823492509 * S_PC_13 + 
0.80354979489665 * S_PC_14 + -1.39191827031951 * S_PC_15 + -2.35881541761373 * S_PC_16 + 
-0.50612708923609 * S_PC_17 + 3.22648821227008 * S_PC_2 + -0.95208596310227 * S_PC_3 + 
1.47823552386659 * S_PC_4 + 0.805694341473 * S_PC_5 + 0.50622170985074 * S_PC_6 + 
0.27100305891282 * S_PC_7 + -0.61070899906227 * S_PC_8 + 0.41488115968405 * S_PC_9 + 
0.21679617310735 * S_Year_Birth ;
1742906   +   H1x1_7  =     1.24857319335592 * S_PC_1  +    -1.54585129542958 * S_PC_10
1742907   +          +     0.20374990912286 * S_PC_11  +     0.67651255064544 * S_PC_12
1742908   +          +    -0.08934011035185 * S_PC_13  +     0.17928775158548 * S_PC_14
1742909   +          +    -0.58728512459532 * S_PC_15  +    -0.25865188138967 * S_PC_16
1742910   +          +     0.03670265464573 * S_PC_17  +    -1.99195066147747 * S_PC_2
1742911   +          +    -0.39069389727288 * S_PC_3  +     2.07633421509856 * S_PC_4
1742912   +          +     -3.6389806439859 * S_PC_5  +     0.16416743850622 * S_PC_6
1742913   +          +    -0.88404145577722 * S_PC_7  +     0.26579739303631 * S_PC_8
1742914   +          +    -0.60630749755757 * S_PC_9  +    -0.48806868744766 *
1742915   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.24857319335592 * S_PC_1 + -1.54585129542958 * S_PC_10 + 
0.20374990912286 * S_PC_11 + 0.67651255064544 * S_PC_12 + -0.08934011035185 * S_PC_13 + 
0.17928775158548 * S_PC_14 + -0.58728512459532 * S_PC_15 + -0.25865188138967 * S_PC_16 + 
0.03670265464573 * S_PC_17 + -1.99195066147747 * S_PC_2 + -0.39069389727288 * S_PC_3 + 
2.07633421509856 * S_PC_4 + -3.6389806439859 * S_PC_5 + 0.16416743850622 * S_PC_6 + 
-0.88404145577722 * S_PC_7 + 0.26579739303631 * S_PC_8 + -0.60630749755757 * S_PC_9 + 
-0.48806868744766 * S_Year_Birth ;
1742916   +   H1x1_1  =     3.04814503173639 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.04814503173639 + H1x1_1 ;
1742917   +   H1x1_2  =     0.84692088384215 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.84692088384215 + H1x1_2 ;
1742918   +   H1x1_3  =     -4.4673681519001 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.4673681519001 + H1x1_3 ;
1742919   +   H1x1_4  =     3.86809032308226 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 3.86809032308226 + H1x1_4 ;
1742920   +   H1x1_5  =    -2.92592869915112 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -2.92592869915112 + H1x1_5 ;
1742921   +   H1x1_6  =    -2.81049837671073 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.81049837671073 + H1x1_6 ;
1742922   +   H1x1_7  =     1.32306129907914 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.32306129907914 + H1x1_7 ;
1742923   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1742924   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1742925   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1742926   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1742927   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1742928   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1742929   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1742930   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
1742931   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
1742932   +END;
MPRINT(EM_DIAGRAM):   END;
1742933   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742934   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1742935   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1742936   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1742937   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1742938   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1742939   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1742940   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1742941   +END;
MPRINT(EM_DIAGRAM):   END;
1742942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742943   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1742944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1742945   +
1742946   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1742947   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1742948   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1742949   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1742950   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1742951   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1742952   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1742953   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1742954   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1742955   +end;
MPRINT(EM_DIAGRAM):   end;
1742956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1742957   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1742958   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1742959   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1742960   +   end;
MPRINT(EM_DIAGRAM):   end;
1742961   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1742962   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1742963   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1742964   +   end;
MPRINT(EM_DIAGRAM):   end;
1742965   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1742966   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1742967   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1742968   +   end;
MPRINT(EM_DIAGRAM):   end;
1742969   +end;
MPRINT(EM_DIAGRAM):   end;
1742970   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1742971   +   P_DepVar1  =    -3.64327321711916 * H1x1_1  +     5.38823627761681 * H1x1_2
1742972   +          +     5.52777341732681 * H1x1_3  +    -5.13480555699473 * H1x1_4
1742973   +          +    -6.08116192343294 * H1x1_5  +    -4.72257685787279 * H1x1_6
1742974   +          +     10.0081185533487 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.64327321711916 * H1x1_1 + 5.38823627761681 * H1x1_2 + 
5.52777341732681 * H1x1_3 + -5.13480555699473 * H1x1_4 + -6.08116192343294 * H1x1_5 + 
-4.72257685787279 * H1x1_6 + 10.0081185533487 * H1x1_7 ;
1742975   +   P_DepVar1  =     -4.2842153593235 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.2842153593235 + P_DepVar1 ;
1742976   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1742977   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1742978   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1742979   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1742980   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1742981   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1742982   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1742983   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1742984   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1742985   +END;
MPRINT(EM_DIAGRAM):   END;
1742986   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1742987   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1742988   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1742989   +END;
MPRINT(EM_DIAGRAM):   END;
1742990   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1742991   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1742992   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1742993   +END;
MPRINT(EM_DIAGRAM):   END;
1742994   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1742995   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1742996   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1742997   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1742998   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1742999   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1743000   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1743001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1743002   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1743003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1743004   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1743005   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1743006   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1743007   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1743008   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1743009   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1743010   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1743011   +END;
MPRINT(EM_DIAGRAM):   END;
1743012   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1743013   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1743014   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1743015   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1743016    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL15_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1743017    quit;
1743018    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1743019    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1743020    * AutoNeural15: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural15: Computing metadata for TRAIN data;
1743021    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural15\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural15_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural15_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural15_TRAIN out=WORK.M0AL2RV3 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AL2RV3;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AL2RV3(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AL2RV3;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AL2RV3;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3CTGZPD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2R6370W(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CTGZPD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural15_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural15";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural15";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural15: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1743333    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1743334    set EMWS8.AutoNeural15_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural15_EMINFO;
1743335    where DATA='AutoNeural15' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural15' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
1743336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL15_EMINFO.
      WHERE (DATA='AutoNeural15') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1743337    data EMWS8.AutoNeural15_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural15_EMINFO;
1743338    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1743339    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1743340    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.55 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1743344    run;
1743345    data EMWS8.AutoNeural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural15_EMINFO;
1743346    set EMWS8.AutoNeural15_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural15_EMINFO WORK.MODELTEMP_INFO;
1743347    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL15_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1743348    proc sort data = EMWS8.AutoNeural15_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural15_EMINFO NOTHREADS;
1743349    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1743350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL15_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1743351    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1743352    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1743353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1743354    proc sort data = EMWS8.AutoNeural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1743355    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1743356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL15_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1743357    data EMWS8.AutoNeural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural15_EMINFO;
1743358    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1743359    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1743360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL15_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1743361    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1743362    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1743363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1743364    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL15_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
