MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                15.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2HYYHL6 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2HYYHL6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\\predictive-models-project\Workspaces\EMWS8\Rule5\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
68962      proc freq data=EMWS8.Rule5_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Rule5_VariableSet noprint;
68963      table ROLE*LEVEL/out=WORK.Rule5META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Rule5META;
68964      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS8.RULE5_VARIABLESET.
NOTE: The data set WORK.RULE5META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

68965      proc print data=WORK.Rule5META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule5META label noobs;
68966      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
68967      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
68967    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
68967    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
68968      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
68969      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
68970      run;

NOTE: There were 2 observations read from the data set WORK.RULE5META.
NOTE: The PROCEDURE PRINT printed page 91.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

68971      title10;
MPRINT(EM_DIAGRAM):   title10;
68972      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN 
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN 
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN 
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Varsel_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Rule5_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule5_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule5_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Rule5_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR 
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule5_DepVar_DD 
out=EMWS8.Rule5_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
69019      data WORK.Rule5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Rule5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
69020      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
69021      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
69021    ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
69021    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
69022         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
69022    ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
69022    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
69023      set EMWS8.RULE5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.RULE5_DEPVAR_DM( where=(_TYPE_="TARGET"));
69024      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
69025      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
69026      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
69027      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
69028      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
69029      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
69030      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
69031      end;
MPRINT(EM_DIAGRAM):   end;
69032      output;
MPRINT(EM_DIAGRAM):   output;
69033      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.RULE5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.RULE5_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69034      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
69035      proc print data=WORK.Rule5_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule5_EVENT noobs label;
69036      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
69037      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
69038      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
69039      run;

NOTE: There were 1 observations read from the data set WORK.RULE5_EVENT.
NOTE: The PROCEDURE PRINT printed page 92.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69040      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
69041      proc print data = EMWS8.Rule5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Rule5_DepVar_DM noobs label;
69042      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
69043      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
69044      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
69044    ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
69044    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
69045      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
69046      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
69047      run;

NOTE: There were 7 observations read from the data set EMWS8.RULE5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 93.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69048      title10;
MPRINT(EM_DIAGRAM):   title10;
69049      data WORK.M329OPU7;
MPRINT(EM_DIAGRAM):    data WORK.M329OPU7;
69050      set WORK.M329OPU7;
MPRINT(EM_DIAGRAM):   set WORK.M329OPU7;
69051      where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
69052      if (role='REJECTED') then role='INPUT';
MPRINT(EM_DIAGRAM):   if (role='REJECTED') then role='INPUT';
69053      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M329OPU7.
      WHERE (use='Y') or ((role='INPUT') and (use='D'));
NOTE: The data set WORK.M329OPU7 has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69054      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
69055      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
69056      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69057      %macro DMDBClass;
69058          DepVar(DESC)
69059      %mend DMDBClass;
69060      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69061      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
69062      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69063      %macro DMDBVar;
69064          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69065      %mend DMDBVar;
69066      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69067      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
69068      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69069      proc dmdb batch data=EMWS8.Varsel_TRAIN
69070      dmdbcat=WORK.EM_DMDB
69071      maxlevel = 513
69072      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Varsel_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
69073      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
69074      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
69075      target
69076      DepVar
69077      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
69078      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
69079      quit;
69080      *--- end code ---*;

69081      data WORK.M329OPU7;
MPRINT(EM_DIAGRAM):    data WORK.M329OPU7;
69082      set WORK.M329OPU7 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M329OPU7 end=eof;
69083      output;
MPRINT(EM_DIAGRAM):   output;
69084      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
69085      NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
69086      ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
69087      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
69088      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
69089      output;
MPRINT(EM_DIAGRAM):   output;
69090      end;
MPRINT(EM_DIAGRAM):   end;
69091      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M329OPU7.
NOTE: The data set WORK.M329OPU7 has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: There were 2 observations read from the data set EMWS8.RULE5_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
69092      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69093      * Rule5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule5: Create decision matrix;
69094      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69095      data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
69096        length   DepVar                           $  32
69097                 COUNT                                8
69098                 DATAPRIOR                            8
69099                 TRAINPRIOR                           8
69100                 DECPRIOR                             8
69101                 DECISION1                            8
69102                 DECISION2                            8
69103                 ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
69104      
69105        label    COUNT="Level Counts"
69106                 DATAPRIOR="Data Proportions"
69107                 TRAINPRIOR="Training Proportions"
69108                 DECPRIOR="Decision Priors"
69109                 DECISION1="1"
69110                 DECISION2="0"
69111                 ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
69112        format   COUNT 10.
69113                 ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
69114      DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
69114    ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
69115      output;
MPRINT(EM_DIAGRAM):   output;
69116      DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
69116    ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
69117      output;
MPRINT(EM_DIAGRAM):   output;
69118      ;
MPRINT(EM_DIAGRAM):   ;
69119      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69120      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
69121      modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
69122      label DECISION1= '1';
69123      label DECISION2= '0';
69124      run;

NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
69125      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69126      *------------------------------------------------------------* ;
69127      * Rule5: DMDBClass Macro ;
69128      *------------------------------------------------------------* ;
69129      %macro DMDBClass;
69130          DepVar(DESC)
69131      %mend DMDBClass;
69132      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69133      * Rule5: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBVar Macro ;
69134      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69135      %macro DMDBVar;
69136          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69137      %mend DMDBVar;
69138      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69139      * Rule5: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule5: Create DMDB;
69140      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69141      proc dmdb batch data=EMWS8.Varsel_TRAIN
69142      dmdbcat=WORK.Rule5_DMDB
69143      maxlevel = 513
69144      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Varsel_TRAIN dmdbcat=WORK.Rule5_DMDB maxlevel 
= 513 ;
MPRINT(EM_DIAGRAM):   class
69145      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
69146      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
69147      target
69148      DepVar
69149      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
69150      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
69151      quit;
69152      *--- end code ---*;

69153      data WORK.M0AT7HHL;
MPRINT(EM_DIAGRAM):    data WORK.M0AT7HHL;
69154      set WORK.M0AT7HHL;
MPRINT(EM_DIAGRAM):   set WORK.M0AT7HHL;
69155      if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
69156      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M0AT7HHL.
NOTE: The data set WORK.M0AT7HHL has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69157      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
69158      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
69159      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69160      %macro DMDBClass;
69161          DepVar(DESC)
69162      %mend DMDBClass;
69163      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69164      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
69165      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69166      %macro DMDBVar;
69167      
69168      %mend DMDBVar;
69169      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69170      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
69171      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69172      proc dmdb batch data=EMWS8.Varsel_TRAIN
69173      dmdbcat=WORK.EM_DMDB
69174      maxlevel = 513
69175      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Varsel_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
69176      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
69177      target
69178      DepVar
69179      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
69180      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
69181      quit;
69182      *--- end code ---*;

69183      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69184      * Rule Induction Training;
MPRINT(EM_DIAGRAM):   * Rule Induction Training;
69185      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

69186      * Get counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get counts for DepVar;
69187      ;
MPRINT(EM_DIAGRAM):   ;
69188      data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
69189      set EMWS8.Varsel_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN;
69190      length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
69191      label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
69191    ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
69192      _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
69193      %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69194      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: The data set WORK._SCR has 2374 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69195      proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
69196      table _level_ / out=_count;
MPRINT(EM_DIAGRAM):   table _level_ / out=_count;
69197      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._SCR.
NOTE: The data set WORK._COUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69198      * Get Normalized counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get Normalized counts for DepVar;
69199      ;
MPRINT(EM_DIAGRAM):   ;
69200      data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
69201      set EMWS8.Varsel_VALIDATE;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE;
69202      length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
69203      label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
69203    ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
69204      _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
69205      %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69206      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: The data set WORK._SCR has 1018 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

69207      proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
69208      table _level_ / out= _vcount;
MPRINT(EM_DIAGRAM):   table _level_ / out= _vcount;
69209      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._SCR.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69210      data _vcount;
MPRINT(EM_DIAGRAM):    data _vcount;
69211      set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
69212      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
69213      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
69214      rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
69215      rename percent = vpercent;
MPRINT(EM_DIAGRAM):   rename percent = vpercent;
69216      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69217      data _count;
MPRINT(EM_DIAGRAM):   data _count;
69218      merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
69219      by _level_;
MPRINT(EM_DIAGRAM):   by _level_;
69220      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69221      data _count;
MPRINT(EM_DIAGRAM):    data _count;
69222      set _count;
MPRINT(EM_DIAGRAM):   set _count;
69223      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
69224      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
69225      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69226      proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
69227      by DESCENDING count;
MPRINT(EM_DIAGRAM):   by DESCENDING count;
69228      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
69229      *;
69230      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_tarfreq_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "Target=DepVar: Frequencies";
MPRINT(EM_DIAGRAM):   *;
69231      *;
69232      proc print data=_count noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_count noobs label;
69233      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 94.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69234      title9;
MPRINT(EM_DIAGRAM):   title9;
69235      data WORK.M1_RQ4PB;
MPRINT(EM_DIAGRAM):    data WORK.M1_RQ4PB;
69236      set WORK.M1_RQ4PB;
MPRINT(EM_DIAGRAM):   set WORK.M1_RQ4PB;
69237      if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
69238      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M1_RQ4PB.
NOTE: The data set WORK.M1_RQ4PB has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69239      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
69240      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
69241      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69242      %macro DMDBClass;
69243          DepVar(DESC)
69244      %mend DMDBClass;
69245      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69246      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
69247      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69248      %macro DMDBVar;
69249      
69250      %mend DMDBVar;
69251      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69252      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
69253      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69254      proc dmdb batch data=EMWS8.Varsel_TRAIN
69255      dmdbcat=WORK.EM_DMDB
69256      maxlevel = 513
69257      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Varsel_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
69258      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
69259      target
69260      DepVar
69261      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
69262      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
69263      quit;
69264      *--- end code ---*;

69265      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69266      * Rip Model 1;
MPRINT(EM_DIAGRAM):   * Rip Model 1;
69267      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69268      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69269      * TREE MODEL DepVar BINARY RIP1;
MPRINT(EM_DIAGRAM):   * TREE MODEL DepVar BINARY RIP1;
69270      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS8.Varsel_TRAIN;
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
69271      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69272      * Rule5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule5: Create decision matrix;
69273      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69274      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69275      * Rule5: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: Tree Variables Macro ;
69276      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69277      %macro EM_TREEVARS;
69278          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69279      %mend EM_TREEVARS;
69280      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69281      * Rule5: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: Tree Targets Macro ;
69282      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69283      %macro EM_TREETARGETS;
69284          DepVar
69285      %mend EM_TREETARGETS;
69286      data WORK.EM_Rule5 / view=WORK.EM_Rule5;
MPRINT(EM_DIAGRAM):   data WORK.EM_Rule5 / view=WORK.EM_Rule5;
69287      set
69287    ! EMWS8.Varsel_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN(keep
MPRINT(EM_DIAGRAM):  =AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency 
DepVar);
69288      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_RULE5.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule5: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69289      *------------------------------------------------------------* ;
69290      * Rule5: Interval Inputs Macro ;
69291      *------------------------------------------------------------* ;
69292      %macro INTINPUTS;
69293          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69294      %mend INTINPUTS;
69295      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69296      * Rule5: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: Binary and Nominal Inputs Macro ;
69297      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69298      %macro NOMINPUTS;
69299      
69300      %mend NOMINPUTS;
69301      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69302      * Rule5: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: Ordinal Inputs Macro ;
69303      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69304      %macro ORDINPUTS;
69305      
69306      %mend ORDINPUTS;
69307      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69308      * Rule5: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Rule5: Run ARBOR procedure;
69309      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

69310      proc arbor data=WORK.EM_Rule5
69311      Leafsize=50
69312      Mincatsize = 5
69313      Maxdepth=4
69314      Missing=USEINSEARCH
69315      ;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Rule5 Leafsize=50 Mincatsize = 5 Maxdepth=4 
Missing=USEINSEARCH ;
69316      ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
69317      input %INTINPUTS
MPRINT(INTINPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69318      / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
69319      target DepVar / level=BINARY
69320      Criterion=GINI
69321      ;
MPRINT(EM_DIAGRAM):   target DepVar / level=BINARY Criterion=GINI ;
69322      ;
MPRINT(EM_DIAGRAM):   ;
69323      Performance DISK
69324      ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.27 seconds
      cpu time            0.26 seconds
      
69325      Assess
69326      Validata=EMWS8.Varsel_VALIDATE
69327      measure=ASE
69328      ;
MPRINT(EM_DIAGRAM):   Assess Validata=EMWS8.Varsel_VALIDATE measure=ASE ;
NOTE: Variable _WARN_ is uninitialized.
NOTE: 1464543 kilobytes of physical memory.
NOTE: Will use 2374 out of 2374 training cases.
NOTE: Using memory pool with 43354112 bytes.
NOTE: Passed training data 8 times.
NOTE: Training used 444072 bytes of work memory.
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The subtree sequence contains 13 subtrees. The largest has 25 nodes and 13 leaves.
NOTE: Using subtree with 21 nodes and 11 leaves.
69329      MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Created macro variable NLEAVES equal to 11.
69330      save
69331      MODEL=WORK.OUTTREE_TREE_2HOM6N1
69332      SEQUENCE=WORK.OUTSEQ_TREE_2HOM6N1
69333      IMPORTANCE=WORK.OUTIMPORT_TREE_2HOM6N1
69334      NODESTAT=WORK.OUTNODES_TREE_2HOM6N1
69335      SUMMARY=WORK.OUTSUMMARY_TREE_2HOM6N1
69336      STATSBYNODE=WORK.OUTSTATS_TREE_2HOM6N1
69337      Pathlistnonmissing = WORK.OUTPATH_TREE_2HOM6N1
69338      Rules = WORK.OUTRULES_TREE_2HOM6N1
69339      ;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_2HOM6N1 SEQUENCE=WORK.OUTSEQ_TREE_2HOM6N1 
IMPORTANCE=WORK.OUTIMPORT_TREE_2HOM6N1 NODESTAT=WORK.OUTNODES_TREE_2HOM6N1 
SUMMARY=WORK.OUTSUMMARY_TREE_2HOM6N1 STATSBYNODE=WORK.OUTSTATS_TREE_2HOM6N1 Pathlistnonmissing 
= WORK.OUTPATH_TREE_2HOM6N1 Rules = WORK.OUTRULES_TREE_2HOM6N1 ;
NOTE: The data set WORK.OUTIMPORT_TREE_2HOM6N1 has 6 observations and 6 variables.
NOTE: The data set WORK.OUTTREE_TREE_2HOM6N1 has 749 observations and 4 variables.
NOTE: The data set WORK.OUTNODES_TREE_2HOM6N1 has 21 observations and 24 variables.
NOTE: The data set WORK.OUTPATH_TREE_2HOM6N1 has 69 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_2HOM6N1 has 195 observations and 6 variables.
NOTE: The data set WORK.OUTSEQ_TREE_2HOM6N1 has 13 observations and 20 variables.
NOTE: The data set WORK.OUTSTATS_TREE_2HOM6N1 has 147 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_2HOM6N1 has 24 observations and 6 variables.
69340      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
69340    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas"
69341      group=Rule5
69342      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas" group=Rule5 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1.sas opened.
69343      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
69343    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas"
69344      group=Rule5
69345      residual
69346      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas" group=Rule5 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\RIP1_res.sas opened.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
69347      score data=EMWS8.Varsel_TRAIN out=_ptrain
69348      ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_TRAIN out=_ptrain ;
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 59 variables.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
69349      score data=EMWS8.Varsel_VALIDATE out=_pvalid
69350      ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Varsel_VALIDATE out=_pvalid ;
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK._PVALID has 1018 observations and 59 variables.
69351      run;
MPRINT(EM_DIAGRAM):   run;

69352      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_RULE5.VIEW used (Total process time):
      real time           0.48 seconds
      cpu time            0.42 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_RULE5.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.50 seconds
      cpu time            0.43 seconds
      

69353      data WORK.OUTIMPORT_TREE_2HOM6N1;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_2HOM6N1;
69354      set WORK.OUTIMPORT_TREE_2HOM6N1;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_2HOM6N1;
69355      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL =
69355    ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES =
69355    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
69356         "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES =
69356    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
69357      VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
69357    ! RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
69358      ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of 
Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" 
VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
69359      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: There were 6 observations read from the data set WORK.OUTIMPORT_TREE_2HOM6N1.
NOTE: The data set WORK.OUTIMPORT_TREE_2HOM6N1 has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69360      filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
69360    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
69361      data temp;
MPRINT(EM_DIAGRAM):    data temp;
69362      length varname $19;
MPRINT(EM_DIAGRAM):   length varname $19;
69363      retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
69364      set WORK.OUTPATH_TREE_2HOM6N1;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_2HOM6N1;
69365      if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
69366      else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
69367      output;
MPRINT(EM_DIAGRAM):   output;
69368      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK.OUTPATH_TREE_2HOM6N1.
NOTE: The data set WORK.TEMP has 69 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69369      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
69370      by node;
MPRINT(EM_DIAGRAM):   by node;
69371      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 69 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

69372      proc sort data=WORK.OUTNODES_TREE_2HOM6N1 out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_2HOM6N1 out=outnodes;
69373      by node;
MPRINT(EM_DIAGRAM):   by node;
69374      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.OUTNODES_TREE_2HOM6N1.
NOTE: The data set WORK.OUTNODES has 21 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69375      data temp;
MPRINT(EM_DIAGRAM):   data temp;
69376      merge temp(in=_a) outnodes(keep= node
69377      NPRIORS
69378      P_DepVar0
69379      P_DepVar1
69380      );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_DepVar0 P_DepVar1 );
69381      by node;
MPRINT(EM_DIAGRAM):   by node;
69382      if _a;
MPRINT(EM_DIAGRAM):   if _a;
69383      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK.TEMP.
NOTE: There were 21 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 69 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69384      proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
69385      by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
69386      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 69 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 69 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69387      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
69388      file x;
MPRINT(EM_DIAGRAM):   file x;
69389      set temp;
MPRINT(EM_DIAGRAM):   set temp;
69390      by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
69391      retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
69392      length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
69393      if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
69394      origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
69395      oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
69396      end;
MPRINT(EM_DIAGRAM):   end;
69397      if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
69398      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
69399      put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
69400      put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
69401      end;
MPRINT(EM_DIAGRAM):   end;
69402      if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
69403      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
69404      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
69405      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
69406      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
69407      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
69408      end;
MPRINT(EM_DIAGRAM):   end;
69409      else do;
MPRINT(EM_DIAGRAM):   else do;
69410      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
69411      end;
MPRINT(EM_DIAGRAM):   end;
69412      end;
MPRINT(EM_DIAGRAM):   end;
69413      end;
MPRINT(EM_DIAGRAM):   end;
69414      else do;
MPRINT(EM_DIAGRAM):   else do;
69415      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
69416      string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
69417      end;
MPRINT(EM_DIAGRAM):   end;
69418      else do;
MPRINT(EM_DIAGRAM):   else do;
69419      string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
69420      end;
MPRINT(EM_DIAGRAM):   end;
69421      end;
MPRINT(EM_DIAGRAM):   end;
69422      end;
MPRINT(EM_DIAGRAM):   end;
69423      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
69424      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
69425      string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
69426      end;
MPRINT(EM_DIAGRAM):   end;
69427      else do;
MPRINT(EM_DIAGRAM):   else do;
69428      string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
69429      end;
MPRINT(EM_DIAGRAM):   end;
69430      end;
MPRINT(EM_DIAGRAM):   end;
69431      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
69432      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
69433      string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
69434      end;
MPRINT(EM_DIAGRAM):   end;
69435      else do;
MPRINT(EM_DIAGRAM):   else do;
69436      string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
69437      end;
MPRINT(EM_DIAGRAM):   end;
69438      end;
MPRINT(EM_DIAGRAM):   end;
69439      else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
69440      if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
69441      string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
69442      end;
MPRINT(EM_DIAGRAM):   end;
69443      else do;
MPRINT(EM_DIAGRAM):   else do;
69444      string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
69445      end;
MPRINT(EM_DIAGRAM):   end;
69446      end;
MPRINT(EM_DIAGRAM):   end;
69447      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
69448      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
69449      end;
MPRINT(EM_DIAGRAM):   end;
69450      else do;
MPRINT(EM_DIAGRAM):   else do;
69451      if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
69452      if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
69453      if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
69454      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
69454    ! "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
69455      else string= " if "|| strip(varname)||" "||strip(relation)||"
69455    ! "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
69456      end;
MPRINT(EM_DIAGRAM):   end;
69457      end;
MPRINT(EM_DIAGRAM):   end;
69458      else do;
MPRINT(EM_DIAGRAM):   else do;
69459      if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
69459    ! "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(character_value);
69460      else string= " if "|| strip(varname)||" "||strip(relation)||"
69460    ! "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
69461      end;
MPRINT(EM_DIAGRAM):   end;
69462      end;
MPRINT(EM_DIAGRAM):   end;
69463      else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
69464      string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
69465      end;
MPRINT(EM_DIAGRAM):   end;
69466      else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
69467      end;
MPRINT(EM_DIAGRAM):   end;
69468      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
69469      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
69470      end;
MPRINT(EM_DIAGRAM):   end;
69471      if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
69472      if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
69473      if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
69474      string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
69475      end;
MPRINT(EM_DIAGRAM):   end;
69476      end;
MPRINT(EM_DIAGRAM):   end;
69477      put string;
MPRINT(EM_DIAGRAM):   put string;
69478      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
69479      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
69480      end;
MPRINT(EM_DIAGRAM):   end;
69481      if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
69482      put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
69483      put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
69484      put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
69485      put " Predicted: DepVar=0  = " P_DepVar0;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=0  = " P_DepVar0;
69486      put " Predicted: DepVar=1  = " P_DepVar1;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=1  = " P_DepVar1;
69487      put " ";
MPRINT(EM_DIAGRAM):   put " ";
69488      if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
69489      oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
69490      end;
MPRINT(EM_DIAGRAM):   end;
69491      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      69407:67    69410:66    69454:108   69455:72    
NOTE: The file X is:
      
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=28. April 2016 15.48 Uhr,
      Create Time=28. April 2016 15.48 Uhr

NOTE: 126 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: There were 69 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69492      filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
69493      data leafds;
MPRINT(EM_DIAGRAM):    data leafds;
69494      set WORK.OUTNODES_TREE_2HOM6N1;
MPRINT(EM_DIAGRAM):   set WORK.OUTNODES_TREE_2HOM6N1;
69495      if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
69496      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set WORK.OUTNODES_TREE_2HOM6N1.
NOTE: The data set WORK.LEAFDS has 11 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69497      proc sort data=leafds;
MPRINT(EM_DIAGRAM):   proc sort data=leafds;
69498      by descending N;
MPRINT(EM_DIAGRAM):   by descending N;
69499      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 11 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Argument three to KSUBSTR exceeds the length of the input string, the function has 
      recalculated the length of the string.
RIP LEAF: N=1  varid=17  nodeid=5  val=0.98042414355628  count=1226 
RIP LEAF: N=2  varid=18  nodeid=5  val=0.01957585644371  count=1226 
RIP LEAF: N=1  varid=17  nodeid=17  val=0.87473460721868  count=471 
RIP LEAF: N=2  varid=18  nodeid=17  val=0.12526539278131  count=471 
RIP LEAF: N=1  varid=17  nodeid=20  val=0.5221238938053  count=113 
RIP LEAF: N=2  varid=18  nodeid=20  val=0.47787610619469  count=113 
RIP LEAF: N=1  varid=17  nodeid=23  val=0.92727272727272  count=110 
RIP LEAF: N=2  varid=18  nodeid=23  val=0.07272727272727  count=110 
RIP LEAF: N=1  varid=17  nodeid=22  val=0.79797979797979  count=99 
RIP LEAF: N=2  varid=18  nodeid=22  val=0.2020202020202  count=99 
RIP LEAF: N=1  varid=17  nodeid=16  val=0.67415730337078  count=89 
RIP LEAF: N=2  varid=18  nodeid=16  val=0.32584269662921  count=89 
RIP LEAF: N=1  varid=17  nodeid=9  val=0.46551724137931  count=58 
RIP LEAF: N=2  varid=18  nodeid=9  val=0.53448275862068  count=58 
RIP LEAF: N=1  varid=17  nodeid=13  val=0.05263157894736  count=57 
RIP LEAF: N=2  varid=18  nodeid=13  val=0.94736842105263  count=57 
RIP LEAF: N=1  varid=17  nodeid=24  val=0.47058823529411  count=51 
RIP LEAF: N=2  varid=18  nodeid=24  val=0.52941176470588  count=51 
RIP LEAF: N=1  varid=17  nodeid=21  val=0.22  count=50 
RIP LEAF: N=2  varid=18  nodeid=21  val=0.78  count=50 
RIP LEAF: N=1  varid=17  nodeid=25  val=0.72  count=50 
RIP LEAF: N=2  varid=18  nodeid=25  val=0.28  count=50 
69500      * RIP1: Print leaf table;
MPRINT(EM_DIAGRAM):    * RIP1: Print leaf table;
69501      ;
MPRINT(EM_DIAGRAM):   ;
69502      data leafds;
MPRINT(EM_DIAGRAM):   data leafds;
69503      set leafds;
MPRINT(EM_DIAGRAM):   set leafds;
69504      format P_DEPVAR0 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR0 8.4;
69505      format P_DEPVAR1 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR1 8.4;
69506      ;
MPRINT(EM_DIAGRAM):   ;
69507      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 11 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69508      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_leaftable_title, NOQUOTE, RIP1, 100))";
MPRINT(EM_DIAGRAM):   title9 "RIP1 Leaf Table: Threshold= 100";
69509      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, %nrbquote(No leaf
69509    ! was ripped from the model.)))";
MPRINT(EM_DIAGRAM):   title10 "No leaf was ripped from the model.";
69510      proc print data = leafds NOOBS LABEL;
MPRINT(EM_DIAGRAM):   proc print data = leafds NOOBS LABEL;
69511      var NODE N
69512      P_DEPVAR0
69513      P_DEPVAR1
69514      ;
MPRINT(EM_DIAGRAM):   var NODE N P_DEPVAR0 P_DEPVAR1 ;
69515      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.LEAFDS.
NOTE: The PROCEDURE PRINT printed page 95.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69516      title9;
MPRINT(EM_DIAGRAM):   title9;
69517      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):   ;
69518      * Create training data set with binary target for modeling;
69519      ;
69520      data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
69521      length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
69522      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
69523      _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
69524      %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
69525      _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
69526      %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69527      if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
69528      else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
69529      drop _tmp _tmpLevel
69530      ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
69531      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

69532      * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
69533      ;
MPRINT(EM_DIAGRAM):   ;
69534      data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
69535      length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
69536      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
69537      _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
69538      %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
69539      _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
69540      %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
69541      if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
69542      else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
69543      drop _tmp
69544      ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
69545      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 1018 observations and 61 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

69546      data _train;
MPRINT(EM_DIAGRAM):    data _train;
69547      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
69548      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 2374 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69549      data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
69550      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
69551      options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 1018 observations and 61 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

69552      proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
69553      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 60 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

69554      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
69555      %let _dsidTable = 0;
69556      %let _engineTable =;
69557      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
69558      dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
69559      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
69560      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
69561      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
69562      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
69563      end;
MPRINT(EM_DIAGRAM):   end;
69564      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69565      options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
69566      data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
69567      set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
69568      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
69569      output;
MPRINT(EM_DIAGRAM):   output;
69570      stop;
MPRINT(EM_DIAGRAM):   stop;
69571      end;
MPRINT(EM_DIAGRAM):   end;
69572      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69573      proc contents data=work._train
69574      out=WORK.M1SX4GD0 noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M1SX4GD0 noprint;
69575      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M1SX4GD0 has 60 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69576      data WORK.M1SX4GD0;
MPRINT(EM_DIAGRAM):    data WORK.M1SX4GD0;
69577      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
69577    !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
69578      label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
69579      set WORK.M1SX4GD0(keep=name type length label format formatl formatd informat
69579    ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M1SX4GD0(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
69580      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
69581      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
69582      if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
69583      if format ne ' ' then format = strip(format)!!strip(put(formatl,
69583    ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
69584      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
69585      end;
MPRINT(EM_DIAGRAM):   end;
69586      else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
69587      if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
69588      if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
69588    ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
69589      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
69590      end;
MPRINT(EM_DIAGRAM):   end;
69591      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
69592      if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
69593      else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
69594      indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
69595      drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
69596      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M1SX4GD0.
NOTE: The data set WORK.M1SX4GD0 has 60 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

69597      data WORK.M1SX4GD0;
MPRINT(EM_DIAGRAM):    data WORK.M1SX4GD0;
69598      length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
69599      set WORK.M1SX4GD0;
MPRINT(EM_DIAGRAM):   set WORK.M1SX4GD0;
69600      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
69601      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M1SX4GD0.
NOTE: The data set WORK.M1SX4GD0 has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1H_JITA NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
69605      data WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):    data WORK.M1H_JITA;
69606      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
69607      set WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):   set WORK.M1H_JITA;
69608      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M1H_JITA.
NOTE: The data set WORK.M1H_JITA has 60 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M09TR0WU(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB0RYUIO8 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 
AcceptedCmpTotal Age Complain Custid DepVar Dt_Customer Education Element1 Element2 Element3 
Element4 Frq F_DepVar Group HigherEducation HigherEducationBinary Income I_DepVar Kidhome 
Marital_Status Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts 
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases NumDistPurchases 
NumStorePurchases NumWebPurchases NumWebVisitsMonth P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 
Recency RFMstat RMntFrq R_DepVar0 R_DepVar1 Teenhome U_DepVar V_DepVar0 V_DepVar1 Year_Birth 
Z_CostContact Z_Revenue _bin _dataobs_ _LEAF_ _NODE_ _WARN_
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB0RYUIO8 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT0RYUIO8(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS0RYUIO8(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB0RYUIO8(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS0RYUIO8;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT0RYUIO8;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS0RYUIO8;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT0RYUIO8 _MISS0RYUIO8;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS0RYUIO8 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1H_JITA NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M1H_JITA;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M1H_JITA _COUNTS0RYUIO8;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
69898      data WORK.M329OPU7;
MPRINT(EM_DIAGRAM):    data WORK.M329OPU7;
69899      set WORK.M329OPU7;
MPRINT(EM_DIAGRAM):   set WORK.M329OPU7;
69900      if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
69901      if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
69902      if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
69903      if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
69904      if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
69905      if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
69906      if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
69907      if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
69908      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M329OPU7.
NOTE: The data set WORK.M329OPU7 has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69909      data WORK.M1D3QRK4;
MPRINT(EM_DIAGRAM):    data WORK.M1D3QRK4;
69910      set WORK.M1D3QRK4;
MPRINT(EM_DIAGRAM):   set WORK.M1D3QRK4;
69911      if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
69912      if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
69913      ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
69914      LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
69915      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
69916      end;
MPRINT(EM_DIAGRAM):   end;
69917      if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
69918      ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
69919      end;
MPRINT(EM_DIAGRAM):   end;
69920      if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
69921      if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
69922      if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
69923      if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
69924      if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
69925      if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
69926      if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
69927      if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
69928      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.M1D3QRK4.
NOTE: The data set WORK.M1D3QRK4 has 9 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

69929      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69930      * Binary Model DepVar = 0;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 0;
69931      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69932      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69933      * REGRESSION MODEL DepVar binary BIN1;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN1;
69934      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69935      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69936      * Rule5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule5: Create decision matrix;
69937      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69938      data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
69939      set work._train(keep=
69940      AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases RFMstat
69941      Recency _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= AcceptedCmpTotal DepVar Mnt MntMeatProducts 
NumCatalogPurchases RFMstat Recency _bin);
69942      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69943      *------------------------------------------------------------* ;
69944      * Rule5: DMDBClass Macro ;
69945      *------------------------------------------------------------* ;
69946      %macro DMDBClass;
69947          DepVar(ASC) _bin(DESC)
69948      %mend DMDBClass;
69949      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69950      * Rule5: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBVar Macro ;
69951      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
69952      %macro DMDBVar;
69953          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
69954      %mend DMDBVar;
69955      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69956      * Rule5: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule5: Create DMDB;
69957      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69958      proc dmdb batch data=WORK.EM_DMREG
69959      dmdbcat=WORK.Rule5_DMDB
69960      maxlevel = 513
69961      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule5_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
69962      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
69963      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
69964      target
69965      _bin
69966      ;
MPRINT(EM_DIAGRAM):   target _bin ;
69967      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
69968      quit;
69969      *--- end code ---*;

69970      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69971      * Rule5: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule5: Run DMREG procedure;
69972      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69973      proc dmreg data=EM_DMREG dmdbcat=WORK.Rule5_DMDB
69974      validata = work._valid
69975      outest = WORK.DMREG_11M_F2C_OUTEST
69976      outterms = WORK.DMREG_11M_F2C_OUTTERMS
69977      outmap= WORK.DMREG_11M_F2C_MAP namelen=200
69978      ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule5_DMDB validata = work._valid 
outest = WORK.DMREG_11M_F2C_OUTEST outterms = WORK.DMREG_11M_F2C_OUTTERMS outmap= 
WORK.DMREG_11M_F2C_MAP namelen=200 ;
69979      class
69980      _bin
69981      ;
MPRINT(EM_DIAGRAM):   class _bin ;
69982      model _bin =
69983      AcceptedCmpTotal
69984      Mnt
69985      MntMeatProducts
69986      NumCatalogPurchases
69987      RFMstat
69988      Recency
69989      /error=binomial link=LOGIT
69990      coding=DEVIATION
69991      nodesignprint
69992      ;
MPRINT(EM_DIAGRAM):   model _bin = AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases 
RFMstat Recency /error=binomial link=LOGIT coding=DEVIATION nodesignprint ;
69993      ;
MPRINT(EM_DIAGRAM):   ;
69994      score data=_train
69995      out=_ptrain(label="")
69996      ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
69997      score data=_valid
69998      out=_pvalid(label="")
69999      ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
70000      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
70000    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas"
70001      group=Rule5_1
70002      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas" group=Rule5_1 ;
70003      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
70003    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas"
70004      group=Rule5_1
70005      residual
70006      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas" group=Rule5_1 residual ;
70007      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ already exists on file WORK._PTRAIN, using _WARN_2 instead.
NOTE: Variable _WARN_ already exists on file WORK._PVALID, using _WARN_2 instead.

NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN1_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_11M_F2C_OUTEST has 3 observations and 41 variables.
NOTE: The data set WORK.DMREG_11M_F2C_OUTTERMS has 7 observations and 5 variables.
NOTE: The data set WORK.DMREG_11M_F2C_MAP has 2 observations and 8 variables.
NOTE: The data set WORK._PTRAIN has 2374 observations and 69 variables.
NOTE: The data set WORK._PVALID has 1018 observations and 70 variables.
NOTE: The PROCEDURE DMREG printed pages 96-97.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70008      quit;

70009      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70010      delete Rule5_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule5_DMDB;
70011      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE5_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
70012      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70013      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70014      delete Rule5_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule5_DMDB / memtype=catalog;
70015      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE5_DMDB (memtype=CATALOG).
70016      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

70017      * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
70018      ;
MPRINT(EM_DIAGRAM):   ;
70019      proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
70020      tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
70021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70022      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70023      set _count;
MPRINT(EM_DIAGRAM):   set _count;
70024      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
70025      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
70026      label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
70027      label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
70028      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
70029      * BINARY: Validation Classification;
70030      ;
70031      proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
70032      tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
70033      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

70034      data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
70035      set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
70036      length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
70037      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
70038      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
70039      label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
70040      label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
70041      rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
70042      rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
70043      key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
70044      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
70045      *;
70046      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70047      set _count;
MPRINT(EM_DIAGRAM):   set _count;
70048      length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
70049      key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
70050      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
70051      * Merge Train and Valid classification;
70052      ;
70053      proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
70054      by key;
MPRINT(EM_DIAGRAM):   by key;
70055      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

70056      proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
70057      by key;
MPRINT(EM_DIAGRAM):   by key;
70058      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
70059      *;
70060      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70061      merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
70062      by key;
MPRINT(EM_DIAGRAM):   by key;
70063      drop key;
MPRINT(EM_DIAGRAM):   drop key;
70064      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
70065      *BINARY: Print Classification;
70066      ;
70067      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
70067    ! %nrbquote(0)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 0";
70068      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
70069      proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
70070      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 98.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70071      title9;
MPRINT(EM_DIAGRAM):   title9;
70072      title10;
MPRINT(EM_DIAGRAM):   title10;
70073      * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
70074      ;
MPRINT(EM_DIAGRAM):   ;
70075      data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
70076      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
70077      if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
70078      keep
70079      AcceptedCmpTotal
70080      Mnt
70081      MntMeatProducts
70082      NumCatalogPurchases
70083      RFMstat
70084      Recency
70085      DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat 
Recency DepVar;
70086      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 419 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
70087      * Extract misfit validation values;
70088      ;
70089      data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
70090      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
70091      if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
70092      keep
70093      AcceptedCmpTotal
70094      Mnt
70095      MntMeatProducts
70096      NumCatalogPurchases
70097      RFMstat
70098      Recency
70099      DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat 
Recency DepVar;
70100      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 174 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70101      * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create training data set with binary target for modeling;
70102      ;
MPRINT(EM_DIAGRAM):   ;
70103      data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
70104      length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
70105      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
70106      _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
70107      %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
70108      _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
70109      %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70110      if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
70111      else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
70112      drop _tmp _tmpLevel
70113      ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
70114      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 419 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 419 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70115      * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
70116      ;
MPRINT(EM_DIAGRAM):   ;
70117      data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
70118      length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
70119      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
70120      _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
70121      %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
70122      _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
70123      %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70124      if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
70125      else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
70126      drop _tmp
70127      ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
70128      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 174 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 174 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70129      data _train;
MPRINT(EM_DIAGRAM):    data _train;
70130      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
70131      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 419 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 419 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70132      data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
70133      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
70134      options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 174 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 174 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70135      proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
70136      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 8 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70137      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
70138      %let _dsidTable = 0;
70139      %let _engineTable =;
70140      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70141      dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
70142      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
70143      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
70144      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
70145      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
70146      end;
MPRINT(EM_DIAGRAM):   end;
70147      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70148      options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
70149      data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
70150      set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
70151      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
70152      output;
MPRINT(EM_DIAGRAM):   output;
70153      stop;
MPRINT(EM_DIAGRAM):   stop;
70154      end;
MPRINT(EM_DIAGRAM):   end;
70155      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70156      proc contents data=work._train
70157      out=WORK.M33Q2JHZ noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M33Q2JHZ noprint;
70158      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M33Q2JHZ has 8 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70159      data WORK.M33Q2JHZ;
MPRINT(EM_DIAGRAM):    data WORK.M33Q2JHZ;
70160      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
70160    !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
70161      label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
70162      set WORK.M33Q2JHZ(keep=name type length label format formatl formatd informat
70162    ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M33Q2JHZ(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
70163      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
70164      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
70165      if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
70166      if format ne ' ' then format = strip(format)!!strip(put(formatl,
70166    ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
70167      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
70168      end;
MPRINT(EM_DIAGRAM):   end;
70169      else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
70170      if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
70171      if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
70171    ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
70172      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
70173      end;
MPRINT(EM_DIAGRAM):   end;
70174      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
70175      if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
70176      else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
70177      indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
70178      drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
70179      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M33Q2JHZ.
NOTE: The data set WORK.M33Q2JHZ has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70180      data WORK.M33Q2JHZ;
MPRINT(EM_DIAGRAM):    data WORK.M33Q2JHZ;
70181      length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
70182      set WORK.M33Q2JHZ;
MPRINT(EM_DIAGRAM):   set WORK.M33Q2JHZ;
70183      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
70184      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M33Q2JHZ.
NOTE: The data set WORK.M33Q2JHZ has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M38827OA NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
70188      data WORK.M38827OA;
MPRINT(EM_DIAGRAM):    data WORK.M38827OA;
70189      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
70190      set WORK.M38827OA;
MPRINT(EM_DIAGRAM):   set WORK.M38827OA;
70191      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M38827OA.
NOTE: The data set WORK.M38827OA has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M0QMIKYU(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M38827OA;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M38827OA;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M38827OA;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB0E895J9 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases Recency 
RFMstat _bin
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB0E895J9 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT0E895J9(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS0E895J9(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB0E895J9(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS0E895J9;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT0E895J9;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS0E895J9;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT0E895J9 _MISS0E895J9;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS0E895J9 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M38827OA NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M38827OA;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M38827OA _COUNTS0E895J9;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
70473      data WORK.M329OPU7;
MPRINT(EM_DIAGRAM):    data WORK.M329OPU7;
70474      set WORK.M329OPU7;
MPRINT(EM_DIAGRAM):   set WORK.M329OPU7;
70475      if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
70476      if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
70477      if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
70478      if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
70479      if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
70480      if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
70481      if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
70482      if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
70483      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.M329OPU7.
NOTE: The data set WORK.M329OPU7 has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70484      data WORK.M3T9N_JW;
MPRINT(EM_DIAGRAM):    data WORK.M3T9N_JW;
70485      set WORK.M3T9N_JW;
MPRINT(EM_DIAGRAM):   set WORK.M3T9N_JW;
70486      if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
70487      if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
70488      ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
70489      LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
70490      USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
70491      end;
MPRINT(EM_DIAGRAM):   end;
70492      if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
70493      ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
70494      end;
MPRINT(EM_DIAGRAM):   end;
70495      if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
70496      if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
70497      if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
70498      if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
70499      if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
70500      if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
70501      if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
70502      if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
70503      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set WORK.M3T9N_JW.
NOTE: The data set WORK.M3T9N_JW has 9 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70504      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
70505      * Binary Model DepVar = 1;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 1;
70506      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70507      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70508      * REGRESSION MODEL DepVar binary BIN2;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN2;
70509      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70510      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70511      * Rule5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule5: Create decision matrix;
70512      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70513      data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
70514      set work._train(keep=
70515      AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases RFMstat
70516      Recency _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= AcceptedCmpTotal DepVar Mnt MntMeatProducts 
NumCatalogPurchases RFMstat Recency _bin);
70517      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70518      *------------------------------------------------------------* ;
70519      * Rule5: DMDBClass Macro ;
70520      *------------------------------------------------------------* ;
70521      %macro DMDBClass;
70522          DepVar(ASC) _bin(DESC)
70523      %mend DMDBClass;
70524      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70525      * Rule5: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule5: DMDBVar Macro ;
70526      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70527      %macro DMDBVar;
70528          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
70529      %mend DMDBVar;
70530      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70531      * Rule5: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule5: Create DMDB;
70532      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70533      proc dmdb batch data=WORK.EM_DMREG
70534      dmdbcat=WORK.Rule5_DMDB
70535      maxlevel = 513
70536      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule5_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
70537      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
70538      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
70539      target
70540      _bin
70541      ;
MPRINT(EM_DIAGRAM):   target _bin ;
70542      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 419   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: There were 419 observations read from the data set WORK._TRAIN.
NOTE: There were 419 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
70543      quit;
70544      *--- end code ---*;

70545      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
70546      * Rule5: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule5: Run DMREG procedure;
70547      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70548      proc dmreg data=EM_DMREG dmdbcat=WORK.Rule5_DMDB
70549      validata = work._valid
70550      outest = WORK.DMREG_1_ZBL8F_OUTEST
70551      outterms = WORK.DMREG_1_ZBL8F_OUTTERMS
70552      outmap= WORK.DMREG_1_ZBL8F_MAP namelen=200
70553      ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule5_DMDB validata = work._valid 
outest = WORK.DMREG_1_ZBL8F_OUTEST outterms = WORK.DMREG_1_ZBL8F_OUTTERMS outmap= 
WORK.DMREG_1_ZBL8F_MAP namelen=200 ;
70554      class
70555      _bin
70556      ;
MPRINT(EM_DIAGRAM):   class _bin ;
70557      model _bin =
70558      AcceptedCmpTotal
70559      Mnt
70560      MntMeatProducts
70561      NumCatalogPurchases
70562      RFMstat
70563      Recency
70564      /error=binomial link=LOGIT
70565      coding=DEVIATION
70566      nodesignprint
70567      ;
MPRINT(EM_DIAGRAM):   model _bin = AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases 
RFMstat Recency /error=binomial link=LOGIT coding=DEVIATION nodesignprint ;
70568      ;
MPRINT(EM_DIAGRAM):   ;
70569      score data=_train
70570      out=_ptrain(label="")
70571      ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
70572      score data=_valid
70573      out=_pvalid(label="")
70574      ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
70575      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
70575    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas"
70576      group=Rule5_2
70577      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas" group=Rule5_2 ;
70578      code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
70578    ! Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas"
70579      group=Rule5_2
70580      residual
70581      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas" group=Rule5_2 residual ;
70582      run;
MPRINT(EM_DIAGRAM):   run;


NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD115000_WN7LF-LEAVE_\Prc2\BIN2_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.17 seconds
      
NOTE: There were 419 observations read from the data set WORK._TRAIN.
NOTE: There were 419 observations read from the data set WORK.EM_DMREG.
NOTE: There were 174 observations read from the data set WORK._VALID.
NOTE: There were 419 observations read from the data set WORK._TRAIN.
NOTE: There were 174 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_1_ZBL8F_OUTEST has 3 observations and 41 variables.
NOTE: The data set WORK.DMREG_1_ZBL8F_OUTTERMS has 7 observations and 5 variables.
NOTE: The data set WORK.DMREG_1_ZBL8F_MAP has 2 observations and 8 variables.
NOTE: The data set WORK._PTRAIN has 419 observations and 17 variables.
NOTE: The data set WORK._PVALID has 174 observations and 18 variables.
NOTE: The PROCEDURE DMREG printed pages 99-100.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
70583      quit;

70584      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70585      delete Rule5_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule5_DMDB;
70586      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE5_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
70587      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70588      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70589      delete Rule5_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule5_DMDB / memtype=catalog;
70590      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE5_DMDB (memtype=CATALOG).
70591      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70592      * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
70593      ;
MPRINT(EM_DIAGRAM):   ;
70594      proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
70595      tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
70596      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 419 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70597      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70598      set _count;
MPRINT(EM_DIAGRAM):   set _count;
70599      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
70600      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
70601      label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
70602      label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
70603      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
70604      * BINARY: Validation Classification;
70605      ;
70606      proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
70607      tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
70608      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 174 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70609      data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
70610      set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
70611      length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
70612      label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
70613      label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
70614      label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
70615      label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
70616      rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
70617      rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
70618      key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
70619      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
70620      *;
70621      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70622      set _count;
MPRINT(EM_DIAGRAM):   set _count;
70623      length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
70624      key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
70625      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
70626      * Merge Train and Valid classification;
70627      ;
70628      proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
70629      by key;
MPRINT(EM_DIAGRAM):   by key;
70630      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70631      proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
70632      by key;
MPRINT(EM_DIAGRAM):   by key;
70633      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
70634      *;
70635      data _count;
MPRINT(EM_DIAGRAM):   data _count;
70636      merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
70637      by key;
MPRINT(EM_DIAGRAM):   by key;
70638      drop key;
MPRINT(EM_DIAGRAM):   drop key;
70639      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
70640      *BINARY: Print Classification;
70641      ;
70642      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
70642    ! %nrbquote(1)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 1";
70643      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
70644      proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
70645      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 101.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70646      title9;
MPRINT(EM_DIAGRAM):   title9;
70647      title10;
MPRINT(EM_DIAGRAM):   title10;
70648      * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
70649      ;
MPRINT(EM_DIAGRAM):   ;
70650      data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
70651      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
70652      if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
70653      keep
70654      AcceptedCmpTotal
70655      Mnt
70656      MntMeatProducts
70657      NumCatalogPurchases
70658      RFMstat
70659      Recency
70660      DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat 
Recency DepVar;
70661      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 419 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 60 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
70662      * Extract misfit validation values;
70663      ;
70664      data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
70665      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
70666      if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
70667      keep
70668      AcceptedCmpTotal
70669      Mnt
70670      MntMeatProducts
70671      NumCatalogPurchases
70672      RFMstat
70673      Recency
70674      DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat 
Recency DepVar;
70675      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 174 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 19 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70676      data _train;
MPRINT(EM_DIAGRAM):    data _train;
70677      set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
70678      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 60 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70679      data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
70680      set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
70681      options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 19 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 19 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70682      proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
70683      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 7 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

70684      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
70685      %let _dsidTable = 0;
70686      %let _engineTable =;
70687      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
70688      dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
70689      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
70690      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
70691      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
70692      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
70693      end;
MPRINT(EM_DIAGRAM):   end;
70694      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70695      options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
70696      data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
70697      set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
70698      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
70699      output;
MPRINT(EM_DIAGRAM):   output;
70700      stop;
MPRINT(EM_DIAGRAM):   stop;
70701      end;
MPRINT(EM_DIAGRAM):   end;
70702      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70703      proc contents data=work._train
70704      out=WORK.M1QG5NTA noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M1QG5NTA noprint;
70705      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M1QG5NTA has 7 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

70706      data WORK.M1QG5NTA;
MPRINT(EM_DIAGRAM):    data WORK.M1QG5NTA;
70707      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
70707    !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
70708      label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
70709      set WORK.M1QG5NTA(keep=name type length label format formatl formatd informat
70709    ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M1QG5NTA(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
70710      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
70711      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
70712      if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
70713      if format ne ' ' then format = strip(format)!!strip(put(formatl,
70713    ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
70714      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
70715      end;
MPRINT(EM_DIAGRAM):   end;
70716      else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
70717      if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
70718      if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
70718    ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
70719      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
70720      end;
MPRINT(EM_DIAGRAM):   end;
70721      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
70722      if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
70723      else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
70724      indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
70725      drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
70726      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M1QG5NTA.
NOTE: The data set WORK.M1QG5NTA has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

70727      data WORK.M1QG5NTA;
MPRINT(EM_DIAGRAM):    data WORK.M1QG5NTA;
70728      length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
70729      set WORK.M1QG5NTA;
MPRINT(EM_DIAGRAM):   set WORK.M1QG5NTA;
70730      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
70731      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M1QG5NTA.
NOTE: The data set WORK.M1QG5NTA has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M2QHSCVL NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
70735      data WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):    data WORK.M2QHSCVL;
70736      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
70737      set WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):   set WORK.M2QHSCVL;
70738      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M2QHSCVL.
NOTE: The data set WORK.M2QHSCVL has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M1CWH6H2(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB1_AMO61 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmpTotal DepVar Mnt MntMeatProducts NumCatalogPurchases Recency 
RFMstat
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB1_AMO61 noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT1_AMO61(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS1_AMO61(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB1_AMO61(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS1_AMO61;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT1_AMO61;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS1_AMO61;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT1_AMO61 _MISS1_AMO61;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS1_AMO61 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2QHSCVL NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M2QHSCVL;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M2QHSCVL _COUNTS1_AMO61;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
71020      title8;
MPRINT(EM_DIAGRAM):    title8;
71021      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
71022      delete _train;
MPRINT(EM_DIAGRAM):   delete _train;
71023      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._TRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

71024      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
71025      delete _ptrain;
MPRINT(EM_DIAGRAM):   delete _ptrain;
71026      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PTRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71027      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
71028      delete _valid;
MPRINT(EM_DIAGRAM):   delete _valid;
71029      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._VALID (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

71030      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
71031      delete _pvalid;
MPRINT(EM_DIAGRAM):   delete _pvalid;
71032      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PVALID (memtype=DATA).
71033      %makeResidualVars(target=DepVar, decmeta=EMWS8.Rule5_DepVar_DM , fref=#LN01727);

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule5_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKERESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKERESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE5_DEPVAR_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule5_DepVar_DM;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKERESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE5_DEPVAR_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule5_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKERESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE5_DEPVAR_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   file #LN01727;
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "*Computing Residual Vars: DepVar;";
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar1='Residual: DepVar=1';";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar0='Residual: DepVar=0';";
MPRINT(MAKERESIDUALVARS):   put "if ";
MPRINT(MAKERESIDUALVARS):   put " F_DepVar ne '1'";
MPRINT(MAKERESIDUALVARS):   put "and F_DepVar ne '0'";
MPRINT(MAKERESIDUALVARS):   put " then do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1=.;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0=.;";
MPRINT(MAKERESIDUALVARS):   put "end;";
MPRINT(MAKERESIDUALVARS):   put "else do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1= - P_DepVar1;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0= - P_DepVar0;";
MPRINT(MAKERESIDUALVARS):   put "select(F_DepVar);";
MPRINT(MAKERESIDUALVARS):   put "when('1')R_DepVar1= R_DepVar1+1;";
MPRINT(MAKERESIDUALVARS):   put "when('0')R_DepVar0= R_DepVar0+1;";
MPRINT(MAKERESIDUALVARS):   put 'otherwise;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   run;

NOTE: The file #LN01727 is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Rule5\RESIDUALCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28. April 2016 15.48 Uhr,
      Create Time=27. April 2016 22.28 Uhr

NOTE: 21 records were written to the file #LN01727.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
