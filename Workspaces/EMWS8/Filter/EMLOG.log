*------------------------------------------------------------*
User:                VM-SAS
Date:                08 de Março de 2016
Time:                22H38m
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "08 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H38m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                08 de Março de 2016
Time:                22H38m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1WF8JQI "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1WF8JQI new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "08 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H38m" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "08 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H38m" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                VM-SAS";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
33473      proc freq data=EMWS8.Filter_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Filter_VariableSet noprint;
33474      table ROLE*LEVEL/out=WORK.FilterMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.FilterMETA;
33475      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK.FILTERMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
33476      proc print data=WORK.FilterMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterMETA label noobs;
33477      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
33478      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
33479      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
33480      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
33481      run;
 
NOTE: There were 4 observations read from the data set WORK.FILTERMETA.
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33482      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3AYVXQD;
MPRINT(EM_DIAGRAM):   set WORK.M3AYVXQD;
MPRINT(EM_DIAGRAM):   if CALCMETHOD eq 'DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   else CALCMETHOD='NONE';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if KEEPMISSING eq 'D' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'INPUT' then KEEPMISSING='Y';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if level='INTERVAL' then KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   else KEEPMISSING='N';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if CALCMETHOD='NONE' and KEEPMISSING='Y' then delete;
MPRINT(EM_DIAGRAM):   run;
33505      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
33506      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
33507     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
33508     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
33509     +       %put *** Statistics for Class variables ***;
33510     +       %put >>> DATA= &data  OUTPUT= &output;
33511     +       %put >>> VAR= &vars;
33512     +       %put >>> WHERE=  &where;
33513     +       %put >>> FREQ=  &freq;
33514     +   %end;
33516     +      /* Process metadata data set */
33517     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
33518     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
33519     +       %let FREQ=;
33520     +       %let _nobs=0;
33521     +       data _null;
33522     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
33523     +          if eof then call symput('_nobs', put(_N_, best.));
33524     +       run;
33525     +       %if "&_nobs" ne "0" %then %do;
33526     +           data _null_;
33527     +              file _mac;
33528     +              length _VARS $80; retain _vars;
33529     +              if _n_ =1 then put '%macro _vars;';
33530     +              set &metadata end=eof;
33531     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
33532     +              if ROLE='FREQ' then call symput('FREQ', NAME);
33533     +              else do;
33534     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
33535     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
33536     +                 else do;
33537     +                    put _Vars;
33538     +                    _vars = strip(NAME);
33539     +                 end;
33540     +              end;
33541     +              if eof then do;
33542     +                 put _Vars;
33543     +                 put '%mend _vars;';
33544     +              end;
33545     +           run;
33546     +       %end;
33547     +       %else %do;
33548     +           data _null_;
33549     +              file _mac;
33550     +              put '%macro _vars;';
33551     +              put '%mend _vars;';
33552     +           run;
33553     +       %end;
33554     +   %end;
33555     +   %else %do;
33556     +       data _null_;
33557     +          file _mac;
33558     +          put '%macro _vars;';
33559     +          put '%mend _vars;';
33560     +       run;
33561     +   %end;
33562     +   %inc _mac;
33563     +   filename _mac;
33565     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
33567     +   /* Check if FREQ variable is in the data set */
33568     +   %if &freq ne %then %do;
33569     +       data _null_;
33570     +          dsid = open("&data");
33571     +          if dsid>0 then do;
33572     +               if varnum(dsid, "&FREQ")<1 then
33573     +                  call symput('FREQ', '');
33574     +               dsid = close(dsid);
33575     +          end;
33576     +       run;
33577     +   %end;
33579     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
33580     +      class %_Vars &vars;
33581     +      %if &FREQ ne %then %do;
33582     +          freq &FREQ;
33583     +      %end;
33584     +      %if %bquote(&WHERE) ne %then %do;
33585     +            where &WHERE;
33586     +      %end;
33587     +   run;
33588     +   proc sort data=_tempclass;
33589     +      by VARIABLE;
33590     +   run;
33591     +   data &output;
33592     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
33593     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
33594     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
33595     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
33596     +      set _tempclass;
33597     +      format COUNT;
33598     +      keep VARIABLE COUNT PERCENT VALUE;
33599     +   run;
33600     +   proc means data=&output noprint;
33601     +      class VARIABLE;
33602     +      var COUNT;
33603     +      output out=&STAT N=NUMCAT;
33604     +   run;
33605     +   data &STAT;
33606     +      set &STAT;
33607     +      where _TYPE_=1;
33608     +      KEEP VARIABLE NUMCAT;
33609     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
33610     +      format NUMCAT 8.;
33611     +   run;
33612     +   proc datasets lib=work nolist;
33613     +      delete _tempclass;
33614     +   run;
33615     +   quit;
33617     +   %doend:
33618     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
33620      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
33621      data work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   data work.tempSummaryClass;
33622      set EMWS8.Filter_CLASSDIST(drop=Count Percent);
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_CLASSDIST(drop=Count Percent);
33623      where Filter='Y';
MPRINT(EM_DIAGRAM):   where Filter='Y';
33624      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK.TEMPSUMMARYCLASS has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
33625      proc sort data=work.tempSummaryClass;
MPRINT(EM_DIAGRAM):   proc sort data=work.tempSummaryClass;
33626      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
33627      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set WORK.TEMPSUMMARYCLASS has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33628      %class_profile(DATA=EMWS8.Stat_TRAIN, OUTPUT=EMWS8.Filter_CLASSDIST, METADATA=EMWS8.Filter_VariableSet, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set EMWS8.Filter_VariableSet(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 5 observations read from the data set EMWS8.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 5 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   length _VARS $80;
MPRINT(CLASS_PROFILE):   retain _vars;
MPRINT(CLASS_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(CLASS_PROFILE):   set EMWS8.Filter_VariableSet end=eof;
MPRINT(CLASS_PROFILE):   where LEVEL ne 'INTERVAL' or ROLE='FREQ';
MPRINT(CLASS_PROFILE):   if ROLE='FREQ' then call symput('FREQ', NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(CLASS_PROFILE):   else do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   _vars = strip(NAME);
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   if eof then do;
MPRINT(CLASS_PROFILE):   put _Vars;
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   end;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 49.
NOTE: There were 5 observations read from the data set EMWS8.FILTER_VARIABLESET.
      WHERE (LEVEL not = 'INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
33629     +%macro _vars;
33630     +DepVar Dependents Education Gender Marital_Status
33631     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS8.Stat_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(_VARS):   DepVar Dependents Education Gender Marital_Status
MPRINT(CLASS_PROFILE):   ;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 21 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 21 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data EMWS8.Filter_CLASSDIST;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 21 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set EMWS8.FILTER_CLASSDIST has 21 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=EMWS8.Filter_CLASSDIST noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.FILTER_CLASSDIST.
NOTE: The data set WORK._STAT has 6 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 5 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 5 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
33632      data EMWS8.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter_CLASSDIST;
33633      set EMWS8.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_CLASSDIST;
33634      length Filter $1;
MPRINT(EM_DIAGRAM):   length Filter $1;
33635      retain Filter 'N';
MPRINT(EM_DIAGRAM):   retain Filter 'N';
33636      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.FILTER_CLASSDIST.
NOTE: The data set EMWS8.FILTER_CLASSDIST has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
33637      proc sort data=EMWS8.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_CLASSDIST;
33638      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
33639      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.FILTER_CLASSDIST.
NOTE: The data set EMWS8.FILTER_CLASSDIST has 21 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
33640      data EMWS8.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter_CLASSDIST;
33641      merge EMWS8.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS8.Filter_CLASSDIST(in=_a) work.tempSummaryClass(in=_b);
33642      by variable value;
MPRINT(EM_DIAGRAM):   by variable value;
33643      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
33644      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.FILTER_CLASSDIST.
NOTE: There were 3 observations read from the data set WORK.TEMPSUMMARYCLASS.
NOTE: The data set EMWS8.FILTER_CLASSDIST has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
33645      data EMWS8.Filter_CLASSFILTER / view=EMWS8.Filter_CLASSFILTER;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter_CLASSFILTER / view=EMWS8.Filter_CLASSFILTER;
33646      set EMWS8.Filter_CLASSDIST;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_CLASSDIST;
33647      where Filter eq 'Y';
MPRINT(EM_DIAGRAM):   where Filter eq 'Y';
33648      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS8.FILTER_CLASSFILTER.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
33649      %let EM_CODEBAR = *------------------------------------------------------------*;
33650      filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename cdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
33651      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
33652     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
33653     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
33654     +   %let _em_nodeid = EM;
33655     +   %if %symexist(EM_NODEID) %then %do;
33656     +       %let _em_nodeid = &em_nodeid;
33657     +   %end;
33659     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
33660     +   %put &EM_CODEBAR;
33661     +   %put * &msgString;
33662     +   %put &EM_CODEBAR;
33664     +   /* Process metadata data set */
33665     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
33666     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
33667     +       %let FREQ=;
33668     +       %let _nobs=0;
33669     +       data _null;
33670     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
33671     +          if eof then call symput('_nobs', put(_N_, best.));
33672     +       run;
33673     +       %if "&_nobs" ne "0" %then %do;
33674     +           data _null_;
33675     +              file _mac;
33676     +              length _VARS $80; retain _vars;
33677     +              if _n_ =1 then put '%macro _vars;';
33678     +              set &metadata end=eof;
33679     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
33680     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
33681     +              else do;
33682     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
33683     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
33684     +                 else do;
33685     +                    put _Vars;
33686     +                    _vars = strip(NAME);
33687     +                 end;
33688     +              end;
33690     +              if eof then do;
33691     +                 put _Vars;
33692     +                 put '%mend _vars;';
33693     +              end;
33694     +           run;
33695     +       %end;
33696     +       %else %do;
33697     +           data _null_;
33698     +              file _mac;
33699     +              put '%macro _vars;';
33700     +              put '%mend _vars;';
33701     +           run;
33702     +       %end;
33703     +   %end;
33704     +   %else %do;
33705     +       data _null_;
33706     +          file _mac;
33707     +          put '%macro _vars;';
33708     +          put '%mend _vars;';
33709     +       run;
33710     +   %end;
33711     +   %inc _mac;
33712     +   filename _mac;
33714     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
33716     +   /* Check if FREQ variable is in the data set */
33717     +   %if &freq ne %then %do;
33718     +       data _null_;
33719     +          dsid = open("&data");
33720     +          if dsid>0 then do;
33721     +               if varnum(dsid, "&FREQ")<1 then
33722     +                  call symput('FREQ', '');
33723     +               dsid = close(dsid);
33724     +          end;
33725     +       run;
33726     +   %end;
33728     +   %if &bindata eq %then %do;
33729     +       %let bindata = _BOUNDS;
33730     +       proc datasets lib=work nolist mt=(DATA VIEW);
33731     +          delete _BOUNDS;
33732     +       run;
33733     +   %end;
33735     +   %global _EM_VARDISTOBS_MAX;
33736     +   %let _EM_VARDISTOBS_MAX = 1000000;
33738     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
33739     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
33740     +   %end;
33742     +   %if &computeStat = Y %then %do;
33743     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
33744     +          var %_Vars &vars;
33745     +          %if &FREQ ne %then %do;
33746     +              freq &FREQ;
33747     +          %end;
33748     +       run;
33749     +       proc sort data=&stat;
33750     +          by VARIABLE;
33751     +       run;
33753     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
33754     +           %let _library = WORK;
33755     +           %let _member  = &STAT;
33756     +      %end;
33757     +      %else %do;
33758     +          %let _library = %scan(&STAT, 1, .);
33759     +          %let _member  = %scan(&STAT, 2, .);
33760     +      %end;
33762     +      proc datasets library=&_library nolist;
33763     +         modify &_member;
33764     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
33765     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
33766     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
33767     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
33768     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
33769     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
33770     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
33771     +      run;
33772     +      quit;
33773     +   %end;
33775     +   %if &BIN ne N %then %do;
33776     +       %if %sysfunc(exist(&bindata))<1 %then %do;
33777     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
33778     +           %put &EM_CODEBAR;
33779     +           %put * &msgString;
33780     +           %put &EM_CODEBAR;
33781     +           filename fref catalog 'work.em.profileformat.source';
33783     +            %let _maxlevel = %eval(&numbars + 1);
33784     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
33785     +               class %_vars &vars;
33786     +            run;
33787     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
33788     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
33789     +            run;
33790     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
33791     +              by NAME;
33792     +           run;
33793     +           proc sort data=_CLASSOUT;
33794     +              by NAME;
33795     +          run;
33796     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
33797     +             var NRAW;
33798     +             by NAME;
33799     +          run;
33800     +          proc delete data=WORK._CLASSOUT;
33801     +          run;
33802     +          data _null_;
33803     +             dsid = open('_DISCRETEMID');
33804     +             if dsid then do;
33805     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
33806     +                dsid = close(dsid);
33807     +             end;
33808     +          run;
33809     +          data _DISCRETEMID;
33810     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
33811     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
33812     +             by VARIABLE;
33813     +             if _b then output;
33814     +          run;
33816     +          data _EMVARDIST / view=_EMVARDIST;
33817     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
33818     +          run;
33819     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
33820     +             var %_vars &vars;
33821     +             %if &FREQ ne %then %do;
33822     +                 freq &FREQ / notrunc;
33823     +             %end;
33824     +          run;
33825     +          proc datasets lib=WORK NOLIST;
33826     +             delete _EMVARDIST / mt=view;
33827     +          run;
33828     +          quit;
33829     +          %if %upcase(&minmax) = Y %then %do;
33830     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
33831     +                 where  _type_ in('P0', 'P100');
33832     +              run;
33833     +              data _MINMAXDATA(keep=Variable Value Pos);
33834     +                 set _MINMAXDATA;
33835     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
33836     +                 Value = min; Pos=1; output;
33837     +                 Value = max; Pos=3; output;
33838     +              run;
33839     +          %end;
33840     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
33841     +                                                             COL3=P95 COL4=MAX));
33842     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
33843     +          run;
33844     +          proc sort data=&bindata;
33845     +             by VARIABLE;
33846     +          run;
33848     +          %let new_numbars=%eval(&NUMBARS+12);
33849     +          data &bindata;
33850     +             set &bindata;
33851     +             length Format $12;
33852     +             array _midpoint{&new_NUMBARS};
33853     +             array _bounds{&new_NUMBARS};
33854     +             if (max - min)>1e-10 then do;
33855     +                step = abs(P95-P5)/&NUMBARS;
33856     +                lstep = abs(p5- min)/5;
33857     +                ustep = abs(max-p95)/5;
33858     +                /* No outlying values */;
33859     +                if lstep<=step and ustep<=step then do;
33860     +                   step = abs(MIN-MAX)/&NUMBARS;
33861     +                   START=MIN;
33862     +                   do i=1 to &numbars;
33863     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
33864     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
33865     +                   end;
33866     +                   %let new_numbars = &numbars;
33867     +                end;
33868     +                else do;
33869     +                   if lstep<=step then do;
33870     +                      step = abs(MIN-P95)/&NUMBARS;
33871     +                      /* Start Histogram at MIN value */
33872     +                      do i=1 to &NUMBARS;
33873     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
33874     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
33875     +                      end;
33876     +                      /* Make BINS with upper outliers width */
33877     +                      do i=1 to 5;
33878     +                         numbars = &numbars + i;
33879     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
33880     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
33881     +                      end;
33882     +                       %let new_numbars = %eval(&numbars+5);
33883     +                   end;
33884     +                   else do;
33885     +                      /* Make BINS with lower outliers width */
33886     +                      do i=1 to 5;
33887     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
33888     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
33889     +                      end;
33890     +                      if ustep<= step then do;
33891     +                         step = abs(P5-MAX)/&NUMBARS;
33892     +                         /* End Histogram at MAX value */
33893     +                         do i=1 to &NUMBARS;
33894     +                            numbars = i+5;
33895     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
33896     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
33897     +                         end;
33898     +                          %let new_numbars = %eval(&numbars+5);
33899     +                      end;
33900     +                      else do;
33901     +                         do i=1 to &NUMBARS;
33902     +                            numbars = i+5;
33903     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
33904     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
33905     +                         end;
33906     +                         /* Make BINS with upper outliers width */
33907     +                         do i=1 to 5;
33908     +                            numbars = &numbars+5+i;
33909     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
33910     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
33911     +                         end;
33912     +                         %let new_numbars = %eval(&numbars+10);
33913     +                      end;
33914     +                   end;
33915     +                end;
33916     +             end;
33917     +             else do;
33918     +                _bounds(1)   = MIN;
33919     +                _midpoint(1) = MIN;
33920     +             end;
33921     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
33922     +          run;
33923     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
33924     +              data &bindata;
33925     +                 merge &bindata _DISCRETEMID(in = _b);
33926     +                 by VARIABLE;
33927     +                 if _b then _DISCRETE=1;
33928     +                 else _DISCRETE=0;
33929     +              run;
33930     +          %end;
33932     +          data _null_;
33933     +             file fref;
33934     +             set &bindata end=eof;
33935     +             array _bounds{&NEW_NUMBARS};
33936     +             array _midpoint{&NEW_NUMBARS};
33937     +             if _n_=1 then
33938     +                put 'proc format;';
33940     +             put 'value ' Format;
33941     +             if _DISCRETE then do;
33942     +                 do i=1 to &numbars;
33943     +                    _MID = _midpoint{i};
33944     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
33945     +                       put _MID '="' _MID '"';
33946     +                 end;
33947     +                 put ';';
33948     +             end;
33949     +             else do;
33950     +                if min eq max then do;
33951     +                   put 'low - high ="' MIN '";';
33952     +                end;
33953     +                else do;
33954     +                   _LB  = MIN;
33955     +                   _MID = _midpoint{1};
33956     +                   _UB  = _bounds{1};
33957     +                   put 'LOW -' _UB '="' _MID '"';
33959     +                   do i=1 to &NEW_NUMBARS-1;
33960     +                      _LB  = _bounds{i};
33961     +                      j=i+1;
33962     +                      _MID = _midpoint{j};
33963     +                      _UB  = _bounds{j};
33964     +                      if (_UB ne .) and (_LB ne _UB) then do;
33965     +                         if _UB>=MAX then
33966     +                            put _LB '-HIGH="' _MID '"';
33967     +                         else
33968     +                            put _LB '-' _UB '="' _MID '"';
33969     +                      end;
33970     +                   end;
33971     +                end;
33972     +             end;
33973     +             put ';';
33974     +             if eof then put 'run;';
33975     +          run;
33977     +          %inc fref;
33979     +          filename fref;
33980     +      %end;
33982     +      data _binneddata / view=_binneddata;
33983     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
33985     +         %let dsid    =%sysfunc(open(&bindata));
33986     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
33987     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
33988     +         %let obs = %sysfunc(fetch(&dsid));
33990     +         %if (&obs=0) %then %do;
33991     +             format
33992     +         %end;
33994     +         %let _count = 0;
33995     +         %do %while(&obs=0);
33996     +             %let _count = %eval(&_count +1);
33997     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
33998     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
33999     +             %do;
34000     +                &_name &_fmtname..
34001     +             %end;
34002     +             %let obs = %sysfunc(fetch(&dsid));
34003     +         %end;
34004     +         %let dsid=%sysfunc(close(&dsid));
34005     +         ;
34006     +      run;
34007     +   %end;
34009     +    %if &bin ne N %then %do;
34010     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
34011     +    %end;
34012     +    %else %do;
34013     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
34014     +    %end;
34015     +      class %_vars &vars;
34016     +      %if &FREQ ne %then %do;
34017     +          freq &FREQ;
34018     +      %end;
34019     +   run;
34020     +   data &output;
34021     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
34022     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
34023     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
34024     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
34025     +      set _temptab;
34026     +      format VALUE 12.3 count;
34027     +      value = inputn(level, 'best12.');
34028     +      keep VARIABLE COUNT PERCENT VALUE;
34029     +   run;
34030     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
34031     +       data &output;
34032     +          set &output(in=_a) _MINMAXDATA;
34033     +          if _a then Pos=2;
34034     +       run;
34035     +       proc sort data=&output out=&output(drop=pos);
34036     +          by VARIABLE POS VALUE;
34037     +          where VALUE ne .;
34038     +       run;
34039     +   %end;
34040     +   proc datasets lib=work nolist mt=(DATA VIEW);
34041     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
34042     +   run;
34043     +   quit;
34045     +   %doend:
34046     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
34047      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
34048      %var_profile(DATA=EMWS8.Stat_TRAIN, OUTPUT=EMWS8.Filter_VARDIST, METADATA=EMWS8.Filter_VariableSet, COMPUTESTAT=N, FREQ=, BIN=Y, NUMBARS= 16, minmax=Y);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set EMWS8.Filter_VariableSet(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 14 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set EMWS8.Filter_VariableSet end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 4 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 79.
NOTE: There were 14 observations read from the data set EMWS8.FILTER_VARIABLESET.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
34049     +%macro _vars;
34050     +CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase
34051     +Rcn Recomendation SmallAppliances Toys Year_Birth
34052     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS8.Stat_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: The data set WORK._CLASSOUT has 227 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 227 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 1 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 227 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 227 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 227 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 14 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Stat_TRAIN(keep
MPRINT(VAR_PROFILE):  =CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: There were 2500 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 15 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.23 seconds
      cpu time            0.17 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100');
NOTE: The data set WORK._MINMAXDATA has 14 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _MINMAXDATA(keep=Variable Value Pos);
MPRINT(VAR_PROFILE):   set _MINMAXDATA;
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   Value = min;
MPRINT(VAR_PROFILE):   Pos=1;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   Value = max;
MPRINT(VAR_PROFILE):   Pos=3;
MPRINT(VAR_PROFILE):   output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set WORK._MINMAXDATA has 28 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=_BOUNDS(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BOUNDS has 14 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_BOUNDS;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 14 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   set _BOUNDS;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set WORK._BOUNDS.
NOTE: The data set WORK._BOUNDS has 14 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _BOUNDS;
MPRINT(VAR_PROFILE):   merge _BOUNDS _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 14 observations read from the data set WORK._BOUNDS.
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BOUNDS has 14 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _BOUNDS end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 290 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 42.
NOTE: There were 14 observations read from the data set WORK._BOUNDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
34053     +proc format;
MPRINT(VAR_PROFILE):   proc format;
34054     +value F1_
34055     +LOW -16 ="13.75 "
34056     +16 -20 ="17.75 "
34057     +20 -24 ="21.75 "
34058     +24 -28 ="25.75 "
34059     +28 -32 ="29.75 "
34060     +32 -35.9375 ="33.96875 "
34061     +35.9375 -39.875 ="37.90625 "
34062     +39.875 -43.8125 ="41.84375 "
34063     +43.8125 -47.75 ="45.78125 "
34064     +47.75 -51.6875 ="49.71875 "
34065     +51.6875 -55.625 ="53.65625 "
34066     +55.625 -59.5625 ="57.59375 "
34067     +59.5625 -63.5 ="61.53125 "
34068     +63.5 -67.4375 ="65.46875 "
34069     +67.4375 -71.375 ="69.40625 "
34070     +71.375 -75.3125 ="73.34375 "
34071     +75.3125 -79.25 ="77.28125 "
34072     +79.25 -83.1875 ="81.21875 "
34073     +83.1875 -87.125 ="85.15625 "
34074     +87.125 -91.0625 ="89.09375 "
34075     +91.0625 -HIGH="93.03125 "
34076     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -16 ="13.75 " 16 -20 ="17.75 " 20 -24 ="21.75 " 24 -28 ="25.75 " 28 -32 ="29.75 " 32 -35.9375 ="33.96875 " 35.9375 -39.875 ="37.90625 " 39.875 -43.8125 ="41.84375 " 43.8125 -47.75 ="45.78125 " 47.75 -51.6875 ="49.71875
" 51.6875 -55.625 ="53.65625 " 55.625 -59.5625 ="57.59375 " 59.5625 -63.5 ="61.53125 " 63.5 -67.4375 ="65.46875 " 67.4375 -71.375 ="69.40625 " 71.375 -75.3125 ="73.34375 " 75.3125 -79.25 ="77.28125 " 79.25 -83.1875 ="81.21875 " 83.1875 -87.125 ="85.15625
" 87.125 -91.0625 ="89.09375 " 91.0625 -HIGH="93.03125 " ;
NOTE: Format F1_ has been output.
34077     +value F2_
34078     +LOW -8 ="5 "
34079     +8 -14 ="11 "
34080     +14 -20 ="17 "
34081     +20 -26 ="23 "
34082     +26 -32 ="29 "
34083     +32 -38 ="35 "
34084     +38 -44 ="41 "
34085     +44 -50 ="47 "
34086     +50 -56 ="53 "
34087     +56 -62 ="59 "
34088     +62 -68 ="65 "
34089     +68 -74 ="71 "
34090     +74 -80 ="77 "
34091     +80 -86 ="83 "
34092     +86 -92 ="89 "
34093     +92 -HIGH="95 "
34094     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -8 ="5 " 8 -14 ="11 " 14 -20 ="17 " 20 -26 ="23 " 26 -32 ="29 " 32 -38 ="35 " 38 -44 ="41 " 44 -50 ="47 " 50 -56 ="53 " 56 -62 ="59 " 62 -68 ="65 " 68 -74 ="71 " 74 -80 ="77 " 80 -86 ="83 " 86 -92 ="89 " 92 -HIGH="95 "
;
NOTE: Format F2_ has been output.
34095     +value F3_
34096     +LOW -19246.75 ="19224.875 "
34097     +19246.75 -19290.5 ="19268.625 "
34098     +19290.5 -19334.25 ="19312.375 "
34099     +19334.25 -19378 ="19356.125 "
34100     +19378 -19421.75 ="19399.875 "
34101     +19421.75 -19465.5 ="19443.625 "
34102     +19465.5 -19509.25 ="19487.375 "
34103     +19509.25 -19553 ="19531.125 "
34104     +19553 -19596.75 ="19574.875 "
34105     +19596.75 -19640.5 ="19618.625 "
34106     +19640.5 -19684.25 ="19662.375 "
34107     +19684.25 -19728 ="19706.125 "
34108     +19728 -19771.75 ="19749.875 "
34109     +19771.75 -19815.5 ="19793.625 "
34110     +19815.5 -19859.25 ="19837.375 "
34111     +19859.25 -HIGH="19881.125 "
34112     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -19246.75 ="19224.875 " 19246.75 -19290.5 ="19268.625 " 19290.5 -19334.25 ="19312.375 " 19334.25 -19378 ="19356.125 " 19378 -19421.75 ="19399.875 " 19421.75 -19465.5 ="19443.625 " 19465.5 -19509.25 ="19487.375 "
19509.25 -19553 ="19531.125 " 19553 -19596.75 ="19574.875 " 19596.75 -19640.5 ="19618.625 " 19640.5 -19684.25 ="19662.375 " 19684.25 -19728 ="19706.125 " 19728 -19771.75 ="19749.875 " 19771.75 -19815.5 ="19793.625 " 19815.5 -19859.25 ="19837.375 "
19859.25 -HIGH="19881.125 " ;
NOTE: Format F3_ has been output.
34113     +value F4_
34114     +LOW -5.375 ="4.1875 "
34115     +5.375 -7.75 ="6.5625 "
34116     +7.75 -10.125 ="8.9375 "
34117     +10.125 -12.5 ="11.3125 "
34118     +12.5 -14.875 ="13.6875 "
34119     +14.875 -17.25 ="16.0625 "
34120     +17.25 -19.625 ="18.4375 "
34121     +19.625 -22 ="20.8125 "
34122     +22 -24.375 ="23.1875 "
34123     +24.375 -26.75 ="25.5625 "
34124     +26.75 -29.125 ="27.9375 "
34125     +29.125 -31.5 ="30.3125 "
34126     +31.5 -33.875 ="32.6875 "
34127     +33.875 -36.25 ="35.0625 "
34128     +36.25 -38.625 ="37.4375 "
34129     +38.625 -41 ="39.8125 "
34130     +41 -44.4 ="43.2125 "
34131     +44.4 -47.8 ="46.6125 "
34132     +47.8 -51.2 ="50.0125 "
34133     +51.2 -54.6 ="53.4125 "
34134     +54.6 -HIGH="56.8125 "
34135     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -5.375 ="4.1875 " 5.375 -7.75 ="6.5625 " 7.75 -10.125 ="8.9375 " 10.125 -12.5 ="11.3125 " 12.5 -14.875 ="13.6875 " 14.875 -17.25 ="16.0625 " 17.25 -19.625 ="18.4375 " 19.625 -22 ="20.8125 " 22 -24.375 ="23.1875 "
24.375 -26.75 ="25.5625 " 26.75 -29.125 ="27.9375 " 29.125 -31.5 ="30.3125 " 31.5 -33.875 ="32.6875 " 33.875 -36.25 ="35.0625 " 36.25 -38.625 ="37.4375 " 38.625 -41 ="39.8125 " 41 -44.4 ="43.2125 " 44.4 -47.8 ="46.6125 " 47.8 -51.2 ="50.0125 " 51.2 -54.6
="53.4125 " 54.6 -HIGH="56.8125 " ;
NOTE: Format F4_ has been output.
34136     +value F5_
34137     +LOW -1.4375 ="0.71875 "
34138     +1.4375 -2.875 ="2.15625 "
34139     +2.875 -4.3125 ="3.59375 "
34140     +4.3125 -5.75 ="5.03125 "
34141     +5.75 -7.1875 ="6.46875 "
34142     +7.1875 -8.625 ="7.90625 "
34143     +8.625 -10.0625 ="9.34375 "
34144     +10.0625 -11.5 ="10.78125 "
34145     +11.5 -12.9375 ="12.21875 "
34146     +12.9375 -14.375 ="13.65625 "
34147     +14.375 -15.8125 ="15.09375 "
34148     +15.8125 -17.25 ="16.53125 "
34149     +17.25 -18.6875 ="17.96875 "
34150     +18.6875 -20.125 ="19.40625 "
34151     +20.125 -21.5625 ="20.84375 "
34152     +21.5625 -23 ="22.28125 "
34153     +23 -29.2 ="28.48125 "
34154     +29.2 -35.4 ="34.68125 "
34155     +35.4 -41.6 ="40.88125 "
34156     +41.6 -47.8 ="47.08125 "
34157     +47.8 -HIGH="53.28125 "
34158     +;
MPRINT(VAR_PROFILE):   value F5_ LOW -1.4375 ="0.71875 " 1.4375 -2.875 ="2.15625 " 2.875 -4.3125 ="3.59375 " 4.3125 -5.75 ="5.03125 " 5.75 -7.1875 ="6.46875 " 7.1875 -8.625 ="7.90625 " 8.625 -10.0625 ="9.34375 " 10.0625 -11.5 ="10.78125 " 11.5 -12.9375
="12.21875 " 12.9375 -14.375 ="13.65625 " 14.375 -15.8125 ="15.09375 " 15.8125 -17.25 ="16.53125 " 17.25 -18.6875 ="17.96875 " 18.6875 -20.125 ="19.40625 " 20.125 -21.5625 ="20.84375 " 21.5625 -23 ="22.28125 " 23 -29.2 ="28.48125 " 29.2 -35.4 ="34.68125 "
35.4 -41.6 ="40.88125 " 41.6 -47.8 ="47.08125 " 47.8 -HIGH="53.28125 " ;
NOTE: Format F5_ has been output.
34159     +value F6_
34160     +LOW -18856.55625 ="14678.278125 "
34161     +18856.55625 -27213.1125 ="23034.834375 "
34162     +27213.1125 -35569.66875 ="31391.390625 "
34163     +35569.66875 -43926.225 ="39747.946875 "
34164     +43926.225 -52282.78125 ="48104.503125 "
34165     +52282.78125 -60639.3375 ="56461.059375 "
34166     +60639.3375 -68995.89375 ="64817.615625 "
34167     +68995.89375 -77352.45 ="73174.171875 "
34168     +77352.45 -85709.00625 ="81530.728125 "
34169     +85709.00625 -94065.5625 ="89887.284375 "
34170     +94065.5625 -102422.11875 ="98243.840625 "
34171     +102422.11875 -110778.675 ="106600.39688 "
34172     +110778.675 -119135.23125 ="114956.95313 "
34173     +119135.23125 -127491.7875 ="123313.50938 "
34174     +127491.7875 -135848.34375 ="131670.06563 "
34175     +135848.34375 -HIGH="140026.62188 "
34176     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -18856.55625 ="14678.278125 " 18856.55625 -27213.1125 ="23034.834375 " 27213.1125 -35569.66875 ="31391.390625 " 35569.66875 -43926.225 ="39747.946875 " 43926.225 -52282.78125 ="48104.503125 " 52282.78125 -60639.3375
="56461.059375 " 60639.3375 -68995.89375 ="64817.615625 " 68995.89375 -77352.45 ="73174.171875 " 77352.45 -85709.00625 ="81530.728125 " 85709.00625 -94065.5625 ="89887.284375 " 94065.5625 -102422.11875 ="98243.840625 " 102422.11875 -110778.675
="106600.39688 " 110778.675 -119135.23125 ="114956.95313 " 119135.23125 -127491.7875 ="123313.50938 " 127491.7875 -135848.34375 ="131670.06563 " 135848.34375 -HIGH="140026.62188 " ;
NOTE: Format F6_ has been output.
34177     +value F7_
34178     +LOW -1.4375 ="0.71875 "
34179     +1.4375 -2.875 ="2.15625 "
34180     +2.875 -4.3125 ="3.59375 "
34181     +4.3125 -5.75 ="5.03125 "
34182     +5.75 -7.1875 ="6.46875 "
34183     +7.1875 -8.625 ="7.90625 "
34184     +8.625 -10.0625 ="9.34375 "
34185     +10.0625 -11.5 ="10.78125 "
34186     +11.5 -12.9375 ="12.21875 "
34187     +12.9375 -14.375 ="13.65625 "
34188     +14.375 -15.8125 ="15.09375 "
34189     +15.8125 -17.25 ="16.53125 "
34190     +17.25 -18.6875 ="17.96875 "
34191     +18.6875 -20.125 ="19.40625 "
34192     +20.125 -21.5625 ="20.84375 "
34193     +21.5625 -23 ="22.28125 "
34194     +23 -32 ="31.28125 "
34195     +32 -41 ="40.28125 "
34196     +41 -50 ="49.28125 "
34197     +50 -59 ="58.28125 "
34198     +59 -HIGH="67.28125 "
34199     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -1.4375 ="0.71875 " 1.4375 -2.875 ="2.15625 " 2.875 -4.3125 ="3.59375 " 4.3125 -5.75 ="5.03125 " 5.75 -7.1875 ="6.46875 " 7.1875 -8.625 ="7.90625 " 8.625 -10.0625 ="9.34375 " 10.0625 -11.5 ="10.78125 " 11.5 -12.9375
="12.21875 " 12.9375 -14.375 ="13.65625 " 14.375 -15.8125 ="15.09375 " 15.8125 -17.25 ="16.53125 " 17.25 -18.6875 ="17.96875 " 18.6875 -20.125 ="19.40625 " 20.125 -21.5625 ="20.84375 " 21.5625 -23 ="22.28125 " 23 -32 ="31.28125 " 32 -41 ="40.28125 " 41
-50 ="49.28125 " 50 -59 ="58.28125 " 59 -HIGH="67.28125 " ;
NOTE: Format F7_ has been output.
34200     +value F8_
34201     +LOW -132.795 ="70.5575 "
34202     +132.795 -257.27 ="195.0325 "
34203     +257.27 -381.745 ="319.5075 "
34204     +381.745 -506.22 ="443.9825 "
34205     +506.22 -630.695 ="568.4575 "
34206     +630.695 -755.17 ="692.9325 "
34207     +755.17 -879.645 ="817.4075 "
34208     +879.645 -1004.12 ="941.8825 "
34209     +1004.12 -1128.595 ="1066.3575 "
34210     +1128.595 -1253.07 ="1190.8325 "
34211     +1253.07 -1377.545 ="1315.3075 "
34212     +1377.545 -1502.02 ="1439.7825 "
34213     +1502.02 -1626.495 ="1564.2575 "
34214     +1626.495 -1750.97 ="1688.7325 "
34215     +1750.97 -1875.445 ="1813.2075 "
34216     +1875.445 -1999.92 ="1937.6825 "
34217     +1999.92 -2211.04 ="2148.8025 "
34218     +2211.04 -2422.16 ="2359.9225 "
34219     +2422.16 -2633.28 ="2571.0425 "
34220     +2633.28 -2844.4 ="2782.1625 "
34221     +2844.4 -HIGH="2993.2825 "
34222     +;
MPRINT(VAR_PROFILE):   value F8_ LOW -132.795 ="70.5575 " 132.795 -257.27 ="195.0325 " 257.27 -381.745 ="319.5075 " 381.745 -506.22 ="443.9825 " 506.22 -630.695 ="568.4575 " 630.695 -755.17 ="692.9325 " 755.17 -879.645 ="817.4075 " 879.645 -1004.12
="941.8825 " 1004.12 -1128.595 ="1066.3575 " 1128.595 -1253.07 ="1190.8325 " 1253.07 -1377.545 ="1315.3075 " 1377.545 -1502.02 ="1439.7825 " 1502.02 -1626.495 ="1564.2575 " 1626.495 -1750.97 ="1688.7325 " 1750.97 -1875.445 ="1813.2075 " 1875.445 -1999.92
="1937.6825 " 1999.92 -2211.04 ="2148.8025 " 2211.04 -2422.16 ="2359.9225 " 2422.16 -2633.28 ="2571.0425 " 2633.28 -2844.4 ="2782.1625 " 2844.4 -HIGH="2993.2825 " ;
NOTE: Format F8_ has been output.
34223     +value F9_
34224     +LOW -8.9375 ="6.96875 "
34225     +8.9375 -12.875 ="10.90625 "
34226     +12.875 -16.8125 ="14.84375 "
34227     +16.8125 -20.75 ="18.78125 "
34228     +20.75 -24.6875 ="22.71875 "
34229     +24.6875 -28.625 ="26.65625 "
34230     +28.625 -32.5625 ="30.59375 "
34231     +32.5625 -36.5 ="34.53125 "
34232     +36.5 -40.4375 ="38.46875 "
34233     +40.4375 -44.375 ="42.40625 "
34234     +44.375 -48.3125 ="46.34375 "
34235     +48.3125 -52.25 ="50.28125 "
34236     +52.25 -56.1875 ="54.21875 "
34237     +56.1875 -60.125 ="58.15625 "
34238     +60.125 -64.0625 ="62.09375 "
34239     +64.0625 -68 ="66.03125 "
34240     +68 -72 ="70.03125 "
34241     +72 -76 ="74.03125 "
34242     +76 -80 ="78.03125 "
34243     +80 -84 ="82.03125 "
34244     +84 -HIGH="86.03125 "
34245     +;
MPRINT(VAR_PROFILE):   value F9_ LOW -8.9375 ="6.96875 " 8.9375 -12.875 ="10.90625 " 12.875 -16.8125 ="14.84375 " 16.8125 -20.75 ="18.78125 " 20.75 -24.6875 ="22.71875 " 24.6875 -28.625 ="26.65625 " 28.625 -32.5625 ="30.59375 " 32.5625 -36.5 ="34.53125 "
36.5 -40.4375 ="38.46875 " 40.4375 -44.375 ="42.40625 " 44.375 -48.3125 ="46.34375 " 48.3125 -52.25 ="50.28125 " 52.25 -56.1875 ="54.21875 " 56.1875 -60.125 ="58.15625 " 60.125 -64.0625 ="62.09375 " 64.0625 -68 ="66.03125 " 68 -72 ="70.03125 " 72 -76
="74.03125 " 76 -80 ="78.03125 " 80 -84 ="82.03125 " 84 -HIGH="86.03125 " ;
NOTE: Format F9_ has been output.
34246     +value F10_
34247     +LOW -6.25 ="3.125 "
34248     +6.25 -12.5 ="9.375 "
34249     +12.5 -18.75 ="15.625 "
34250     +18.75 -25 ="21.875 "
34251     +25 -31.25 ="28.125 "
34252     +31.25 -37.5 ="34.375 "
34253     +37.5 -43.75 ="40.625 "
34254     +43.75 -50 ="46.875 "
34255     +50 -56.25 ="53.125 "
34256     +56.25 -62.5 ="59.375 "
34257     +62.5 -68.75 ="65.625 "
34258     +68.75 -75 ="71.875 "
34259     +75 -81.25 ="78.125 "
34260     +81.25 -87.5 ="84.375 "
34261     +87.5 -93.75 ="90.625 "
34262     +93.75 -100 ="96.875 "
34263     +100 -189.8 ="186.675 "
34264     +189.8 -279.6 ="276.475 "
34265     +279.6 -369.4 ="366.275 "
34266     +369.4 -459.2 ="456.075 "
34267     +459.2 -HIGH="545.875 "
34268     +;
MPRINT(VAR_PROFILE):   value F10_ LOW -6.25 ="3.125 " 6.25 -12.5 ="9.375 " 12.5 -18.75 ="15.625 " 18.75 -25 ="21.875 " 25 -31.25 ="28.125 " 31.25 -37.5 ="34.375 " 37.5 -43.75 ="40.625 " 43.75 -50 ="46.875 " 50 -56.25 ="53.125 " 56.25 -62.5 ="59.375 " 62.5
-68.75 ="65.625 " 68.75 -75 ="71.875 " 75 -81.25 ="78.125 " 81.25 -87.5 ="84.375 " 87.5 -93.75 ="90.625 " 93.75 -100 ="96.875 " 100 -189.8 ="186.675 " 189.8 -279.6 ="276.475 " 279.6 -369.4 ="366.275 " 369.4 -459.2 ="456.075 " 459.2 -HIGH="545.875 " ;
NOTE: Format F10_ has been output.
34269     +value F11_
34270     +1 ="1 "
34271     +2 ="2 "
34272     +3 ="3 "
34273     +4 ="4 "
34274     +5 ="5 "
34275     +6 ="6 "
34276     +;
MPRINT(VAR_PROFILE):   value F11_ 1 ="1 " 2 ="2 " 3 ="3 " 4 ="4 " 5 ="5 " 6 ="6 " ;
NOTE: Format F11_ has been output.
MPRINT(VAR_PROFILE):   ;
34277     +;
34278     +value F12_
34279     +LOW -5 ="3.5 "
34280     +5 -8 ="6.5 "
34281     +8 -11 ="9.5 "
34282     +11 -14 ="12.5 "
34283     +14 -17 ="15.5 "
34284     +17 -20 ="18.5 "
34285     +20 -23 ="21.5 "
34286     +23 -26 ="24.5 "
34287     +26 -29 ="27.5 "
34288     +29 -32 ="30.5 "
34289     +32 -35 ="33.5 "
34290     +35 -38 ="36.5 "
34291     +38 -41 ="39.5 "
34292     +41 -44 ="42.5 "
34293     +44 -47 ="45.5 "
34294     +47 -50 ="48.5 "
34295     +50 -53.8 ="52.3 "
34296     +53.8 -57.6 ="56.1 "
34297     +57.6 -61.4 ="59.9 "
34298     +61.4 -65.2 ="63.7 "
34299     +65.2 -HIGH="67.5 "
34300     +;
MPRINT(VAR_PROFILE):   value F12_ LOW -5 ="3.5 " 5 -8 ="6.5 " 8 -11 ="9.5 " 11 -14 ="12.5 " 14 -17 ="15.5 " 17 -20 ="18.5 " 20 -23 ="21.5 " 23 -26 ="24.5 " 26 -29 ="27.5 " 29 -32 ="30.5 " 32 -35 ="33.5 " 35 -38 ="36.5 " 38 -41 ="39.5 " 41 -44 ="42.5 " 44
-47 ="45.5 " 47 -50 ="48.5 " 50 -53.8 ="52.3 " 53.8 -57.6 ="56.1 " 57.6 -61.4 ="59.9 " 61.4 -65.2 ="63.7 " 65.2 -HIGH="67.5 " ;
NOTE: Format F12_ has been output.
34301     +value F13_
34302     +LOW -1.40625 ="0.703125 "
34303     +1.40625 -2.8125 ="2.109375 "
34304     +2.8125 -4.21875 ="3.515625 "
34305     +4.21875 -5.625 ="4.921875 "
34306     +5.625 -7.03125 ="6.328125 "
34307     +7.03125 -8.4375 ="7.734375 "
34308     +8.4375 -9.84375 ="9.140625 "
34309     +9.84375 -11.25 ="10.546875 "
34310     +11.25 -12.65625 ="11.953125 "
34311     +12.65625 -14.0625 ="13.359375 "
34312     +14.0625 -15.46875 ="14.765625 "
34313     +15.46875 -16.875 ="16.171875 "
34314     +16.875 -18.28125 ="17.578125 "
34315     +18.28125 -19.6875 ="18.984375 "
34316     +19.6875 -21.09375 ="20.390625 "
34317     +21.09375 -22.5 ="21.796875 "
34318     +22.5 -33.4 ="32.696875 "
34319     +33.4 -44.3 ="43.596875 "
34320     +44.3 -55.2 ="54.496875 "
34321     +55.2 -66.1 ="65.396875 "
34322     +66.1 -HIGH="76.296875 "
34323     +;
MPRINT(VAR_PROFILE):   value F13_ LOW -1.40625 ="0.703125 " 1.40625 -2.8125 ="2.109375 " 2.8125 -4.21875 ="3.515625 " 4.21875 -5.625 ="4.921875 " 5.625 -7.03125 ="6.328125 " 7.03125 -8.4375 ="7.734375 " 8.4375 -9.84375 ="9.140625 " 9.84375 -11.25
="10.546875 " 11.25 -12.65625 ="11.953125 " 12.65625 -14.0625 ="13.359375 " 14.0625 -15.46875 ="14.765625 " 15.46875 -16.875 ="16.171875 " 16.875 -18.28125 ="17.578125 " 18.28125 -19.6875 ="18.984375 " 19.6875 -21.09375 ="20.390625 " 21.09375 -22.5
="21.796875 " 22.5 -33.4 ="32.696875 " 33.4 -44.3 ="43.596875 " 44.3 -55.2 ="54.496875 " 55.2 -66.1 ="65.396875 " 66.1 -HIGH="76.296875 " ;
NOTE: Format F13_ has been output.
34324     +value F14_
34325     +LOW -1940.75 ="1938.875 "
34326     +1940.75 -1944.5 ="1942.625 "
34327     +1944.5 -1948.25 ="1946.375 "
34328     +1948.25 -1952 ="1950.125 "
34329     +1952 -1955.75 ="1953.875 "
34330     +1955.75 -1959.5 ="1957.625 "
34331     +1959.5 -1963.25 ="1961.375 "
34332     +1963.25 -1967 ="1965.125 "
34333     +1967 -1970.75 ="1968.875 "
34334     +1970.75 -1974.5 ="1972.625 "
34335     +1974.5 -1978.25 ="1976.375 "
34336     +1978.25 -1982 ="1980.125 "
34337     +1982 -1985.75 ="1983.875 "
34338     +1985.75 -1989.5 ="1987.625 "
34339     +1989.5 -1993.25 ="1991.375 "
34340     +1993.25 -HIGH="1995.125 "
34341     +;
MPRINT(VAR_PROFILE):   value F14_ LOW -1940.75 ="1938.875 " 1940.75 -1944.5 ="1942.625 " 1944.5 -1948.25 ="1946.375 " 1948.25 -1952 ="1950.125 " 1952 -1955.75 ="1953.875 " 1955.75 -1959.5 ="1957.625 " 1959.5 -1963.25 ="1961.375 " 1963.25 -1967 ="1965.125
" 1967 -1970.75 ="1968.875 " 1970.75 -1974.5 ="1972.625 " 1974.5 -1978.25 ="1976.375 " 1978.25 -1982 ="1980.125 " 1982 -1985.75 ="1983.875 " 1985.75 -1989.5 ="1987.625 " 1989.5 -1993.25 ="1991.375 " 1993.25 -HIGH="1995.125 " ;
NOTE: Format F14_ has been output.
MPRINT(VAR_PROFILE):   run;
34342     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS8.Stat_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format CatPurchase F1_. Clothes F2_. Dt_Customer F3_. Frq F4_. HouseKeeping F5_. Income F6_. Kitchen F7_. Mnt F8_. NetPurchase F9_. Rcn F10_. Recomendation F11_. SmallAppliances F12_. Toys F13_. Year_Birth F14_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: There were 2500 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 259 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS8.Filter_VARDIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 259 observations read from the data set WORK._TEMPTAB.
NOTE: The data set EMWS8.FILTER_VARDIST has 259 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data EMWS8.Filter_VARDIST;
MPRINT(VAR_PROFILE):   set EMWS8.Filter_VARDIST(in=_a) _MINMAXDATA;
MPRINT(VAR_PROFILE):   if _a then Pos=2;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 259 observations read from the data set EMWS8.FILTER_VARDIST.
NOTE: There were 28 observations read from the data set WORK._MINMAXDATA.
NOTE: The data set EMWS8.FILTER_VARDIST has 287 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=EMWS8.Filter_VARDIST out=EMWS8.Filter_VARDIST(drop=pos);
MPRINT(VAR_PROFILE):   by VARIABLE POS VALUE;
MPRINT(VAR_PROFILE):   where VALUE ne .;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 286 observations read from the data set EMWS8.FILTER_VARDIST.
      WHERE VALUE not = .;
NOTE: The data set EMWS8.FILTER_VARDIST has 286 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
NOTE: Deleting WORK._MINMAXDATA (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    data WORK.M1TAF95O;
MPRINT(EM_DIAGRAM):   retain _MAXLEVEL 25;
MPRINT(EM_DIAGRAM):   set WORK.M1TAF95O end=eof;
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   drop _MAXLEVEL;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES =25;
MPRINT(EM_DIAGRAM):   if MAXVALUES>_MAXLEVEL then _MAXLEVEL=MAXVALUES;
MPRINT(EM_DIAGRAM):   if eof then call symput('_MAXLEVEL', strip(put(_MAXLEVEL, best.)));
MPRINT(EM_DIAGRAM):   run;
34353      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
34354      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
34355      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34356      %macro DMDBClass;
34357          Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
34358      %mend DMDBClass;
34359      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34360      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
34361      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34362      %macro DMDBVar;
34363          CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt
34364         NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
34365      %mend DMDBVar;
34366      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34367      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
34368      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34369      proc dmdb batch data=EMWS8.Stat_TRAIN
34370      classout=WORK._EMFILTERCLASS
34371      varout=WORK._EMFILTERVAR
34372      maxlevel = 26
34373      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Stat_TRAIN classout=WORK._EMFILTERCLASS varout=WORK._EMFILTERVAR maxlevel = 26 ;
MPRINT(EM_DIAGRAM):   class
34374      class %DMDBClass;
MPRINT(DMDBCLASS):   Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
34375      var %DMDBVar;
MPRINT(DMDBVAR):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(EM_DIAGRAM):  ;
34376      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: The data set WORK._EMFILTERCLASS has 19 observations and 9 variables.
NOTE: The data set WORK._EMFILTERVAR has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
34377      quit;
34378      *--- end code ---*;
 
34379      data WORK.M1TAF95O;
MPRINT(EM_DIAGRAM):    data WORK.M1TAF95O;
34380      set WORK.M1TAF95O;
MPRINT(EM_DIAGRAM):   set WORK.M1TAF95O;
34381      if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ^in('TARGET', 'INPUT', 'FREQ') and CALCMETHOD ne 'NONE' then ROLE ='INPUT';
34382      if LEVEL ne 'INTERVAL' and KEEPMISSING IN('D', '', 'N');
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' and KEEPMISSING IN('D', '', 'N');
34383      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.M1TAF95O.
NOTE: The data set WORK.M1TAF95O has 4 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34384      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
34385      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
34386      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34387      %macro DMDBClass;
34388          Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
34389      %mend DMDBClass;
34390      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34391      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
34392      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34393      %macro DMDBVar;
34394
34395      %mend DMDBVar;
34396      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34397      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
34398      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34399      proc dmdb batch data=EMWS8.Stat_TRAIN
34400      classout=_MissingDs
34401      maxlevel = 26
34402      missingOnly
34403      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Stat_TRAIN classout=_MissingDs maxlevel = 26 missingOnly ;
MPRINT(EM_DIAGRAM):   class
34404      class %DMDBClass;
MPRINT(DMDBCLASS):   Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
34405      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: The data set WORK._MISSINGDS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
34406      quit;
34407      *--- end code ---*;
 
34408      proc freq data=WORK._EMFILTERCLASS noprint;
MPRINT(EM_DIAGRAM):    proc freq data=WORK._EMFILTERCLASS noprint;
34409      table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
MPRINT(EM_DIAGRAM):   table NAME / out=WORK._EMFILTERFREQ(keep=NAME COUNT rename=(COUNT=NUMLEVELS));
34410      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34411      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
34412      set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS (rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
34413      _OBS_= _N_;
MPRINT(EM_DIAGRAM):   _OBS_= _N_;
34414      if (CRAW eq '' and NRAW eq .) then _OBS_=0;
MPRINT(EM_DIAGRAM):   if (CRAW eq '' and NRAW eq .) then _OBS_=0;
34415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34416      data _MissingDs;
MPRINT(EM_DIAGRAM):    data _MissingDs;
34417      retain _OBS_ 0;
MPRINT(EM_DIAGRAM):   retain _OBS_ 0;
34418      set _MissingDs(rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(EM_DIAGRAM):   set _MissingDs(rename=(FREQUENCY=COUNT FREQPERCENT=PERCENT));
34419      where substr(LEVEL, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   where substr(LEVEL, 1, 1) ='M';
34420      if type = 'C' then LEVEL = '';
MPRINT(EM_DIAGRAM):   if type = 'C' then LEVEL = '';
34421      else LEVEL='.';
MPRINT(EM_DIAGRAM):   else LEVEL='.';
34422      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._MISSINGDS.
      WHERE SUBSTR(LEVEL, 1, 1)='M';
NOTE: The data set WORK._MISSINGDS has 4 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34423      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
34424      set WORK._EMFILTERCLASS _MissingDs;
MPRINT(EM_DIAGRAM):   set WORK._EMFILTERCLASS _MissingDs;
34425      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 4 observations read from the data set WORK._MISSINGDS.
NOTE: The data set WORK._EMFILTERCLASS has 23 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34426      proc sort data=WORK._EMFILTERCLASS nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._EMFILTERCLASS nodupkey;
34427      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
34428      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK._EMFILTERCLASS.
NOTE: 2 observations with duplicate key values were deleted.
NOTE: The data set WORK._EMFILTERCLASS has 21 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34429      proc sort data=WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERFREQ;
34430      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34431      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERFREQ has 4 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34432      data WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   data WORK._EMFILTERCLASS;
34433      merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
MPRINT(EM_DIAGRAM):   merge WORK._EMFILTERCLASS WORK._EMFILTERFREQ;
34434      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34435      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._EMFILTERCLASS.
NOTE: There were 4 observations read from the data set WORK._EMFILTERFREQ.
NOTE: The data set WORK._EMFILTERCLASS has 21 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34436      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):    data work._FilterMinFreq;
34437      set WORK.M3AYVXQD;
MPRINT(EM_DIAGRAM):   set WORK.M3AYVXQD;
34438      where level ne 'INTERVAL';
MPRINT(EM_DIAGRAM):   where level ne 'INTERVAL';
34439      if KEEPMISSING in('D', '') then
34440      KEEPMISSING = "N";
MPRINT(EM_DIAGRAM):   if KEEPMISSING in('D', '') then KEEPMISSING = "N";
34441      *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   *if ROLE='REJECTED' and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
34442      if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^in('INPUT','TARGET') and CALCMETHOD in('', 'DEFAULT') and KEEPMISSING="Y" then delete;
34443      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
34444      if minfreq = . then minfreq=1;
MPRINT(EM_DIAGRAM):   if minfreq = . then minfreq=1;
34445      if MAXVALUES = . then MAXVALUES = 25;
MPRINT(EM_DIAGRAM):   if MAXVALUES = . then MAXVALUES = 25;
34446      minClassPct = 0.01;
MPRINT(EM_DIAGRAM):   minClassPct = 0.01;
34447      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.M3AYVXQD.
      WHERE level not = 'INTERVAL';
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34448      proc sort data=work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   proc sort data=work._FilterMinFreq;
34449      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34450      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: The data set WORK._FILTERMINFREQ has 4 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34451      proc sort data=WORK._EMFILTERCLASS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._EMFILTERCLASS;
34452      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34453      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._EMFILTERCLASS has 21 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34454      data work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   data work._FilterMinFreq;
34455      merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
MPRINT(EM_DIAGRAM):   merge work._FilterMinFreq(drop=LEVEL in=_a) WORK._EMFILTERCLASS (in=_b);
34456      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
34457      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34458      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
NOTE: There were 21 observations read from the data set WORK._EMFILTERCLASS.
NOTE: The data set WORK._FILTERMINFREQ has 21 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34459      data work._FilterExclude;
MPRINT(EM_DIAGRAM):    data work._FilterExclude;
34460      set work._FilterMinFreq;
MPRINT(EM_DIAGRAM):   set work._FilterMinFreq;
34461      where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and CRAW='');
MPRINT(EM_DIAGRAM):   where ( ((CALCMETHOD = 'MINFREQ' and (COUNT ne . and COUNT <= minfreq)) or (CALCMETHOD = 'MINPCT' and (NMISSPERCENT ne . and 0.01*NMISSPERCENT <=minClassPct))) and (NUMLEVELS <= MAXVALUES)) or (KEEPMISSING eq 'N' and NRAW=. and
CRAW='');
34462      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._FILTERMINFREQ.
      WHERE ((((CALCMETHOD='MINFREQ') and (COUNT not = .) and (COUNT<=minfreq)) or ((CALCMETHOD='MINPCT') and (NMISSPERCENT not = .) and (minClassPct>=(0.01*NMISSPERCENT)))) and (NUMLEVELS<=MAXVALUES)) or ((KEEPMISSING='N') and (NRAW=.) and (CRAW=' '));
NOTE: The data set WORK._FILTEREXCLUDE has 4 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34463      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
34464      set WORK.M3AYVXQD;
MPRINT(EM_DIAGRAM):   set WORK.M3AYVXQD;
34465      if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
MPRINT(EM_DIAGRAM):   if CALCMETHOD in('', 'DEFAULT') then CALCMETHOD = "NONE";
34466      if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' and calcmethod='MANUAL' then output;
34467      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.M3AYVXQD.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34468      proc sort data=work._ManualExclude;
MPRINT(EM_DIAGRAM):   proc sort data=work._ManualExclude;
34469      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34470      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34471      proc sort data=EMWS8.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_CLASSFILTER(rename=(VARIABLE=NAME VALUE=LEVEL)) out=_temp;
34472      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34473      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.FILTER_CLASSFILTER.
NOTE: View EMWS8.FILTER_CLASSFILTER.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: There were 3 observations read from the data set EMWS8.FILTER_CLASSDIST.
      WHERE Filter='Y';
NOTE: The data set WORK._TEMP has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
34474      data work._ManualExclude;
MPRINT(EM_DIAGRAM):   data work._ManualExclude;
34475      merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge work._ManualExclude(drop=LEVEL in=_a) _temp(in=_b);
34476      _OBS_=_N_;
MPRINT(EM_DIAGRAM):   _OBS_=_N_;
34477      if strip(Level) in('.', '') then _OBS_=0;
MPRINT(EM_DIAGRAM):   if strip(Level) in('.', '') then _OBS_=0;
34478      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
34479      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34480      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._MANUALEXCLUDE has 3 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34481      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
34482      set work._ManualExclude work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._ManualExclude work._FilterExclude;
34483      if type = 'N' and format='' then level= strip(level);
MPRINT(EM_DIAGRAM):   if type = 'N' and format='' then level= strip(level);
34484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._MANUALEXCLUDE.
NOTE: There were 4 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 7 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34485      proc sort data=work._FilterExclude nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=work._FilterExclude nodupkey;
34486      by NAME _OBS_;
MPRINT(EM_DIAGRAM):   by NAME _OBS_;
34487      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._FILTEREXCLUDE has 7 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34488      %let _FilterClassNum= 0;
34489      data work._FilterExclude;
MPRINT(EM_DIAGRAM):   data work._FilterExclude;
34490      retain newvarindex 0;
MPRINT(EM_DIAGRAM):   retain newvarindex 0;
34491      length newvar normvar $32;
MPRINT(EM_DIAGRAM):   length newvar normvar $32;
34492      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
34493      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
34494      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34495      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
34496      newvarindex + 1;
MPRINT(EM_DIAGRAM):   newvarindex + 1;
34497      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
34498      newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   newvar = strip("_FILTERFMT")!!strip(put(newvarindex, best.));
34499      end;
MPRINT(EM_DIAGRAM):   end;
34500      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
34501      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
34502      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34503      normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
MPRINT(EM_DIAGRAM):   normvar = strip("_FILTERNORM")!!strip(put(newvarindex, best.));
34504      end;
MPRINT(EM_DIAGRAM):   end;
34505      end;
MPRINT(EM_DIAGRAM):   end;
34506      end;
MPRINT(EM_DIAGRAM):   end;
34507      if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterClassNum', strip(put(_N_, best.)));
34508      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: The variable string in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set WORK._FILTEREXCLUDE has 7 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34509      data EMWS8.Filter_CLASS;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter_CLASS;
34510      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,     NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,        NOQUOTE))" COUNT =
34511         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" CALCMETHOD =
34512         "%sysfunc(sasmsg(sashelp.dmine, rpt_filtermethod_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Value" COUNT = "Frequency Count" PERCENT = "Percent" LABEL = "Label" CALCMETHOD = "Filter Method";
34513      length VALUE $12;
MPRINT(EM_DIAGRAM):   length VALUE $12;
34514      set work._FilterExclude;
MPRINT(EM_DIAGRAM):   set work._FilterExclude;
34515      keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
MPRINT(EM_DIAGRAM):   keep NAME ROLE VALUE COUNT PERCENT LABEL CALCMETHOD;
34516      if COUNT = . then COUNT = 0;
MPRINT(EM_DIAGRAM):   if COUNT = . then COUNT = 0;
34517      if PERCENT = . then PERCENT = 0;
MPRINT(EM_DIAGRAM):   if PERCENT = . then PERCENT = 0;
34518      VALUE = LEVEL;
MPRINT(EM_DIAGRAM):   VALUE = LEVEL;
34519      if _OBS_ = 0 and KEEPMISSING='N' then do;
MPRINT(EM_DIAGRAM):   if _OBS_ = 0 and KEEPMISSING='N' then do;
34520      CALCMETHOD= '';
MPRINT(EM_DIAGRAM):   CALCMETHOD= '';
34521      KEEPMISSING = '';
MPRINT(EM_DIAGRAM):   KEEPMISSING = '';
34522      if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
MPRINT(EM_DIAGRAM):   if VALUE = '' and type eq 'C' then VALUE = '_BLANK_';
34523      if type eq 'N' then do;
MPRINT(EM_DIAGRAM):   if type eq 'N' then do;
34524      VALUE = strip(VALUE);
MPRINT(EM_DIAGRAM):   VALUE = strip(VALUE);
34525      if VALUE = '' then VALUE = '.';
MPRINT(EM_DIAGRAM):   if VALUE = '' then VALUE = '.';
34526      end;
MPRINT(EM_DIAGRAM):   end;
34527      end;
MPRINT(EM_DIAGRAM):   end;
34528      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: The data set EMWS8.FILTER_CLASS has 7 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
34529      %let _FOBS=0;
34530      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\NEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\NEWVAR.txt";
34531      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34532      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
34533      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
34534      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34535      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34536      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
34537      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
34538      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34539      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34540      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
34541      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
34542      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
34543      put string;
MPRINT(EM_DIAGRAM):   put string;
34544      end;
MPRINT(EM_DIAGRAM):   end;
34545      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
34546      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
34547      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34548      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
34549      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34550      end;
MPRINT(EM_DIAGRAM):   end;
34551      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
34552      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
34553      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
34554      put string;
MPRINT(EM_DIAGRAM):   put string;
34555      end;
MPRINT(EM_DIAGRAM):   end;
34556      end;
MPRINT(EM_DIAGRAM):   end;
34557      end;
MPRINT(EM_DIAGRAM):   end;
34558      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
34559      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\NEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 23 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 39.
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34560      %let _FOBS=0;
34561      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt";
34562      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34563      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
34564      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
34565      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
34566      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34567      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34568      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
34569      if format ne '' then do;
MPRINT(EM_DIAGRAM):   if format ne '' then do;
34570      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34571      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34572      put 'length ' newvar ' $200;';
MPRINT(EM_DIAGRAM):   put 'length ' newvar ' $200;';
34573      put 'drop ' newvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' newvar ';';
34574      string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
MPRINT(EM_DIAGRAM):   string = strip(newvar)!!'= put('!!strip(NAME)!!','!!strip(format)!!');';
34575      put string;
MPRINT(EM_DIAGRAM):   put string;
34576      end;
MPRINT(EM_DIAGRAM):   end;
34577      else newvar = name;
MPRINT(EM_DIAGRAM):   else newvar = name;
34578      if CALCMETHOD ne 'MANUAL' then do;
MPRINT(EM_DIAGRAM):   if CALCMETHOD ne 'MANUAL' then do;
34579      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34580      if (newvar eq name) then do;
MPRINT(EM_DIAGRAM):   if (newvar eq name) then do;
34581      put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
34582      end;
MPRINT(EM_DIAGRAM):   end;
34583      put 'length ' normvar " $%dmnorlen;";
MPRINT(EM_DIAGRAM):   put 'length ' normvar
MPRINT(EM_DIAGRAM):   " $32;";
34584      put 'drop ' normvar ';';
MPRINT(EM_DIAGRAM):   put 'drop ' normvar ';';
34585      string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
MPRINT(EM_DIAGRAM):   string = '%dmnormcp('!!strip(newvar)!!','!!strip(normvar)!!');';
34586      put string;
MPRINT(EM_DIAGRAM):   put string;
34587      end;
MPRINT(EM_DIAGRAM):   end;
34588      end;
MPRINT(EM_DIAGRAM):   end;
34589      end;
MPRINT(EM_DIAGRAM):   end;
34590      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
34591      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\PUBLISHNEWVAR.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 23 records were written to the file _X.
      The minimum record length was 1.
      The maximum record length was 39.
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34592      %let _FOBS=0;
34593      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt";
34594      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34595      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
34596      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
34597      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
34598      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
34599      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34600      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34601      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
34602      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
34603      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
34604      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
34605      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
34606      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34607      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
34608      end;
MPRINT(EM_DIAGRAM):   end;
34609      else do;
MPRINT(EM_DIAGRAM):   else do;
34610      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
34611      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
34612      end;
MPRINT(EM_DIAGRAM):   end;
34613      end;
MPRINT(EM_DIAGRAM):   end;
34614      else do;
MPRINT(EM_DIAGRAM):   else do;
34615      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34616      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
34617      end;
MPRINT(EM_DIAGRAM):   end;
34618      else do;
MPRINT(EM_DIAGRAM):   else do;
34619      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
34620      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
34621      end;
MPRINT(EM_DIAGRAM):   end;
34622      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
34623      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
34624      end;
MPRINT(EM_DIAGRAM):   end;
34625      else do;
MPRINT(EM_DIAGRAM):   else do;
34626      put line;
MPRINT(EM_DIAGRAM):   put line;
34627      line = string;
MPRINT(EM_DIAGRAM):   line = string;
34628      end;
MPRINT(EM_DIAGRAM):   end;
34629      end;
MPRINT(EM_DIAGRAM):   end;
34630      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
34631      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
34632      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
34633      end;
MPRINT(EM_DIAGRAM):   end;
34634      put line;
MPRINT(EM_DIAGRAM):   put line;
34635      end;
MPRINT(EM_DIAGRAM):   end;
34636      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
34637      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 7 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 42.
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34638      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
34639      %let _FOBS=0;
34640      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):    filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt";
34641      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34642      length line string $200 _filtervar $32;
MPRINT(EM_DIAGRAM):   length line string $200 _filtervar $32;
34643      drop newvarindex string;
MPRINT(EM_DIAGRAM):   drop newvarindex string;
34644      retain line '';
MPRINT(EM_DIAGRAM):   retain line '';
34645      set work._FilterExclude end=eof;
MPRINT(EM_DIAGRAM):   set work._FilterExclude end=eof;
34646      where ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where ROLE ne 'TARGET';
34647      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34648      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34649      if first.NAME then do;
MPRINT(EM_DIAGRAM):   if first.NAME then do;
34650      _filtervar = NAME;
MPRINT(EM_DIAGRAM):   _filtervar = NAME;
34651      if newvar ne '' then _filtervar = newvar;
MPRINT(EM_DIAGRAM):   if newvar ne '' then _filtervar = newvar;
34652      if normvar ne '' then _filtervar = normvar;
MPRINT(EM_DIAGRAM):   if normvar ne '' then _filtervar = normvar;
34653      if _N_ ne 1 then put ' and ';
MPRINT(EM_DIAGRAM):   if _N_ ne 1 then put ' and ';
34654      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34655      line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   line = strip(_filtervar)!!" not in ( '"!! tranwrd(trim(level), "'", "''")!!"'";
34656      end;
MPRINT(EM_DIAGRAM):   end;
34657      else do;
MPRINT(EM_DIAGRAM):   else do;
34658      if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then line = '('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
34659      else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else line = '('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
34660      end;
MPRINT(EM_DIAGRAM):   end;
34661      end;
MPRINT(EM_DIAGRAM):   end;
34662      else do;
MPRINT(EM_DIAGRAM):   else do;
34663      if format ne '' or type = 'C' then do;
MPRINT(EM_DIAGRAM):   if format ne '' or type = 'C' then do;
34664      string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
MPRINT(EM_DIAGRAM):   string = ", '"!! tranwrd(trim(level), "'", "''")!!"'";
34665      end;
MPRINT(EM_DIAGRAM):   end;
34666      else do;
MPRINT(EM_DIAGRAM):   else do;
34667      if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
MPRINT(EM_DIAGRAM):   if CALCMETHOD = 'MANUAL' then string = 'and ('!!strip(NAME)!!' ne '!!strip(LEVEL)!!')';
34668      else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
MPRINT(EM_DIAGRAM):   else string = 'and ('!!strip(NAME)!!' ne '!!strip(put(NRAW, best.))!!')';
34669      end;
MPRINT(EM_DIAGRAM):   end;
34670      if length(strip(string)) + length(strip(line)) < 80 then do;
MPRINT(EM_DIAGRAM):   if length(strip(string)) + length(strip(line)) < 80 then do;
34671      line = strip(line)!!' '!!strip(string);
MPRINT(EM_DIAGRAM):   line = strip(line)!!' '!!strip(string);
34672      end;
MPRINT(EM_DIAGRAM):   end;
34673      else do;
MPRINT(EM_DIAGRAM):   else do;
34674      put line;
MPRINT(EM_DIAGRAM):   put line;
34675      line = string;
MPRINT(EM_DIAGRAM):   line = string;
34676      end;
MPRINT(EM_DIAGRAM):   end;
34677      end;
MPRINT(EM_DIAGRAM):   end;
34678      if last.name then do;
MPRINT(EM_DIAGRAM):   if last.name then do;
34679      if (format ne '' or type eq 'C') then do;
MPRINT(EM_DIAGRAM):   if (format ne '' or type eq 'C') then do;
34680      line = strip(line)!!')';
MPRINT(EM_DIAGRAM):   line = strip(line)!!')';
34681      end;
MPRINT(EM_DIAGRAM):   end;
34682      put line;
MPRINT(EM_DIAGRAM):   put line;
34683      end;
MPRINT(EM_DIAGRAM):   end;
34684      if eof then call symput('_FOBS', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_FOBS', '1');
34685      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\CLASSPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 7 records were written to the file _X.
      The minimum record length was 5.
      The maximum record length was 42.
NOTE: There were 7 observations read from the data set WORK._FILTEREXCLUDE.
      WHERE ROLE not = 'TARGET';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34686      filename _X;
MPRINT(EM_DIAGRAM):   filename _X;
NOTE: Fileref _X has been deassigned.
34687      %let _FilterIntervalNum= 0;
34688      proc sort data=EMWS8.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter_INTERVAL;
34689      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34690      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.FILTER_INTERVAL.
NOTE: The data set EMWS8.FILTER_INTERVAL has 14 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
34691      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt";
34692      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34693      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
34694      set EMWS8.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_INTERVAL end=eof;
34695      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34696      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
34697      ;
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') ;
34698      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34699      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
34700      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
34701      end;
MPRINT(EM_DIAGRAM):   end;
34702      else do;
MPRINT(EM_DIAGRAM):   else do;
34703      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
34704      end;
MPRINT(EM_DIAGRAM):   end;
34705      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
34706      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
34707      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
34708      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
34709      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
34710      end;
MPRINT(EM_DIAGRAM):   end;
34711      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
34712      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
34713      end;
MPRINT(EM_DIAGRAM):   end;
34714      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
34715      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
34716      end;
MPRINT(EM_DIAGRAM):   end;
34717      end;
MPRINT(EM_DIAGRAM):   end;
34718      else do;
MPRINT(EM_DIAGRAM):   else do;
34719      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
34720      end;
MPRINT(EM_DIAGRAM):   end;
34721      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
34722      put string;
MPRINT(EM_DIAGRAM):   put string;
34723      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
34724      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 14 records were written to the file _X.
      The minimum record length was 15.
      The maximum record length was 69.
NOTE: There were 14 observations read from the data set EMWS8.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34725      %let _FilterIntervalNum= 0;
34726      proc sort data=EMWS8.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter_INTERVAL;
34727      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34728      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34729      filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
MPRINT(EM_DIAGRAM):   filename _X "C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt";
34730      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
34731      length string $200;
MPRINT(EM_DIAGRAM):   length string $200;
34732      set EMWS8.Filter_INTERVAL end=eof;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_INTERVAL end=eof;
34733      file _X;
MPRINT(EM_DIAGRAM):   file _X;
34734      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N')
34735      and ROLE ne 'TARGET';
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING eq 'N') and ROLE ne 'TARGET';
34736      ;
MPRINT(EM_DIAGRAM):   ;
34737      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34738      if _N_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _N_ = 1 then do;
34739      string = ' (';
MPRINT(EM_DIAGRAM):   string = ' (';
34740      end;
MPRINT(EM_DIAGRAM):   end;
34741      else do;
MPRINT(EM_DIAGRAM):   else do;
34742      string = ' and (';
MPRINT(EM_DIAGRAM):   string = ' and (';
34743      end;
MPRINT(EM_DIAGRAM):   end;
34744      if INTERVALMIN ne . or INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . or INTERVALMAX ne . then do;
34745      if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
MPRINT(EM_DIAGRAM):   if KEEPMISSING = 'N' then string = trim(string)!!' '!!strip(NAME)!!' ne . and ';
34746      else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
MPRINT(EM_DIAGRAM):   else string = trim(string)!!' '!!strip(NAME)!!' eq . or ';
34747      if INTERVALMIN ne . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   if INTERVALMIN ne . and INTERVALMAX ne . then do;
34748      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.))!!'<='!!strip(NAME)!!') and ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
34749      end;
MPRINT(EM_DIAGRAM):   end;
34750      else if INTERVALMIN eq . and INTERVALMAX ne . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN eq . and INTERVALMAX ne . then do;
34751      string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(NAME)!!'<='!!strip(put(INTERVALMAX, best12.))!!')';
34752      end;
MPRINT(EM_DIAGRAM):   end;
34753      else if INTERVALMIN ne . and INTERVALMAX eq . then do;
MPRINT(EM_DIAGRAM):   else if INTERVALMIN ne . and INTERVALMAX eq . then do;
34754      string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' ('!!strip(put(INTERVALMIN, best12.)) || '<=' || NAME||')';
34755      end;
MPRINT(EM_DIAGRAM):   end;
34756      end;
MPRINT(EM_DIAGRAM):   end;
34757      else do;
MPRINT(EM_DIAGRAM):   else do;
34758      string = trim(string)!!' '!!strip(name)!!' ne .';
MPRINT(EM_DIAGRAM):   string = trim(string)!!' '!!strip(name)!!' ne .';
34759      end;
MPRINT(EM_DIAGRAM):   end;
34760      string = trim(string)!!')';
MPRINT(EM_DIAGRAM):   string = trim(string)!!')';
34761      put string;
MPRINT(EM_DIAGRAM):   put string;
34762      if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
MPRINT(EM_DIAGRAM):   if eof then call symput('_FilterIntervalNum', strip(put(_N_, best.)));
34763      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file _X is:
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\INTERVALPUBLISHFILTERCODE.txt,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=08 de Março de 2016 22H38m,
      Create Time=08 de Março de 2016 22H38m
 
NOTE: 14 records were written to the file _X.
      The minimum record length was 15.
      The maximum record length was 69.
NOTE: There were 14 observations read from the data set EMWS8.FILTER_INTERVAL.
      WHERE ((INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N')) and (ROLE not = 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
34764      data EMWS8.Filter_TRAIN / view=EMWS8.Filter_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS8.Filter_TRAIN / view=EMWS8.Filter_TRAIN;
34765      set EMWS8.Stat_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Stat_TRAIN;
34766
34767
34768      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
34769      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
34770      _FILTERFMT1= put(Dependents,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(Dependents,BEST.);
34771      length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
34772      drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
34773      %dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
34774
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
34775
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(Education,$10.0);
34776      length _FILTERFMT2  $200;
34777      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
34778      _FILTERFMT2= put(Education,$10.0);
34779
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
34780
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(Gender,$1.0);
34781      length _FILTERFMT3  $200;
34782      drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
34783      _FILTERFMT3= put(Gender,$1.0);
34784
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
34785
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(Marital_Status,$12.0);
34786      length _FILTERFMT4  $200;
34787      drop _FILTERFMT4 ;
34788      _FILTERFMT4= put(Marital_Status,$12.0);
34789      if
34790      _FILTERNORM1 not in ( '.')
34791       and
34792      _FILTERFMT2 not in ( ' ' , 'OldSchool')
34793       and
34794      _FILTERFMT3 not in ( ' ' , '?')
34795       and
34796      _FILTERFMT4 not in ( ' ' , 'BigConfusion')
34797      and
34798      ( CatPurchase ne .)
34799      and ( Clothes ne .)
34800      and ( Dt_Customer ne .)
34801      and ( Frq ne .)
34802      and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40))
34803      and ( Income ne .)
34804      and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40))
34805      and ( Mnt ne .)
34806      and ( NetPurchase ne .)
34807      and ( Rcn ne .)
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERFMT2 not in ( ' ' , 'OldSchool') and _FILTERFMT3 not in ( ' ' , '?') and _FILTERFMT4 not in ( ' ' , 'BigConfusion') and ( CatPurchase ne .) and ( Clothes ne .) and ( Dt_Customer ne .) and (
Frq ne .) and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40)) and ( Income ne .) and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40)) and ( Mnt ne .) and ( NetPurchase ne .) and ( Rcn ne .) and ( Recomendation ne .) and (
SmallAppliances ne .) and ( Toys ne . and (0<=Toys) and (Toys<=35)) and ( Year_Birth ne .) ;
34808      and ( Recomendation ne .)
MPRINT(EM_DIAGRAM):   run;
34809      and ( SmallAppliances ne .)
34810      and ( Toys ne . and (0<=Toys) and (Toys<=35))
34811      and ( Year_Birth ne .)
34812      ;
34813      run;
 
NOTE: DATA STEP view saved on file EMWS8.FILTER_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
34814      data WORK.FilterFILTERVAR;
MPRINT(EM_DIAGRAM):    data WORK.FilterFILTERVAR;
34815      set
34816      EMWS8.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N'))
34817      EMWS8.Filter_CLASS(where=(CALCMETHOD ne 'NONE'))
34818      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Filter_INTERVAL(where=(INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N')) EMWS8.Filter_CLASS(where=(CALCMETHOD ne 'NONE')) ;
34819      keep NAME;
MPRINT(EM_DIAGRAM):   keep NAME;
34820      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS8.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: There were 7 observations read from the data set EMWS8.FILTER_CLASS.
      WHERE CALCMETHOD not = 'NONE';
NOTE: The data set WORK.FILTERFILTERVAR has 21 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34821      proc sort data= WORK.FilterFILTERVAR nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data= WORK.FilterFILTERVAR nodupkey;
34822      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34823      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: 3 observations with duplicate key values were deleted.
NOTE: The data set WORK.FILTERFILTERVAR has 18 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34824      proc sort data=WORK.M1V_4M0O;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1V_4M0O;
34825      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34826      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M1V_4M0O.
NOTE: The data set WORK.M1V_4M0O has 19 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34827      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
34828      merge WORK.M1V_4M0O WORK.FilterFILTERVAR(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M1V_4M0O WORK.FilterFILTERVAR(in=_b);
34829      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
34830      if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
MPRINT(EM_DIAGRAM):   if (REPORT = 'Y' or ROLE in('FREQ','TARGET') or _b) then output;
34831      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M1V_4M0O.
NOTE: There were 18 observations read from the data set WORK.FILTERFILTERVAR.
NOTE: The data set WORK.FILTERDMDBC has 19 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
34832      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
34833      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
34834      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34835      %macro DMDBClass;
34836          DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
34837      %mend DMDBClass;
34838      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34839      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
34840      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
34841      %macro DMDBVar;
34842          CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt
34843         NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
34844      %mend DMDBVar;
34845      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34846      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
34847      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
34848      proc dmdb batch data=EMWS8.Stat_TRAIN
34849      dmdbcat=WORK.Filter_DMDB
34850      varout=WORK.FILTER_VARSTATS
34851      maxlevel = 513
34852      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Stat_TRAIN dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
34853      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
34854      var %DMDBVar;
MPRINT(DMDBVAR):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(EM_DIAGRAM):  ;
34855      target
34856      DepVar
34857      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
34858      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2500   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: The data set WORK.FILTER_VARSTATS has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
34859      quit;
34860      *--- end code ---*;
 
34861      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
34862      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
34863      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
34864      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
34865      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
34866      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
34867      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
34868      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
34869      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
34870      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
34871      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
34872      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
34873      retain DATAROLE "TRAIN" type "ORIGINAL";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "ORIGINAL";
34874      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
34875      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 14 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 14 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34876      proc append base=EMWS8.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Filter_STATS data=WORK.FILTER_VARSTATS;
34877      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS8.FILTER_STATS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 14 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set EMWS8.FILTER_STATS has 14 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "08 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H38m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                08 de Março de 2016
Time:                22H38m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2QQAG0Q "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2QQAG0Q new;
MPRINT(EM_DIAGRAM):   run;
34979      proc sort data=EMWS8.Filter_INTERVAL;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter_INTERVAL;
34980      by name;
MPRINT(EM_DIAGRAM):   by name;
34981      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
34982      proc print data=EMWS8.Filter_INTERVAL(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Filter_INTERVAL(obs=500) noobs label;
34983      where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
MPRINT(EM_DIAGRAM):   where (INTERVALMIN ne . or INTERVALMAX ne . or KEEPMISSING='N');
34984      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterintervallimits_title,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Filter Limits for Interval Variables";
34985      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
34986      run;
 
NOTE: There were 14 observations read from the data set EMWS8.FILTER_INTERVAL.
      WHERE (INTERVALMIN not = .) or (INTERVALMAX not = .) or (KEEPMISSING='N');
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
34987      title9;
MPRINT(EM_DIAGRAM):   title9;
34988      title10;
MPRINT(EM_DIAGRAM):   title10;
34989      proc sort data=EMWS8.Filter_CLASS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter_CLASS;
34990      by NAME VALUE;
MPRINT(EM_DIAGRAM):   by NAME VALUE;
34991      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.FILTER_CLASS.
NOTE: The data set EMWS8.FILTER_CLASS has 7 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
34992      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS8 nolist;
34993      modify Filter_CLASS;
MPRINT(EM_DIAGRAM):   modify Filter_CLASS;
34994      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,      NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,         NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel,        NOQUOTE))" LABEL =
34995         "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,        NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel,    NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" ROLE = "Role" VALUE = "Level" LABEL = "Label" COUNT = "Train Count" PERCENT = "Train Percent";
MPRINT(EM_DIAGRAM):   run;
34996      run;
 
NOTE: MODIFY was successful for EMWS8.FILTER_CLASS.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.40 seconds
      cpu time            0.03 seconds
 
 
34997      proc print data=EMWS8.Filter_CLASS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Filter_CLASS(obs=500) noobs label;
34998      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterexcludeclass_title,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Excluded Class Values";
34999      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
35000      run;
 
NOTE: There were 7 observations read from the data set EMWS8.FILTER_CLASS.
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35001      title9;
MPRINT(EM_DIAGRAM):   title9;
35002      title10;
MPRINT(EM_DIAGRAM):   title10;
35003      data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
MPRINT(EM_DIAGRAM):    data WORK.DATA_FILTERED / view=WORK.DATA_FILTERED;
35004      set EMWS8.Stat_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Stat_TRAIN;
35005
35006
35007      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
35008      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
35009      _FILTERFMT1= put(Dependents,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(Dependents,BEST.);
35010      length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
35011      drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
35012      %dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
35013
35014
35015      length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
35016      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
35017      _FILTERFMT2= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(Education,$10.0);
35018
35019
35020      length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
35021      drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
35022      _FILTERFMT3= put(Gender,$1.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(Gender,$1.0);
35023
35024
35025      length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
35026      drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
35027      _FILTERFMT4= put(Marital_Status,$12.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(Marital_Status,$12.0);
35028      if
35029      _FILTERNORM1 not in ( '.')
35030       and
35031      _FILTERFMT2 not in ( ' ' , 'OldSchool')
35032       and
35033      _FILTERFMT3 not in ( ' ' , '?')
35034       and
35035      _FILTERFMT4 not in ( ' ' , 'BigConfusion')
35036      and
35037      ( CatPurchase ne .)
35038      and ( Clothes ne .)
35039      and ( Dt_Customer ne .)
35040      and ( Frq ne .)
35041      and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40))
35042      and ( Income ne .)
35043      and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40))
35044      and ( Mnt ne .)
35045      and ( NetPurchase ne .)
35046      and ( Rcn ne .)
35047      and ( Recomendation ne .)
35048      and ( SmallAppliances ne .)
35049      and ( Toys ne . and (0<=Toys) and (Toys<=35))
35050      and ( Year_Birth ne .)
35051      then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERFMT2 not in ( ' ' , 'OldSchool') and _FILTERFMT3 not in ( ' ' , '?') and _FILTERFMT4 not in ( ' ' , 'BigConfusion') and ( CatPurchase ne .) and ( Clothes ne .) and ( Dt_Customer ne .) and (
Frq ne .) and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40)) and ( Income ne .) and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40)) and ( Mnt ne .) and ( NetPurchase ne .) and ( Rcn ne .) and ( Recomendation ne .) and (
SmallAppliances ne .) and ( Toys ne . and (0<=Toys) and (Toys<=35)) and ( Year_Birth ne .) then do;
35052      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
35053      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
35054      end;
MPRINT(EM_DIAGRAM):   end;
35055      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
35056      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
35057      if M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER = 0;
35058      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_FILTERED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
35059      data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
MPRINT(EM_DIAGRAM):   data WORK.DATA_EXCLUDED / view=WORK.DATA_EXCLUDED;
35060      set EMWS8.Stat_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Stat_TRAIN;
35061
35062
35063      length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
35064      drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
35065      _FILTERFMT1= put(Dependents,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(Dependents,BEST.);
35066      length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
35067      drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
35068      %dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
35069
35070
35071      length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
35072      drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
35073      _FILTERFMT2= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(Education,$10.0);
35074
35075
35076      length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
35077      drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
35078      _FILTERFMT3= put(Gender,$1.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(Gender,$1.0);
35079
35080
35081      length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
35082      drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
35083      _FILTERFMT4= put(Marital_Status,$12.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(Marital_Status,$12.0);
35084      if
35085      _FILTERNORM1 not in ( '.')
35086       and
35087      _FILTERFMT2 not in ( ' ' , 'OldSchool')
35088       and
35089      _FILTERFMT3 not in ( ' ' , '?')
35090       and
35091      _FILTERFMT4 not in ( ' ' , 'BigConfusion')
35092      and
35093      ( CatPurchase ne .)
35094      and ( Clothes ne .)
35095      and ( Dt_Customer ne .)
35096      and ( Frq ne .)
35097      and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40))
35098      and ( Income ne .)
35099      and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40))
35100      and ( Mnt ne .)
35101      and ( NetPurchase ne .)
35102      and ( Rcn ne .)
35103      and ( Recomendation ne .)
35104      and ( SmallAppliances ne .)
35105      and ( Toys ne . and (0<=Toys) and (Toys<=35))
35106      and ( Year_Birth ne .)
35107      then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERFMT2 not in ( ' ' , 'OldSchool') and _FILTERFMT3 not in ( ' ' , '?') and _FILTERFMT4 not in ( ' ' , 'BigConfusion') and ( CatPurchase ne .) and ( Clothes ne .) and ( Dt_Customer ne .) and (
Frq ne .) and ( HouseKeeping ne . and (0<=HouseKeeping) and (HouseKeeping<=40)) and ( Income ne .) and ( Kitchen ne . and (0<=Kitchen) and (Kitchen<=40)) and ( Mnt ne .) and ( NetPurchase ne .) and ( Rcn ne .) and ( Recomendation ne .) and (
SmallAppliances ne .) and ( Toys ne . and (0<=Toys) and (Toys<=35)) and ( Year_Birth ne .) then do;
35108      if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
35109      else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
35110      end;
MPRINT(EM_DIAGRAM):   end;
35111      else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
35112      label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
35113      if M_FILTER = 1;
MPRINT(EM_DIAGRAM):   if M_FILTER = 1;
35114      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.DATA_EXCLUDED.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * createcountreport;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS8.Stat_TRAIN;
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: View EMWS8.STAT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from WORK.DATA_FILTERED;
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
35115      data WORK.FilterCOUNT;
MPRINT(EM_DIAGRAM):    data WORK.FilterCOUNT;
35116      length DATAROLE $16;
MPRINT(EM_DIAGRAM):   length DATAROLE $16;
35117      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))" FILTERED = "%sysfunc(sasmsg(sashelp.dmine, rpt_filtered_vlabel, NOQUOTE))" EXCLUDED = "%sysfunc(sasmsg(sashelp.dmine, rpt_excluded_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" FILTERED = "Filtered" EXCLUDED = "Excluded";
35118      DATAROLE = 'TRAIN';
MPRINT(EM_DIAGRAM):   DATAROLE = 'TRAIN';
35119      DATA = 2500;
MPRINT(EM_DIAGRAM):   DATA = 2500;
35120      FILTERED = 2332;
MPRINT(EM_DIAGRAM):   FILTERED = 2332;
35121      EXCLUDED = 168;
MPRINT(EM_DIAGRAM):   EXCLUDED = 168;
35122      output;
MPRINT(EM_DIAGRAM):   output;
35123      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.FILTERCOUNT has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
35124      proc print data=WORK.FilterCOUNT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.FilterCOUNT noobs label;
35125      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
35126      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
35127      run;
 
NOTE: There were 1 observations read from the data set WORK.FILTERCOUNT.
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35128      title9;
MPRINT(EM_DIAGRAM):   title9;
35129      title10;
MPRINT(EM_DIAGRAM):   title10;
35130      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35131      * createstattable;
MPRINT(EM_DIAGRAM):   * createstattable;
35132      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35133      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
35134      * Filter: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBClass Macro ;
35135      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
35136      %macro DMDBClass;
35137          DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
35138      %mend DMDBClass;
35139      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
35140      * Filter: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Filter: DMDBVar Macro ;
35141      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
35142      %macro DMDBVar;
35143          CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt
35144         NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
35145      %mend DMDBVar;
35146      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35147      * Filter: Create DMDB;
MPRINT(EM_DIAGRAM):   * Filter: Create DMDB;
35148      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35149      proc dmdb batch data=WORK.DATA_FILTERED
35150      dmdbcat=WORK.Filter_DMDB
35151      varout=WORK.FILTER_VARSTATS
35152      maxlevel = 513
35153      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.DATA_FILTERED dmdbcat=WORK.Filter_DMDB varout=WORK.FILTER_VARSTATS maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
35154      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Dependents(ASC) Education(ASC) Gender(ASC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
35155      var %DMDBVar;
MPRINT(DMDBVAR):   CatPurchase Clothes Dt_Customer Frq HouseKeeping Income Kitchen Mnt NetPurchase Rcn Recomendation SmallAppliances Toys Year_Birth
MPRINT(EM_DIAGRAM):  ;
35156      target
35157      DepVar
35158      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
35159      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2332   Memory used = 511K.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_DATA.
NOTE: There were 2500 observations read from the data set EMWS8.FIMPORT_TRAIN.
NOTE: View WORK.DATA_FILTERED.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2500 observations read from the data set EMWS8.STAT_TRAIN.
NOTE: There were 2332 observations read from the data set WORK.DATA_FILTERED.
NOTE: The data set WORK.FILTER_VARSTATS has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
35160      quit;
35161      *--- end code ---*;
 
35162      data WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):    data WORK.FILTER_VARSTATS;
35163      length DATAROLE $10 TYPE $8 NAME $32;
MPRINT(EM_DIAGRAM):   length DATAROLE $10 TYPE $8 NAME $32;
35164      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
35165      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
35166      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
35167      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
35168      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
35169      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
35170      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
35171      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
35172      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
35173      label NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NUMCAT = "Number of Levels";
35174      retain DATAROLE "TRAIN" type "FILTERED";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" type "FILTERED";
35175      set WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   set WORK.FILTER_VARSTATS;
35176      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable NUMCAT is uninitialized.
NOTE: There were 14 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: The data set WORK.FILTER_VARSTATS has 14 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
35177      proc append base=EMWS8.Filter_STATS data=WORK.FILTER_VARSTATS;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Filter_STATS data=WORK.FILTER_VARSTATS;
35178      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.FILTER_VARSTATS to EMWS8.FILTER_STATS.
NOTE: There were 14 observations read from the data set WORK.FILTER_VARSTATS.
NOTE: 14 observations added.
NOTE: The data set EMWS8.FILTER_STATS has 28 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
35179      proc sort data=EMWS8.Filter_STATS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Filter_STATS;
35180      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
35181      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS8.FILTER_STATS.
NOTE: The data set EMWS8.FILTER_STATS has 28 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
35182      proc transpose data=EMWS8.Filter_STATS out=EMWS8.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Filter_STATS out=EMWS8.Filter_STATS(rename=(NAME=VARIABLE _LABEL_=STATISTIC));
35183      by DATAROLE NAME;
MPRINT(EM_DIAGRAM):   by DATAROLE NAME;
35184      id TYPE;
MPRINT(EM_DIAGRAM):   id TYPE;
35185      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set EMWS8.FILTER_STATS.
NOTE: The data set EMWS8.FILTER_STATS has 112 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
35186      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS8 nolist;
35187      modify Filter_STATS;
MPRINT(EM_DIAGRAM):   modify Filter_STATS;
35188      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" STATISTIC = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel, NOQUOTE))" FILTERED="Filtered" ORIGINAL = "%sysfunc(sasmsg(sashelp.dmine, rpt_original_vlabel,
35188    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable" STATISTIC = "Statistics" FILTERED= "Filtered" ORIGINAL = "Original";
MPRINT(EM_DIAGRAM):   run;
35189      run;
 
NOTE: MODIFY was successful for EMWS8.FILTER_STATS.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.39 seconds
      cpu time            0.01 seconds
 
 
35190      proc sort data=EMWS8.Filter_STATS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_STATS;
35191      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
35192      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 112 observations read from the data set EMWS8.FILTER_STATS.
NOTE: The data set EMWS8.FILTER_STATS has 112 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
35193      %let _cn = %sysfunc(getoption(CENTER));
35194      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
35195      proc print data=EMWS8.Filter_STATS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Filter_STATS(obs=500) noobs label;
35196      var STATISTIC ORIGINAL
35197      FILTERED
35198      ;
MPRINT(EM_DIAGRAM):   var STATISTIC ORIGINAL FILTERED ;
35199      by DATAROLE VARIABLE;
MPRINT(EM_DIAGRAM):   by DATAROLE VARIABLE;
35200      where ORIGINAL ne .;
MPRINT(EM_DIAGRAM):   where ORIGINAL ne .;
35201      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_filterstat_title,    NOQUOTE, FILTERED))";
MPRINT(EM_DIAGRAM):   title9 "Statistics for Original and FILTERED Data";
35202      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
35203      run;
 
NOTE: There were 112 observations read from the data set EMWS8.FILTER_STATS.
      WHERE ORIGINAL not = .;
NOTE: The PROCEDURE PRINT printed page 15.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
35204      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
35205      title9;
MPRINT(EM_DIAGRAM):   title9;
35206      title10;
MPRINT(EM_DIAGRAM):   title10;
35207      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35208      * createhistogramtable;
MPRINT(EM_DIAGRAM):   * createhistogramtable;
35209      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35210      data WORK.FilterDMDBC;
MPRINT(EM_DIAGRAM):   data WORK.FilterDMDBC;
35211      set WORK.FilterDMDBC(where=(report='Y'));
MPRINT(EM_DIAGRAM):   set WORK.FilterDMDBC(where=(report='Y'));
35212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE report='Y';
NOTE: The data set WORK.FILTERDMDBC has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
35213      filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
MPRINT(EM_DIAGRAM):    filename vdist catalog 'SASHELP.EMUTIL.EM_VARDIST.SOURCE';
35214      %inc vdist;
NOTE: %INCLUDE (level 1) file VDIST is file SASHELP.EMUTIL.EM_VARDIST.SOURCE.
35215     +%macro var_profile(DATA=, OUTPUT=_INTERVAL, VARS=, METADATA=, COMPUTESTAT=Y, STAT=_STAT, PCTLSTAT=_PCTLSTAT, FREQ=,
35216     +                   BINDATA=, BIN=Y, NUMBARS=8, MINMAX=N);
35217     +   %let _em_nodeid = EM;
35218     +   %if %symexist(EM_NODEID) %then %do;
35219     +       %let _em_nodeid = &em_nodeid;
35220     +   %end;
35222     +   %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingsummarystats_note, NOQUOTE, &_em_nodeid));
35223     +   %put &EM_CODEBAR;
35224     +   %put * &msgString;
35225     +   %put &EM_CODEBAR;
35227     +   /* Process metadata data set */
35228     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
35229     +   %if %sysfunc(exist(&metadata))>0 and (&metadata ne ) %then %do;
35230     +       %let FREQ=;
35231     +       %let _nobs=0;
35232     +       data _null;
35233     +          set &metadata(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
35234     +          if eof then call symput('_nobs', put(_N_, best.));
35235     +       run;
35236     +       %if "&_nobs" ne "0" %then %do;
35237     +           data _null_;
35238     +              file _mac;
35239     +              length _VARS $80; retain _vars;
35240     +              if _n_ =1 then put '%macro _vars;';
35241     +              set &metadata end=eof;
35242     +              where LEVEL = 'INTERVAL' or ROLE='FREQ';
35243     +              if ROLE='FREQ' then call symput('FREQ', trim(NAME));
35244     +              else do;
35245     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
35246     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
35247     +                 else do;
35248     +                    put _Vars;
35249     +                    _vars = strip(NAME);
35250     +                 end;
35251     +              end;
35253     +              if eof then do;
35254     +                 put _Vars;
35255     +                 put '%mend _vars;';
35256     +              end;
35257     +           run;
35258     +       %end;
35259     +       %else %do;
35260     +           data _null_;
35261     +              file _mac;
35262     +              put '%macro _vars;';
35263     +              put '%mend _vars;';
35264     +           run;
35265     +       %end;
35266     +   %end;
35267     +   %else %do;
35268     +       data _null_;
35269     +          file _mac;
35270     +          put '%macro _vars;';
35271     +          put '%mend _vars;';
35272     +       run;
35273     +   %end;
35274     +   %inc _mac;
35275     +   filename _mac;
35277     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
35279     +   /* Check if FREQ variable is in the data set */
35280     +   %if &freq ne %then %do;
35281     +       data _null_;
35282     +          dsid = open("&data");
35283     +          if dsid>0 then do;
35284     +               if varnum(dsid, "&FREQ")<1 then
35285     +                  call symput('FREQ', '');
35286     +               dsid = close(dsid);
35287     +          end;
35288     +       run;
35289     +   %end;
35291     +   %if &bindata eq %then %do;
35292     +       %let bindata = _BOUNDS;
35293     +       proc datasets lib=work nolist mt=(DATA VIEW);
35294     +          delete _BOUNDS;
35295     +       run;
35296     +   %end;
35298     +   %global _EM_VARDISTOBS_MAX;
35299     +   %let _EM_VARDISTOBS_MAX = 1000000;
35301     +   %if %symexist(EM_VARDISTOBS_MAX) %then %do;
35302     +       %let _EM_VARDISTOBS_MAX= %eval(&EM_VARDISTOBS_MAX);
35303     +   %end;
35305     +   %if &computeStat = Y %then %do;
35306     +       proc dmdb data=&DATA(obs=&_EM_VARDISTOBS_MAX) varout=&STAT(rename=(NAME=VARIABLE));
35307     +          var %_Vars &vars;
35308     +          %if &FREQ ne %then %do;
35309     +              freq &FREQ;
35310     +          %end;
35311     +       run;
35312     +       proc sort data=&stat;
35313     +          by VARIABLE;
35314     +       run;
35316     +       %if ^%sysfunc(indexc(&STAT, .)) %then %do;
35317     +           %let _library = WORK;
35318     +           %let _member  = &STAT;
35319     +      %end;
35320     +      %else %do;
35321     +          %let _library = %scan(&STAT, 1, .);
35322     +          %let _member  = %scan(&STAT, 2, .);
35323     +      %end;
35325     +      proc datasets library=&_library nolist;
35326     +         modify &_member;
35327     +         label NMISS    = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
35328     +         label MIN      = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
35329     +         label MAX      = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
35330     +         label MEAN     = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
35331     +         label STD      = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
35332     +         label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
35333     +         label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
35334     +      run;
35335     +      quit;
35336     +   %end;
35338     +   %if &BIN ne N %then %do;
35339     +       %if %sysfunc(exist(&bindata))<1 %then %do;
35340     +           %let msgString = %sysfunc(sasmsg(sashelp.dmine, computingmidpoints_note, NOQUOTE, &_em_nodeid));
35341     +           %put &EM_CODEBAR;
35342     +           %put * &msgString;
35343     +           %put &EM_CODEBAR;
35344     +           filename fref catalog 'work.em.profileformat.source';
35346     +            %let _maxlevel = %eval(&numbars + 1);
35347     +            proc dmdb data=&data(obs=&_EM_VARDISTOBS_MAX) classout=_CLASSOUT maxlevel=&_maxlevel;
35348     +               class %_vars &vars;
35349     +            run;
35350     +            proc freq data=_CLASSOUT ORDER=DATA noprint;
35351     +               table NAME / OUT = _COUNT(where=(COUNT<&_maxlevel));
35352     +            run;
35353     +           proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
35354     +              by NAME;
35355     +           run;
35356     +           proc sort data=_CLASSOUT;
35357     +              by NAME;
35358     +          run;
35359     +          proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
35360     +             var NRAW;
35361     +             by NAME;
35362     +          run;
35363     +          proc delete data=WORK._CLASSOUT;
35364     +          run;
35365     +          data _null_;
35366     +             dsid = open('_DISCRETEMID');
35367     +             if dsid then do;
35368     +                call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
35369     +                dsid = close(dsid);
35370     +             end;
35371     +          run;
35372     +          data _DISCRETEMID;
35373     +             merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
35374     +             keep VARIABLE _MIDPOINT1--_MIDPOINT&numclassbars _NUMCLASSBINS_;
35375     +             by VARIABLE;
35376     +             if _b then output;
35377     +          run;
35379     +          data _EMVARDIST / view=_EMVARDIST;
35380     +             set &DATA(keep=%_VARS &vars &FREQ  obs=&_EM_VARDISTOBS_MAX);
35381     +          run;
35382     +          proc stdize data=_EMVARDIST outstat=&pctlstat  out=_null_ pctlpts=(0 5 25 50 75 95 100);
35383     +             var %_vars &vars;
35384     +             %if &FREQ ne %then %do;
35385     +                 freq &FREQ / notrunc;
35386     +             %end;
35387     +          run;
35388     +          proc datasets lib=WORK NOLIST;
35389     +             delete _EMVARDIST / mt=view;
35390     +          run;
35391     +          quit;
35392     +          %if %upcase(&minmax) = Y %then %do;
35393     +              proc transpose data=&pctlstat out=_MINMAXDATA(rename=(_NAME_=VARIABLE COL1=MIN COL2=MAX));
35394     +                 where  _type_ in('P0', 'P100');
35395     +              run;
35396     +              data _MINMAXDATA(keep=Variable Value Pos);
35397     +                 set _MINMAXDATA;
35398     +                 label VARIABLE  = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
35399     +                 Value = min; Pos=1; output;
35400     +                 Value = max; Pos=3; output;
35401     +              run;
35402     +          %end;
35403     +          proc transpose data=&pctlstat out=&bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5
35404     +                                                             COL3=P95 COL4=MAX));
35405     +             where  _type_ in('P0', 'P5', 'P95', 'P100');
35406     +          run;
35407     +          proc sort data=&bindata;
35408     +             by VARIABLE;
35409     +          run;
35411     +          %let new_numbars=%eval(&NUMBARS+12);
35412     +          data &bindata;
35413     +             set &bindata;
35414     +             length Format $12;
35415     +             array _midpoint{&new_NUMBARS};
35416     +             array _bounds{&new_NUMBARS};
35417     +             if (max - min)>1e-10 then do;
35418     +                step = abs(P95-P5)/&NUMBARS;
35419     +                lstep = abs(p5- min)/5;
35420     +                ustep = abs(max-p95)/5;
35421     +                /* No outlying values */;
35422     +                if lstep<=step and ustep<=step then do;
35423     +                   step = abs(MIN-MAX)/&NUMBARS;
35424     +                   START=MIN;
35425     +                   do i=1 to &numbars;
35426     +                      _bounds(i)   = MIN + i*step;      if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
35427     +                      _midpoint(i) = MIN+ (i-0.5)*step; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
35428     +                   end;
35429     +                   %let new_numbars = &numbars;
35430     +                end;
35431     +                else do;
35432     +                   if lstep<=step then do;
35433     +                      step = abs(MIN-P95)/&NUMBARS;
35434     +                      /* Start Histogram at MIN value */
35435     +                      do i=1 to &NUMBARS;
35436     +                         _bounds(i)   = MIN + i*step;       if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
35437     +                         _midpoint(i) = MIN+ (i-0.5)*step;  if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
35438     +                      end;
35439     +                      /* Make BINS with upper outliers width */
35440     +                      do i=1 to 5;
35441     +                         numbars = &numbars + i;
35442     +                         _bounds(numbars)   = P95 + i*ustep;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
35443     +                         _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;  if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
35444     +                      end;
35445     +                       %let new_numbars = %eval(&numbars+5);
35446     +                   end;
35447     +                   else do;
35448     +                      /* Make BINS with lower outliers width */
35449     +                      do i=1 to 5;
35450     +                         _bounds(i)   = P5 - (5-i)*lstep; if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
35451     +                         _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2; if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
35452     +                      end;
35453     +                      if ustep<= step then do;
35454     +                         step = abs(P5-MAX)/&NUMBARS;
35455     +                         /* End Histogram at MAX value */
35456     +                         do i=1 to &NUMBARS;
35457     +                            numbars = i+5;
35458     +                            _bounds(numbars)   = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
35459     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
35460     +                         end;
35461     +                          %let new_numbars = %eval(&numbars+5);
35462     +                      end;
35463     +                      else do;
35464     +                         do i=1 to &NUMBARS;
35465     +                            numbars = i+5;
35466     +                            _bounds(numbars)  = P5 + i*step; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
35467     +                            _midpoint(numbars) = P5 + (i-0.5)*step; if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
35468     +                         end;
35469     +                         /* Make BINS with upper outliers width */
35470     +                         do i=1 to 5;
35471     +                            numbars = &numbars+5+i;
35472     +                            _bounds(numbars)   = P95 + i*ustep; if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
35473     +                            _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
35474     +                         end;
35475     +                         %let new_numbars = %eval(&numbars+10);
35476     +                      end;
35477     +                   end;
35478     +                end;
35479     +             end;
35480     +             else do;
35481     +                _bounds(1)   = MIN;
35482     +                _midpoint(1) = MIN;
35483     +             end;
35484     +             Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
35485     +          run;
35486     +          %if %sysfunc(exist(_DISCRETEMID)) %then %do;
35487     +              data &bindata;
35488     +                 merge &bindata _DISCRETEMID(in = _b);
35489     +                 by VARIABLE;
35490     +                 if _b then _DISCRETE=1;
35491     +                 else _DISCRETE=0;
35492     +              run;
35493     +          %end;
35495     +          data _null_;
35496     +             file fref;
35497     +             set &bindata end=eof;
35498     +             array _bounds{&NEW_NUMBARS};
35499     +             array _midpoint{&NEW_NUMBARS};
35500     +             if _n_=1 then
35501     +                put 'proc format;';
35503     +             put 'value ' Format;
35504     +             if _DISCRETE then do;
35505     +                 do i=1 to &numbars;
35506     +                    _MID = _midpoint{i};
35507     +                    if _MID ne . and i<= _NUMCLASSBINS_ then
35508     +                       put _MID '="' _MID '"';
35509     +                 end;
35510     +                 put ';';
35511     +             end;
35512     +             else do;
35513     +                if min eq max then do;
35514     +                   put 'low - high ="' MIN '";';
35515     +                end;
35516     +                else do;
35517     +                   _LB  = MIN;
35518     +                   _MID = _midpoint{1};
35519     +                   _UB  = _bounds{1};
35520     +                   put 'LOW -' _UB '="' _MID '"';
35522     +                   do i=1 to &NEW_NUMBARS-1;
35523     +                      _LB  = _bounds{i};
35524     +                      j=i+1;
35525     +                      _MID = _midpoint{j};
35526     +                      _UB  = _bounds{j};
35527     +                      if (_UB ne .) and (_LB ne _UB) then do;
35528     +                         if _UB>=MAX then
35529     +                            put _LB '-HIGH="' _MID '"';
35530     +                         else
35531     +                            put _LB '-' _UB '="' _MID '"';
35532     +                      end;
35533     +                   end;
35534     +                end;
35535     +             end;
35536     +             put ';';
35537     +             if eof then put 'run;';
35538     +          run;
35540     +          %inc fref;
35542     +          filename fref;
35543     +      %end;
35545     +      data _binneddata / view=_binneddata;
35546     +         set &DATA(obs=&_EM_VARDISTOBS_MAX);
35548     +         %let dsid    =%sysfunc(open(&bindata));
35549     +         %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
35550     +         %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
35551     +         %let obs = %sysfunc(fetch(&dsid));
35553     +         %if (&obs=0) %then %do;
35554     +             format
35555     +         %end;
35557     +         %let _count = 0;
35558     +         %do %while(&obs=0);
35559     +             %let _count = %eval(&_count +1);
35560     +             %let _name = %sysfunc(getvarc(&dsid, &namenum));
35561     +             %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
35562     +             %do;
35563     +                &_name &_fmtname..
35564     +             %end;
35565     +             %let obs = %sysfunc(fetch(&dsid));
35566     +         %end;
35567     +         %let dsid=%sysfunc(close(&dsid));
35568     +         ;
35569     +      run;
35570     +   %end;
35572     +    %if &bin ne N %then %do;
35573     +        proc dmdb data=_binneddata(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
35574     +    %end;
35575     +    %else %do;
35576     +        proc dmdb data = &data(obs=&_EM_VARDISTOBS_MAX) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
35577     +    %end;
35578     +      class %_vars &vars;
35579     +      %if &FREQ ne %then %do;
35580     +          freq &FREQ;
35581     +      %end;
35582     +   run;
35583     +   data &output;
35584     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
35585     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
35586     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
35587     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
35588     +      set _temptab;
35589     +      format VALUE 12.3 count;
35590     +      value = inputn(level, 'best12.');
35591     +      keep VARIABLE COUNT PERCENT VALUE;
35592     +   run;
35593     +   %if &BIN ne N and %sysfunc(exist(_MINMAXDATA)) and &minmax=Y %then %do;
35594     +       data &output;
35595     +          set &output(in=_a) _MINMAXDATA;
35596     +          if _a then Pos=2;
35597     +       run;
35598     +       proc sort data=&output out=&output(drop=pos);
35599     +          by VARIABLE POS VALUE;
35600     +          where VALUE ne .;
35601     +       run;
35602     +   %end;
35603     +   proc datasets lib=work nolist mt=(DATA VIEW);
35604     +      delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
35605     +   run;
35606     +   quit;
35608     +   %doend:
35609     +%mend var_profile;
NOTE: %INCLUDE (level 1) ending.
35610      filename vdist;
MPRINT(EM_DIAGRAM):   filename vdist;
NOTE: Fileref VDIST has been deassigned.
35611      %let em_nodeid = Filter;
35612      %var_profile(DATA=EMWS8.Stat_TRAIN, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, FREQ=, BIN=Y, NUMBARS= 16);
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
35613     +%macro _vars;
35614     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
35615      %var_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._HISTDATA, METADATA=WORK.FilterDMDBC, COMPUTESTAT=N, STAT=_STAT, BIN=Y, BINDATA=_bindata, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Filter: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
35616     +%macro _vars;
35617     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
35618      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35619      * Filter: Creating Bar Chart Table;
MPRINT(EM_DIAGRAM):   * Filter: Creating Bar Chart Table;
35620      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
35621      filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
MPRINT(EM_DIAGRAM):   filename cdist catalog 'SASHELP.EMUTIL.EM_CLASSDIST.SOURCE';
35622      %inc cdist;
NOTE: %INCLUDE (level 1) file CDIST is file SASHELP.EMUTIL.EM_CLASSDIST.SOURCE.
35623     +%macro class_profile(DATA=, OUTPUT=_CLASS, VARS=, METADATA=, WHERE=, STAT=_STAT, FREQ=);
35624     +   %if %INDEX(&EM_DEBUG, LOG SOURCE) %then %do;
35625     +       %put *** Statistics for Class variables ***;
35626     +       %put >>> DATA= &data  OUTPUT= &output;
35627     +       %put >>> VAR= &vars;
35628     +       %put >>> WHERE=  &where;
35629     +       %put >>> FREQ=  &freq;
35630     +   %end;
35632     +      /* Process metadata data set */
35633     +   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
35634     +   %if %sysfunc(exist(&metadata))>0 and ("&metadata" ne "") %then %do;
35635     +       %let FREQ=;
35636     +       %let _nobs=0;
35637     +       data _null;
35638     +          set &metadata(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
35639     +          if eof then call symput('_nobs', put(_N_, best.));
35640     +       run;
35641     +       %if "&_nobs" ne "0" %then %do;
35642     +           data _null_;
35643     +              file _mac;
35644     +              length _VARS $80; retain _vars;
35645     +              if _n_ =1 then put '%macro _vars;';
35646     +              set &metadata end=eof;
35647     +              where LEVEL ne 'INTERVAL' or ROLE='FREQ';
35648     +              if ROLE='FREQ' then call symput('FREQ', NAME);
35649     +              else do;
35650     +                 if length(strip(_vars)) + length(strip(NAME)) + 1 <80  then
35651     +                    _vars = strip(_vars)!! ' ' !!strip(NAME);
35652     +                 else do;
35653     +                    put _Vars;
35654     +                    _vars = strip(NAME);
35655     +                 end;
35656     +              end;
35657     +              if eof then do;
35658     +                 put _Vars;
35659     +                 put '%mend _vars;';
35660     +              end;
35661     +           run;
35662     +       %end;
35663     +       %else %do;
35664     +           data _null_;
35665     +              file _mac;
35666     +              put '%macro _vars;';
35667     +              put '%mend _vars;';
35668     +           run;
35669     +       %end;
35670     +   %end;
35671     +   %else %do;
35672     +       data _null_;
35673     +          file _mac;
35674     +          put '%macro _vars;';
35675     +          put '%mend _vars;';
35676     +       run;
35677     +   %end;
35678     +   %inc _mac;
35679     +   filename _mac;
35681     +   %if "&VARS" eq "" and %_vars eq %then %goto doend;
35683     +   /* Check if FREQ variable is in the data set */
35684     +   %if &freq ne %then %do;
35685     +       data _null_;
35686     +          dsid = open("&data");
35687     +          if dsid>0 then do;
35688     +               if varnum(dsid, "&FREQ")<1 then
35689     +                  call symput('FREQ', '');
35690     +               dsid = close(dsid);
35691     +          end;
35692     +       run;
35693     +   %end;
35695     +   proc dmdb data=&DATA  nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
35696     +      class %_Vars &vars;
35697     +      %if &FREQ ne %then %do;
35698     +          freq &FREQ;
35699     +      %end;
35700     +      %if %bquote(&WHERE) ne %then %do;
35701     +            where &WHERE;
35702     +      %end;
35703     +   run;
35704     +   proc sort data=_tempclass;
35705     +      by VARIABLE;
35706     +   run;
35707     +   data &output;
35708     +      label VARIABLE     = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
35709     +      label VALUE        = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
35710     +      label COUNT        = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,    NOQUOTE))";
35711     +      label PERCENT      = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
35712     +      set _tempclass;
35713     +      format COUNT;
35714     +      keep VARIABLE COUNT PERCENT VALUE;
35715     +   run;
35716     +   proc means data=&output noprint;
35717     +      class VARIABLE;
35718     +      var COUNT;
35719     +      output out=&STAT N=NUMCAT;
35720     +   run;
35721     +   data &STAT;
35722     +      set &STAT;
35723     +      where _TYPE_=1;
35724     +      KEEP VARIABLE NUMCAT;
35725     +      label NUMCAT   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))";
35726     +      format NUMCAT 8.;
35727     +   run;
35728     +   proc datasets lib=work nolist;
35729     +      delete _tempclass;
35730     +   run;
35731     +   quit;
35733     +   %doend:
35734     +%mend class_profile;
NOTE: %INCLUDE (level 1) ending.
35736      filename cdist;
MPRINT(EM_DIAGRAM):   filename cdist;
NOTE: Fileref CDIST has been deassigned.
35737      %let em_nodeid = Filter;
35738      %class_profile(DATA=EMWS8.Stat_TRAIN, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
35739     +%macro _vars;
35740     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
35741      %class_profile(DATA=WORK.DATA_FILTERED, OUTPUT=WORK._BARDATA, METADATA=WORK.FilterDMDBC, STAT=_STAT);
MPRINT(EM_DIAGRAM):
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null;
MPRINT(CLASS_PROFILE):   set WORK.FilterDMDBC(where=(LEVEL ne 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(CLASS_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK.FILTERDMDBC.
      WHERE (LEVEL not = 'INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 0 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Terça-feira, 08 de Março de 2016 22H38m,
      Last Modified=Terça-feira, 08 de Março de 2016 22H38m,
      Filename=C:\Users\VM-SAS\AppData\Local\Temp\SAS Temporary Files\_TD4976_VM-SAS-PC_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_7PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
35742     +%macro _vars;
35743     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(EM_DIAGRAM):  ;
 
35744      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
35745      * Filter: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Filter: Computing metadata for TRAIN data;
35746      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Filter_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Filter_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Filter_TRAIN out=WORK.M2KJ_350 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KJ_350;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KJ_350(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KJ_350;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KJ_350;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1N3JG_C NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1HRJCXK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   set WORK.M1N3JG_C;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Stat_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Stat_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Filter_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Filter";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Filter: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="M_FILTER" then do;
MPRINT(EM_DIAGRAM):   role ="REJECTED";
MPRINT(EM_DIAGRAM):   level = "BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS8.FILTER_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "08 de Março de 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "22H38m" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                08 de Março de 2016
Time:                22H38m
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O05U_1X1 "E:\DataMining_EMProjects\Tugas\Workspaces\EMWS8\Filter\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O05U_1X1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
