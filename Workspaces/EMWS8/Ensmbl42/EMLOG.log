*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.39 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1L7I6A7
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1L7I6A7 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[290607] MAX=1 EXCEEDMAXVALUE='' )[290611] )[290605]
VALIDCHOICES=(CHOICE1='Y' )[290609] )[290893] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[290615]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[290619] )[290617] )[290613] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[290623]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[290629] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[290627] )[290625] )[290621] )[290603]
2356762    proc freq data=EMWS8.Ensmbl42_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl42_VariableSet noprint;
2356763    table ROLE*LEVEL/out=WORK.Ensmbl42META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl42META;
2356764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL42_VARIABLESET.
NOTE: The data set WORK.ENSMBL42META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2356765    proc print data=WORK.Ensmbl42META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42META label noobs;
2356766    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
2356767    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
2356767  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
2356767  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
2356768    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2356769    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
2356770    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL42META.
NOTE: The PROCEDURE PRINT printed page 2014.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356771    title10;
MPRINT(EM_DIAGRAM):   title10;
2356772    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
2356801    data WORK.Ensmbl42_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
2356802    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
2356803    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
2356803  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
2356803  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
2356804       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
2356804  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
2356804  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
2356805    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
2356806    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
2356807    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
2356808    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
2356809    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
2356810    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
2356811    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
2356812    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
2356813    end;
MPRINT(EM_DIAGRAM):   end;
2356814    output;
MPRINT(EM_DIAGRAM):   output;
2356815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL42_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356816    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2356817    proc print data=WORK.Ensmbl42_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42_EVENT noobs label;
2356818    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
2356819    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2356820    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
2356821    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL42_EVENT.
NOTE: The PROCEDURE PRINT printed page 2015.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356822    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
2356823    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
2356824    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
2356825    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
2356826    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
2356826  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
2356826  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
2356827    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2356828    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
2356829    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2016.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356830    title10;
MPRINT(EM_DIAGRAM):   title10;
2356831    %let groupid =;
2356832    %let endGroupid =;
2356833    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2356834    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
2356835    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2356835  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2356836    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2356837    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2356838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356839    %let groupid =;
2356840    %let endGroupid =;
2356841    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2356842    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
2356843    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2356843  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2356844    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2356845    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2356846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356847    %let groupid =;
2356848    %let endGroupid =;
2356849    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2356850    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
2356851    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
2356851  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
2356852    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
2356853    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
2356854    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356855    data WORK.Ensmbl42;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42;
2356856    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
2356857    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
2356857  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
2356858    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
2356859    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2356860    output;
MPRINT(EM_DIAGRAM):   output;
2356861    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
2356862    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2356863    output;
MPRINT(EM_DIAGRAM):   output;
2356864    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
2356865    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
2356866    output;
MPRINT(EM_DIAGRAM):   output;
2356867    ;
MPRINT(EM_DIAGRAM):   ;
2356868    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL42 has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356869    title;
MPRINT(EM_DIAGRAM):   title;
2356870    proc print data=WORK.Ensmbl42 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42 label noobs;
2356871    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
2356872    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
2356873    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL42.
NOTE: The PROCEDURE PRINT printed page 2017.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2356874    title9;
MPRINT(EM_DIAGRAM):   title9;
2356875    title10;
MPRINT(EM_DIAGRAM):   title10;
2356876    data WORK.M3SIBMST;
MPRINT(EM_DIAGRAM):    data WORK.M3SIBMST;
2356877    set WORK.M3SIBMST;
MPRINT(EM_DIAGRAM):   set WORK.M3SIBMST;
2356878    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
2356879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3SIBMST.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3SIBMST has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2356880    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
2356881    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
2356882    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2356883    %macro DMDBClass;
2356884        DepVar(DESC)
2356885    %mend DMDBClass;
2356886    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2356887    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
2356888    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
2356889    %macro DMDBVar;
2356890
2356891    %mend DMDBVar;
2356892    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2356893    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
2356894    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2356895    proc dmdb batch data=EMWS8.AutoNeural9_TRAIN
2356896    dmdbcat=WORK.EM_DMDB
2356897    maxlevel = 513
2356898    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural9_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
2356899    class %DMDBClass;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
2356900    target
2356901    DepVar
2356902    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
2356903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
2356904    quit;
2356905    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0XF9Y1T
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0XF9Y1T new;
MPRINT(EM_DIAGRAM):   run;
2357007    filename emflow
2357007  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357008    *------------------------------------------------------------*;
2357009    * Ensmbl42: Scoring AUTONEURAL9_TRAIN data;
2357010    *------------------------------------------------------------*;
2357011    data EMWS8.Ensmbl42_TRAIN
2357012    / view=EMWS8.Ensmbl42_TRAIN
2357013    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_TRAIN / view=EMWS8.Ensmbl42_TRAIN ;
2357014    set EMWS8.AutoNeural9_TRAIN
2357015    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2357016    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas.
2357017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357018   +* Ensmbl42: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Combine model for DepVar;
2357019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357020   +* Ensmbl42: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 1 of 3;
2357021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357023   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2357024   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2357025   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2357026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357028   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2357029   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2357030   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2357031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357033   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2357034   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2357035   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2357036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357038   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2357039   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2357040   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2357041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357042   +
2357043   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2357044   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2357044  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2357045   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2357046   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2357047   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2357048   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2357049   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2357050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357051   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2357052   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2357053   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2357054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357056   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2357057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357058   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2357059   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2357060   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2357061   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357062   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2357063   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2357064   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2357065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357067   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2357068   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2357069   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2357070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357072   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2357073   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2357074   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2357075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357076   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2357077   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2357078   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2357079   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2357080   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2357081   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2357082   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2357083   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2357084   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2357085   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2357086   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2357087   +LENGTH _WARN_ $4
2357088   +      F_DepVar  $ 12
2357089   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2357090   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2357091   +
2357092   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2357093   +
2357094   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2357095   +
2357096   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2357097   +
2357098   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2357099   +
2357100   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2357101   +
2357102   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2357103   +
2357104   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2357105   +
2357106   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2357107   +
2357108   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2357109   +
2357110   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2357111   +
2357112   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2357113   +
2357114   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2357115   +
2357116   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2357117   +
2357118   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2357119   +
2357120   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2357121   +
2357122   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2357123   +
2357124   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2357125   +
2357126   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2357127   +
2357128   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2357129   +
2357130   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2357131   +
2357132   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2357133   +
2357134   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2357135   +
2357136   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2357137   +
2357138   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2357139   +
2357140   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2357141   +
2357142   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2357143   +
2357144   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2357145   +
2357146   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2357147   +
2357148   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2357149   +
2357150   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2357151   +
2357152   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2357153   +
2357154   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2357155   +
2357156   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2357157   +
2357158   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2357159   +
2357160   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2357161   +
2357162   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2357163   +
2357164   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2357165   +
2357166   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2357167   +
2357168   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2357169   +
2357170   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2357171   +
2357172   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2357173   +
2357174   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2357175   +
2357176   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2357177   +
2357178   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2357179   +
2357180   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2357181   +
2357182   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2357183   +
2357184   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2357185   +
2357186   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2357187   +
2357188   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2357189   +
2357190   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2357191   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2357192   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2357193   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2357194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357196   +end;
MPRINT(EM_DIAGRAM):   end;
2357197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357198   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357199   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2357200   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357201   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357202   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2357203   +   end;
MPRINT(EM_DIAGRAM):   end;
2357204   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357205   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2357206   +   end;
MPRINT(EM_DIAGRAM):   end;
2357207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357208   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2357209   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357210   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357211   +   end;
MPRINT(EM_DIAGRAM):   end;
2357212   +end;
MPRINT(EM_DIAGRAM):   end;
2357213   +
2357214   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2357215   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2357216   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2357217   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2357218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357220   +end;
MPRINT(EM_DIAGRAM):   end;
2357221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357223   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2357224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357225   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357226   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2357227   +   end;
MPRINT(EM_DIAGRAM):   end;
2357228   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357229   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2357230   +   end;
MPRINT(EM_DIAGRAM):   end;
2357231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357232   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2357233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357235   +   end;
MPRINT(EM_DIAGRAM):   end;
2357236   +end;
MPRINT(EM_DIAGRAM):   end;
2357237   +
2357238   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2357239   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2357240   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2357241   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2357242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357244   +end;
MPRINT(EM_DIAGRAM):   end;
2357245   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357247   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2357248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357250   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2357251   +   end;
MPRINT(EM_DIAGRAM):   end;
2357252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357253   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2357254   +   end;
MPRINT(EM_DIAGRAM):   end;
2357255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357256   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2357257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357259   +   end;
MPRINT(EM_DIAGRAM):   end;
2357260   +end;
MPRINT(EM_DIAGRAM):   end;
2357261   +
2357262   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2357263   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2357264   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2357265   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2357266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357268   +end;
MPRINT(EM_DIAGRAM):   end;
2357269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357271   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2357272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357274   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2357275   +   end;
MPRINT(EM_DIAGRAM):   end;
2357276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357277   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2357278   +   end;
MPRINT(EM_DIAGRAM):   end;
2357279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357280   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2357281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357283   +   end;
MPRINT(EM_DIAGRAM):   end;
2357284   +end;
MPRINT(EM_DIAGRAM):   end;
2357285   +
2357286   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2357287   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2357288   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2357289   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2357290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357292   +end;
MPRINT(EM_DIAGRAM):   end;
2357293   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357295   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2357296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357298   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2357299   +   end;
MPRINT(EM_DIAGRAM):   end;
2357300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357301   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2357302   +   end;
MPRINT(EM_DIAGRAM):   end;
2357303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357304   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2357305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357307   +   end;
MPRINT(EM_DIAGRAM):   end;
2357308   +end;
MPRINT(EM_DIAGRAM):   end;
2357309   +
2357310   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2357311   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2357312   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2357313   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2357314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357316   +end;
MPRINT(EM_DIAGRAM):   end;
2357317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357319   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2357320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357322   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2357323   +   end;
MPRINT(EM_DIAGRAM):   end;
2357324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357325   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2357326   +   end;
MPRINT(EM_DIAGRAM):   end;
2357327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357328   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2357329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357331   +   end;
MPRINT(EM_DIAGRAM):   end;
2357332   +end;
MPRINT(EM_DIAGRAM):   end;
2357333   +
2357334   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2357335   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2357336   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2357337   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2357338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357340   +end;
MPRINT(EM_DIAGRAM):   end;
2357341   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357343   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2357344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357345   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2357346   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2357347   +   end;
MPRINT(EM_DIAGRAM):   end;
2357348   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2357349   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2357350   +   end;
MPRINT(EM_DIAGRAM):   end;
2357351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357352   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2357353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357355   +   end;
MPRINT(EM_DIAGRAM):   end;
2357356   +end;
MPRINT(EM_DIAGRAM):   end;
2357357   +
2357358   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2357359   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2357360   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2357361   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2357362   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2357363   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2357364   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2357365   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2357366   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2357367   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2357368   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2357369   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2357370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357372   +end;
MPRINT(EM_DIAGRAM):   end;
2357373   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357374   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2357375   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2357376   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357377   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2357378   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2357379   +   end;
MPRINT(EM_DIAGRAM):   end;
2357380   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2357381   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2357382   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2357383   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2357384   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2357385   +   end;
MPRINT(EM_DIAGRAM):   end;
2357386   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2357387   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2357388   +   end;
MPRINT(EM_DIAGRAM):   end;
2357389   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2357390   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2357391   +   end;
MPRINT(EM_DIAGRAM):   end;
2357392   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2357393   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2357394   +   end;
MPRINT(EM_DIAGRAM):   end;
2357395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357396   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2357397   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2357398   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2357399   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2357400   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357401   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357402   +   end;
MPRINT(EM_DIAGRAM):   end;
2357403   +end;
MPRINT(EM_DIAGRAM):   end;
2357404   +
2357405   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2357406   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2357407   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2357408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2357409   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2357410   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2357411   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2357412   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2357413   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2357414   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2357415   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2357416   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2357417   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2357418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357420   +end;
MPRINT(EM_DIAGRAM):   end;
2357421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357422   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2357423   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2357424   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357425   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2357426   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2357427   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2357428   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2357429   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2357430   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2357431   +         end;
MPRINT(EM_DIAGRAM):   end;
2357432   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2357433   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2357434   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2357435   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2357436   +            end;
MPRINT(EM_DIAGRAM):   end;
2357437   +         end;
MPRINT(EM_DIAGRAM):   end;
2357438   +      end;
MPRINT(EM_DIAGRAM):   end;
2357439   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2357440   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2357441   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2357442   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2357443   +         end;
MPRINT(EM_DIAGRAM):   end;
2357444   +      end;
MPRINT(EM_DIAGRAM):   end;
2357445   +   end;
MPRINT(EM_DIAGRAM):   end;
2357446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357447   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2357448   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2357449   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2357450   +      end;
MPRINT(EM_DIAGRAM):   end;
2357451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2357452   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2357453   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2357454   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2357455   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2357456   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2357457   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2357458   +         end;
MPRINT(EM_DIAGRAM):   end;
2357459   +      end;
MPRINT(EM_DIAGRAM):   end;
2357460   +   end;
MPRINT(EM_DIAGRAM):   end;
2357461   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2357462   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2357463   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2357464   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2357465   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2357466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357468   +   end;
MPRINT(EM_DIAGRAM):   end;
2357469   +end;
MPRINT(EM_DIAGRAM):   end;
2357470   +
2357471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357472   +*** Checking missing input Interval
2357473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2357474   +
2357475   +IF NMISS(
2357476   +   AcceptedCmpTotal ,
2357477   +   Age ,
2357478   +   Frq ,
2357479   +   Income ,
2357480   +   Kidhome ,
2357481   +   Mnt ,
2357482   +   MntFishProducts ,
2357483   +   MntFruits ,
2357484   +   MntGoldProds ,
2357485   +   MntMeatProducts ,
2357486   +   MntSweetProducts ,
2357487   +   MntWines ,
2357488   +   MonthsAsCustomer ,
2357489   +   NumCatalogPurchases ,
2357490   +   NumDealsPurchases ,
2357491   +   NumDistPurchases ,
2357492   +   NumStorePurchases ,
2357493   +   NumWebPurchases ,
2357494   +   NumWebVisitsMonth ,
2357495   +   RFMstat ,
2357496   +   RMntFrq ,
2357497   +   Recency ,
2357498   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2357499   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2357500   +
2357501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357502   +END;
MPRINT(EM_DIAGRAM):   END;
2357503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357504   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2357505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357506   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2357507   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2357508   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2357509   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2357510   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2357511   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2357512   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2357513   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2357514   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2357515   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2357516   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2357517   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2357518   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2357519   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2357520   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2357521   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2357522   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2357523   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2357524   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2357525   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2357526   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2357527   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2357528   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2357529   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2357530   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2357531   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2357532   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2357533   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2357534   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2357535   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2357536   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2357537   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2357538   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2357539   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2357540   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2357541   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2357542   +END;
MPRINT(EM_DIAGRAM):   END;
2357543   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2357544   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2357545   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2357546   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2357547   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2357548   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2357549   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2357550   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2357551   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2357552   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2357553   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2357554   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2357555   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2357556   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2357557   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2357558   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2357559   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2357560   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2357561   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2357562   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2357563   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2357564   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2357565   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2357566   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2357567   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2357568   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2357569   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2357570   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2357571   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2357572   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2357573   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2357574   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2357575   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2357576   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2357577   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2357578   +   ELSE S_NumCatalogPurchases
2357579   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2357580   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2357581   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2357582   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2357583   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2357584   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2357585   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2357586   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2357587   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2357588   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2357589   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2357590   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2357591   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2357592   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2357593   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2357594   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2357595   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2357596   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2357597   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2357598   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2357599   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2357600   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2357601   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2357602   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2357603   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2357604   +END;
MPRINT(EM_DIAGRAM):   END;
2357605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357606   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2357607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357609   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2357610   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357612   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2357613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357614   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2357615   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2357616   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2357617   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2357618   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2357619   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2357620   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2357621   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2357622   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2357623   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2357624   +          +    -1.09856598010056 * S_NumDealsPurchases
2357625   +          +    -0.10571850472514 * S_NumDistPurchases
2357626   +          +     0.11898210654227 * S_NumStorePurchases
2357627   +          +      0.5984912060231 * S_NumWebPurchases
2357628   +          +     0.78592531126942 * S_NumWebVisitsMonth
2357629   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2357630   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2357631   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2357632   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2357633   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2357634   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2357635   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2357636   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2357637   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2357638   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2357639   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2357640   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2357641   +          +    -0.84042044250624 * S_NumDealsPurchases
2357642   +          +    -0.10246261015488 * S_NumDistPurchases
2357643   +          +     0.06886149708824 * S_NumStorePurchases
2357644   +          +     0.63156910388199 * S_NumWebPurchases
2357645   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2357646   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2357647   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2357648   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2357649   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2357650   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2357651   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2357652   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2357653   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2357654   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2357655   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2357656   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2357657   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2357658   +          +     0.45393712455366 * S_NumDealsPurchases
2357659   +          +    -0.25292198053552 * S_NumDistPurchases
2357660   +          +    -1.35582215064749 * S_NumStorePurchases
2357661   +          +    -0.83132202302639 * S_NumWebPurchases
2357662   +          +     1.87116225272678 * S_NumWebVisitsMonth
2357663   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2357664   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2357665   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2357666   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2357667   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2357668   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2357669   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2357670   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2357671   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2357672   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2357673   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2357674   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2357675   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2357676   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2357677   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2357678   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2357679   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2357680   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2357681   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2357682   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2357683   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2357684   +          +      0.4695898100094 * Marital_StatusDivorced
2357685   +          +    -0.52137742289262 * Marital_StatusMarried
2357686   +          +    -0.32382086914936 * Marital_StatusSingle
2357687   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2357688   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2357689   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2357690   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2357691   +          +    -1.04858218653238 * Marital_StatusDivorced
2357692   +          +     2.41098335093061 * Marital_StatusMarried
2357693   +          +    -1.94696044861334 * Marital_StatusSingle
2357694   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2357695   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2357696   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2357697   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2357698   +          +     0.42964114177062 * Marital_StatusDivorced
2357699   +          +    -0.38607635605816 * Marital_StatusMarried
2357700   +          +    -0.02157405407852 * Marital_StatusSingle
2357701   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2357702   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2357703   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2357704   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2357705   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2357706   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2357707   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2357708   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2357709   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2357710   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2357711   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2357712   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2357713   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2357714   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2357715   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2357716   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2357717   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2357718   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2357719   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2357720   +END;
MPRINT(EM_DIAGRAM):   END;
2357721   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2357722   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2357723   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2357724   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2357725   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2357726   +END;
MPRINT(EM_DIAGRAM):   END;
2357727   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357728   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2357729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357730   +
2357731   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2357732   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2357733   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2357734   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2357735   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2357736   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357737   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2357738   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2357739   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2357740   +end;
MPRINT(EM_DIAGRAM):   end;
2357741   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357742   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2357743   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2357744   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2357745   +   end;
MPRINT(EM_DIAGRAM):   end;
2357746   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2357747   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2357748   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2357749   +   end;
MPRINT(EM_DIAGRAM):   end;
2357750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357751   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2357752   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2357753   +   end;
MPRINT(EM_DIAGRAM):   end;
2357754   +end;
MPRINT(EM_DIAGRAM):   end;
2357755   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2357756   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2357757   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2357758   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2357759   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2357760   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2357761   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2357762   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2357763   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2357764   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2357765   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2357766   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2357767   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2357768   +END;
MPRINT(EM_DIAGRAM):   END;
2357769   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2357770   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2357771   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2357772   +END;
MPRINT(EM_DIAGRAM):   END;
2357773   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2357774   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2357775   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2357776   +END;
MPRINT(EM_DIAGRAM):   END;
2357777   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2357778   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2357779   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2357780   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2357781   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2357782   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2357783   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2357784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357785   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2357786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2357787   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2357788   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2357789   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2357790   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2357791   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2357792   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2357793   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2357794   +END;
MPRINT(EM_DIAGRAM):   END;
2357795   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2357796   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2357797   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2357798   +drop
2357799   +H1x1_1
2357800   +H1x1_2
2357801   +H1x1_3
2357802   +H1x1_4
2357803   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2357804   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2357805   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2357806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357807   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2357808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357809   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2357810   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2357811   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2357812   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2357813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357814   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2357815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357816   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2357817   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2357818   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2357819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357820   +* Ensmbl42: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 2 of 3;
2357821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357823   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2357824   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2357825   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2357826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2357827   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2357828   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2357829   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2357830   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2357831   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2357832   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2357833   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2357834   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2357835   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2357836   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2357837   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2357838   +LENGTH _WARN_ $4
2357839   +      F_DepVar  $ 12
2357840   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2357841   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2357842   +
2357843   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2357844   +
2357845   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2357846   +
2357847   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2357848   +
2357849   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2357850   +
2357851   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2357852   +
2357853   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2357854   +
2357855   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2357856   +
2357857   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2357858   +
2357859   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2357860   +
2357861   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2357862   +
2357863   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2357864   +
2357865   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2357866   +
2357867   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2357868   +
2357869   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2357870   +
2357871   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2357872   +
2357873   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2357874   +
2357875   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2357876   +
2357877   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2357878   +
2357879   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2357880   +
2357881   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2357882   +
2357883   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2357884   +
2357885   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2357886   +
2357887   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2357888   +
2357889   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2357890   +
2357891   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2357892   +
2357893   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2357894   +
2357895   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2357896   +
2357897   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2357898   +
2357899   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2357900   +
2357901   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2357902   +
2357903   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2357904   +
2357905   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2357906   +
2357907   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2357908   +
2357909   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2357910   +
2357911   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2357912   +
2357913   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2357914   +
2357915   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2357916   +
2357917   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2357918   +
2357919   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2357920   +
2357921   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2357922   +
2357923   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2357924   +
2357925   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2357926   +
2357927   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2357928   +
2357929   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2357930   +
2357931   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2357932   +
2357933   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2357934   +
2357935   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2357936   +
2357937   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2357938   +
2357939   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2357940   +
2357941   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2357942   +
2357943   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2357944   +
2357945   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2357946   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2357947   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2357948   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2357949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357951   +end;
MPRINT(EM_DIAGRAM):   end;
2357952   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357954   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2357955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357957   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2357958   +   end;
MPRINT(EM_DIAGRAM):   end;
2357959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357960   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2357961   +   end;
MPRINT(EM_DIAGRAM):   end;
2357962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357963   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2357964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357966   +   end;
MPRINT(EM_DIAGRAM):   end;
2357967   +end;
MPRINT(EM_DIAGRAM):   end;
2357968   +
2357969   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2357970   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2357971   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2357972   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2357973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357975   +end;
MPRINT(EM_DIAGRAM):   end;
2357976   +else do;
MPRINT(EM_DIAGRAM):   else do;
2357977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2357978   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2357979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2357980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2357981   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2357982   +   end;
MPRINT(EM_DIAGRAM):   end;
2357983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2357984   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2357985   +   end;
MPRINT(EM_DIAGRAM):   end;
2357986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2357987   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2357988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2357989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357990   +   end;
MPRINT(EM_DIAGRAM):   end;
2357991   +end;
MPRINT(EM_DIAGRAM):   end;
2357992   +
2357993   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2357994   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2357995   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2357996   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2357997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2357998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2357999   +end;
MPRINT(EM_DIAGRAM):   end;
2358000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358002   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2358003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358005   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2358006   +   end;
MPRINT(EM_DIAGRAM):   end;
2358007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358008   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2358009   +   end;
MPRINT(EM_DIAGRAM):   end;
2358010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358011   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2358012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358014   +   end;
MPRINT(EM_DIAGRAM):   end;
2358015   +end;
MPRINT(EM_DIAGRAM):   end;
2358016   +
2358017   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2358018   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2358019   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2358020   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2358021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358023   +end;
MPRINT(EM_DIAGRAM):   end;
2358024   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358026   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2358027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358029   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2358030   +   end;
MPRINT(EM_DIAGRAM):   end;
2358031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358032   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2358033   +   end;
MPRINT(EM_DIAGRAM):   end;
2358034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358035   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2358036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358038   +   end;
MPRINT(EM_DIAGRAM):   end;
2358039   +end;
MPRINT(EM_DIAGRAM):   end;
2358040   +
2358041   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2358042   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2358043   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2358044   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2358045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358047   +end;
MPRINT(EM_DIAGRAM):   end;
2358048   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358050   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2358051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358053   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2358054   +   end;
MPRINT(EM_DIAGRAM):   end;
2358055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358056   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2358057   +   end;
MPRINT(EM_DIAGRAM):   end;
2358058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358059   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2358060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358062   +   end;
MPRINT(EM_DIAGRAM):   end;
2358063   +end;
MPRINT(EM_DIAGRAM):   end;
2358064   +
2358065   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2358066   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2358067   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2358068   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2358069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358071   +end;
MPRINT(EM_DIAGRAM):   end;
2358072   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358074   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2358075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358077   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2358078   +   end;
MPRINT(EM_DIAGRAM):   end;
2358079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358080   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2358081   +   end;
MPRINT(EM_DIAGRAM):   end;
2358082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358083   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2358084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358086   +   end;
MPRINT(EM_DIAGRAM):   end;
2358087   +end;
MPRINT(EM_DIAGRAM):   end;
2358088   +
2358089   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2358090   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2358091   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2358092   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2358093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358095   +end;
MPRINT(EM_DIAGRAM):   end;
2358096   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358098   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2358099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358100   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2358101   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2358102   +   end;
MPRINT(EM_DIAGRAM):   end;
2358103   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2358104   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2358105   +   end;
MPRINT(EM_DIAGRAM):   end;
2358106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358107   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2358108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358110   +   end;
MPRINT(EM_DIAGRAM):   end;
2358111   +end;
MPRINT(EM_DIAGRAM):   end;
2358112   +
2358113   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2358114   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2358115   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2358116   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2358117   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2358118   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2358119   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2358120   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2358121   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2358122   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2358123   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2358124   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2358125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358127   +end;
MPRINT(EM_DIAGRAM):   end;
2358128   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358129   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2358130   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2358131   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358132   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2358133   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2358134   +   end;
MPRINT(EM_DIAGRAM):   end;
2358135   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2358136   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2358137   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2358138   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2358139   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2358140   +   end;
MPRINT(EM_DIAGRAM):   end;
2358141   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2358142   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2358143   +   end;
MPRINT(EM_DIAGRAM):   end;
2358144   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2358145   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2358146   +   end;
MPRINT(EM_DIAGRAM):   end;
2358147   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2358148   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2358149   +   end;
MPRINT(EM_DIAGRAM):   end;
2358150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358151   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2358152   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2358153   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2358154   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2358155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358157   +   end;
MPRINT(EM_DIAGRAM):   end;
2358158   +end;
MPRINT(EM_DIAGRAM):   end;
2358159   +
2358160   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2358161   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2358162   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2358163   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2358164   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2358165   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2358166   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2358167   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2358168   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2358169   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2358170   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2358171   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2358172   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2358173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358175   +end;
MPRINT(EM_DIAGRAM):   end;
2358176   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358177   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2358178   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2358179   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358180   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2358181   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2358182   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2358183   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2358184   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2358185   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2358186   +         end;
MPRINT(EM_DIAGRAM):   end;
2358187   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2358188   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2358189   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2358190   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2358191   +            end;
MPRINT(EM_DIAGRAM):   end;
2358192   +         end;
MPRINT(EM_DIAGRAM):   end;
2358193   +      end;
MPRINT(EM_DIAGRAM):   end;
2358194   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2358195   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2358196   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2358197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2358198   +         end;
MPRINT(EM_DIAGRAM):   end;
2358199   +      end;
MPRINT(EM_DIAGRAM):   end;
2358200   +   end;
MPRINT(EM_DIAGRAM):   end;
2358201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358202   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2358203   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2358204   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2358205   +      end;
MPRINT(EM_DIAGRAM):   end;
2358206   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2358207   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2358208   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2358209   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2358210   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2358211   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2358212   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2358213   +         end;
MPRINT(EM_DIAGRAM):   end;
2358214   +      end;
MPRINT(EM_DIAGRAM):   end;
2358215   +   end;
MPRINT(EM_DIAGRAM):   end;
2358216   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2358217   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2358218   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2358219   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2358220   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2358221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358223   +   end;
MPRINT(EM_DIAGRAM):   end;
2358224   +end;
MPRINT(EM_DIAGRAM):   end;
2358225   +
2358226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358227   +*** Checking missing input Interval
2358228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2358229   +
2358230   +IF NMISS(
2358231   +   AcceptedCmpTotal ,
2358232   +   Age ,
2358233   +   Frq ,
2358234   +   Income ,
2358235   +   Kidhome ,
2358236   +   Mnt ,
2358237   +   MntFishProducts ,
2358238   +   MntFruits ,
2358239   +   MntGoldProds ,
2358240   +   MntMeatProducts ,
2358241   +   MntSweetProducts ,
2358242   +   MntWines ,
2358243   +   MonthsAsCustomer ,
2358244   +   NumCatalogPurchases ,
2358245   +   NumDealsPurchases ,
2358246   +   NumDistPurchases ,
2358247   +   NumStorePurchases ,
2358248   +   NumWebPurchases ,
2358249   +   NumWebVisitsMonth ,
2358250   +   RFMstat ,
2358251   +   RMntFrq ,
2358252   +   Recency ,
2358253   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2358254   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2358255   +
2358256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358257   +END;
MPRINT(EM_DIAGRAM):   END;
2358258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358259   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2358260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358261   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2358262   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2358263   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2358264   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2358265   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2358266   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2358267   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2358268   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2358269   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2358270   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2358271   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2358272   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2358273   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2358274   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2358275   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2358276   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2358277   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2358278   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2358279   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2358280   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2358281   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2358282   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2358283   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2358284   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2358285   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2358286   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2358287   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2358288   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2358289   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2358290   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2358291   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2358292   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2358293   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2358294   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2358295   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2358296   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2358297   +END;
MPRINT(EM_DIAGRAM):   END;
2358298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2358299   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2358300   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2358301   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2358302   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2358303   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2358304   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2358305   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2358306   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2358307   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2358308   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2358309   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2358310   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2358311   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2358312   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2358313   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2358314   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2358315   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2358316   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2358317   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2358318   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2358319   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2358320   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2358321   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2358322   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2358323   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2358324   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2358325   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2358326   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2358327   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2358328   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2358329   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2358330   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2358331   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2358332   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2358333   +   ELSE S_NumCatalogPurchases
2358334   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2358335   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2358336   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2358337   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2358338   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2358339   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2358340   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2358341   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2358342   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2358343   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2358344   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2358345   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2358346   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2358347   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2358348   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2358349   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2358350   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2358351   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2358352   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2358353   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2358354   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2358355   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2358356   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2358357   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2358358   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2358359   +END;
MPRINT(EM_DIAGRAM):   END;
2358360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358361   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2358362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358364   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2358365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358367   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2358368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2358370   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2358371   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2358372   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2358373   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2358374   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2358375   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2358376   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2358377   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2358378   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2358379   +          +     0.19770934886328 * S_NumDealsPurchases
2358380   +          +      0.0515215988111 * S_NumDistPurchases
2358381   +          +    -0.34569346346089 * S_NumStorePurchases
2358382   +          +    -0.27122293596124 * S_NumWebPurchases
2358383   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2358384   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2358385   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2358386   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2358387   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2358388   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2358389   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2358390   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2358391   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2358392   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2358393   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2358394   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2358395   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2358396   +          +     0.54308887602031 * S_NumDealsPurchases
2358397   +          +    -0.22507315320192 * S_NumDistPurchases
2358398   +          +    -0.79861387328361 * S_NumStorePurchases
2358399   +          +    -0.45467494002747 * S_NumWebPurchases
2358400   +          +      0.2119048824613 * S_NumWebVisitsMonth
2358401   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2358402   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2358403   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2358404   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2358405   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2358406   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2358407   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2358408   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2358409   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2358410   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2358411   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2358412   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2358413   +          +     -0.0771083149302 * S_NumDealsPurchases
2358414   +          +     0.03403621221162 * S_NumDistPurchases
2358415   +          +     0.61303946422025 * S_NumStorePurchases
2358416   +          +     0.27126793634053 * S_NumWebPurchases
2358417   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2358418   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2358419   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2358420   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2358421   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2358422   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2358423   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2358424   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2358425   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2358426   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2358427   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2358428   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2358429   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2358430   +          +     0.29894603062327 * S_NumDealsPurchases
2358431   +          +     0.07614620530875 * S_NumDistPurchases
2358432   +          +     0.15402335009896 * S_NumStorePurchases
2358433   +          +     0.10615749096863 * S_NumWebPurchases
2358434   +          +     0.41962286816879 * S_NumWebVisitsMonth
2358435   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2358436   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2358437   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2358438   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2358439   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2358440   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2358441   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2358442   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2358443   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2358444   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2358445   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2358446   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2358447   +          +     0.14392502416642 * S_NumDealsPurchases
2358448   +          +    -0.10026304978633 * S_NumDistPurchases
2358449   +          +     -0.0588453022746 * S_NumStorePurchases
2358450   +          +     0.24799398610395 * S_NumWebPurchases
2358451   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2358452   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2358453   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2358454   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2358455   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2358456   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2358457   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2358458   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2358459   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2358460   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2358461   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2358462   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2358463   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2358464   +          +     0.08149600854964 * S_NumDealsPurchases
2358465   +          +     0.16873541613513 * S_NumDistPurchases
2358466   +          +    -0.20437343413446 * S_NumStorePurchases
2358467   +          +     -0.1671107527288 * S_NumWebPurchases
2358468   +          +     0.03677043100993 * S_NumWebVisitsMonth
2358469   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2358470   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2358471   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2358472   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2358473   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2358474   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2358475   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2358476   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2358477   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2358478   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2358479   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2358480   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2358481   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2358482   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2358483   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2358484   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2358485   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2358486   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2358487   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2358488   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2358489   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2358490   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2358491   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2358492   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2358493   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2358494   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2358495   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2358496   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2358497   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2358498   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2358499   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2358500   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2358501   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2358502   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2358503   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2358504   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2358505   +          +    -0.31045295887604 * Marital_StatusDivorced
2358506   +          +    -0.01109401001539 * Marital_StatusMarried
2358507   +          +     0.01325135981025 * Marital_StatusSingle
2358508   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2358509   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2358510   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2358511   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2358512   +          +     0.02275101861599 * Marital_StatusDivorced
2358513   +          +     0.20271548664903 * Marital_StatusMarried
2358514   +          +    -0.12132069210718 * Marital_StatusSingle
2358515   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2358516   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2358517   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2358518   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2358519   +          +     -0.4992959703281 * Marital_StatusDivorced
2358520   +          +     0.62071659624138 * Marital_StatusMarried
2358521   +          +    -0.21776202274494 * Marital_StatusSingle
2358522   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2358523   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2358524   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2358525   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2358526   +          +     0.05626212670587 * Marital_StatusDivorced
2358527   +          +     0.14353891364597 * Marital_StatusMarried
2358528   +          +    -0.29006765622997 * Marital_StatusSingle
2358529   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2358530   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2358531   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2358532   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2358533   +          +    -0.21206913700604 * Marital_StatusDivorced
2358534   +          +     0.58790643614629 * Marital_StatusMarried
2358535   +          +    -0.65995982578062 * Marital_StatusSingle
2358536   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2358537   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2358538   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2358539   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2358540   +          +    -0.05047370516008 * Marital_StatusDivorced
2358541   +          +    -0.23139090963669 * Marital_StatusMarried
2358542   +          +     0.04816197463249 * Marital_StatusSingle
2358543   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2358544   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2358545   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2358546   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2358547   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2358548   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2358549   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2358550   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2358551   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2358552   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2358553   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2358554   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2358555   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2358556   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2358557   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2358558   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2358559   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2358560   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2358561   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2358562   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2358563   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2358564   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2358565   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2358566   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2358567   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2358568   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2358569   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2358570   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2358571   +END;
MPRINT(EM_DIAGRAM):   END;
2358572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2358573   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2358574   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2358575   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2358576   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2358577   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2358578   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2358579   +END;
MPRINT(EM_DIAGRAM):   END;
2358580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358581   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2358582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358583   +
2358584   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2358585   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2358586   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2358587   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2358588   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2358589   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358590   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2358591   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2358592   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2358593   +end;
MPRINT(EM_DIAGRAM):   end;
2358594   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358595   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2358596   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2358597   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2358598   +   end;
MPRINT(EM_DIAGRAM):   end;
2358599   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2358600   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2358601   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2358602   +   end;
MPRINT(EM_DIAGRAM):   end;
2358603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358604   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2358605   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2358606   +   end;
MPRINT(EM_DIAGRAM):   end;
2358607   +end;
MPRINT(EM_DIAGRAM):   end;
2358608   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2358609   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2358610   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2358611   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2358612   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2358613   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2358614   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2358615   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2358616   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2358617   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2358618   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2358619   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2358620   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2358621   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2358622   +END;
MPRINT(EM_DIAGRAM):   END;
2358623   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2358624   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2358625   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2358626   +END;
MPRINT(EM_DIAGRAM):   END;
2358627   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2358628   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2358629   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2358630   +END;
MPRINT(EM_DIAGRAM):   END;
2358631   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2358632   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2358633   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2358634   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2358635   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2358636   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2358637   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2358638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358639   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2358640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2358641   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2358642   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2358643   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2358644   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2358645   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2358646   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2358647   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2358648   +END;
MPRINT(EM_DIAGRAM):   END;
2358649   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2358650   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2358651   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2358652   +drop
2358653   +H1x1_1
2358654   +H1x1_2
2358655   +H1x1_3
2358656   +H1x1_4
2358657   +H1x1_5
2358658   +H1x1_6
2358659   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2358660   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2358661   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2358662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358663   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2358664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358665   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2358666   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2358667   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2358668   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2358669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358670   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2358671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358672   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2358673   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2358674   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2358675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358676   +* Ensmbl42: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 3 of 3;
2358677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358679   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2358680   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2358681   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2358682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2358683   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2358684   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2358685   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2358686   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2358687   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2358688   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2358689   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2358690   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2358691   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2358692   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2358693   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2358694   +LENGTH _WARN_ $4
2358695   +      F_DepVar  $ 12
2358696   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2358697   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2358698   +
2358699   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2358700   +
2358701   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2358702   +
2358703   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2358704   +
2358705   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2358706   +
2358707   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2358708   +
2358709   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2358710   +
2358711   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2358712   +
2358713   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2358714   +
2358715   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2358716   +
2358717   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2358718   +
2358719   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2358720   +
2358721   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2358722   +
2358723   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2358724   +
2358725   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2358726   +
2358727   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2358728   +
2358729   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2358730   +
2358731   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2358732   +
2358733   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2358734   +
2358735   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2358736   +
2358737   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2358738   +
2358739   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2358740   +
2358741   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2358742   +
2358743   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2358744   +
2358745   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2358746   +
2358747   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2358748   +
2358749   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2358750   +
2358751   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2358752   +
2358753   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2358754   +
2358755   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2358756   +
2358757   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2358758   +
2358759   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2358760   +
2358761   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2358762   +
2358763   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2358764   +
2358765   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2358766   +
2358767   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2358768   +
2358769   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2358770   +
2358771   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2358772   +
2358773   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2358774   +
2358775   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2358776   +
2358777   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2358778   +
2358779   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2358780   +
2358781   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2358782   +
2358783   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2358784   +
2358785   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2358786   +
2358787   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2358788   +
2358789   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2358790   +
2358791   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2358792   +
2358793   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2358794   +
2358795   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2358796   +
2358797   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2358798   +
2358799   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2358800   +
2358801   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2358802   +
2358803   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2358804   +
2358805   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2358806   +
2358807   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2358808   +
2358809   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2358810   +
2358811   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2358812   +
2358813   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2358814   +
2358815   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2358816   +
2358817   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2358818   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2358819   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2358820   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2358821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358823   +end;
MPRINT(EM_DIAGRAM):   end;
2358824   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358826   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2358827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358829   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2358830   +   end;
MPRINT(EM_DIAGRAM):   end;
2358831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358832   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2358833   +   end;
MPRINT(EM_DIAGRAM):   end;
2358834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358835   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2358836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358838   +   end;
MPRINT(EM_DIAGRAM):   end;
2358839   +end;
MPRINT(EM_DIAGRAM):   end;
2358840   +
2358841   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2358842   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2358843   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2358844   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2358845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358847   +end;
MPRINT(EM_DIAGRAM):   end;
2358848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358850   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2358851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358853   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2358854   +   end;
MPRINT(EM_DIAGRAM):   end;
2358855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358856   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2358857   +   end;
MPRINT(EM_DIAGRAM):   end;
2358858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358859   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2358860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358862   +   end;
MPRINT(EM_DIAGRAM):   end;
2358863   +end;
MPRINT(EM_DIAGRAM):   end;
2358864   +
2358865   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2358866   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2358867   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2358868   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2358869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358871   +end;
MPRINT(EM_DIAGRAM):   end;
2358872   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358874   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2358875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358877   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2358878   +   end;
MPRINT(EM_DIAGRAM):   end;
2358879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358880   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2358881   +   end;
MPRINT(EM_DIAGRAM):   end;
2358882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358883   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2358884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358886   +   end;
MPRINT(EM_DIAGRAM):   end;
2358887   +end;
MPRINT(EM_DIAGRAM):   end;
2358888   +
2358889   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2358890   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2358891   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2358892   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2358893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358895   +end;
MPRINT(EM_DIAGRAM):   end;
2358896   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358898   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2358899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358901   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2358902   +   end;
MPRINT(EM_DIAGRAM):   end;
2358903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358904   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2358905   +   end;
MPRINT(EM_DIAGRAM):   end;
2358906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358907   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2358908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358910   +   end;
MPRINT(EM_DIAGRAM):   end;
2358911   +end;
MPRINT(EM_DIAGRAM):   end;
2358912   +
2358913   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2358914   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2358915   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2358916   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2358917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358919   +end;
MPRINT(EM_DIAGRAM):   end;
2358920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358922   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2358923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358925   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2358926   +   end;
MPRINT(EM_DIAGRAM):   end;
2358927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358928   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2358929   +   end;
MPRINT(EM_DIAGRAM):   end;
2358930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358931   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2358932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358934   +   end;
MPRINT(EM_DIAGRAM):   end;
2358935   +end;
MPRINT(EM_DIAGRAM):   end;
2358936   +
2358937   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2358938   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2358939   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2358940   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2358941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358943   +end;
MPRINT(EM_DIAGRAM):   end;
2358944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358946   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2358947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2358949   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2358950   +   end;
MPRINT(EM_DIAGRAM):   end;
2358951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2358952   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2358953   +   end;
MPRINT(EM_DIAGRAM):   end;
2358954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358955   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2358956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358958   +   end;
MPRINT(EM_DIAGRAM):   end;
2358959   +end;
MPRINT(EM_DIAGRAM):   end;
2358960   +
2358961   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2358962   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2358963   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2358964   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2358965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358967   +end;
MPRINT(EM_DIAGRAM):   end;
2358968   +else do;
MPRINT(EM_DIAGRAM):   else do;
2358969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2358970   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2358971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2358972   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2358973   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2358974   +   end;
MPRINT(EM_DIAGRAM):   end;
2358975   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2358976   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2358977   +   end;
MPRINT(EM_DIAGRAM):   end;
2358978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2358979   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2358980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2358981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358982   +   end;
MPRINT(EM_DIAGRAM):   end;
2358983   +end;
MPRINT(EM_DIAGRAM):   end;
2358984   +
2358985   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2358986   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2358987   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2358988   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2358989   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2358990   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2358991   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2358992   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2358993   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2358994   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2358995   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2358996   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2358997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2358998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2358999   +end;
MPRINT(EM_DIAGRAM):   end;
2359000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2359001   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2359002   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2359003   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2359004   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2359005   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2359006   +   end;
MPRINT(EM_DIAGRAM):   end;
2359007   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2359008   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2359009   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2359010   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2359011   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2359012   +   end;
MPRINT(EM_DIAGRAM):   end;
2359013   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2359014   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2359015   +   end;
MPRINT(EM_DIAGRAM):   end;
2359016   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2359017   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2359018   +   end;
MPRINT(EM_DIAGRAM):   end;
2359019   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2359020   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2359021   +   end;
MPRINT(EM_DIAGRAM):   end;
2359022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2359023   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2359024   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2359025   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2359026   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2359027   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2359028   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2359029   +   end;
MPRINT(EM_DIAGRAM):   end;
2359030   +end;
MPRINT(EM_DIAGRAM):   end;
2359031   +
2359032   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2359033   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2359034   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2359035   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2359036   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2359037   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2359038   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2359039   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2359040   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2359041   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2359042   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2359043   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2359044   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2359045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2359046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2359047   +end;
MPRINT(EM_DIAGRAM):   end;
2359048   +else do;
MPRINT(EM_DIAGRAM):   else do;
2359049   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2359050   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2359051   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2359052   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2359053   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2359054   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2359055   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2359056   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2359057   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2359058   +         end;
MPRINT(EM_DIAGRAM):   end;
2359059   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2359060   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2359061   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2359062   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2359063   +            end;
MPRINT(EM_DIAGRAM):   end;
2359064   +         end;
MPRINT(EM_DIAGRAM):   end;
2359065   +      end;
MPRINT(EM_DIAGRAM):   end;
2359066   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2359067   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2359068   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2359069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2359070   +         end;
MPRINT(EM_DIAGRAM):   end;
2359071   +      end;
MPRINT(EM_DIAGRAM):   end;
2359072   +   end;
MPRINT(EM_DIAGRAM):   end;
2359073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2359074   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2359075   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2359076   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2359077   +      end;
MPRINT(EM_DIAGRAM):   end;
2359078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2359079   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2359080   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2359081   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2359082   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2359083   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2359084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2359085   +         end;
MPRINT(EM_DIAGRAM):   end;
2359086   +      end;
MPRINT(EM_DIAGRAM):   end;
2359087   +   end;
MPRINT(EM_DIAGRAM):   end;
2359088   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2359089   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2359090   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2359091   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2359092   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2359093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2359094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2359095   +   end;
MPRINT(EM_DIAGRAM):   end;
2359096   +end;
MPRINT(EM_DIAGRAM):   end;
2359097   +
2359098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359099   +*** Checking missing input Interval
2359100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2359101   +
2359102   +IF NMISS(
2359103   +   AcceptedCmpTotal ,
2359104   +   Age ,
2359105   +   Frq ,
2359106   +   Income ,
2359107   +   Kidhome ,
2359108   +   Mnt ,
2359109   +   MntFishProducts ,
2359110   +   MntFruits ,
2359111   +   MntGoldProds ,
2359112   +   MntMeatProducts ,
2359113   +   MntSweetProducts ,
2359114   +   MntWines ,
2359115   +   MonthsAsCustomer ,
2359116   +   NumCatalogPurchases ,
2359117   +   NumDealsPurchases ,
2359118   +   NumDistPurchases ,
2359119   +   NumStorePurchases ,
2359120   +   NumWebPurchases ,
2359121   +   NumWebVisitsMonth ,
2359122   +   RFMstat ,
2359123   +   RMntFrq ,
2359124   +   Recency ,
2359125   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2359126   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2359127   +
2359128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2359129   +END;
MPRINT(EM_DIAGRAM):   END;
2359130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359131   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2359132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359133   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2359134   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2359135   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2359136   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2359137   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2359138   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2359139   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2359140   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2359141   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2359142   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2359143   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2359144   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2359145   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2359146   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2359147   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2359148   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2359149   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2359150   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2359151   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2359152   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2359153   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2359154   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2359155   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2359156   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2359157   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2359158   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2359159   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2359160   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2359161   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2359162   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2359163   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2359164   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2359165   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2359166   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2359167   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2359168   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2359169   +END;
MPRINT(EM_DIAGRAM):   END;
2359170   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2359171   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2359172   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2359173   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2359174   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2359175   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2359176   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2359177   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2359178   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2359179   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2359180   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2359181   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2359182   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2359183   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2359184   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2359185   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2359186   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2359187   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2359188   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2359189   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2359190   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2359191   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2359192   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2359193   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2359194   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2359195   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2359196   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2359197   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2359198   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2359199   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2359200   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2359201   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2359202   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2359203   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2359204   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2359205   +   ELSE S_NumCatalogPurchases
2359206   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2359207   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2359208   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2359209   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2359210   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2359211   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2359212   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2359213   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2359214   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2359215   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2359216   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2359217   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2359218   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2359219   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2359220   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2359221   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2359222   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2359223   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2359224   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2359225   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2359226   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2359227   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2359228   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2359229   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2359230   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2359231   +END;
MPRINT(EM_DIAGRAM):   END;
2359232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359233   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2359234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359236   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2359237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359239   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2359240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359241   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2359242   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2359243   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2359244   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2359245   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2359246   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2359247   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2359248   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2359249   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2359250   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2359251   +          +      0.1112677116841 * S_NumDealsPurchases
2359252   +          +     0.01563584187072 * S_NumDistPurchases
2359253   +          +     0.19193969522995 * S_NumStorePurchases
2359254   +          +      0.3133556199984 * S_NumWebPurchases
2359255   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2359256   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2359257   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2359258   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2359259   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2359260   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2359261   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2359262   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2359263   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2359264   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2359265   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2359266   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2359267   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2359268   +          +     0.30225032753275 * S_NumDealsPurchases
2359269   +          +     0.33833359923595 * S_NumDistPurchases
2359270   +          +    -0.20255599575849 * S_NumStorePurchases
2359271   +          +    -0.12040071168942 * S_NumWebPurchases
2359272   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2359273   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2359274   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2359275   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2359276   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2359277   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2359278   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2359279   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2359280   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2359281   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2359282   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2359283   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2359284   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2359285   +          +     0.16792903091627 * S_NumDealsPurchases
2359286   +          +    -0.37408945626745 * S_NumDistPurchases
2359287   +          +    -0.18067262995566 * S_NumStorePurchases
2359288   +          +     0.21192146789881 * S_NumWebPurchases
2359289   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2359290   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2359291   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2359292   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2359293   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2359294   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2359295   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2359296   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2359297   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2359298   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2359299   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2359300   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2359301   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2359302   +          +     0.29407429399136 * S_NumDealsPurchases
2359303   +          +     0.01610745252195 * S_NumDistPurchases
2359304   +          +    -0.17767939085628 * S_NumStorePurchases
2359305   +          +    -0.15168958538637 * S_NumWebPurchases
2359306   +          +     0.17433622143988 * S_NumWebVisitsMonth
2359307   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2359308   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2359309   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2359310   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2359311   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2359312   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2359313   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2359314   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2359315   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2359316   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2359317   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2359318   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2359319   +          +    -0.37976451362108 * S_NumDealsPurchases
2359320   +          +    -0.17027731520801 * S_NumDistPurchases
2359321   +          +     0.59849493667087 * S_NumStorePurchases
2359322   +          +     0.65481480560301 * S_NumWebPurchases
2359323   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2359324   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2359325   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2359326   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2359327   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2359328   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2359329   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2359330   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2359331   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2359332   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2359333   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2359334   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2359335   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2359336   +          +    -0.07686699131623 * S_NumDealsPurchases
2359337   +          +    -0.07220460738926 * S_NumDistPurchases
2359338   +          +    -0.06554027468389 * S_NumStorePurchases
2359339   +          +     0.10422838158001 * S_NumWebPurchases
2359340   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2359341   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2359342   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2359343   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2359344   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2359345   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2359346   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2359347   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2359348   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2359349   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2359350   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2359351   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2359352   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2359353   +          +    -0.07920122387563 * S_NumDealsPurchases
2359354   +          +      0.3649244061347 * S_NumDistPurchases
2359355   +          +     0.36475853688403 * S_NumStorePurchases
2359356   +          +     0.02153991404063 * S_NumWebPurchases
2359357   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2359358   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2359359   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2359360   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2359361   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2359362   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2359363   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2359364   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2359365   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2359366   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2359367   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2359368   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2359369   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2359370   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2359371   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2359372   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2359373   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2359374   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2359375   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2359376   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2359377   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2359378   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2359379   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2359380   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2359381   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2359382   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2359383   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2359384   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2359385   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2359386   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2359387   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2359388   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2359389   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2359390   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2359391   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2359392   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2359393   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2359394   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2359395   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2359396   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2359397   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2359398   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2359399   +          +     0.07744097241553 * Marital_StatusDivorced
2359400   +          +     -0.0247463100385 * Marital_StatusMarried
2359401   +          +     0.05804915234573 * Marital_StatusSingle
2359402   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2359403   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2359404   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2359405   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2359406   +          +     0.01390668926269 * Marital_StatusDivorced
2359407   +          +     0.01136282152074 * Marital_StatusMarried
2359408   +          +     0.12450246418789 * Marital_StatusSingle
2359409   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2359410   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2359411   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2359412   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2359413   +          +    -0.19133456931879 * Marital_StatusDivorced
2359414   +          +     0.56263566654996 * Marital_StatusMarried
2359415   +          +    -0.42172822038882 * Marital_StatusSingle
2359416   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2359417   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2359418   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2359419   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2359420   +          +    -0.19871205065609 * Marital_StatusDivorced
2359421   +          +    -0.14730795681603 * Marital_StatusMarried
2359422   +          +     0.05055432510362 * Marital_StatusSingle
2359423   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2359424   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2359425   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2359426   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2359427   +          +    -0.35623807358995 * Marital_StatusDivorced
2359428   +          +     0.30324726283965 * Marital_StatusMarried
2359429   +          +    -0.18561093467927 * Marital_StatusSingle
2359430   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2359431   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2359432   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2359433   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2359434   +          +     0.11581014663368 * Marital_StatusDivorced
2359435   +          +    -0.31070638037659 * Marital_StatusMarried
2359436   +          +     0.17131747253949 * Marital_StatusSingle
2359437   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2359438   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2359439   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2359440   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2359441   +          +    -0.42450599871892 * Marital_StatusDivorced
2359442   +          +     0.48162905075885 * Marital_StatusMarried
2359443   +          +    -0.26618507749283 * Marital_StatusSingle
2359444   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2359445   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2359446   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2359447   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2359448   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2359449   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2359450   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2359451   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2359452   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2359453   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2359454   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2359455   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2359456   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2359457   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2359458   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2359459   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2359460   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2359461   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2359462   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2359463   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2359464   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2359465   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2359466   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2359467   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2359468   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2359469   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2359470   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2359471   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2359472   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2359473   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2359474   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2359475   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2359476   +END;
MPRINT(EM_DIAGRAM):   END;
2359477   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2359478   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2359479   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2359480   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2359481   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2359482   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2359483   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2359484   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2359485   +END;
MPRINT(EM_DIAGRAM):   END;
2359486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359487   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2359488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359489   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2359490   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2359491   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2359492   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2359493   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2359494   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2359495   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2359496   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2359497   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2359498   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2359499   +          +     1.96719021971894 * S_NumDealsPurchases
2359500   +          +    -0.44535354794671 * S_NumDistPurchases
2359501   +          +    -0.54827762736866 * S_NumStorePurchases
2359502   +          +     1.02703310241897 * S_NumWebPurchases
2359503   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2359504   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2359505   +        S_RMntFrq  +       0.651688575044 * S_Recency
2359506   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2359507   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2359508   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2359509   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2359510   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2359511   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2359512   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2359513   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2359514   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2359515   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2359516   +          +     1.34659447971131 * S_NumDealsPurchases
2359517   +          +    -0.51624251310423 * S_NumDistPurchases
2359518   +          +      -1.283121574848 * S_NumStorePurchases
2359519   +          +    -1.83517806228926 * S_NumWebPurchases
2359520   +          +     0.51321339475285 * S_NumWebVisitsMonth
2359521   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2359522   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2359523   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2359524   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2359525   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2359526   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2359527   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2359528   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2359529   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2359530   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2359531   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2359532   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2359533   +          +     0.67492297345004 * S_NumDealsPurchases
2359534   +          +    -0.40437875375926 * S_NumDistPurchases
2359535   +          +     0.36322603681545 * S_NumStorePurchases
2359536   +          +    -1.15315070635524 * S_NumWebPurchases
2359537   +          +     1.20707272201156 * S_NumWebVisitsMonth
2359538   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2359539   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2359540   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2359541   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2359542   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2359543   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2359544   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2359545   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2359546   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2359547   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2359548   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2359549   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2359550   +          +    -0.41427983342148 * S_NumDealsPurchases
2359551   +          +    -0.22714305629205 * S_NumDistPurchases
2359552   +          +    -0.78763182048862 * S_NumStorePurchases
2359553   +          +    -0.26669253451501 * S_NumWebPurchases
2359554   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2359555   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2359556   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2359557   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2359558   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2359559   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2359560   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2359561   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2359562   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2359563   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2359564   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2359565   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2359566   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2359567   +          +      0.7697882092212 * S_NumDealsPurchases
2359568   +          +     0.51864835453056 * S_NumDistPurchases
2359569   +          +    -1.18320366630444 * S_NumStorePurchases
2359570   +          +     -0.6608394639529 * S_NumWebPurchases
2359571   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2359572   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2359573   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2359574   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2359575   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2359576   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2359577   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2359578   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2359579   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2359580   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2359581   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2359582   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2359583   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2359584   +          +     1.45707983202269 * S_NumDealsPurchases
2359585   +          +     0.83341887728641 * S_NumDistPurchases
2359586   +          +    -0.36664450469423 * S_NumStorePurchases
2359587   +          +     0.63911579043339 * S_NumWebPurchases
2359588   +          +     0.67144790303554 * S_NumWebVisitsMonth
2359589   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2359590   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2359591   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2359592   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2359593   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2359594   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2359595   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2359596   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2359597   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2359598   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2359599   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2359600   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2359601   +          +     0.68491896063662 * S_NumDealsPurchases
2359602   +          +      0.5386312048592 * S_NumDistPurchases
2359603   +          +     1.28108942503912 * S_NumStorePurchases
2359604   +          +    -0.88282270505969 * S_NumWebPurchases
2359605   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2359606   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2359607   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2359608   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2359609   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2359610   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2359611   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2359612   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2359613   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2359614   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2359615   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2359616   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2359617   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2359618   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2359619   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2359620   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2359621   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2359622   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2359623   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2359624   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2359625   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2359626   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2359627   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2359628   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2359629   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2359630   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2359631   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2359632   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2359633   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2359634   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2359635   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2359636   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2359637   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2359638   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2359639   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2359640   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2359641   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2359642   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2359643   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2359644   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2359645   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2359646   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2359647   +          +    -3.97961426831865 * Marital_StatusDivorced
2359648   +          +     0.00932639813867 * Marital_StatusMarried
2359649   +          +     1.29310186574718 * Marital_StatusSingle
2359650   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2359651   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2359652   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2359653   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2359654   +          +    -0.30358516578188 * Marital_StatusDivorced
2359655   +          +    -0.96176709360703 * Marital_StatusMarried
2359656   +          +     1.26977690921649 * Marital_StatusSingle
2359657   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2359658   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2359659   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2359660   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2359661   +          +     0.55272671490757 * Marital_StatusDivorced
2359662   +          +      0.1499239288334 * Marital_StatusMarried
2359663   +          +    -0.46840941760604 * Marital_StatusSingle
2359664   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2359665   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2359666   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2359667   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2359668   +          +      -1.240735370138 * Marital_StatusDivorced
2359669   +          +    -1.20089294883599 * Marital_StatusMarried
2359670   +          +     0.57492674426149 * Marital_StatusSingle
2359671   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2359672   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2359673   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2359674   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2359675   +          +     1.05435442049802 * Marital_StatusDivorced
2359676   +          +      0.3571256349717 * Marital_StatusMarried
2359677   +          +    -0.44741267266578 * Marital_StatusSingle
2359678   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2359679   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2359680   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2359681   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2359682   +          +     2.06026721980778 * Marital_StatusDivorced
2359683   +          +    -0.49583258645166 * Marital_StatusMarried
2359684   +          +    -1.14824900824474 * Marital_StatusSingle
2359685   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2359686   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2359687   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2359688   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2359689   +          +     -1.1890908607447 * Marital_StatusDivorced
2359690   +          +    -0.46668809907123 * Marital_StatusMarried
2359691   +          +     1.20342564763422 * Marital_StatusSingle
2359692   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2359693   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2359694   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2359695   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2359696   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2359697   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2359698   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2359699   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2359700   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2359701   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2359702   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2359703   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2359704   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2359705   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2359706   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2359707   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2359708   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2359709   +END;
MPRINT(EM_DIAGRAM):   END;
2359710   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2359711   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2359712   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2359713   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2359714   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2359715   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2359716   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2359717   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2359718   +END;
MPRINT(EM_DIAGRAM):   END;
2359719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359720   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2359721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359722   +
2359723   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2359724   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2359725   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2359726   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2359727   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2359728   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2359729   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2359730   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2359731   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2359732   +end;
MPRINT(EM_DIAGRAM):   end;
2359733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2359734   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2359735   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2359736   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2359737   +   end;
MPRINT(EM_DIAGRAM):   end;
2359738   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2359739   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2359740   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2359741   +   end;
MPRINT(EM_DIAGRAM):   end;
2359742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2359743   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2359744   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2359745   +   end;
MPRINT(EM_DIAGRAM):   end;
2359746   +end;
MPRINT(EM_DIAGRAM):   end;
2359747   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2359748   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2359749   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2359750   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2359751   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2359752   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2359753   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2359754   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2359755   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2359756   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2359757   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2359758   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2359759   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2359760   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2359761   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2359762   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2359763   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2359764   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2359765   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2359766   +END;
MPRINT(EM_DIAGRAM):   END;
2359767   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2359768   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2359769   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2359770   +END;
MPRINT(EM_DIAGRAM):   END;
2359771   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2359772   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2359773   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2359774   +END;
MPRINT(EM_DIAGRAM):   END;
2359775   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2359776   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2359777   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2359778   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2359779   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2359780   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2359781   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2359782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359783   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2359784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2359785   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2359786   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2359787   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2359788   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2359789   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2359790   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2359791   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2359792   +END;
MPRINT(EM_DIAGRAM):   END;
2359793   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2359794   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2359795   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2359796   +drop
2359797   +H1x1_1
2359798   +H1x1_2
2359799   +H1x1_3
2359800   +H1x1_4
2359801   +H1x1_5
2359802   +H1x1_6
2359803   +H1x1_7
2359804   +H1x2_1
2359805   +H1x2_2
2359806   +H1x2_3
2359807   +H1x2_4
2359808   +H1x2_5
2359809   +H1x2_6
2359810   +H1x2_7
2359811   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2359812   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2359813   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2359814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359815   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2359816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359817   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2359818   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2359819   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2359820   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2359821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359822   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2359823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359824   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2359825   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2359826   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2359827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359828   +* Ensmbl42: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Average Posteriors of 3 models;
2359829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359830   +P_DepVar1 = (
2359831   +AutoNeural9_P_DepVar1 +
2359832   +AutoNeural11_P_DepVar1 +
2359833   +AutoNeural12_P_DepVar1
2359834   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 +
AutoNeural12_P_DepVar1 )/3;
2359835   +P_DepVar0 = (
2359836   +AutoNeural9_P_DepVar0 +
2359837   +AutoNeural11_P_DepVar0 +
2359838   +AutoNeural12_P_DepVar0
2359839   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 +
AutoNeural12_P_DepVar0 )/3;
2359840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359841   +* Ensmbl42: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Classification Vars;
2359842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359843   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2359844   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2359845   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2359846   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2359847   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2359848   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2359849   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2359850   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2359851   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2359852   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2359853   +end;
MPRINT(EM_DIAGRAM):   end;
2359854   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2359855   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2359856   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2359857   +end;
MPRINT(EM_DIAGRAM):   end;
2359858   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2359859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359860   +* Ensmbl42: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Producing Unformatted variable;
2359861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359862   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2359863   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2359864   +else
2359865   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2359866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359867   +* Ensmbl42: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing _WARN_ Variable;
2359868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359869   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2359870   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2359871   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2359872   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2359872  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2359873   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2359873  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2359874   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2359874  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2359875   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2359875  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2359876   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2359876  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2359877   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2359877  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2359878   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2359878  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2359879   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2359879  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2359880   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2359880  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2359881   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2359881  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2359882   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2359882  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2359883   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2359883  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2359884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359885   +* Ensmbl42: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Residual Vars;
2359886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359887   +if
2359888   +F_DepVar NE '1'
2359889   +AND F_DepVar NE '0'
2359890   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2359891   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2359892   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2359893   +end;
MPRINT(EM_DIAGRAM):   end;
2359894   +else do;
MPRINT(EM_DIAGRAM):   else do;
2359895   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2359896   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2359897   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2359898   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2359899   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2359900   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2359901   +END;
MPRINT(EM_DIAGRAM):   END;
2359902   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2359903    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL42_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2359904    quit;
2359905    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2359906    filename emflow
2359906  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359907    *------------------------------------------------------------*;
2359908    * Ensmbl42: Scoring AUTONEURAL9_VALIDATE data;
2359909    *------------------------------------------------------------*;
2359910    data EMWS8.Ensmbl42_VALIDATE
2359911    / view=EMWS8.Ensmbl42_VALIDATE
2359912    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_VALIDATE / view=EMWS8.Ensmbl42_VALIDATE ;
2359913    set EMWS8.AutoNeural9_VALIDATE
2359914    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2359915    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas.
2359916   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359917   +* Ensmbl42: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Combine model for DepVar;
2359918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359919   +* Ensmbl42: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 1 of 3;
2359920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359922   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2359923   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2359924   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2359925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359927   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2359928   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2359929   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2359930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359932   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2359933   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2359934   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2359935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359937   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2359938   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2359939   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2359940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359941   +
2359942   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2359943   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2359943  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2359944   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2359945   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2359946   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2359947   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2359948   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2359949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359950   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2359951   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2359952   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2359953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359955   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2359956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359957   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2359958   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2359959   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2359960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359961   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2359962   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2359963   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2359964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359965   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359966   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2359967   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2359968   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2359969   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359971   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2359972   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2359973   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2359974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2359975   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2359976   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2359977   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2359978   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2359979   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2359980   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2359981   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2359982   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2359983   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2359984   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2359985   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2359986   +LENGTH _WARN_ $4
2359987   +      F_DepVar  $ 12
2359988   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2359989   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2359990   +
2359991   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2359992   +
2359993   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2359994   +
2359995   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2359996   +
2359997   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2359998   +
2359999   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2360000   +
2360001   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2360002   +
2360003   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2360004   +
2360005   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2360006   +
2360007   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2360008   +
2360009   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2360010   +
2360011   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2360012   +
2360013   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2360014   +
2360015   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2360016   +
2360017   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2360018   +
2360019   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2360020   +
2360021   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2360022   +
2360023   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2360024   +
2360025   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2360026   +
2360027   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2360028   +
2360029   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2360030   +
2360031   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2360032   +
2360033   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2360034   +
2360035   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2360036   +
2360037   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2360038   +
2360039   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2360040   +
2360041   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2360042   +
2360043   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2360044   +
2360045   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2360046   +
2360047   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2360048   +
2360049   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2360050   +
2360051   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2360052   +
2360053   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2360054   +
2360055   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2360056   +
2360057   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2360058   +
2360059   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2360060   +
2360061   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2360062   +
2360063   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2360064   +
2360065   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2360066   +
2360067   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2360068   +
2360069   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2360070   +
2360071   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2360072   +
2360073   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2360074   +
2360075   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2360076   +
2360077   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2360078   +
2360079   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2360080   +
2360081   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2360082   +
2360083   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2360084   +
2360085   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2360086   +
2360087   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2360088   +
2360089   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2360090   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2360091   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2360092   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2360093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360095   +end;
MPRINT(EM_DIAGRAM):   end;
2360096   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360098   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2360099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360101   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2360102   +   end;
MPRINT(EM_DIAGRAM):   end;
2360103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360104   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2360105   +   end;
MPRINT(EM_DIAGRAM):   end;
2360106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360107   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2360108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360110   +   end;
MPRINT(EM_DIAGRAM):   end;
2360111   +end;
MPRINT(EM_DIAGRAM):   end;
2360112   +
2360113   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2360114   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2360115   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2360116   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2360117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360119   +end;
MPRINT(EM_DIAGRAM):   end;
2360120   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360122   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2360123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360125   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2360126   +   end;
MPRINT(EM_DIAGRAM):   end;
2360127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360128   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2360129   +   end;
MPRINT(EM_DIAGRAM):   end;
2360130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360131   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2360132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360134   +   end;
MPRINT(EM_DIAGRAM):   end;
2360135   +end;
MPRINT(EM_DIAGRAM):   end;
2360136   +
2360137   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2360138   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2360139   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2360140   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2360141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360143   +end;
MPRINT(EM_DIAGRAM):   end;
2360144   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360146   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2360147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360148   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360149   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2360150   +   end;
MPRINT(EM_DIAGRAM):   end;
2360151   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360152   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2360153   +   end;
MPRINT(EM_DIAGRAM):   end;
2360154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360155   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2360156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360158   +   end;
MPRINT(EM_DIAGRAM):   end;
2360159   +end;
MPRINT(EM_DIAGRAM):   end;
2360160   +
2360161   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2360162   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2360163   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2360164   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2360165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360167   +end;
MPRINT(EM_DIAGRAM):   end;
2360168   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360170   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2360171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360172   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360173   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2360174   +   end;
MPRINT(EM_DIAGRAM):   end;
2360175   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360176   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2360177   +   end;
MPRINT(EM_DIAGRAM):   end;
2360178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360179   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2360180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360182   +   end;
MPRINT(EM_DIAGRAM):   end;
2360183   +end;
MPRINT(EM_DIAGRAM):   end;
2360184   +
2360185   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2360186   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2360187   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2360188   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2360189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360191   +end;
MPRINT(EM_DIAGRAM):   end;
2360192   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360194   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2360195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360196   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360197   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2360198   +   end;
MPRINT(EM_DIAGRAM):   end;
2360199   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360200   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2360201   +   end;
MPRINT(EM_DIAGRAM):   end;
2360202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360203   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2360204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360206   +   end;
MPRINT(EM_DIAGRAM):   end;
2360207   +end;
MPRINT(EM_DIAGRAM):   end;
2360208   +
2360209   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2360210   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2360211   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2360212   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2360213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360215   +end;
MPRINT(EM_DIAGRAM):   end;
2360216   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360218   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2360219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360220   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360221   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2360222   +   end;
MPRINT(EM_DIAGRAM):   end;
2360223   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360224   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2360225   +   end;
MPRINT(EM_DIAGRAM):   end;
2360226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360227   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2360228   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360229   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360230   +   end;
MPRINT(EM_DIAGRAM):   end;
2360231   +end;
MPRINT(EM_DIAGRAM):   end;
2360232   +
2360233   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2360234   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2360235   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2360236   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2360237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360239   +end;
MPRINT(EM_DIAGRAM):   end;
2360240   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360241   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360242   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2360243   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360244   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2360245   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2360246   +   end;
MPRINT(EM_DIAGRAM):   end;
2360247   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2360248   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2360249   +   end;
MPRINT(EM_DIAGRAM):   end;
2360250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360251   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2360252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360254   +   end;
MPRINT(EM_DIAGRAM):   end;
2360255   +end;
MPRINT(EM_DIAGRAM):   end;
2360256   +
2360257   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2360258   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2360259   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2360260   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2360261   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2360262   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2360263   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2360264   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2360265   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2360266   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2360267   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2360268   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2360269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360271   +end;
MPRINT(EM_DIAGRAM):   end;
2360272   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360273   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2360274   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2360275   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360276   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2360277   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2360278   +   end;
MPRINT(EM_DIAGRAM):   end;
2360279   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2360280   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2360281   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2360282   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2360283   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2360284   +   end;
MPRINT(EM_DIAGRAM):   end;
2360285   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2360286   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2360287   +   end;
MPRINT(EM_DIAGRAM):   end;
2360288   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2360289   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2360290   +   end;
MPRINT(EM_DIAGRAM):   end;
2360291   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2360292   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2360293   +   end;
MPRINT(EM_DIAGRAM):   end;
2360294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360295   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2360296   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2360297   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2360298   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2360299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360301   +   end;
MPRINT(EM_DIAGRAM):   end;
2360302   +end;
MPRINT(EM_DIAGRAM):   end;
2360303   +
2360304   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2360305   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2360306   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2360307   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2360308   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2360309   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2360310   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2360311   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2360312   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2360313   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2360314   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2360315   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2360316   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2360317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360319   +end;
MPRINT(EM_DIAGRAM):   end;
2360320   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360321   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2360322   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2360323   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360324   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2360325   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2360326   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2360327   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2360328   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2360329   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2360330   +         end;
MPRINT(EM_DIAGRAM):   end;
2360331   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2360332   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2360333   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2360334   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2360335   +            end;
MPRINT(EM_DIAGRAM):   end;
2360336   +         end;
MPRINT(EM_DIAGRAM):   end;
2360337   +      end;
MPRINT(EM_DIAGRAM):   end;
2360338   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2360339   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2360340   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2360341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2360342   +         end;
MPRINT(EM_DIAGRAM):   end;
2360343   +      end;
MPRINT(EM_DIAGRAM):   end;
2360344   +   end;
MPRINT(EM_DIAGRAM):   end;
2360345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360346   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2360347   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2360348   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2360349   +      end;
MPRINT(EM_DIAGRAM):   end;
2360350   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2360351   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2360352   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2360353   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2360354   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2360355   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2360356   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2360357   +         end;
MPRINT(EM_DIAGRAM):   end;
2360358   +      end;
MPRINT(EM_DIAGRAM):   end;
2360359   +   end;
MPRINT(EM_DIAGRAM):   end;
2360360   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2360361   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2360362   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2360363   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2360364   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2360365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360367   +   end;
MPRINT(EM_DIAGRAM):   end;
2360368   +end;
MPRINT(EM_DIAGRAM):   end;
2360369   +
2360370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360371   +*** Checking missing input Interval
2360372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2360373   +
2360374   +IF NMISS(
2360375   +   AcceptedCmpTotal ,
2360376   +   Age ,
2360377   +   Frq ,
2360378   +   Income ,
2360379   +   Kidhome ,
2360380   +   Mnt ,
2360381   +   MntFishProducts ,
2360382   +   MntFruits ,
2360383   +   MntGoldProds ,
2360384   +   MntMeatProducts ,
2360385   +   MntSweetProducts ,
2360386   +   MntWines ,
2360387   +   MonthsAsCustomer ,
2360388   +   NumCatalogPurchases ,
2360389   +   NumDealsPurchases ,
2360390   +   NumDistPurchases ,
2360391   +   NumStorePurchases ,
2360392   +   NumWebPurchases ,
2360393   +   NumWebVisitsMonth ,
2360394   +   RFMstat ,
2360395   +   RMntFrq ,
2360396   +   Recency ,
2360397   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2360398   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2360399   +
2360400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360401   +END;
MPRINT(EM_DIAGRAM):   END;
2360402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360403   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2360404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2360406   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2360407   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2360408   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2360409   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2360410   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2360411   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2360412   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2360413   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2360414   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2360415   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2360416   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2360417   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2360418   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2360419   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2360420   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2360421   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2360422   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2360423   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2360424   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2360425   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2360426   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2360427   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2360428   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2360429   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2360430   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2360431   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2360432   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2360433   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2360434   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2360435   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2360436   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2360437   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2360438   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2360439   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2360440   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2360441   +END;
MPRINT(EM_DIAGRAM):   END;
2360442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2360443   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2360444   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2360445   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2360446   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2360447   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2360448   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2360449   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2360450   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2360451   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2360452   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2360453   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2360454   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2360455   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2360456   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2360457   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2360458   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2360459   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2360460   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2360461   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2360462   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2360463   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2360464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2360465   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2360466   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2360467   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2360468   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2360469   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2360470   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2360471   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2360472   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2360473   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2360474   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2360475   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2360476   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2360477   +   ELSE S_NumCatalogPurchases
2360478   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2360479   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2360480   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2360481   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2360482   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2360483   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2360484   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2360485   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2360486   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2360487   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2360488   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2360489   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2360490   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2360491   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2360492   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2360493   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2360494   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2360495   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2360496   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2360497   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2360498   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2360499   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2360500   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2360501   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2360502   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2360503   +END;
MPRINT(EM_DIAGRAM):   END;
2360504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360505   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2360506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360508   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2360509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360511   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2360512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360513   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2360514   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2360515   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2360516   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2360517   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2360518   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2360519   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2360520   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2360521   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2360522   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2360523   +          +    -1.09856598010056 * S_NumDealsPurchases
2360524   +          +    -0.10571850472514 * S_NumDistPurchases
2360525   +          +     0.11898210654227 * S_NumStorePurchases
2360526   +          +      0.5984912060231 * S_NumWebPurchases
2360527   +          +     0.78592531126942 * S_NumWebVisitsMonth
2360528   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2360529   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2360530   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2360531   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2360532   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2360533   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2360534   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2360535   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2360536   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2360537   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2360538   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2360539   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2360540   +          +    -0.84042044250624 * S_NumDealsPurchases
2360541   +          +    -0.10246261015488 * S_NumDistPurchases
2360542   +          +     0.06886149708824 * S_NumStorePurchases
2360543   +          +     0.63156910388199 * S_NumWebPurchases
2360544   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2360545   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2360546   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2360547   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2360548   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2360549   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2360550   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2360551   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2360552   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2360553   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2360554   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2360555   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2360556   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2360557   +          +     0.45393712455366 * S_NumDealsPurchases
2360558   +          +    -0.25292198053552 * S_NumDistPurchases
2360559   +          +    -1.35582215064749 * S_NumStorePurchases
2360560   +          +    -0.83132202302639 * S_NumWebPurchases
2360561   +          +     1.87116225272678 * S_NumWebVisitsMonth
2360562   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2360563   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2360564   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2360565   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2360566   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2360567   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2360568   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2360569   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2360570   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2360571   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2360572   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2360573   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2360574   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2360575   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2360576   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2360577   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2360578   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2360579   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2360580   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2360581   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2360582   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2360583   +          +      0.4695898100094 * Marital_StatusDivorced
2360584   +          +    -0.52137742289262 * Marital_StatusMarried
2360585   +          +    -0.32382086914936 * Marital_StatusSingle
2360586   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2360587   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2360588   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2360589   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2360590   +          +    -1.04858218653238 * Marital_StatusDivorced
2360591   +          +     2.41098335093061 * Marital_StatusMarried
2360592   +          +    -1.94696044861334 * Marital_StatusSingle
2360593   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2360594   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2360595   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2360596   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2360597   +          +     0.42964114177062 * Marital_StatusDivorced
2360598   +          +    -0.38607635605816 * Marital_StatusMarried
2360599   +          +    -0.02157405407852 * Marital_StatusSingle
2360600   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2360601   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2360602   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2360603   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2360604   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2360605   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2360606   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2360607   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2360608   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2360609   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2360610   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2360611   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2360612   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2360613   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2360614   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2360615   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2360616   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2360617   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2360618   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2360619   +END;
MPRINT(EM_DIAGRAM):   END;
2360620   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2360621   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2360622   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2360623   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2360624   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2360625   +END;
MPRINT(EM_DIAGRAM):   END;
2360626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360627   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2360628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360629   +
2360630   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2360631   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2360632   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2360633   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2360634   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2360635   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360636   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2360637   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2360638   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2360639   +end;
MPRINT(EM_DIAGRAM):   end;
2360640   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360641   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2360642   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2360643   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2360644   +   end;
MPRINT(EM_DIAGRAM):   end;
2360645   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2360646   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2360647   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2360648   +   end;
MPRINT(EM_DIAGRAM):   end;
2360649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360650   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2360651   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2360652   +   end;
MPRINT(EM_DIAGRAM):   end;
2360653   +end;
MPRINT(EM_DIAGRAM):   end;
2360654   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2360655   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2360656   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2360657   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2360658   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2360659   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2360660   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2360661   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2360662   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2360663   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2360664   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2360665   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2360666   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2360667   +END;
MPRINT(EM_DIAGRAM):   END;
2360668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2360669   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2360670   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2360671   +END;
MPRINT(EM_DIAGRAM):   END;
2360672   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2360673   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2360674   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2360675   +END;
MPRINT(EM_DIAGRAM):   END;
2360676   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2360677   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2360678   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2360679   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2360680   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2360681   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2360682   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2360683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360684   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2360685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2360686   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2360687   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2360688   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2360689   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2360690   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2360691   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2360692   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2360693   +END;
MPRINT(EM_DIAGRAM):   END;
2360694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2360695   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2360696   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2360697   +drop
2360698   +H1x1_1
2360699   +H1x1_2
2360700   +H1x1_3
2360701   +H1x1_4
2360702   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2360703   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2360704   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2360705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360706   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2360707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360708   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2360709   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2360710   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2360711   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2360712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360713   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2360714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360715   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2360716   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2360717   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2360718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360719   +* Ensmbl42: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 2 of 3;
2360720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360722   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2360723   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2360724   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2360725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2360726   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2360727   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2360728   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2360729   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2360730   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2360731   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2360732   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2360733   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2360734   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2360735   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2360736   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2360737   +LENGTH _WARN_ $4
2360738   +      F_DepVar  $ 12
2360739   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2360740   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2360741   +
2360742   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2360743   +
2360744   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2360745   +
2360746   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2360747   +
2360748   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2360749   +
2360750   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2360751   +
2360752   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2360753   +
2360754   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2360755   +
2360756   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2360757   +
2360758   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2360759   +
2360760   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2360761   +
2360762   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2360763   +
2360764   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2360765   +
2360766   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2360767   +
2360768   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2360769   +
2360770   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2360771   +
2360772   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2360773   +
2360774   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2360775   +
2360776   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2360777   +
2360778   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2360779   +
2360780   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2360781   +
2360782   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2360783   +
2360784   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2360785   +
2360786   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2360787   +
2360788   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2360789   +
2360790   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2360791   +
2360792   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2360793   +
2360794   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2360795   +
2360796   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2360797   +
2360798   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2360799   +
2360800   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2360801   +
2360802   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2360803   +
2360804   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2360805   +
2360806   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2360807   +
2360808   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2360809   +
2360810   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2360811   +
2360812   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2360813   +
2360814   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2360815   +
2360816   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2360817   +
2360818   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2360819   +
2360820   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2360821   +
2360822   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2360823   +
2360824   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2360825   +
2360826   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2360827   +
2360828   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2360829   +
2360830   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2360831   +
2360832   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2360833   +
2360834   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2360835   +
2360836   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2360837   +
2360838   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2360839   +
2360840   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2360841   +
2360842   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2360843   +
2360844   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2360845   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2360846   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2360847   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2360848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360850   +end;
MPRINT(EM_DIAGRAM):   end;
2360851   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360853   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2360854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360856   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2360857   +   end;
MPRINT(EM_DIAGRAM):   end;
2360858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360859   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2360860   +   end;
MPRINT(EM_DIAGRAM):   end;
2360861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360862   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2360863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360865   +   end;
MPRINT(EM_DIAGRAM):   end;
2360866   +end;
MPRINT(EM_DIAGRAM):   end;
2360867   +
2360868   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2360869   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2360870   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2360871   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2360872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360874   +end;
MPRINT(EM_DIAGRAM):   end;
2360875   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360877   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2360878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360880   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2360881   +   end;
MPRINT(EM_DIAGRAM):   end;
2360882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360883   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2360884   +   end;
MPRINT(EM_DIAGRAM):   end;
2360885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360886   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2360887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360889   +   end;
MPRINT(EM_DIAGRAM):   end;
2360890   +end;
MPRINT(EM_DIAGRAM):   end;
2360891   +
2360892   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2360893   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2360894   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2360895   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2360896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360898   +end;
MPRINT(EM_DIAGRAM):   end;
2360899   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360901   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2360902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360904   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2360905   +   end;
MPRINT(EM_DIAGRAM):   end;
2360906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360907   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2360908   +   end;
MPRINT(EM_DIAGRAM):   end;
2360909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360910   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2360911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360913   +   end;
MPRINT(EM_DIAGRAM):   end;
2360914   +end;
MPRINT(EM_DIAGRAM):   end;
2360915   +
2360916   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2360917   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2360918   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2360919   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2360920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360922   +end;
MPRINT(EM_DIAGRAM):   end;
2360923   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360925   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2360926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360928   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2360929   +   end;
MPRINT(EM_DIAGRAM):   end;
2360930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360931   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2360932   +   end;
MPRINT(EM_DIAGRAM):   end;
2360933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360934   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2360935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360937   +   end;
MPRINT(EM_DIAGRAM):   end;
2360938   +end;
MPRINT(EM_DIAGRAM):   end;
2360939   +
2360940   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2360941   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2360942   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2360943   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2360944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360946   +end;
MPRINT(EM_DIAGRAM):   end;
2360947   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360949   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2360950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360952   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2360953   +   end;
MPRINT(EM_DIAGRAM):   end;
2360954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360955   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2360956   +   end;
MPRINT(EM_DIAGRAM):   end;
2360957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360958   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2360959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360961   +   end;
MPRINT(EM_DIAGRAM):   end;
2360962   +end;
MPRINT(EM_DIAGRAM):   end;
2360963   +
2360964   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2360965   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2360966   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2360967   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2360968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360970   +end;
MPRINT(EM_DIAGRAM):   end;
2360971   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360973   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2360974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2360976   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2360977   +   end;
MPRINT(EM_DIAGRAM):   end;
2360978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2360979   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2360980   +   end;
MPRINT(EM_DIAGRAM):   end;
2360981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2360982   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2360983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2360984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360985   +   end;
MPRINT(EM_DIAGRAM):   end;
2360986   +end;
MPRINT(EM_DIAGRAM):   end;
2360987   +
2360988   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2360989   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2360990   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2360991   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2360992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2360993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2360994   +end;
MPRINT(EM_DIAGRAM):   end;
2360995   +else do;
MPRINT(EM_DIAGRAM):   else do;
2360996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2360997   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2360998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2360999   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2361000   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2361001   +   end;
MPRINT(EM_DIAGRAM):   end;
2361002   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2361003   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2361004   +   end;
MPRINT(EM_DIAGRAM):   end;
2361005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361006   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2361007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361009   +   end;
MPRINT(EM_DIAGRAM):   end;
2361010   +end;
MPRINT(EM_DIAGRAM):   end;
2361011   +
2361012   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2361013   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2361014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2361015   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2361016   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2361017   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2361018   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2361019   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2361020   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2361021   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2361022   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2361023   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2361024   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361026   +end;
MPRINT(EM_DIAGRAM):   end;
2361027   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361028   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2361029   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2361030   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361031   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2361032   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2361033   +   end;
MPRINT(EM_DIAGRAM):   end;
2361034   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2361035   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2361036   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2361037   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2361038   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2361039   +   end;
MPRINT(EM_DIAGRAM):   end;
2361040   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2361041   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2361042   +   end;
MPRINT(EM_DIAGRAM):   end;
2361043   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2361044   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2361045   +   end;
MPRINT(EM_DIAGRAM):   end;
2361046   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2361047   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2361048   +   end;
MPRINT(EM_DIAGRAM):   end;
2361049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361050   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2361051   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2361052   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2361053   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2361054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361056   +   end;
MPRINT(EM_DIAGRAM):   end;
2361057   +end;
MPRINT(EM_DIAGRAM):   end;
2361058   +
2361059   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2361060   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2361061   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2361062   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2361063   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2361064   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2361065   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2361066   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2361067   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2361068   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2361069   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2361070   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2361071   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2361072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361074   +end;
MPRINT(EM_DIAGRAM):   end;
2361075   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361076   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2361077   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2361078   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361079   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2361080   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2361081   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2361082   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2361083   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2361084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361085   +         end;
MPRINT(EM_DIAGRAM):   end;
2361086   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2361087   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2361088   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2361089   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361090   +            end;
MPRINT(EM_DIAGRAM):   end;
2361091   +         end;
MPRINT(EM_DIAGRAM):   end;
2361092   +      end;
MPRINT(EM_DIAGRAM):   end;
2361093   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2361094   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2361095   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2361096   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361097   +         end;
MPRINT(EM_DIAGRAM):   end;
2361098   +      end;
MPRINT(EM_DIAGRAM):   end;
2361099   +   end;
MPRINT(EM_DIAGRAM):   end;
2361100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361101   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2361102   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2361103   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361104   +      end;
MPRINT(EM_DIAGRAM):   end;
2361105   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2361106   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2361107   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2361108   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2361109   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2361110   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2361111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361112   +         end;
MPRINT(EM_DIAGRAM):   end;
2361113   +      end;
MPRINT(EM_DIAGRAM):   end;
2361114   +   end;
MPRINT(EM_DIAGRAM):   end;
2361115   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2361116   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2361117   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2361118   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2361119   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2361120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361122   +   end;
MPRINT(EM_DIAGRAM):   end;
2361123   +end;
MPRINT(EM_DIAGRAM):   end;
2361124   +
2361125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361126   +*** Checking missing input Interval
2361127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2361128   +
2361129   +IF NMISS(
2361130   +   AcceptedCmpTotal ,
2361131   +   Age ,
2361132   +   Frq ,
2361133   +   Income ,
2361134   +   Kidhome ,
2361135   +   Mnt ,
2361136   +   MntFishProducts ,
2361137   +   MntFruits ,
2361138   +   MntGoldProds ,
2361139   +   MntMeatProducts ,
2361140   +   MntSweetProducts ,
2361141   +   MntWines ,
2361142   +   MonthsAsCustomer ,
2361143   +   NumCatalogPurchases ,
2361144   +   NumDealsPurchases ,
2361145   +   NumDistPurchases ,
2361146   +   NumStorePurchases ,
2361147   +   NumWebPurchases ,
2361148   +   NumWebVisitsMonth ,
2361149   +   RFMstat ,
2361150   +   RMntFrq ,
2361151   +   Recency ,
2361152   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2361153   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2361154   +
2361155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361156   +END;
MPRINT(EM_DIAGRAM):   END;
2361157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361158   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2361159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361160   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2361161   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2361162   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2361163   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2361164   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2361165   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2361166   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2361167   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2361168   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2361169   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2361170   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2361171   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2361172   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2361173   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2361174   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2361175   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2361176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2361177   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2361178   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2361179   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2361180   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2361181   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2361182   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2361183   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2361184   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2361185   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2361186   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2361187   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2361188   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2361189   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2361190   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2361191   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2361192   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2361193   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2361194   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2361195   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2361196   +END;
MPRINT(EM_DIAGRAM):   END;
2361197   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2361198   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2361199   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2361200   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2361201   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2361202   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2361203   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2361204   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2361205   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2361206   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2361207   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2361208   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2361209   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2361210   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2361211   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2361212   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2361213   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2361214   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2361215   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2361216   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2361217   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2361218   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2361219   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2361220   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2361221   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2361222   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2361223   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2361224   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2361225   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2361226   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2361227   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2361228   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2361229   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2361230   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2361231   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2361232   +   ELSE S_NumCatalogPurchases
2361233   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2361234   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2361235   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2361236   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2361237   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2361238   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2361239   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2361240   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2361241   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2361242   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2361243   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2361244   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2361245   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2361246   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2361247   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2361248   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2361249   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2361250   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2361251   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2361252   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2361253   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2361254   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2361255   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2361256   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2361257   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2361258   +END;
MPRINT(EM_DIAGRAM):   END;
2361259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361260   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2361261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361263   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2361264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361266   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2361267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2361269   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2361270   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2361271   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2361272   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2361273   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2361274   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2361275   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2361276   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2361277   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2361278   +          +     0.19770934886328 * S_NumDealsPurchases
2361279   +          +      0.0515215988111 * S_NumDistPurchases
2361280   +          +    -0.34569346346089 * S_NumStorePurchases
2361281   +          +    -0.27122293596124 * S_NumWebPurchases
2361282   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2361283   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2361284   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2361285   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2361286   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2361287   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2361288   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2361289   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2361290   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2361291   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2361292   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2361293   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2361294   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2361295   +          +     0.54308887602031 * S_NumDealsPurchases
2361296   +          +    -0.22507315320192 * S_NumDistPurchases
2361297   +          +    -0.79861387328361 * S_NumStorePurchases
2361298   +          +    -0.45467494002747 * S_NumWebPurchases
2361299   +          +      0.2119048824613 * S_NumWebVisitsMonth
2361300   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2361301   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2361302   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2361303   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2361304   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2361305   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2361306   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2361307   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2361308   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2361309   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2361310   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2361311   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2361312   +          +     -0.0771083149302 * S_NumDealsPurchases
2361313   +          +     0.03403621221162 * S_NumDistPurchases
2361314   +          +     0.61303946422025 * S_NumStorePurchases
2361315   +          +     0.27126793634053 * S_NumWebPurchases
2361316   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2361317   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2361318   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2361319   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2361320   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2361321   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2361322   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2361323   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2361324   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2361325   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2361326   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2361327   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2361328   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2361329   +          +     0.29894603062327 * S_NumDealsPurchases
2361330   +          +     0.07614620530875 * S_NumDistPurchases
2361331   +          +     0.15402335009896 * S_NumStorePurchases
2361332   +          +     0.10615749096863 * S_NumWebPurchases
2361333   +          +     0.41962286816879 * S_NumWebVisitsMonth
2361334   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2361335   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2361336   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2361337   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2361338   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2361339   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2361340   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2361341   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2361342   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2361343   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2361344   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2361345   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2361346   +          +     0.14392502416642 * S_NumDealsPurchases
2361347   +          +    -0.10026304978633 * S_NumDistPurchases
2361348   +          +     -0.0588453022746 * S_NumStorePurchases
2361349   +          +     0.24799398610395 * S_NumWebPurchases
2361350   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2361351   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2361352   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2361353   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2361354   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2361355   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2361356   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2361357   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2361358   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2361359   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2361360   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2361361   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2361362   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2361363   +          +     0.08149600854964 * S_NumDealsPurchases
2361364   +          +     0.16873541613513 * S_NumDistPurchases
2361365   +          +    -0.20437343413446 * S_NumStorePurchases
2361366   +          +     -0.1671107527288 * S_NumWebPurchases
2361367   +          +     0.03677043100993 * S_NumWebVisitsMonth
2361368   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2361369   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2361370   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2361371   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2361372   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2361373   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2361374   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2361375   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2361376   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2361377   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2361378   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2361379   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2361380   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2361381   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2361382   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2361383   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2361384   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2361385   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2361386   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2361387   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2361388   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2361389   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2361390   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2361391   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2361392   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2361393   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2361394   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2361395   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2361396   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2361397   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2361398   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2361399   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2361400   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2361401   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2361402   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2361403   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2361404   +          +    -0.31045295887604 * Marital_StatusDivorced
2361405   +          +    -0.01109401001539 * Marital_StatusMarried
2361406   +          +     0.01325135981025 * Marital_StatusSingle
2361407   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2361408   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2361409   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2361410   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2361411   +          +     0.02275101861599 * Marital_StatusDivorced
2361412   +          +     0.20271548664903 * Marital_StatusMarried
2361413   +          +    -0.12132069210718 * Marital_StatusSingle
2361414   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2361415   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2361416   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2361417   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2361418   +          +     -0.4992959703281 * Marital_StatusDivorced
2361419   +          +     0.62071659624138 * Marital_StatusMarried
2361420   +          +    -0.21776202274494 * Marital_StatusSingle
2361421   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2361422   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2361423   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2361424   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2361425   +          +     0.05626212670587 * Marital_StatusDivorced
2361426   +          +     0.14353891364597 * Marital_StatusMarried
2361427   +          +    -0.29006765622997 * Marital_StatusSingle
2361428   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2361429   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2361430   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2361431   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2361432   +          +    -0.21206913700604 * Marital_StatusDivorced
2361433   +          +     0.58790643614629 * Marital_StatusMarried
2361434   +          +    -0.65995982578062 * Marital_StatusSingle
2361435   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2361436   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2361437   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2361438   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2361439   +          +    -0.05047370516008 * Marital_StatusDivorced
2361440   +          +    -0.23139090963669 * Marital_StatusMarried
2361441   +          +     0.04816197463249 * Marital_StatusSingle
2361442   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2361443   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2361444   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2361445   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2361446   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2361447   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2361448   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2361449   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2361450   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2361451   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2361452   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2361453   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2361454   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2361455   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2361456   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2361457   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2361458   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2361459   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2361460   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2361461   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2361462   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2361463   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2361464   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2361465   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2361466   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2361467   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2361468   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2361469   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2361470   +END;
MPRINT(EM_DIAGRAM):   END;
2361471   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2361472   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2361473   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2361474   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2361475   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2361476   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2361477   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2361478   +END;
MPRINT(EM_DIAGRAM):   END;
2361479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361480   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2361481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361482   +
2361483   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2361484   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2361485   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2361486   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2361487   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2361488   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361489   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2361490   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2361491   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2361492   +end;
MPRINT(EM_DIAGRAM):   end;
2361493   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361494   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2361495   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2361496   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2361497   +   end;
MPRINT(EM_DIAGRAM):   end;
2361498   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2361499   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2361500   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2361501   +   end;
MPRINT(EM_DIAGRAM):   end;
2361502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361503   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2361504   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2361505   +   end;
MPRINT(EM_DIAGRAM):   end;
2361506   +end;
MPRINT(EM_DIAGRAM):   end;
2361507   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2361508   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2361509   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2361510   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2361511   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2361512   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2361513   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2361514   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2361515   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2361516   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2361517   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2361518   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2361519   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2361520   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2361521   +END;
MPRINT(EM_DIAGRAM):   END;
2361522   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2361523   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2361524   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2361525   +END;
MPRINT(EM_DIAGRAM):   END;
2361526   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2361527   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2361528   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2361529   +END;
MPRINT(EM_DIAGRAM):   END;
2361530   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2361531   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2361532   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2361533   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2361534   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2361535   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2361536   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2361537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361538   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2361539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361540   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2361541   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2361542   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2361543   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2361544   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2361545   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2361546   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2361547   +END;
MPRINT(EM_DIAGRAM):   END;
2361548   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2361549   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2361550   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2361551   +drop
2361552   +H1x1_1
2361553   +H1x1_2
2361554   +H1x1_3
2361555   +H1x1_4
2361556   +H1x1_5
2361557   +H1x1_6
2361558   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2361559   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2361560   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2361561   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361562   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2361563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361564   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2361565   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2361566   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2361567   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2361568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361569   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2361570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361571   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2361572   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2361573   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2361574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361575   +* Ensmbl42: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 3 of 3;
2361576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361578   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2361579   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2361580   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2361581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2361582   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2361583   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2361584   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2361585   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2361586   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2361587   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2361588   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2361589   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2361590   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2361591   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2361592   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2361593   +LENGTH _WARN_ $4
2361594   +      F_DepVar  $ 12
2361595   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2361596   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2361597   +
2361598   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2361599   +
2361600   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2361601   +
2361602   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2361603   +
2361604   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2361605   +
2361606   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2361607   +
2361608   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2361609   +
2361610   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2361611   +
2361612   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2361613   +
2361614   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2361615   +
2361616   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2361617   +
2361618   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2361619   +
2361620   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2361621   +
2361622   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2361623   +
2361624   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2361625   +
2361626   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2361627   +
2361628   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2361629   +
2361630   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2361631   +
2361632   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2361633   +
2361634   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2361635   +
2361636   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2361637   +
2361638   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2361639   +
2361640   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2361641   +
2361642   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2361643   +
2361644   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2361645   +
2361646   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2361647   +
2361648   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2361649   +
2361650   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2361651   +
2361652   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2361653   +
2361654   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2361655   +
2361656   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2361657   +
2361658   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2361659   +
2361660   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2361661   +
2361662   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2361663   +
2361664   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2361665   +
2361666   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2361667   +
2361668   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2361669   +
2361670   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2361671   +
2361672   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2361673   +
2361674   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2361675   +
2361676   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2361677   +
2361678   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2361679   +
2361680   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2361681   +
2361682   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2361683   +
2361684   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2361685   +
2361686   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2361687   +
2361688   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2361689   +
2361690   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2361691   +
2361692   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2361693   +
2361694   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2361695   +
2361696   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2361697   +
2361698   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2361699   +
2361700   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2361701   +
2361702   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2361703   +
2361704   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2361705   +
2361706   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2361707   +
2361708   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2361709   +
2361710   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2361711   +
2361712   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2361713   +
2361714   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2361715   +
2361716   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2361717   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2361718   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2361719   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2361720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361722   +end;
MPRINT(EM_DIAGRAM):   end;
2361723   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361725   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2361726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361727   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361728   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2361729   +   end;
MPRINT(EM_DIAGRAM):   end;
2361730   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361731   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2361732   +   end;
MPRINT(EM_DIAGRAM):   end;
2361733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361734   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2361735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361737   +   end;
MPRINT(EM_DIAGRAM):   end;
2361738   +end;
MPRINT(EM_DIAGRAM):   end;
2361739   +
2361740   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2361741   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2361742   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2361743   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2361744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361746   +end;
MPRINT(EM_DIAGRAM):   end;
2361747   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361749   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2361750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361751   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361752   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2361753   +   end;
MPRINT(EM_DIAGRAM):   end;
2361754   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361755   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2361756   +   end;
MPRINT(EM_DIAGRAM):   end;
2361757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361758   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2361759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361761   +   end;
MPRINT(EM_DIAGRAM):   end;
2361762   +end;
MPRINT(EM_DIAGRAM):   end;
2361763   +
2361764   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2361765   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2361766   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2361767   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2361768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361770   +end;
MPRINT(EM_DIAGRAM):   end;
2361771   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361772   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361773   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2361774   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361775   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361776   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2361777   +   end;
MPRINT(EM_DIAGRAM):   end;
2361778   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361779   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2361780   +   end;
MPRINT(EM_DIAGRAM):   end;
2361781   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361782   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2361783   +      substr(_warn_,2,1) = 'U';
The SAS System
 
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361785   +   end;
MPRINT(EM_DIAGRAM):   end;
2361786   +end;
MPRINT(EM_DIAGRAM):   end;
2361787   +
2361788   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2361789   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2361790   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2361791   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2361792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361794   +end;
MPRINT(EM_DIAGRAM):   end;
2361795   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361797   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2361798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361800   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2361801   +   end;
MPRINT(EM_DIAGRAM):   end;
2361802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361803   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2361804   +   end;
MPRINT(EM_DIAGRAM):   end;
2361805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361806   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2361807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361809   +   end;
MPRINT(EM_DIAGRAM):   end;
2361810   +end;
MPRINT(EM_DIAGRAM):   end;
2361811   +
2361812   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2361813   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2361814   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2361815   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2361816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361818   +end;
MPRINT(EM_DIAGRAM):   end;
2361819   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361821   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2361822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361823   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361824   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2361825   +   end;
MPRINT(EM_DIAGRAM):   end;
2361826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361827   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2361828   +   end;
MPRINT(EM_DIAGRAM):   end;
2361829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361830   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2361831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361833   +   end;
MPRINT(EM_DIAGRAM):   end;
2361834   +end;
MPRINT(EM_DIAGRAM):   end;
2361835   +
2361836   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2361837   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2361838   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2361839   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2361840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361842   +end;
MPRINT(EM_DIAGRAM):   end;
2361843   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361845   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2361846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2361848   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2361849   +   end;
MPRINT(EM_DIAGRAM):   end;
2361850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2361851   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2361852   +   end;
MPRINT(EM_DIAGRAM):   end;
2361853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361854   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2361855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361857   +   end;
MPRINT(EM_DIAGRAM):   end;
2361858   +end;
MPRINT(EM_DIAGRAM):   end;
2361859   +
2361860   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2361861   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2361862   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2361863   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2361864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361866   +end;
MPRINT(EM_DIAGRAM):   end;
2361867   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2361869   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2361870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361871   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2361872   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2361873   +   end;
MPRINT(EM_DIAGRAM):   end;
2361874   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2361875   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2361876   +   end;
MPRINT(EM_DIAGRAM):   end;
2361877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361878   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2361879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361881   +   end;
MPRINT(EM_DIAGRAM):   end;
2361882   +end;
MPRINT(EM_DIAGRAM):   end;
2361883   +
2361884   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2361885   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2361886   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2361887   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2361888   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2361889   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2361890   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2361891   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2361892   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2361893   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2361894   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2361895   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2361896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361898   +end;
MPRINT(EM_DIAGRAM):   end;
2361899   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361900   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2361901   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2361902   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361903   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2361904   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2361905   +   end;
MPRINT(EM_DIAGRAM):   end;
2361906   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2361907   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2361908   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2361909   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2361910   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2361911   +   end;
MPRINT(EM_DIAGRAM):   end;
2361912   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2361913   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2361914   +   end;
MPRINT(EM_DIAGRAM):   end;
2361915   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2361916   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2361917   +   end;
MPRINT(EM_DIAGRAM):   end;
2361918   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2361919   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2361920   +   end;
MPRINT(EM_DIAGRAM):   end;
2361921   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361922   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2361923   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2361924   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2361925   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2361926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361928   +   end;
MPRINT(EM_DIAGRAM):   end;
2361929   +end;
MPRINT(EM_DIAGRAM):   end;
2361930   +
2361931   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2361932   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2361933   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2361934   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2361935   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2361936   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2361937   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2361938   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2361939   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2361940   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2361941   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2361942   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2361943   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2361944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2361945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361946   +end;
MPRINT(EM_DIAGRAM):   end;
2361947   +else do;
MPRINT(EM_DIAGRAM):   else do;
2361948   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2361949   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2361950   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2361951   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2361952   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2361953   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2361954   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2361955   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2361956   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361957   +         end;
MPRINT(EM_DIAGRAM):   end;
2361958   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2361959   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2361960   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2361961   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361962   +            end;
MPRINT(EM_DIAGRAM):   end;
2361963   +         end;
MPRINT(EM_DIAGRAM):   end;
2361964   +      end;
MPRINT(EM_DIAGRAM):   end;
2361965   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2361966   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2361967   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2361968   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361969   +         end;
MPRINT(EM_DIAGRAM):   end;
2361970   +      end;
MPRINT(EM_DIAGRAM):   end;
2361971   +   end;
MPRINT(EM_DIAGRAM):   end;
2361972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2361973   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2361974   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2361975   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361976   +      end;
MPRINT(EM_DIAGRAM):   end;
2361977   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2361978   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2361979   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2361980   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2361981   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2361982   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2361983   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2361984   +         end;
MPRINT(EM_DIAGRAM):   end;
2361985   +      end;
MPRINT(EM_DIAGRAM):   end;
2361986   +   end;
MPRINT(EM_DIAGRAM):   end;
2361987   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2361988   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2361989   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2361990   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2361991   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2361992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2361993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2361994   +   end;
MPRINT(EM_DIAGRAM):   end;
2361995   +end;
MPRINT(EM_DIAGRAM):   end;
2361996   +
2361997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2361998   +*** Checking missing input Interval
2361999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2362000   +
2362001   +IF NMISS(
2362002   +   AcceptedCmpTotal ,
2362003   +   Age ,
2362004   +   Frq ,
2362005   +   Income ,
2362006   +   Kidhome ,
2362007   +   Mnt ,
2362008   +   MntFishProducts ,
2362009   +   MntFruits ,
2362010   +   MntGoldProds ,
2362011   +   MntMeatProducts ,
2362012   +   MntSweetProducts ,
2362013   +   MntWines ,
2362014   +   MonthsAsCustomer ,
2362015   +   NumCatalogPurchases ,
2362016   +   NumDealsPurchases ,
2362017   +   NumDistPurchases ,
2362018   +   NumStorePurchases ,
2362019   +   NumWebPurchases ,
2362020   +   NumWebVisitsMonth ,
2362021   +   RFMstat ,
2362022   +   RMntFrq ,
2362023   +   Recency ,
2362024   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2362025   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2362026   +
2362027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2362028   +END;
MPRINT(EM_DIAGRAM):   END;
2362029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362030   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2362031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2362033   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2362034   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2362035   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2362036   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2362037   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2362038   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2362039   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2362040   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2362041   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2362042   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2362043   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2362044   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2362045   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2362046   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2362047   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2362048   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2362049   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2362050   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2362051   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2362052   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2362053   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2362054   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2362055   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2362056   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2362057   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2362058   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2362059   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2362060   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2362061   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2362062   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2362063   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2362064   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2362065   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2362066   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2362067   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2362068   +END;
MPRINT(EM_DIAGRAM):   END;
2362069   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2362070   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2362071   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2362072   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2362073   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2362074   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2362075   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2362076   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2362077   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2362078   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2362079   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2362080   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2362081   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2362082   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2362083   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2362084   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2362085   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2362086   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2362087   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2362088   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2362089   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2362090   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2362091   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2362092   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2362093   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2362094   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2362095   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2362096   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2362097   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2362098   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2362099   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2362100   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2362101   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2362102   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2362103   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2362104   +   ELSE S_NumCatalogPurchases
2362105   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2362106   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2362107   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2362108   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2362109   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2362110   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2362111   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2362112   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2362113   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2362114   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2362115   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2362116   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2362117   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2362118   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2362119   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2362120   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2362121   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2362122   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2362123   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2362124   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2362125   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2362126   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2362127   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2362128   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2362129   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2362130   +END;
MPRINT(EM_DIAGRAM):   END;
2362131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362132   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2362133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362135   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2362136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362138   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2362139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362140   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2362141   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2362142   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2362143   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2362144   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2362145   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2362146   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2362147   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2362148   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2362149   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2362150   +          +      0.1112677116841 * S_NumDealsPurchases
2362151   +          +     0.01563584187072 * S_NumDistPurchases
2362152   +          +     0.19193969522995 * S_NumStorePurchases
2362153   +          +      0.3133556199984 * S_NumWebPurchases
2362154   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2362155   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2362156   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2362157   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2362158   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2362159   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2362160   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2362161   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2362162   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2362163   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2362164   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2362165   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2362166   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2362167   +          +     0.30225032753275 * S_NumDealsPurchases
2362168   +          +     0.33833359923595 * S_NumDistPurchases
2362169   +          +    -0.20255599575849 * S_NumStorePurchases
2362170   +          +    -0.12040071168942 * S_NumWebPurchases
2362171   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2362172   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2362173   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2362174   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2362175   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2362176   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2362177   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2362178   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2362179   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2362180   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2362181   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2362182   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2362183   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2362184   +          +     0.16792903091627 * S_NumDealsPurchases
2362185   +          +    -0.37408945626745 * S_NumDistPurchases
2362186   +          +    -0.18067262995566 * S_NumStorePurchases
2362187   +          +     0.21192146789881 * S_NumWebPurchases
2362188   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2362189   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2362190   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2362191   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2362192   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2362193   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2362194   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2362195   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2362196   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2362197   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2362198   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2362199   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2362200   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2362201   +          +     0.29407429399136 * S_NumDealsPurchases
2362202   +          +     0.01610745252195 * S_NumDistPurchases
2362203   +          +    -0.17767939085628 * S_NumStorePurchases
2362204   +          +    -0.15168958538637 * S_NumWebPurchases
2362205   +          +     0.17433622143988 * S_NumWebVisitsMonth
2362206   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2362207   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2362208   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2362209   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2362210   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2362211   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2362212   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2362213   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2362214   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2362215   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2362216   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2362217   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2362218   +          +    -0.37976451362108 * S_NumDealsPurchases
2362219   +          +    -0.17027731520801 * S_NumDistPurchases
2362220   +          +     0.59849493667087 * S_NumStorePurchases
2362221   +          +     0.65481480560301 * S_NumWebPurchases
2362222   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2362223   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2362224   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2362225   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2362226   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2362227   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2362228   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2362229   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2362230   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2362231   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2362232   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2362233   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2362234   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2362235   +          +    -0.07686699131623 * S_NumDealsPurchases
2362236   +          +    -0.07220460738926 * S_NumDistPurchases
2362237   +          +    -0.06554027468389 * S_NumStorePurchases
2362238   +          +     0.10422838158001 * S_NumWebPurchases
2362239   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2362240   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2362241   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2362242   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2362243   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2362244   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2362245   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2362246   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2362247   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2362248   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2362249   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2362250   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2362251   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2362252   +          +    -0.07920122387563 * S_NumDealsPurchases
2362253   +          +      0.3649244061347 * S_NumDistPurchases
2362254   +          +     0.36475853688403 * S_NumStorePurchases
2362255   +          +     0.02153991404063 * S_NumWebPurchases
2362256   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2362257   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2362258   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2362259   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2362260   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2362261   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2362262   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2362263   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2362264   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2362265   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2362266   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2362267   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2362268   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2362269   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2362270   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2362271   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2362272   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2362273   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2362274   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2362275   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2362276   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2362277   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2362278   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2362279   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2362280   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2362281   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2362282   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2362283   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2362284   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2362285   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2362286   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2362287   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2362288   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2362289   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2362290   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2362291   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2362292   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2362293   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2362294   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2362295   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2362296   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2362297   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2362298   +          +     0.07744097241553 * Marital_StatusDivorced
2362299   +          +     -0.0247463100385 * Marital_StatusMarried
2362300   +          +     0.05804915234573 * Marital_StatusSingle
2362301   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2362302   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2362303   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2362304   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2362305   +          +     0.01390668926269 * Marital_StatusDivorced
2362306   +          +     0.01136282152074 * Marital_StatusMarried
2362307   +          +     0.12450246418789 * Marital_StatusSingle
2362308   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2362309   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2362310   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2362311   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2362312   +          +    -0.19133456931879 * Marital_StatusDivorced
2362313   +          +     0.56263566654996 * Marital_StatusMarried
2362314   +          +    -0.42172822038882 * Marital_StatusSingle
2362315   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2362316   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2362317   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2362318   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2362319   +          +    -0.19871205065609 * Marital_StatusDivorced
2362320   +          +    -0.14730795681603 * Marital_StatusMarried
2362321   +          +     0.05055432510362 * Marital_StatusSingle
2362322   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2362323   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2362324   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2362325   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2362326   +          +    -0.35623807358995 * Marital_StatusDivorced
2362327   +          +     0.30324726283965 * Marital_StatusMarried
2362328   +          +    -0.18561093467927 * Marital_StatusSingle
2362329   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2362330   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2362331   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2362332   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2362333   +          +     0.11581014663368 * Marital_StatusDivorced
2362334   +          +    -0.31070638037659 * Marital_StatusMarried
2362335   +          +     0.17131747253949 * Marital_StatusSingle
2362336   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2362337   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2362338   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2362339   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2362340   +          +    -0.42450599871892 * Marital_StatusDivorced
2362341   +          +     0.48162905075885 * Marital_StatusMarried
2362342   +          +    -0.26618507749283 * Marital_StatusSingle
2362343   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2362344   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2362345   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2362346   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2362347   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2362348   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2362349   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2362350   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2362351   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2362352   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2362353   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2362354   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2362355   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2362356   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2362357   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2362358   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2362359   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2362360   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2362361   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2362362   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2362363   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2362364   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2362365   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2362366   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2362367   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2362368   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2362369   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2362370   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2362371   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2362372   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2362373   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2362374   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2362375   +END;
MPRINT(EM_DIAGRAM):   END;
2362376   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2362377   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2362378   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2362379   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2362380   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2362381   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2362382   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2362383   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2362384   +END;
MPRINT(EM_DIAGRAM):   END;
2362385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362386   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2362387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2362389   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2362390   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2362391   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2362392   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2362393   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2362394   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2362395   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2362396   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2362397   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2362398   +          +     1.96719021971894 * S_NumDealsPurchases
2362399   +          +    -0.44535354794671 * S_NumDistPurchases
2362400   +          +    -0.54827762736866 * S_NumStorePurchases
2362401   +          +     1.02703310241897 * S_NumWebPurchases
2362402   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2362403   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2362404   +        S_RMntFrq  +       0.651688575044 * S_Recency
2362405   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2362406   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2362407   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2362408   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2362409   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2362410   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2362411   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2362412   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2362413   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2362414   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2362415   +          +     1.34659447971131 * S_NumDealsPurchases
2362416   +          +    -0.51624251310423 * S_NumDistPurchases
2362417   +          +      -1.283121574848 * S_NumStorePurchases
2362418   +          +    -1.83517806228926 * S_NumWebPurchases
2362419   +          +     0.51321339475285 * S_NumWebVisitsMonth
2362420   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2362421   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2362422   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2362423   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2362424   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2362425   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2362426   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2362427   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2362428   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2362429   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2362430   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2362431   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2362432   +          +     0.67492297345004 * S_NumDealsPurchases
2362433   +          +    -0.40437875375926 * S_NumDistPurchases
2362434   +          +     0.36322603681545 * S_NumStorePurchases
2362435   +          +    -1.15315070635524 * S_NumWebPurchases
2362436   +          +     1.20707272201156 * S_NumWebVisitsMonth
2362437   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2362438   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2362439   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2362440   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2362441   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2362442   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2362443   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2362444   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2362445   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2362446   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2362447   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2362448   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2362449   +          +    -0.41427983342148 * S_NumDealsPurchases
2362450   +          +    -0.22714305629205 * S_NumDistPurchases
2362451   +          +    -0.78763182048862 * S_NumStorePurchases
2362452   +          +    -0.26669253451501 * S_NumWebPurchases
2362453   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2362454   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2362455   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2362456   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2362457   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2362458   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2362459   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2362460   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2362461   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2362462   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2362463   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2362464   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2362465   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2362466   +          +      0.7697882092212 * S_NumDealsPurchases
2362467   +          +     0.51864835453056 * S_NumDistPurchases
2362468   +          +    -1.18320366630444 * S_NumStorePurchases
2362469   +          +     -0.6608394639529 * S_NumWebPurchases
2362470   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2362471   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2362472   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2362473   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2362474   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2362475   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2362476   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2362477   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2362478   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2362479   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2362480   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2362481   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2362482   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2362483   +          +     1.45707983202269 * S_NumDealsPurchases
2362484   +          +     0.83341887728641 * S_NumDistPurchases
2362485   +          +    -0.36664450469423 * S_NumStorePurchases
2362486   +          +     0.63911579043339 * S_NumWebPurchases
2362487   +          +     0.67144790303554 * S_NumWebVisitsMonth
2362488   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2362489   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2362490   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2362491   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2362492   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2362493   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2362494   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2362495   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2362496   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2362497   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2362498   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2362499   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2362500   +          +     0.68491896063662 * S_NumDealsPurchases
2362501   +          +      0.5386312048592 * S_NumDistPurchases
2362502   +          +     1.28108942503912 * S_NumStorePurchases
2362503   +          +    -0.88282270505969 * S_NumWebPurchases
2362504   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2362505   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2362506   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2362507   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2362508   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2362509   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2362510   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2362511   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2362512   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2362513   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2362514   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2362515   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2362516   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2362517   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2362518   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2362519   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2362520   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2362521   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2362522   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2362523   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2362524   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2362525   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2362526   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2362527   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2362528   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2362529   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2362530   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2362531   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2362532   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2362533   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2362534   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2362535   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2362536   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2362537   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2362538   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2362539   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2362540   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2362541   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2362542   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2362543   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2362544   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2362545   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2362546   +          +    -3.97961426831865 * Marital_StatusDivorced
2362547   +          +     0.00932639813867 * Marital_StatusMarried
2362548   +          +     1.29310186574718 * Marital_StatusSingle
2362549   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2362550   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2362551   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2362552   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2362553   +          +    -0.30358516578188 * Marital_StatusDivorced
2362554   +          +    -0.96176709360703 * Marital_StatusMarried
2362555   +          +     1.26977690921649 * Marital_StatusSingle
2362556   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2362557   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2362558   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2362559   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2362560   +          +     0.55272671490757 * Marital_StatusDivorced
2362561   +          +      0.1499239288334 * Marital_StatusMarried
2362562   +          +    -0.46840941760604 * Marital_StatusSingle
2362563   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2362564   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2362565   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2362566   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2362567   +          +      -1.240735370138 * Marital_StatusDivorced
2362568   +          +    -1.20089294883599 * Marital_StatusMarried
2362569   +          +     0.57492674426149 * Marital_StatusSingle
2362570   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2362571   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2362572   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2362573   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2362574   +          +     1.05435442049802 * Marital_StatusDivorced
2362575   +          +      0.3571256349717 * Marital_StatusMarried
2362576   +          +    -0.44741267266578 * Marital_StatusSingle
2362577   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2362578   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2362579   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2362580   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2362581   +          +     2.06026721980778 * Marital_StatusDivorced
2362582   +          +    -0.49583258645166 * Marital_StatusMarried
2362583   +          +    -1.14824900824474 * Marital_StatusSingle
2362584   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2362585   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2362586   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2362587   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2362588   +          +     -1.1890908607447 * Marital_StatusDivorced
2362589   +          +    -0.46668809907123 * Marital_StatusMarried
2362590   +          +     1.20342564763422 * Marital_StatusSingle
2362591   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2362592   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2362593   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2362594   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2362595   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2362596   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2362597   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2362598   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2362599   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2362600   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2362601   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2362602   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2362603   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2362604   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2362605   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2362606   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2362607   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2362608   +END;
MPRINT(EM_DIAGRAM):   END;
2362609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2362610   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2362611   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2362612   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2362613   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2362614   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2362615   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2362616   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2362617   +END;
MPRINT(EM_DIAGRAM):   END;
2362618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362619   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2362620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362621   +
2362622   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2362623   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2362624   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2362625   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2362626   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2362627   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2362628   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2362629   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2362630   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2362631   +end;
MPRINT(EM_DIAGRAM):   end;
2362632   +else do;
MPRINT(EM_DIAGRAM):   else do;
2362633   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2362634   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2362635   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2362636   +   end;
MPRINT(EM_DIAGRAM):   end;
2362637   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2362638   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2362639   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2362640   +   end;
MPRINT(EM_DIAGRAM):   end;
2362641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2362642   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2362643   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2362644   +   end;
MPRINT(EM_DIAGRAM):   end;
2362645   +end;
MPRINT(EM_DIAGRAM):   end;
2362646   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2362647   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2362648   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2362649   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2362650   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2362651   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2362652   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2362653   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2362654   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2362655   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2362656   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2362657   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2362658   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2362659   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2362660   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2362661   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2362662   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2362663   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2362664   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2362665   +END;
MPRINT(EM_DIAGRAM):   END;
2362666   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2362667   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2362668   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2362669   +END;
MPRINT(EM_DIAGRAM):   END;
2362670   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2362671   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2362672   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2362673   +END;
MPRINT(EM_DIAGRAM):   END;
2362674   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2362675   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2362676   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2362677   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2362678   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2362679   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2362680   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2362681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362682   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2362683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2362684   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2362685   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2362686   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2362687   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2362688   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2362689   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2362690   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2362691   +END;
MPRINT(EM_DIAGRAM):   END;
2362692   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2362693   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2362694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2362695   +drop
2362696   +H1x1_1
2362697   +H1x1_2
2362698   +H1x1_3
2362699   +H1x1_4
2362700   +H1x1_5
2362701   +H1x1_6
2362702   +H1x1_7
2362703   +H1x2_1
2362704   +H1x2_2
2362705   +H1x2_3
2362706   +H1x2_4
2362707   +H1x2_5
2362708   +H1x2_6
2362709   +H1x2_7
2362710   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2362711   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2362712   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2362713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362714   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2362715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362716   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2362717   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2362718   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2362719   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2362720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362721   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2362722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362723   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2362724   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2362725   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2362726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362727   +* Ensmbl42: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Average Posteriors of 3 models;
2362728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362729   +P_DepVar1 = (
2362730   +AutoNeural9_P_DepVar1 +
2362731   +AutoNeural11_P_DepVar1 +
2362732   +AutoNeural12_P_DepVar1
2362733   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 +
AutoNeural12_P_DepVar1 )/3;
2362734   +P_DepVar0 = (
2362735   +AutoNeural9_P_DepVar0 +
2362736   +AutoNeural11_P_DepVar0 +
2362737   +AutoNeural12_P_DepVar0
2362738   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 +
AutoNeural12_P_DepVar0 )/3;
2362739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362740   +* Ensmbl42: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Classification Vars;
2362741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362742   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
2362743   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2362744   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2362745   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2362746   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2362747   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2362748   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2362749   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2362750   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2362751   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2362752   +end;
MPRINT(EM_DIAGRAM):   end;
2362753   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2362754   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2362755   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2362756   +end;
MPRINT(EM_DIAGRAM):   end;
2362757   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2362758   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362759   +* Ensmbl42: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Producing Unformatted variable;
2362760   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362761   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2362762   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2362763   +else
2362764   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2362765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362766   +* Ensmbl42: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing _WARN_ Variable;
2362767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362768   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2362769   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2362770   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2362771   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2362771  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2362772   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2362772  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2362773   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2362773  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2362774   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2362774  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2362775   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2362775  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2362776   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2362776  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2362777   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2362777  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2362778   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2362778  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2362779   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2362779  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
2362780   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2362780  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
2362781   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2362781  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
2362782   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2362782  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
2362783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362784   +* Ensmbl42: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Residual Vars;
2362785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2362786   +if
2362787   +F_DepVar NE '1'
2362788   +AND F_DepVar NE '0'
2362789   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2362790   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2362791   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2362792   +end;
MPRINT(EM_DIAGRAM):   end;
2362793   +else do;
MPRINT(EM_DIAGRAM):   else do;
2362794   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2362795   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2362796   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2362797   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2362798   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2362799   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2362800   +END;
MPRINT(EM_DIAGRAM):   END;
2362801   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2362802    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL42_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2362803    quit;
2362804    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl42_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl42_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl42_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2362864    filename _pref
2362864  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2362865    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2362866    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2362867   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2362868   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2362869   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2362870   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2362871   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2362872   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2362873   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2362874   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2362875   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2362876   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2362877   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2362878   +LENGTH _WARN_ $4
2362879   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2362880   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2362881   +
2362882   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2362883   +
2362884   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2362885   +
2362886   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2362887   +
2362888   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2362889   +
2362890   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2362891   +
2362892   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2362893   +
2362894   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2362895   +
2362896   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2362897   +
2362898   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2362899   +
2362900   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2362901   +
2362902   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2362903   +
2362904   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2362905   +
2362906   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2362907   +
2362908   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2362909   +
2362910   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2362911   +
2362912   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2362913   +
2362914   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2362915   +
2362916   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2362917   +
2362918   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2362919   +
2362920   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2362921   +
2362922   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2362923   +
2362924   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2362925   +
2362926   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2362927   +
2362928   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2362929   +
2362930   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2362931   +
2362932   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2362933   +
2362934   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2362935   +
2362936   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2362937   +
2362938   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2362939   +
2362940   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2362941   +
2362942   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2362943   +
2362944   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2362945   +
2362946   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2362947   +
2362948   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2362949   +
2362950   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2362951   +
2362952   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2362953   +
2362954   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2362955   +
2362956   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2362957   +
2362958   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2362959   +
2362960   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2362961   +
2362962   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2362963   +
2362964   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2362965   +
2362966   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2362967   +
2362968   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2362969   +
2362970   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2362971   +
2362972   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2362973   +
2362974   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2362975   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2362976   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2362977   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2362978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2362979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2362980   +end;
MPRINT(EM_DIAGRAM):   end;
2362981   +else do;
MPRINT(EM_DIAGRAM):   else do;
2362982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2362983   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2362984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2362985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2362986   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2362987   +   end;
MPRINT(EM_DIAGRAM):   end;
2362988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2362989   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2362990   +   end;
MPRINT(EM_DIAGRAM):   end;
2362991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2362992   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2362993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2362994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2362995   +   end;
MPRINT(EM_DIAGRAM):   end;
2362996   +end;
MPRINT(EM_DIAGRAM):   end;
2362997   +
2362998   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2362999   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2363000   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2363001   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2363002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363004   +end;
MPRINT(EM_DIAGRAM):   end;
2363005   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363007   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2363008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363009   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2363010   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2363011   +   end;
MPRINT(EM_DIAGRAM):   end;
2363012   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2363013   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2363014   +   end;
MPRINT(EM_DIAGRAM):   end;
2363015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363016   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2363017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363019   +   end;
MPRINT(EM_DIAGRAM):   end;
2363020   +end;
MPRINT(EM_DIAGRAM):   end;
2363021   +
2363022   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2363023   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2363024   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2363025   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2363026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363028   +end;
MPRINT(EM_DIAGRAM):   end;
2363029   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363031   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2363032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2363034   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2363035   +   end;
MPRINT(EM_DIAGRAM):   end;
2363036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2363037   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2363038   +   end;
MPRINT(EM_DIAGRAM):   end;
2363039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363040   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2363041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363043   +   end;
MPRINT(EM_DIAGRAM):   end;
2363044   +end;
MPRINT(EM_DIAGRAM):   end;
2363045   +
2363046   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2363047   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2363048   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2363049   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2363050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363052   +end;
MPRINT(EM_DIAGRAM):   end;
2363053   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363055   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2363056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2363058   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2363059   +   end;
MPRINT(EM_DIAGRAM):   end;
2363060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2363061   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2363062   +   end;
MPRINT(EM_DIAGRAM):   end;
2363063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363064   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2363065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363067   +   end;
MPRINT(EM_DIAGRAM):   end;
2363068   +end;
MPRINT(EM_DIAGRAM):   end;
2363069   +
2363070   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2363071   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2363072   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2363073   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2363074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363076   +end;
MPRINT(EM_DIAGRAM):   end;
2363077   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363079   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2363080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363081   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2363082   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2363083   +   end;
MPRINT(EM_DIAGRAM):   end;
2363084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2363085   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2363086   +   end;
MPRINT(EM_DIAGRAM):   end;
2363087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363088   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2363089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363091   +   end;
MPRINT(EM_DIAGRAM):   end;
2363092   +end;
MPRINT(EM_DIAGRAM):   end;
2363093   +
2363094   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2363095   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2363096   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2363097   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2363098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363100   +end;
MPRINT(EM_DIAGRAM):   end;
2363101   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363102   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363103   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2363104   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363105   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2363106   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2363107   +   end;
MPRINT(EM_DIAGRAM):   end;
2363108   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2363109   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2363110   +   end;
MPRINT(EM_DIAGRAM):   end;
2363111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363112   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2363113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363115   +   end;
MPRINT(EM_DIAGRAM):   end;
2363116   +end;
MPRINT(EM_DIAGRAM):   end;
2363117   +
2363118   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2363119   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2363120   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2363121   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2363122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363124   +end;
MPRINT(EM_DIAGRAM):   end;
2363125   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363126   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2363127   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2363128   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363129   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2363130   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2363131   +   end;
MPRINT(EM_DIAGRAM):   end;
2363132   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2363133   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2363134   +   end;
MPRINT(EM_DIAGRAM):   end;
2363135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363136   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2363137   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363138   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363139   +   end;
MPRINT(EM_DIAGRAM):   end;
2363140   +end;
MPRINT(EM_DIAGRAM):   end;
2363141   +
2363142   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2363143   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2363144   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2363145   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2363146   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2363147   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2363148   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2363149   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2363150   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2363151   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2363152   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2363153   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2363154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363156   +end;
MPRINT(EM_DIAGRAM):   end;
2363157   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363158   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2363159   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2363160   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363161   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2363162   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2363163   +   end;
MPRINT(EM_DIAGRAM):   end;
2363164   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2363165   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2363166   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2363167   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2363168   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2363169   +   end;
MPRINT(EM_DIAGRAM):   end;
2363170   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2363171   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2363172   +   end;
MPRINT(EM_DIAGRAM):   end;
2363173   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2363174   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2363175   +   end;
MPRINT(EM_DIAGRAM):   end;
2363176   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2363177   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2363178   +   end;
MPRINT(EM_DIAGRAM):   end;
2363179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363180   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2363181   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2363182   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2363183   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2363184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363186   +   end;
MPRINT(EM_DIAGRAM):   end;
2363187   +end;
MPRINT(EM_DIAGRAM):   end;
2363188   +
2363189   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2363190   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2363191   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2363192   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2363193   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2363194   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2363195   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2363196   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2363197   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2363198   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2363199   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2363200   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2363201   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2363202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2363203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363204   +end;
MPRINT(EM_DIAGRAM):   end;
2363205   +else do;
MPRINT(EM_DIAGRAM):   else do;
2363206   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2363207   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2363208   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2363209   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2363210   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2363211   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2363212   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2363213   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2363214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2363215   +         end;
MPRINT(EM_DIAGRAM):   end;
2363216   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2363217   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2363218   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2363219   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2363220   +            end;
MPRINT(EM_DIAGRAM):   end;
2363221   +         end;
MPRINT(EM_DIAGRAM):   end;
2363222   +      end;
MPRINT(EM_DIAGRAM):   end;
2363223   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2363224   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2363225   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2363226   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2363227   +         end;
MPRINT(EM_DIAGRAM):   end;
2363228   +      end;
MPRINT(EM_DIAGRAM):   end;
2363229   +   end;
MPRINT(EM_DIAGRAM):   end;
2363230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2363231   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2363232   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2363233   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2363234   +      end;
MPRINT(EM_DIAGRAM):   end;
2363235   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2363236   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2363237   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2363238   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2363239   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2363240   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2363241   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2363242   +         end;
MPRINT(EM_DIAGRAM):   end;
2363243   +      end;
MPRINT(EM_DIAGRAM):   end;
2363244   +   end;
MPRINT(EM_DIAGRAM):   end;
2363245   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2363246   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2363247   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2363248   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2363249   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2363250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2363251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363252   +   end;
MPRINT(EM_DIAGRAM):   end;
2363253   +end;
MPRINT(EM_DIAGRAM):   end;
2363254   +
2363255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363256   +*** Checking missing input Interval
2363257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2363258   +
2363259   +IF NMISS(
2363260   +   AcceptedCmpTotal ,
2363261   +   Age ,
2363262   +   Frq ,
2363263   +   Income ,
2363264   +   Kidhome ,
2363265   +   Mnt ,
2363266   +   MntFishProducts ,
2363267   +   MntFruits ,
2363268   +   MntGoldProds ,
2363269   +   MntMeatProducts ,
2363270   +   MntSweetProducts ,
2363271   +   MntWines ,
2363272   +   MonthsAsCustomer ,
2363273   +   NumCatalogPurchases ,
2363274   +   NumDealsPurchases ,
2363275   +   NumDistPurchases ,
2363276   +   NumStorePurchases ,
2363277   +   NumWebPurchases ,
2363278   +   NumWebVisitsMonth ,
2363279   +   RFMstat ,
2363280   +   RMntFrq ,
2363281   +   Recency ,
2363282   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2363283   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2363284   +
2363285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2363286   +END;
MPRINT(EM_DIAGRAM):   END;
2363287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363288   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2363289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2363291   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2363292   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2363293   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2363294   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2363295   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2363296   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2363297   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2363298   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2363299   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2363300   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2363301   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2363302   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2363303   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2363304   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2363305   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2363306   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2363307   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2363308   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2363309   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2363310   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2363311   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2363312   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2363313   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2363314   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2363315   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2363316   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2363317   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2363318   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2363319   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2363320   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2363321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2363322   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2363323   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2363324   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2363325   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2363326   +END;
MPRINT(EM_DIAGRAM):   END;
2363327   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2363328   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2363329   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2363330   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2363331   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2363332   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2363333   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2363334   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2363335   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2363336   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2363337   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2363338   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2363339   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2363340   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2363341   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2363342   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2363343   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2363344   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2363345   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2363346   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2363347   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2363348   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2363349   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2363350   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2363351   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2363352   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2363353   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2363354   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2363355   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2363356   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2363357   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2363358   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2363359   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2363360   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2363361   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2363362   +   ELSE S_NumCatalogPurchases
2363363   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2363364   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2363365   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2363366   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2363367   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2363368   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2363369   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2363370   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2363371   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2363372   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2363373   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2363374   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2363375   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2363376   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2363377   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2363378   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2363379   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2363380   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2363381   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2363382   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2363383   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2363384   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2363385   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2363386   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2363387   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2363388   +END;
MPRINT(EM_DIAGRAM):   END;
2363389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363390   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2363391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363393   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2363394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363396   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2363397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363398   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2363399   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2363400   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2363401   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2363402   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2363403   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2363404   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2363405   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2363406   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2363407   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2363408   +          +    -1.09856598010056 * S_NumDealsPurchases
2363409   +          +    -0.10571850472514 * S_NumDistPurchases
2363410   +          +     0.11898210654227 * S_NumStorePurchases
2363411   +          +      0.5984912060231 * S_NumWebPurchases
2363412   +          +     0.78592531126942 * S_NumWebVisitsMonth
2363413   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2363414   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2363415   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 *
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 *
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts +
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 *
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines +
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases +
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases +
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases +
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 *
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2363416   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2363417   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2363418   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2363419   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2363420   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2363421   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2363422   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2363423   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2363424   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2363425   +          +    -0.84042044250624 * S_NumDealsPurchases
2363426   +          +    -0.10246261015488 * S_NumDistPurchases
2363427   +          +     0.06886149708824 * S_NumStorePurchases
2363428   +          +     0.63156910388199 * S_NumWebPurchases
2363429   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2363430   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2363431   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2363432   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 *
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 *
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts +
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 *
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 *
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 *
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 *
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq +
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2363433   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2363434   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2363435   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2363436   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2363437   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2363438   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2363439   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2363440   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2363441   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2363442   +          +     0.45393712455366 * S_NumDealsPurchases
2363443   +          +    -0.25292198053552 * S_NumDistPurchases
2363444   +          +    -1.35582215064749 * S_NumStorePurchases
2363445   +          +    -0.83132202302639 * S_NumWebPurchases
2363446   +          +     1.87116225272678 * S_NumWebVisitsMonth
2363447   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2363448   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2363449   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 *
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 *
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts +
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 *
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines +
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases +
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases +
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases +
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 *
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2363450   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2363451   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2363452   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2363453   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2363454   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 *
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 +
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 *
HigherEducationBinary0 ;
2363455   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2363456   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2363457   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2363458   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2363459   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 +
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 *
HigherEducationBinary0 ;
2363460   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2363461   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2363462   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2363463   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2363464   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 +
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 *
HigherEducationBinary0 ;
2363465   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2363466   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2363467   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2363468   +          +      0.4695898100094 * Marital_StatusDivorced
2363469   +          +    -0.52137742289262 * Marital_StatusMarried
2363470   +          +    -0.32382086914936 * Marital_StatusSingle
2363471   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle +
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation +
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced +
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle +
-0.66163012672344 * Marital_StatusTogether ;
2363472   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2363473   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2363474   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2363475   +          +    -1.04858218653238 * Marital_StatusDivorced
2363476   +          +     2.41098335093061 * Marital_StatusMarried
2363477   +          +    -1.94696044861334 * Marital_StatusSingle
2363478   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle +
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 *
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 *
Marital_StatusTogether ;
2363479   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2363480   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2363481   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2363482   +          +     0.42964114177062 * Marital_StatusDivorced
2363483   +          +    -0.38607635605816 * Marital_StatusMarried
2363484   +          +    -0.02157405407852 * Marital_StatusSingle
2363485   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle +
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation +
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced +
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle +
-0.59995619744527 * Marital_StatusTogether ;
2363486   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2363487   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2363488   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2363489   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2363490   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2363491   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2363492   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2363493   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2363494   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2363495   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2363496   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2363497   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2363498   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2363499   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2363500   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2363501   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2363502   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2363503   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2363504   +END;
MPRINT(EM_DIAGRAM):   END;
2363505   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2363506   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2363507   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2363508   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2363509   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2363510   +END;
MPRINT(EM_DIAGRAM):   END;
2363511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363512   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2363513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363514   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2363515   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2363516   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 +
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2363517   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2363518   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2363519   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2363520   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2363521   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2363522   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2363523   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2363524   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2363525   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2363526   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2363527   +END;
MPRINT(EM_DIAGRAM):   END;
2363528   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2363529   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2363530   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2363531   +END;
MPRINT(EM_DIAGRAM):   END;
2363532   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2363533   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2363534   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2363535   +END;
MPRINT(EM_DIAGRAM):   END;
2363536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363537   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2363538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2363539   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2363540   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2363541   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2363542   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2363543   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2363544   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2363545   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2363546   +END;
MPRINT(EM_DIAGRAM):   END;
2363547   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2363548   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2363549   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2363550   +drop
2363551   +H1x1_1
2363552   +H1x1_2
2363553   +H1x1_3
2363554   +H1x1_4
2363555   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2363556   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2363557    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2363558    quit;
2363559    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2363560    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2363561    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2363562    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2363563    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2363564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363565    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2363566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363568    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
2363569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363571    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363572    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2363573    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2363574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363575    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2363576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2363577    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2363578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363580    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363581    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2363582    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363583    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363584    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2363585    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2363585  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.
 
2363586    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363587    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2363588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363589    filename _pref
2363589  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2363590    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2363591    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2363592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2363593   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2363594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2363595   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2363596   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2363597   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2363598    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2363599    quit;
2363600    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2363601    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2363602    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2363603    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2363604    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2363605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363606    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2363607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363609    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2363610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363613    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2363614    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2363615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363616    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2363617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2363618    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2363619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363622    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2363623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363624    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363625    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2363626    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2363626  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2363627    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363628    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2363629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363630    filename _pref
2363630  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2363631    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2363632    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2363633   +
2363634   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2363635   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2363635  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2363636   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2363637   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2363638   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2363639   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2363640   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2363641    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2363642    quit;
2363643    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2363644    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2363645    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2363646    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2363647    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2363648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363649    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2363650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363652    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2363653    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363655    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363656    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2363657    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2363658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363659    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2363660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363661    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2363662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363665    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2363666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363667    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363668    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2363669    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2363669  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2363670    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363671    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2363672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363673    filename _pref
2363673  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2363674    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2363675    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2363676   +
2363677   +
2363678   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2363679   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2363680   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2363681   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2363682   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2363683   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363684   +
2363685   +
2363686   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2363687   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2363688   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2363689   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2363690   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2363691   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363692   +
2363693   +
2363694   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2363695   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2363696   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2363697   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2363698   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2363699   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363700   +
2363701   +
2363702   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2363703   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2363704   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2363705   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2363706   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2363707   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363708   +
2363709   +
2363710   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2363711   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2363712   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2363713   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2363714   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2363715   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363716   +
2363717   +
2363718   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2363719   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2363720   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2363721   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2363722   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2363723   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363724   +
2363725   +
2363726   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2363727   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2363728   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2363729   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2363730   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2363731   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363732   +
2363733   +
2363734   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2363735   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2363736   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2363737   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2363738   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2363739   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2363740   +if
2363741   +_FILTERNORM1 not in ( '.')
2363742   + and
2363743   +_FILTERNORM2 not in ( '.')
2363744   + and
2363745   +_FILTERNORM3 not in ( '.')
2363746   + and
2363747   +_FILTERNORM4 not in ( '.')
2363748   + and
2363749   +_FILTERNORM5 not in ( '.')
2363750   + and
2363751   +_FILTERNORM6 not in ( '.')
2363752   + and
2363753   +_FILTERNORM7 not in ( ' ')
2363754   + and
2363755   +_FILTERNORM8 not in ( ' ')
2363756   +and
2363757   +( Dt_Customer ne .)
2363758   +and ( Income ne . and (Income<=107000))
2363759   +and ( Kidhome ne .)
2363760   +and ( MntFishProducts ne .)
2363761   +and ( MntFruits ne .)
2363762   +and ( MntGoldProds ne .)
2363763   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2363764   +and ( MntSweetProducts ne .)
2363765   +and ( MntWines ne .)
2363766   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2363767   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2363768   +and ( NumStorePurchases ne .)
2363769   +and ( NumWebPurchases ne .)
2363770   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2363771   +and ( Recency ne .)
2363772   +and ( Teenhome ne .)
2363773   +and ( Year_Birth ne .)
2363774   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2363775   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2363776   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2363777   +end;
MPRINT(EM_DIAGRAM):   end;
2363778   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2363779   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2363780    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2363781    quit;
2363782    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2363783    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2363784    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2363785    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2363786    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2363787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363788    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2363789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363791    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2363792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363794    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363795    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2363796    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2363797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363798    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2363799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2363800    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2363801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363803    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2363804    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2363805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2363806    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363807    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2363808    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2363808  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2363809    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363810    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2363811    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363812    %macro varDept(fcmpdata=,id=);
2363813    %global nobs&id scoreFlag&id;
2363814    %let scoreFlag&id = 0;
2363815    %if &id=1 or ^&fcmpStart %then %do;
2363816    proc sort data=&fcmpdata out=_temp&id nodupkey;
2363817    by NAME;
2363818    where id=&id and LHS in( %let j=1;
2363819    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2363820    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2363821    "&var" %let j = %eval(&j+1);
2363822    %end;
2363823    );
2363824    run;
2363825    %let dsid = %sysfunc(open(_temp&id));
2363826    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2363827    %let dsid = %sysfunc(close(&dsid));
2363828    %if &&nobs&id %then %do;
2363829    %let scoreFlag&id = 1;
2363830    %let fcmpStart = 1;
2363831    %end;
2363832    %else %let fcmpStart = 0;
2363833    %end;
2363834    %else %do;
2363835    proc sort data=&fcmpdata out=_tempid;
2363836    where id=&id;
2363837    by LHS;
2363838    run;
2363839    %let dsid = %sysfunc(open(_tempid));
2363840    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2363841    %let dsid = %sysfunc(close(&dsid));
2363842    %if ^&&nobs&id %then %do;
2363843    proc datasets lib=work nolist;
2363844    delete _tempid;
2363845    run;
2363846    quit;
2363847    %end;
2363848    %else %do;
2363849    data _tempAll;
2363850    set %let j=%eval(&id-1);
2363851    %do x=1 %to &j;
2363852    %if &&nobs&x %then %do;
2363853    _temp&x %end;
2363854    %end;
2363855    ;
2363856    run;
2363857    proc sql;
2363858    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2363858  ! work._tempid p2 where p.name=p2.lhs;
2363859    quit;
2363860    data _temp&id;
2363861    set _temp&id;
2363862    where LHS ne '' and NAME ne '' and Node ne '';
2363863    run;
2363864    proc datasets lib=work nolist;
2363865    delete _tempAll;
2363866    run;
2363867    %let dsid = %sysfunc(open(_temp&id));
2363868    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2363869    %let dsid = %sysfunc(close(&dsid));
2363870    %if ^&&nobs&id %then %do;
2363871    proc datasets lib=work nolist;
2363872    delete _temp&id;
2363873    run;
2363874    quit;
2363875    %end;
2363876    %else %do;
2363877    %let scoreFlag&id = 1;
2363878    data _temp&id;
2363879    set _temp&id;
2363880    where LHS ne NAME and node ne '';
2363881    run;
2363882    %let dsid = %sysfunc(open(_temp&id));
2363883    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2363884    %let dsid = %sysfunc(close(&dsid));
2363885    %if ^&&nobs&id %then %do;
2363886    proc datasets lib=work nolist;
2363887    delete _temp&id;
2363888    run;
2363889    quit;
2363890    %end;
2363891    %else %do;
2363892    proc sort data=_temp&id nodupkey;
2363893    by LHS NAME;
2363894    run;
2363895    %end;
2363896    %end;
2363897    %end;
2363898    %end;
2363899    %mend varDept;
2363900    %macro optCode(outdata=fcmpdata);
2363901    %global fcmpStart;
2363902    %let fcmpStart = 0;
2363903    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2363904    %let NumNodes=9;
2363905    %do k=1 %to &NumNodes;
2363906    %vardept(fcmpdata=&outdata, id=&k);
2363907    %end;
2363908    %mend optCode;
2363909    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2363910    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2363911    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2363912    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2363913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2363914    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2363915    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2363916    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2363917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363918    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2363919    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2363919  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2363920    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2363921    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2363922    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2363923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2363924    filename _pref
2363924  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2363925    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2363926    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2363927   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2363928   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2363929   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2363930   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2363931   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2363932   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2363933   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2363934   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2363935   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2363936   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2363937   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2363938   +LENGTH _WARN_ $4
2363939   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2363940   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2363941   +
2363942   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2363943   +
2363944   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2363945   +
2363946   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2363947   +
2363948   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2363949   +
2363950   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2363951   +
2363952   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2363953   +
2363954   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2363955   +
2363956   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2363957   +
2363958   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2363959   +
2363960   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2363961   +
2363962   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2363963   +
2363964   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2363965   +
2363966   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2363967   +
2363968   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2363969   +
2363970   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2363971   +
2363972   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2363973   +
2363974   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2363975   +
2363976   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2363977   +
2363978   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2363979   +
2363980   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2363981   +
2363982   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2363983   +
2363984   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2363985   +
2363986   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2363987   +
2363988   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2363989   +
2363990   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2363991   +
2363992   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2363993   +
2363994   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2363995   +
2363996   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2363997   +
2363998   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2363999   +
2364000   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2364001   +
2364002   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2364003   +
2364004   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2364005   +
2364006   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2364007   +
2364008   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2364009   +
2364010   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2364011   +
2364012   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2364013   +
2364014   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2364015   +
2364016   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2364017   +
2364018   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2364019   +
2364020   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2364021   +
2364022   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2364023   +
2364024   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2364025   +
2364026   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2364027   +
2364028   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2364029   +
2364030   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2364031   +
2364032   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2364033   +
2364034   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2364035   +
2364036   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2364037   +
2364038   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2364039   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2364040   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2364041   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2364042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364044   +end;
MPRINT(EM_DIAGRAM):   end;
2364045   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364047   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2364048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364049   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364050   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2364051   +   end;
MPRINT(EM_DIAGRAM):   end;
2364052   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364053   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2364054   +   end;
MPRINT(EM_DIAGRAM):   end;
2364055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364056   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2364057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364059   +   end;
MPRINT(EM_DIAGRAM):   end;
2364060   +end;
MPRINT(EM_DIAGRAM):   end;
2364061   +
2364062   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2364063   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2364064   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2364065   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2364066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364068   +end;
MPRINT(EM_DIAGRAM):   end;
2364069   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364071   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2364072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364073   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364074   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2364075   +   end;
MPRINT(EM_DIAGRAM):   end;
2364076   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364077   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2364078   +   end;
MPRINT(EM_DIAGRAM):   end;
2364079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364080   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2364081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364083   +   end;
MPRINT(EM_DIAGRAM):   end;
2364084   +end;
MPRINT(EM_DIAGRAM):   end;
2364085   +
2364086   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2364087   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2364088   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2364089   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2364090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364092   +end;
MPRINT(EM_DIAGRAM):   end;
2364093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364095   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2364096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364097   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364098   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2364099   +   end;
MPRINT(EM_DIAGRAM):   end;
2364100   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364101   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2364102   +   end;
MPRINT(EM_DIAGRAM):   end;
2364103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364104   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2364105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364107   +   end;
MPRINT(EM_DIAGRAM):   end;
2364108   +end;
MPRINT(EM_DIAGRAM):   end;
2364109   +
2364110   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2364111   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2364112   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2364113   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2364114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364116   +end;
MPRINT(EM_DIAGRAM):   end;
2364117   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364119   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2364120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364121   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364122   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2364123   +   end;
MPRINT(EM_DIAGRAM):   end;
2364124   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364125   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2364126   +   end;
MPRINT(EM_DIAGRAM):   end;
2364127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364128   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2364129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364131   +   end;
MPRINT(EM_DIAGRAM):   end;
2364132   +end;
MPRINT(EM_DIAGRAM):   end;
2364133   +
2364134   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2364135   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2364136   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2364137   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2364138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364140   +end;
MPRINT(EM_DIAGRAM):   end;
2364141   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364143   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2364144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364146   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2364147   +   end;
MPRINT(EM_DIAGRAM):   end;
2364148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364149   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2364150   +   end;
MPRINT(EM_DIAGRAM):   end;
2364151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364152   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2364153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364155   +   end;
MPRINT(EM_DIAGRAM):   end;
2364156   +end;
MPRINT(EM_DIAGRAM):   end;
2364157   +
2364158   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2364159   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2364160   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2364161   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2364162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364164   +end;
MPRINT(EM_DIAGRAM):   end;
2364165   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364167   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2364168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2364170   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2364171   +   end;
MPRINT(EM_DIAGRAM):   end;
2364172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2364173   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2364174   +   end;
MPRINT(EM_DIAGRAM):   end;
2364175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364176   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2364177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364179   +   end;
MPRINT(EM_DIAGRAM):   end;
2364180   +end;
MPRINT(EM_DIAGRAM):   end;
2364181   +
2364182   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2364183   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2364184   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2364185   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2364186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364188   +end;
MPRINT(EM_DIAGRAM):   end;
2364189   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2364191   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2364192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364193   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2364194   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2364195   +   end;
MPRINT(EM_DIAGRAM):   end;
2364196   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2364197   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2364198   +   end;
MPRINT(EM_DIAGRAM):   end;
2364199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364200   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2364201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364203   +   end;
MPRINT(EM_DIAGRAM):   end;
2364204   +end;
MPRINT(EM_DIAGRAM):   end;
2364205   +
2364206   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2364207   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2364208   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2364209   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2364210   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2364211   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2364212   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2364213   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2364214   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2364215   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2364216   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2364217   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2364218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364220   +end;
MPRINT(EM_DIAGRAM):   end;
2364221   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364222   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2364223   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2364224   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364225   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2364226   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2364227   +   end;
MPRINT(EM_DIAGRAM):   end;
2364228   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2364229   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2364230   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2364231   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2364232   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2364233   +   end;
MPRINT(EM_DIAGRAM):   end;
2364234   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2364235   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2364236   +   end;
MPRINT(EM_DIAGRAM):   end;
2364237   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2364238   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2364239   +   end;
MPRINT(EM_DIAGRAM):   end;
2364240   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2364241   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2364242   +   end;
MPRINT(EM_DIAGRAM):   end;
2364243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364244   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2364245   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2364246   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2364247   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2364248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364250   +   end;
MPRINT(EM_DIAGRAM):   end;
2364251   +end;
MPRINT(EM_DIAGRAM):   end;
2364252   +
2364253   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2364254   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2364255   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2364256   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2364257   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2364258   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2364259   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2364260   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2364261   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2364262   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2364263   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2364264   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2364265   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2364266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2364267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364268   +end;
MPRINT(EM_DIAGRAM):   end;
2364269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2364270   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2364271   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2364272   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2364273   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2364274   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2364275   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2364276   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2364277   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2364278   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2364279   +         end;
MPRINT(EM_DIAGRAM):   end;
2364280   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2364281   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2364282   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2364283   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2364284   +            end;
MPRINT(EM_DIAGRAM):   end;
2364285   +         end;
MPRINT(EM_DIAGRAM):   end;
2364286   +      end;
MPRINT(EM_DIAGRAM):   end;
2364287   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2364288   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2364289   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2364290   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2364291   +         end;
MPRINT(EM_DIAGRAM):   end;
2364292   +      end;
MPRINT(EM_DIAGRAM):   end;
2364293   +   end;
MPRINT(EM_DIAGRAM):   end;
2364294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2364295   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2364296   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2364297   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2364298   +      end;
MPRINT(EM_DIAGRAM):   end;
2364299   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2364300   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2364301   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2364302   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2364303   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2364304   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2364305   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2364306   +         end;
MPRINT(EM_DIAGRAM):   end;
2364307   +      end;
MPRINT(EM_DIAGRAM):   end;
2364308   +   end;
MPRINT(EM_DIAGRAM):   end;
2364309   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2364310   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2364311   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2364312   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2364313   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2364314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2364315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364316   +   end;
MPRINT(EM_DIAGRAM):   end;
2364317   +end;
MPRINT(EM_DIAGRAM):   end;
2364318   +
2364319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364320   +*** Checking missing input Interval
2364321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2364322   +
2364323   +IF NMISS(
2364324   +   AcceptedCmpTotal ,
2364325   +   Age ,
2364326   +   Frq ,
2364327   +   Income ,
2364328   +   Kidhome ,
2364329   +   Mnt ,
2364330   +   MntFishProducts ,
2364331   +   MntFruits ,
2364332   +   MntGoldProds ,
2364333   +   MntMeatProducts ,
2364334   +   MntSweetProducts ,
2364335   +   MntWines ,
2364336   +   MonthsAsCustomer ,
2364337   +   NumCatalogPurchases ,
2364338   +   NumDealsPurchases ,
2364339   +   NumDistPurchases ,
2364340   +   NumStorePurchases ,
2364341   +   NumWebPurchases ,
2364342   +   NumWebVisitsMonth ,
2364343   +   RFMstat ,
2364344   +   RMntFrq ,
2364345   +   Recency ,
2364346   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2364347   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2364348   +
2364349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2364350   +END;
MPRINT(EM_DIAGRAM):   END;
2364351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364352   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2364353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2364355   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2364356   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2364357   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2364358   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2364359   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2364360   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2364361   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2364362   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2364363   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2364364   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2364365   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2364366   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2364367   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2364368   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2364369   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2364370   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2364371   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2364372   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2364373   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2364374   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2364375   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2364376   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2364377   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2364378   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2364379   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2364380   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2364381   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2364382   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2364383   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2364384   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2364385   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2364386   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2364387   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2364388   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2364389   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2364390   +END;
MPRINT(EM_DIAGRAM):   END;
2364391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2364392   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2364393   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2364394   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2364395   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2364396   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2364397   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2364398   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2364399   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2364400   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2364401   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2364402   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2364403   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2364404   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2364405   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2364406   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2364407   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2364408   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2364409   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2364410   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2364411   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2364412   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2364413   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2364414   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2364415   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2364416   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2364417   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2364418   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2364419   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2364420   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2364421   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2364422   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2364423   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2364424   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2364425   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2364426   +   ELSE S_NumCatalogPurchases
2364427   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2364428   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2364429   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2364430   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2364431   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2364432   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2364433   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2364434   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2364435   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2364436   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2364437   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2364438   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2364439   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2364440   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2364441   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2364442   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2364443   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2364444   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2364445   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2364446   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2364447   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2364448   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2364449   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2364450   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2364451   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2364452   +END;
MPRINT(EM_DIAGRAM):   END;
2364453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364454   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2364455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364457   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2364458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364460   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2364461   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364462   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2364463   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2364464   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2364465   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2364466   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2364467   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2364468   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2364469   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2364470   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2364471   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2364472   +          +     0.19770934886328 * S_NumDealsPurchases
2364473   +          +      0.0515215988111 * S_NumDistPurchases
2364474   +          +    -0.34569346346089 * S_NumStorePurchases
2364475   +          +    -0.27122293596124 * S_NumWebPurchases
2364476   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2364477   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2364478   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2364479   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 *
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 *
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts +
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 *
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 *
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 *
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 *
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq +
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2364480   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2364481   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2364482   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2364483   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2364484   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2364485   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2364486   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2364487   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2364488   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2364489   +          +     0.54308887602031 * S_NumDealsPurchases
2364490   +          +    -0.22507315320192 * S_NumDistPurchases
2364491   +          +    -0.79861387328361 * S_NumStorePurchases
2364492   +          +    -0.45467494002747 * S_NumWebPurchases
2364493   +          +      0.2119048824613 * S_NumWebVisitsMonth
2364494   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2364495   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2364496   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 *
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 *
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts +
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 *
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 *
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 *
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 *
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq +
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2364497   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2364498   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2364499   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2364500   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2364501   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2364502   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2364503   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2364504   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2364505   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2364506   +          +     -0.0771083149302 * S_NumDealsPurchases
2364507   +          +     0.03403621221162 * S_NumDistPurchases
2364508   +          +     0.61303946422025 * S_NumStorePurchases
2364509   +          +     0.27126793634053 * S_NumWebPurchases
2364510   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2364511   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2364512   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2364513   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 *
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 *
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts +
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 *
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 *
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 *
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 *
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq +
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2364514   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2364515   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2364516   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2364517   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2364518   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2364519   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2364520   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2364521   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2364522   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2364523   +          +     0.29894603062327 * S_NumDealsPurchases
2364524   +          +     0.07614620530875 * S_NumDistPurchases
2364525   +          +     0.15402335009896 * S_NumStorePurchases
2364526   +          +     0.10615749096863 * S_NumWebPurchases
2364527   +          +     0.41962286816879 * S_NumWebVisitsMonth
2364528   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2364529   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2364530   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome +
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 *
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts +
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 *
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 *
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 *
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 *
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq +
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2364531   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2364532   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2364533   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2364534   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2364535   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2364536   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2364537   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2364538   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2364539   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2364540   +          +     0.14392502416642 * S_NumDealsPurchases
2364541   +          +    -0.10026304978633 * S_NumDistPurchases
2364542   +          +     -0.0588453022746 * S_NumStorePurchases
2364543   +          +     0.24799398610395 * S_NumWebPurchases
2364544   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2364545   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2364546   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2364547   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 *
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 *
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts +
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 *
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines +
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases +
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases +
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases +
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 *
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2364548   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2364549   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2364550   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2364551   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2364552   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2364553   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2364554   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2364555   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2364556   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2364557   +          +     0.08149600854964 * S_NumDealsPurchases
2364558   +          +     0.16873541613513 * S_NumDistPurchases
2364559   +          +    -0.20437343413446 * S_NumStorePurchases
2364560   +          +     -0.1671107527288 * S_NumWebPurchases
2364561   +          +     0.03677043100993 * S_NumWebVisitsMonth
2364562   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2364563   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2364564   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 *
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 *
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts +
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 *
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 *
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 *
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 *
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq +
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2364565   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2364566   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2364567   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2364568   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2364569   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 *
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 +
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 *
HigherEducationBinary0 ;
2364570   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2364571   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2364572   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2364573   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2364574   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 *
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 +
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 *
HigherEducationBinary0 ;
2364575   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2364576   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2364577   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2364578   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2364579   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 *
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 +
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 *
HigherEducationBinary0 ;
2364580   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2364581   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2364582   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2364583   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2364584   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 +
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 *
HigherEducationBinary0 ;
2364585   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2364586   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2364587   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2364588   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2364589   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 +
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 *
HigherEducationBinary0 ;
2364590   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2364591   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2364592   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2364593   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2364594   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 *
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 +
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 *
HigherEducationBinary0 ;
2364595   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2364596   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2364597   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2364598   +          +    -0.31045295887604 * Marital_StatusDivorced
2364599   +          +    -0.01109401001539 * Marital_StatusMarried
2364600   +          +     0.01325135981025 * Marital_StatusSingle
2364601   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried +
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2364602   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2364603   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2364604   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2364605   +          +     0.02275101861599 * Marital_StatusDivorced
2364606   +          +     0.20271548664903 * Marital_StatusMarried
2364607   +          +    -0.12132069210718 * Marital_StatusSingle
2364608   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle +
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 *
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 *
Marital_StatusTogether ;
2364609   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2364610   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2364611   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2364612   +          +     -0.4992959703281 * Marital_StatusDivorced
2364613   +          +     0.62071659624138 * Marital_StatusMarried
2364614   +          +    -0.21776202274494 * Marital_StatusSingle
2364615   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle +
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 *
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 *
Marital_StatusTogether ;
2364616   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2364617   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2364618   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2364619   +          +     0.05626212670587 * Marital_StatusDivorced
2364620   +          +     0.14353891364597 * Marital_StatusMarried
2364621   +          +    -0.29006765622997 * Marital_StatusSingle
2364622   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle +
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation +
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced +
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle +
0.05503638282535 * Marital_StatusTogether ;
2364623   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2364624   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2364625   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2364626   +          +    -0.21206913700604 * Marital_StatusDivorced
2364627   +          +     0.58790643614629 * Marital_StatusMarried
2364628   +          +    -0.65995982578062 * Marital_StatusSingle
2364629   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle +
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation +
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced +
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle +
0.49642503732428 * Marital_StatusTogether ;
2364630   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2364631   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2364632   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2364633   +          +    -0.05047370516008 * Marital_StatusDivorced
2364634   +          +    -0.23139090963669 * Marital_StatusMarried
2364635   +          +     0.04816197463249 * Marital_StatusSingle
2364636   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle +
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation +
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced +
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle +
0.04977890114896 * Marital_StatusTogether ;
2364637   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2364638   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2364639   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2364640   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2364641   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2364642   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2364643   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2364644   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2364645   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2364646   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2364647   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2364648   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2364649   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2364650   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2364651   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2364652   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2364653   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2364654   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2364655   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2364656   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2364657   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2364658   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2364659   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2364660   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2364661   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2364662   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2364663   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2364664   +END;
MPRINT(EM_DIAGRAM):   END;
2364665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2364666   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2364667   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2364668   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2364669   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2364670   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2364671   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2364672   +END;
MPRINT(EM_DIAGRAM):   END;
2364673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364674   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2364675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2364677   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2364678   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2364679   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 +
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 +
-0.0100306049679 * H1x1_6 ;
2364680   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2364681   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2364682   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2364683   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2364684   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2364685   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2364686   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2364687   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2364688   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2364689   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2364690   +END;
MPRINT(EM_DIAGRAM):   END;
2364691   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2364692   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2364693   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2364694   +END;
MPRINT(EM_DIAGRAM):   END;
2364695   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2364696   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2364697   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2364698   +END;
MPRINT(EM_DIAGRAM):   END;
2364699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364700   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2364701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2364702   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2364703   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2364704   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2364705   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2364706   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2364707   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2364708   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2364709   +END;
MPRINT(EM_DIAGRAM):   END;
2364710   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2364711   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2364712   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2364713   +drop
2364714   +H1x1_1
2364715   +H1x1_2
2364716   +H1x1_3
2364717   +H1x1_4
2364718   +H1x1_5
2364719   +H1x1_6
2364720   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2364721   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2364722    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.20 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2364723    quit;
2364724    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2364725    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2364726    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2364727    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2364728    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2364729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364730    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2364731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364733    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
2364734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364736    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364737    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2364738    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2364739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364740    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2364741    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2364742    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2364743    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364745    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364746    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2364747    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364748    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364749    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2364750    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2364750  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.
 
2364751    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364752    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2364753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364754    filename _pref
2364754  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2364755    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2364756    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2364757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2364758   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2364759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2364760   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2364761   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2364762   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2364763    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2364764    quit;
2364765    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2364766    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2364767    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2364768    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2364769    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2364770    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364771    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2364772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364774    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2364775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364776    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364777    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364778    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2364779    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2364780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364781    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2364782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2364783    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2364784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364786    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364787    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2364788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364789    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364790    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2364791    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2364791  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2364792    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364793    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2364794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364795    filename _pref
2364795  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2364796    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2364797    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2364798   +
2364799   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2364800   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2364800  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2364801   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2364802   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2364803   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2364804   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2364805   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2364806    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2364807    quit;
2364808    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2364809    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2364810    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2364811    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2364812    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2364813    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364814    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2364815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364817    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2364818    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364820    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364821    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2364822    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2364823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364824    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2364825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364826    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2364827    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364829    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364830    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2364831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364832    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364833    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2364834    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2364834  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2364835    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364836    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2364837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364838    filename _pref
2364838  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2364839    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2364840    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2364841   +
2364842   +
2364843   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2364844   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2364845   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2364846   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2364847   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2364848   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364849   +
2364850   +
2364851   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2364852   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2364853   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2364854   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2364855   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2364856   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364857   +
2364858   +
2364859   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2364860   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2364861   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2364862   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2364863   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2364864   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364865   +
2364866   +
2364867   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2364868   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2364869   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2364870   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2364871   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2364872   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364873   +
2364874   +
2364875   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2364876   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2364877   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2364878   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2364879   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2364880   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364881   +
2364882   +
2364883   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2364884   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2364885   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2364886   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2364887   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2364888   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364889   +
2364890   +
2364891   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2364892   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2364893   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2364894   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2364895   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2364896   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364897   +
2364898   +
2364899   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2364900   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2364901   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2364902   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2364903   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2364904   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2364905   +if
2364906   +_FILTERNORM1 not in ( '.')
2364907   + and
2364908   +_FILTERNORM2 not in ( '.')
2364909   + and
2364910   +_FILTERNORM3 not in ( '.')
2364911   + and
2364912   +_FILTERNORM4 not in ( '.')
2364913   + and
2364914   +_FILTERNORM5 not in ( '.')
2364915   + and
2364916   +_FILTERNORM6 not in ( '.')
2364917   + and
2364918   +_FILTERNORM7 not in ( ' ')
2364919   + and
2364920   +_FILTERNORM8 not in ( ' ')
2364921   +and
2364922   +( Dt_Customer ne .)
2364923   +and ( Income ne . and (Income<=107000))
2364924   +and ( Kidhome ne .)
2364925   +and ( MntFishProducts ne .)
2364926   +and ( MntFruits ne .)
2364927   +and ( MntGoldProds ne .)
2364928   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2364929   +and ( MntSweetProducts ne .)
2364930   +and ( MntWines ne .)
2364931   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2364932   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2364933   +and ( NumStorePurchases ne .)
2364934   +and ( NumWebPurchases ne .)
2364935   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2364936   +and ( Recency ne .)
2364937   +and ( Teenhome ne .)
2364938   +and ( Year_Birth ne .)
2364939   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2364940   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2364941   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2364942   +end;
MPRINT(EM_DIAGRAM):   end;
2364943   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2364944   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2364945    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2364946    quit;
2364947    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2364948    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2364949    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2364950    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2364951    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2364952    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364953    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2364954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364956    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2364957    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2364959    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364960    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2364961    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2364962    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364963    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2364964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2364965    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2364966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364968    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2364969    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2364970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2364971    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
2364972    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2364973    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2364973  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2364974    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364975    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2364976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2364977    %macro varDept(fcmpdata=,id=);
2364978    %global nobs&id scoreFlag&id;
2364979    %let scoreFlag&id = 0;
2364980    %if &id=1 or ^&fcmpStart %then %do;
2364981    proc sort data=&fcmpdata out=_temp&id nodupkey;
2364982    by NAME;
2364983    where id=&id and LHS in( %let j=1;
2364984    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2364985    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2364986    "&var" %let j = %eval(&j+1);
2364987    %end;
2364988    );
2364989    run;
2364990    %let dsid = %sysfunc(open(_temp&id));
2364991    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2364992    %let dsid = %sysfunc(close(&dsid));
2364993    %if &&nobs&id %then %do;
2364994    %let scoreFlag&id = 1;
2364995    %let fcmpStart = 1;
2364996    %end;
2364997    %else %let fcmpStart = 0;
2364998    %end;
2364999    %else %do;
2365000    proc sort data=&fcmpdata out=_tempid;
2365001    where id=&id;
2365002    by LHS;
2365003    run;
2365004    %let dsid = %sysfunc(open(_tempid));
2365005    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2365006    %let dsid = %sysfunc(close(&dsid));
2365007    %if ^&&nobs&id %then %do;
2365008    proc datasets lib=work nolist;
2365009    delete _tempid;
2365010    run;
2365011    quit;
2365012    %end;
2365013    %else %do;
2365014    data _tempAll;
2365015    set %let j=%eval(&id-1);
2365016    %do x=1 %to &j;
2365017    %if &&nobs&x %then %do;
2365018    _temp&x %end;
2365019    %end;
2365020    ;
2365021    run;
2365022    proc sql;
2365023    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2365023  ! work._tempid p2 where p.name=p2.lhs;
2365024    quit;
2365025    data _temp&id;
2365026    set _temp&id;
2365027    where LHS ne '' and NAME ne '' and Node ne '';
2365028    run;
2365029    proc datasets lib=work nolist;
2365030    delete _tempAll;
2365031    run;
2365032    %let dsid = %sysfunc(open(_temp&id));
2365033    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2365034    %let dsid = %sysfunc(close(&dsid));
2365035    %if ^&&nobs&id %then %do;
2365036    proc datasets lib=work nolist;
2365037    delete _temp&id;
2365038    run;
2365039    quit;
2365040    %end;
2365041    %else %do;
2365042    %let scoreFlag&id = 1;
2365043    data _temp&id;
2365044    set _temp&id;
2365045    where LHS ne NAME and node ne '';
2365046    run;
2365047    %let dsid = %sysfunc(open(_temp&id));
2365048    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2365049    %let dsid = %sysfunc(close(&dsid));
2365050    %if ^&&nobs&id %then %do;
2365051    proc datasets lib=work nolist;
2365052    delete _temp&id;
2365053    run;
2365054    quit;
2365055    %end;
2365056    %else %do;
2365057    proc sort data=_temp&id nodupkey;
2365058    by LHS NAME;
2365059    run;
2365060    %end;
2365061    %end;
2365062    %end;
2365063    %end;
2365064    %mend varDept;
2365065    %macro optCode(outdata=fcmpdata);
2365066    %global fcmpStart;
2365067    %let fcmpStart = 0;
2365068    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2365069    %let NumNodes=9;
2365070    %do k=1 %to &NumNodes;
2365071    %vardept(fcmpdata=&outdata, id=&k);
2365072    %end;
2365073    %mend optCode;
2365074    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2365075    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2365076    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2365077    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2365078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2365079    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2365080    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2365081    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2365082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2365083    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2365084    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2365084  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2365085    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2365086    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2365087    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2365088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2365089    filename _pref
2365089  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2365090    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2365091    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2365092   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2365093   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2365094   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2365095   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2365096   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2365097   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2365098   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2365099   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2365100   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2365101   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2365102   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2365103   +LENGTH _WARN_ $4
2365104   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2365105   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2365106   +
2365107   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2365108   +
2365109   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2365110   +
2365111   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2365112   +
2365113   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2365114   +
2365115   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2365116   +
2365117   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2365118   +
2365119   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2365120   +
2365121   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2365122   +
2365123   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2365124   +
2365125   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2365126   +
2365127   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2365128   +
2365129   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2365130   +
2365131   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2365132   +
2365133   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2365134   +
2365135   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2365136   +
2365137   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2365138   +
2365139   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2365140   +
2365141   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2365142   +
2365143   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2365144   +
2365145   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2365146   +
2365147   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2365148   +
2365149   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2365150   +
2365151   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2365152   +
2365153   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2365154   +
2365155   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2365156   +
2365157   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2365158   +
2365159   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2365160   +
2365161   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2365162   +
2365163   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2365164   +
2365165   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2365166   +
2365167   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2365168   +
2365169   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2365170   +
2365171   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2365172   +
2365173   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2365174   +
2365175   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2365176   +
2365177   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2365178   +
2365179   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2365180   +
2365181   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2365182   +
2365183   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2365184   +
2365185   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2365186   +
2365187   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2365188   +
2365189   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2365190   +
2365191   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2365192   +
2365193   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2365194   +
2365195   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2365196   +
2365197   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2365198   +
2365199   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2365200   +
2365201   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2365202   +
2365203   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2365204   +
2365205   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2365206   +
2365207   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2365208   +
2365209   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2365210   +
2365211   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2365212   +
2365213   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2365214   +
2365215   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2365216   +
2365217   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2365218   +
2365219   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2365220   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2365221   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2365222   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2365223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365225   +end;
MPRINT(EM_DIAGRAM):   end;
2365226   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365228   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2365229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365231   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2365232   +   end;
MPRINT(EM_DIAGRAM):   end;
2365233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365234   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2365235   +   end;
MPRINT(EM_DIAGRAM):   end;
2365236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365237   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2365238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365240   +   end;
MPRINT(EM_DIAGRAM):   end;
2365241   +end;
MPRINT(EM_DIAGRAM):   end;
2365242   +
2365243   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2365244   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2365245   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2365246   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2365247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365249   +end;
MPRINT(EM_DIAGRAM):   end;
2365250   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365252   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2365253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365255   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2365256   +   end;
MPRINT(EM_DIAGRAM):   end;
2365257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365258   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2365259   +   end;
MPRINT(EM_DIAGRAM):   end;
2365260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365261   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2365262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365264   +   end;
MPRINT(EM_DIAGRAM):   end;
2365265   +end;
MPRINT(EM_DIAGRAM):   end;
2365266   +
2365267   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2365268   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2365269   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2365270   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2365271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365273   +end;
MPRINT(EM_DIAGRAM):   end;
2365274   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365276   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2365277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365278   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365279   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2365280   +   end;
MPRINT(EM_DIAGRAM):   end;
2365281   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365282   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2365283   +   end;
MPRINT(EM_DIAGRAM):   end;
2365284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365285   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2365286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365288   +   end;
MPRINT(EM_DIAGRAM):   end;
2365289   +end;
MPRINT(EM_DIAGRAM):   end;
2365290   +
2365291   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2365292   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2365293   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2365294   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2365295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365297   +end;
MPRINT(EM_DIAGRAM):   end;
2365298   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365299   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365300   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2365301   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365302   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365303   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2365304   +   end;
MPRINT(EM_DIAGRAM):   end;
2365305   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365306   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2365307   +   end;
MPRINT(EM_DIAGRAM):   end;
2365308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365309   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2365310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365312   +   end;
MPRINT(EM_DIAGRAM):   end;
2365313   +end;
MPRINT(EM_DIAGRAM):   end;
2365314   +
2365315   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2365316   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2365317   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2365318   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2365319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365321   +end;
MPRINT(EM_DIAGRAM):   end;
2365322   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365324   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2365325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365326   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365327   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2365328   +   end;
MPRINT(EM_DIAGRAM):   end;
2365329   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365330   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2365331   +   end;
MPRINT(EM_DIAGRAM):   end;
2365332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365333   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2365334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365336   +   end;
MPRINT(EM_DIAGRAM):   end;
2365337   +end;
MPRINT(EM_DIAGRAM):   end;
2365338   +
2365339   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2365340   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2365341   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2365342   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2365343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365345   +end;
MPRINT(EM_DIAGRAM):   end;
2365346   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365348   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2365349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365350   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2365351   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2365352   +   end;
MPRINT(EM_DIAGRAM):   end;
2365353   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2365354   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2365355   +   end;
MPRINT(EM_DIAGRAM):   end;
2365356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365357   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2365358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365360   +   end;
MPRINT(EM_DIAGRAM):   end;
2365361   +end;
MPRINT(EM_DIAGRAM):   end;
2365362   +
2365363   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2365364   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2365365   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2365366   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2365367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365369   +end;
MPRINT(EM_DIAGRAM):   end;
2365370   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2365372   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2365373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365374   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2365375   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2365376   +   end;
MPRINT(EM_DIAGRAM):   end;
2365377   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2365378   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2365379   +   end;
MPRINT(EM_DIAGRAM):   end;
2365380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365381   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2365382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365384   +   end;
MPRINT(EM_DIAGRAM):   end;
2365385   +end;
MPRINT(EM_DIAGRAM):   end;
2365386   +
2365387   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2365388   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
2365389   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2365390   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2365391   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2365392   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2365393   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2365394   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2365395   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2365396   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2365397   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2365398   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2365399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365401   +end;
MPRINT(EM_DIAGRAM):   end;
2365402   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365403   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2365404   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2365405   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365406   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2365407   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2365408   +   end;
MPRINT(EM_DIAGRAM):   end;
2365409   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2365410   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2365411   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2365412   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2365413   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2365414   +   end;
MPRINT(EM_DIAGRAM):   end;
2365415   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2365416   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2365417   +   end;
MPRINT(EM_DIAGRAM):   end;
2365418   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2365419   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2365420   +   end;
MPRINT(EM_DIAGRAM):   end;
2365421   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2365422   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2365423   +   end;
MPRINT(EM_DIAGRAM):   end;
2365424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365425   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2365426   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2365427   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2365428   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2365429   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365430   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365431   +   end;
MPRINT(EM_DIAGRAM):   end;
2365432   +end;
MPRINT(EM_DIAGRAM):   end;
2365433   +
2365434   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2365435   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2365436   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
2365437   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2365438   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2365439   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2365440   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2365441   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2365442   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2365443   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2365444   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2365445   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2365446   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2365447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2365448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365449   +end;
MPRINT(EM_DIAGRAM):   end;
2365450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2365451   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2365452   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2365453   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2365454   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2365455   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2365456   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2365457   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2365458   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2365459   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2365460   +         end;
MPRINT(EM_DIAGRAM):   end;
2365461   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2365462   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2365463   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2365464   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2365465   +            end;
MPRINT(EM_DIAGRAM):   end;
2365466   +         end;
MPRINT(EM_DIAGRAM):   end;
2365467   +      end;
MPRINT(EM_DIAGRAM):   end;
2365468   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2365469   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2365470   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2365471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2365472   +         end;
MPRINT(EM_DIAGRAM):   end;
2365473   +      end;
MPRINT(EM_DIAGRAM):   end;
2365474   +   end;
MPRINT(EM_DIAGRAM):   end;
2365475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2365476   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2365477   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2365478   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2365479   +      end;
MPRINT(EM_DIAGRAM):   end;
2365480   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2365481   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2365482   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2365483   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2365484   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2365485   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2365486   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2365487   +         end;
MPRINT(EM_DIAGRAM):   end;
2365488   +      end;
MPRINT(EM_DIAGRAM):   end;
2365489   +   end;
MPRINT(EM_DIAGRAM):   end;
2365490   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2365491   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2365492   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2365493   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2365494   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2365495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2365496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365497   +   end;
MPRINT(EM_DIAGRAM):   end;
2365498   +end;
MPRINT(EM_DIAGRAM):   end;
2365499   +
2365500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365501   +*** Checking missing input Interval
2365502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2365503   +
2365504   +IF NMISS(
2365505   +   AcceptedCmpTotal ,
2365506   +   Age ,
2365507   +   Frq ,
2365508   +   Income ,
2365509   +   Kidhome ,
2365510   +   Mnt ,
2365511   +   MntFishProducts ,
2365512   +   MntFruits ,
2365513   +   MntGoldProds ,
2365514   +   MntMeatProducts ,
2365515   +   MntSweetProducts ,
2365516   +   MntWines ,
2365517   +   MonthsAsCustomer ,
2365518   +   NumCatalogPurchases ,
2365519   +   NumDealsPurchases ,
2365520   +   NumDistPurchases ,
2365521   +   NumStorePurchases ,
2365522   +   NumWebPurchases ,
2365523   +   NumWebVisitsMonth ,
2365524   +   RFMstat ,
2365525   +   RMntFrq ,
2365526   +   Recency ,
2365527   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
2365528   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2365529   +
2365530   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2365531   +END;
MPRINT(EM_DIAGRAM):   END;
2365532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365533   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2365534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365535   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2365536   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2365537   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2365538   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2365539   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2365540   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2365541   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2365542   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2365543   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2365544   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2365545   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2365546   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2365547   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2365548   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2365549   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2365550   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2365551   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2365552   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2365553   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2365554   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2365555   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2365556   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2365557   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2365558   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2365559   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2365560   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2365561   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2365562   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2365563   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2365564   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2365565   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2365566   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2365567   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2365568   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2365569   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2365570   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2365571   +END;
MPRINT(EM_DIAGRAM):   END;
2365572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2365573   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2365574   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2365575   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
2365576   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2365577   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2365578   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2365579   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2365580   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2365581   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2365582   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2365583   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2365584   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2365585   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2365586   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2365587   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2365588   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
2365589   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2365590   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2365591   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2365592   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2365593   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2365594   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
2365595   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2365596   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2365597   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
2365598   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2365599   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2365600   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
2365601   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2365602   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2365603   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2365604   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2365605   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 *
MonthsAsCustomer ;
2365606   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2365607   +   ELSE S_NumCatalogPurchases
2365608   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2365609   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
2365610   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2365611   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2365612   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
2365613   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2365614   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2365615   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
2365616   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2365617   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2365618   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
2365619   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2365620   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2365621   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
2365622   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2365623   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2365624   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
2365625   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2365626   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2365627   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2365628   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2365629   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2365630   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2365631   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2365632   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2365633   +END;
MPRINT(EM_DIAGRAM):   END;
2365634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365635   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2365636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365638   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2365639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365641   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2365642   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365643   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2365644   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2365645   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2365646   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2365647   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2365648   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2365649   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2365650   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2365651   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2365652   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2365653   +          +      0.1112677116841 * S_NumDealsPurchases
2365654   +          +     0.01563584187072 * S_NumDistPurchases
2365655   +          +     0.19193969522995 * S_NumStorePurchases
2365656   +          +      0.3133556199984 * S_NumWebPurchases
2365657   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2365658   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2365659   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2365660   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 *
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 *
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts +
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 *
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 *
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 *
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 *
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq +
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2365661   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2365662   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2365663   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2365664   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2365665   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2365666   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2365667   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2365668   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2365669   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2365670   +          +     0.30225032753275 * S_NumDealsPurchases
2365671   +          +     0.33833359923595 * S_NumDistPurchases
2365672   +          +    -0.20255599575849 * S_NumStorePurchases
2365673   +          +    -0.12040071168942 * S_NumWebPurchases
2365674   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2365675   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2365676   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2365677   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 *
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 *
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts +
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 *
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 *
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 *
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 *
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq +
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2365678   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2365679   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2365680   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2365681   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2365682   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2365683   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2365684   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2365685   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2365686   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2365687   +          +     0.16792903091627 * S_NumDealsPurchases
2365688   +          +    -0.37408945626745 * S_NumDistPurchases
2365689   +          +    -0.18067262995566 * S_NumStorePurchases
2365690   +          +     0.21192146789881 * S_NumWebPurchases
2365691   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2365692   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2365693   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2365694   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 *
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 *
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts +
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 *
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines +
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases +
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases +
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases +
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 *
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2365695   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2365696   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2365697   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2365698   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2365699   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2365700   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2365701   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2365702   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2365703   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2365704   +          +     0.29407429399136 * S_NumDealsPurchases
2365705   +          +     0.01610745252195 * S_NumDistPurchases
2365706   +          +    -0.17767939085628 * S_NumStorePurchases
2365707   +          +    -0.15168958538637 * S_NumWebPurchases
2365708   +          +     0.17433622143988 * S_NumWebVisitsMonth
2365709   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2365710   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2365711   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 *
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 *
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts +
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 *
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines +
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases +
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases +
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases +
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 *
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2365712   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2365713   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2365714   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2365715   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2365716   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2365717   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2365718   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2365719   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2365720   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2365721   +          +    -0.37976451362108 * S_NumDealsPurchases
2365722   +          +    -0.17027731520801 * S_NumDistPurchases
2365723   +          +     0.59849493667087 * S_NumStorePurchases
2365724   +          +     0.65481480560301 * S_NumWebPurchases
2365725   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2365726   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2365727   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2365728   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 *
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 *
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts +
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 *
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines +
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases +
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases +
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases +
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 *
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2365729   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2365730   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2365731   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2365732   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2365733   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2365734   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2365735   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2365736   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2365737   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2365738   +          +    -0.07686699131623 * S_NumDealsPurchases
2365739   +          +    -0.07220460738926 * S_NumDistPurchases
2365740   +          +    -0.06554027468389 * S_NumStorePurchases
2365741   +          +     0.10422838158001 * S_NumWebPurchases
2365742   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2365743   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2365744   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2365745   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 *
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 *
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts +
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 *
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 *
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 *
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 *
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq +
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2365746   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2365747   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2365748   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2365749   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2365750   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2365751   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2365752   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2365753   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2365754   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2365755   +          +    -0.07920122387563 * S_NumDealsPurchases
2365756   +          +      0.3649244061347 * S_NumDistPurchases
2365757   +          +     0.36475853688403 * S_NumStorePurchases
2365758   +          +     0.02153991404063 * S_NumWebPurchases
2365759   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2365760   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2365761   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2365762   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 *
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 *
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts +
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 *
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 *
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 *
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 *
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq +
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2365763   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2365764   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2365765   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2365766   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2365767   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 *
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 +
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 *
HigherEducationBinary0 ;
2365768   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2365769   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2365770   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2365771   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2365772   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 +
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 *
HigherEducationBinary0 ;
2365773   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2365774   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2365775   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2365776   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2365777   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 *
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 +
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 *
HigherEducationBinary0 ;
2365778   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2365779   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2365780   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2365781   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2365782   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 +
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 *
HigherEducationBinary0 ;
2365783   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2365784   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2365785   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2365786   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2365787   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 +
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 *
HigherEducationBinary0 ;
2365788   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2365789   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2365790   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2365791   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2365792   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 *
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 +
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 *
HigherEducationBinary0 ;
2365793   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2365794   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2365795   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2365796   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2365797   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 *
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 +
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 *
HigherEducationBinary0 ;
2365798   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2365799   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2365800   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2365801   +          +     0.07744097241553 * Marital_StatusDivorced
2365802   +          +     -0.0247463100385 * Marital_StatusMarried
2365803   +          +     0.05804915234573 * Marital_StatusSingle
2365804   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle +
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation +
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced +
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle +
-0.08320125047871 * Marital_StatusTogether ;
2365805   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2365806   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2365807   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2365808   +          +     0.01390668926269 * Marital_StatusDivorced
2365809   +          +     0.01136282152074 * Marital_StatusMarried
2365810   +          +     0.12450246418789 * Marital_StatusSingle
2365811   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle +
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 *
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 *
Marital_StatusTogether ;
2365812   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2365813   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2365814   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2365815   +          +    -0.19133456931879 * Marital_StatusDivorced
2365816   +          +     0.56263566654996 * Marital_StatusMarried
2365817   +          +    -0.42172822038882 * Marital_StatusSingle
2365818   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle +
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 *
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 *
Marital_StatusTogether ;
2365819   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2365820   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2365821   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2365822   +          +    -0.19871205065609 * Marital_StatusDivorced
2365823   +          +    -0.14730795681603 * Marital_StatusMarried
2365824   +          +     0.05055432510362 * Marital_StatusSingle
2365825   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle +
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation +
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced +
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle +
0.06558965292395 * Marital_StatusTogether ;
2365826   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2365827   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2365828   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2365829   +          +    -0.35623807358995 * Marital_StatusDivorced
2365830   +          +     0.30324726283965 * Marital_StatusMarried
2365831   +          +    -0.18561093467927 * Marital_StatusSingle
2365832   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle +
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation +
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced +
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle +
0.395424582152 * Marital_StatusTogether ;
2365833   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2365834   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2365835   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2365836   +          +     0.11581014663368 * Marital_StatusDivorced
2365837   +          +    -0.31070638037659 * Marital_StatusMarried
2365838   +          +     0.17131747253949 * Marital_StatusSingle
2365839   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle +
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 *
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 *
Marital_StatusTogether ;
2365840   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2365841   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2365842   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2365843   +          +    -0.42450599871892 * Marital_StatusDivorced
2365844   +          +     0.48162905075885 * Marital_StatusMarried
2365845   +          +    -0.26618507749283 * Marital_StatusSingle
2365846   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle +
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 *
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 *
Marital_StatusTogether ;
2365847   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2365848   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2365849   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2365850   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2365851   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2365852   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2365853   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2365854   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2365855   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2365856   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2365857   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2365858   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 *
H1x1_1 ;
2365859   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2365860   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2365861   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 *
H1x1_2 ;
2365862   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2365863   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2365864   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 *
H1x1_3 ;
2365865   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2365866   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2365867   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 *
H1x1_4 ;
2365868   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2365869   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2365870   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 *
H1x1_5 ;
2365871   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2365872   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2365873   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 *
H1x1_6 ;
2365874   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2365875   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2365876   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 *
H1x1_7 ;
2365877   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2365878   +END;
MPRINT(EM_DIAGRAM):   END;
2365879   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2365880   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2365881   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2365882   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2365883   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2365884   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2365885   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2365886   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2365887   +END;
MPRINT(EM_DIAGRAM):   END;
2365888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365889   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2365890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2365891   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2365892   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2365893   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2365894   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2365895   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2365896   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2365897   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2365898   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2365899   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2365900   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2365901   +          +     1.96719021971894 * S_NumDealsPurchases
2365902   +          +    -0.44535354794671 * S_NumDistPurchases
2365903   +          +    -0.54827762736866 * S_NumStorePurchases
2365904   +          +     1.02703310241897 * S_NumWebPurchases
2365905   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2365906   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2365907   +        S_RMntFrq  +       0.651688575044 * S_Recency
2365908   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 *
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 *
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts +
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 *
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 *
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 *
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 *
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq +
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2365909   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2365910   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2365911   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2365912   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2365913   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2365914   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2365915   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2365916   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2365917   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2365918   +          +     1.34659447971131 * S_NumDealsPurchases
2365919   +          +    -0.51624251310423 * S_NumDistPurchases
2365920   +          +      -1.283121574848 * S_NumStorePurchases
2365921   +          +    -1.83517806228926 * S_NumWebPurchases
2365922   +          +     0.51321339475285 * S_NumWebVisitsMonth
2365923   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2365924   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2365925   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 *
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 *
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts +
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 *
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines +
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases +
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases +
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases +
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 *
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2365926   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2365927   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2365928   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2365929   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2365930   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2365931   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2365932   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2365933   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2365934   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2365935   +          +     0.67492297345004 * S_NumDealsPurchases
2365936   +          +    -0.40437875375926 * S_NumDistPurchases
2365937   +          +     0.36322603681545 * S_NumStorePurchases
2365938   +          +    -1.15315070635524 * S_NumWebPurchases
2365939   +          +     1.20707272201156 * S_NumWebVisitsMonth
2365940   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2365941   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2365942   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 *
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 *
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts +
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 *
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 *
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 *
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 *
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq +
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2365943   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2365944   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2365945   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2365946   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2365947   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2365948   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2365949   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2365950   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2365951   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2365952   +          +    -0.41427983342148 * S_NumDealsPurchases
2365953   +          +    -0.22714305629205 * S_NumDistPurchases
2365954   +          +    -0.78763182048862 * S_NumStorePurchases
2365955   +          +    -0.26669253451501 * S_NumWebPurchases
2365956   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2365957   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2365958   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2365959   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 *
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 *
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts +
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 *
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines +
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases +
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases +
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases +
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 *
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2365960   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2365961   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2365962   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2365963   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2365964   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2365965   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2365966   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2365967   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2365968   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2365969   +          +      0.7697882092212 * S_NumDealsPurchases
2365970   +          +     0.51864835453056 * S_NumDistPurchases
2365971   +          +    -1.18320366630444 * S_NumStorePurchases
2365972   +          +     -0.6608394639529 * S_NumWebPurchases
2365973   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2365974   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2365975   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2365976   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 *
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 *
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts +
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 *
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 *
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 *
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 *
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq +
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2365977   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2365978   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2365979   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2365980   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2365981   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2365982   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2365983   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2365984   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2365985   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2365986   +          +     1.45707983202269 * S_NumDealsPurchases
2365987   +          +     0.83341887728641 * S_NumDistPurchases
2365988   +          +    -0.36664450469423 * S_NumStorePurchases
2365989   +          +     0.63911579043339 * S_NumWebPurchases
2365990   +          +     0.67144790303554 * S_NumWebVisitsMonth
2365991   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2365992   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2365993   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 *
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 *
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts +
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 *
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines +
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases +
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases +
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases +
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 *
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2365994   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2365995   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2365996   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2365997   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2365998   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2365999   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2366000   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2366001   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2366002   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2366003   +          +     0.68491896063662 * S_NumDealsPurchases
2366004   +          +      0.5386312048592 * S_NumDistPurchases
2366005   +          +     1.28108942503912 * S_NumStorePurchases
2366006   +          +    -0.88282270505969 * S_NumWebPurchases
2366007   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2366008   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2366009   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2366010   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome +
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 *
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts +
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 *
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 *
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 *
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 *
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq +
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2366011   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2366012   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2366013   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2366014   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2366015   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 *
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 +
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 *
HigherEducationBinary0 ;
2366016   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2366017   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2366018   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2366019   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2366020   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 +
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 *
HigherEducationBinary0 ;
2366021   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2366022   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2366023   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2366024   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2366025   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 +
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 *
HigherEducationBinary0 ;
2366026   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2366027   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2366028   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2366029   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2366030   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 *
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 +
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 *
HigherEducationBinary0 ;
2366031   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2366032   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2366033   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2366034   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2366035   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 +
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 *
HigherEducationBinary0 ;
2366036   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2366037   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2366038   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2366039   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2366040   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 *
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 +
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 *
HigherEducationBinary0 ;
2366041   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2366042   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2366043   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2366044   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2366045   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 *
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 +
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 *
HigherEducationBinary0 ;
2366046   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2366047   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2366048   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2366049   +          +    -3.97961426831865 * Marital_StatusDivorced
2366050   +          +     0.00932639813867 * Marital_StatusMarried
2366051   +          +     1.29310186574718 * Marital_StatusSingle
2366052   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle +
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation +
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced +
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle +
1.60940802221114 * Marital_StatusTogether ;
2366053   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2366054   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2366055   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2366056   +          +    -0.30358516578188 * Marital_StatusDivorced
2366057   +          +    -0.96176709360703 * Marital_StatusMarried
2366058   +          +     1.26977690921649 * Marital_StatusSingle
2366059   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle +
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 *
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 *
Marital_StatusTogether ;
2366060   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2366061   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2366062   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2366063   +          +     0.55272671490757 * Marital_StatusDivorced
2366064   +          +      0.1499239288334 * Marital_StatusMarried
2366065   +          +    -0.46840941760604 * Marital_StatusSingle
2366066   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle +
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 *
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 *
Marital_StatusTogether ;
2366067   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2366068   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2366069   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2366070   +          +      -1.240735370138 * Marital_StatusDivorced
2366071   +          +    -1.20089294883599 * Marital_StatusMarried
2366072   +          +     0.57492674426149 * Marital_StatusSingle
2366073   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle +
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation +
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced +
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle +
1.44189292990255 * Marital_StatusTogether ;
2366074   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2366075   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2366076   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2366077   +          +     1.05435442049802 * Marital_StatusDivorced
2366078   +          +      0.3571256349717 * Marital_StatusMarried
2366079   +          +    -0.44741267266578 * Marital_StatusSingle
2366080   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle +
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation +
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced +
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle +
0.02948931507994 * Marital_StatusTogether ;
2366081   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2366082   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2366083   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2366084   +          +     2.06026721980778 * Marital_StatusDivorced
2366085   +          +    -0.49583258645166 * Marital_StatusMarried
2366086   +          +    -1.14824900824474 * Marital_StatusSingle
2366087   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle +
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation +
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced +
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle +
0.57690093967839 * Marital_StatusTogether ;
2366088   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2366089   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2366090   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2366091   +          +     -1.1890908607447 * Marital_StatusDivorced
2366092   +          +    -0.46668809907123 * Marital_StatusMarried
2366093   +          +     1.20342564763422 * Marital_StatusSingle
2366094   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle +
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation +
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced +
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle +
-1.75740662969578 * Marital_StatusTogether ;
2366095   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2366096   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2366097   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2366098   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2366099   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2366100   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2366101   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2366102   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2366103   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2366104   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2366105   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2366106   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2366107   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2366108   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2366109   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2366110   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2366111   +END;
MPRINT(EM_DIAGRAM):   END;
2366112   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2366113   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2366114   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2366115   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2366116   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2366117   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2366118   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2366119   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2366120   +END;
MPRINT(EM_DIAGRAM):   END;
2366121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2366122   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2366123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2366124   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2366125   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2366126   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2366127   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2366128   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 +
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 +
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2366129   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2366130   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2366131   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2366132   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 +
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 +
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2366133   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2366134   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2366135   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2366136   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2366137   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2366138   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2366139   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2366140   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2366141   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2366142   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2366143   +END;
MPRINT(EM_DIAGRAM):   END;
2366144   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2366145   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2366146   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2366147   +END;
MPRINT(EM_DIAGRAM):   END;
2366148   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2366149   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2366150   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2366151   +END;
MPRINT(EM_DIAGRAM):   END;
2366152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2366153   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2366154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2366155   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2366156   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2366157   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2366158   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2366159   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2366160   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2366161   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2366162   +END;
MPRINT(EM_DIAGRAM):   END;
2366163   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2366164   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2366165   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2366166   +drop
2366167   +H1x1_1
2366168   +H1x1_2
2366169   +H1x1_3
2366170   +H1x1_4
2366171   +H1x1_5
2366172   +H1x1_6
2366173   +H1x1_7
2366174   +H1x2_1
2366175   +H1x2_2
2366176   +H1x2_3
2366177   +H1x2_4
2366178   +H1x2_5
2366179   +H1x2_6
2366180   +H1x2_7
2366181   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2366182   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2366183    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2366184    quit;
2366185    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2366186    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2366187    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2366188    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2366189    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2366190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366191    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2366192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366194    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
2366195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366197    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366198    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2366199    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2366200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366201    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2366202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2366203    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2366204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366206    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366207    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2366208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366209    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366210    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2366211    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2366211  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.
 
2366212    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366213    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2366214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366215    filename _pref
2366215  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2366216    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2366217    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2366218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2366219   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2366220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2366221   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2366222   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2366223   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2366224    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2366225    quit;
2366226    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2366227    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2366228    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2366229    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2366230    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2366231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366232    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2366233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366235    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2366236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366238    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366239    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2366240    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2366241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366242    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2366243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
2366244    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2366245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366247    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366248    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2366249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366250    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366251    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2366252    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2366252  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
2366253    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366254    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2366255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366256    filename _pref
2366256  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2366257    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2366258    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2366259   +
2366260   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2366261   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2366261  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2366262   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2366263   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2366264   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2366265   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2366266   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2366267    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2366268    quit;
2366269    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2366270    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2366271    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2366272    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2366273    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2366274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366275    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2366276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366278    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2366279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366282    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2366283    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2366284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366285    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2366286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366287    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2366288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366289    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366290    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366291    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2366292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366293    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
The SAS System
 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366294    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2366295    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2366295  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
2366296    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366297    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2366298    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366299    filename _pref
2366299  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2366300    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2366301    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2366302   +
2366303   +
2366304   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2366305   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2366306   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2366307   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2366308   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2366309   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366310   +
2366311   +
2366312   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2366313   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2366314   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2366315   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2366316   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2366317   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366318   +
2366319   +
2366320   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2366321   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2366322   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2366323   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2366324   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2366325   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366326   +
2366327   +
2366328   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2366329   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2366330   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2366331   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2366332   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2366333   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366334   +
2366335   +
2366336   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2366337   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2366338   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2366339   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2366340   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2366341   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366342   +
2366343   +
2366344   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2366345   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2366346   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2366347   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2366348   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2366349   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366350   +
2366351   +
2366352   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2366353   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2366354   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2366355   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2366356   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2366357   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366358   +
2366359   +
2366360   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2366361   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2366362   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2366363   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2366364   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2366365   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2366366   +if
2366367   +_FILTERNORM1 not in ( '.')
2366368   + and
2366369   +_FILTERNORM2 not in ( '.')
2366370   + and
2366371   +_FILTERNORM3 not in ( '.')
2366372   + and
2366373   +_FILTERNORM4 not in ( '.')
2366374   + and
2366375   +_FILTERNORM5 not in ( '.')
2366376   + and
2366377   +_FILTERNORM6 not in ( '.')
2366378   + and
2366379   +_FILTERNORM7 not in ( ' ')
2366380   + and
2366381   +_FILTERNORM8 not in ( ' ')
2366382   +and
2366383   +( Dt_Customer ne .)
2366384   +and ( Income ne . and (Income<=107000))
2366385   +and ( Kidhome ne .)
2366386   +and ( MntFishProducts ne .)
2366387   +and ( MntFruits ne .)
2366388   +and ( MntGoldProds ne .)
2366389   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2366390   +and ( MntSweetProducts ne .)
2366391   +and ( MntWines ne .)
2366392   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2366393   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2366394   +and ( NumStorePurchases ne .)
2366395   +and ( NumWebPurchases ne .)
2366396   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2366397   +and ( Recency ne .)
2366398   +and ( Teenhome ne .)
2366399   +and ( Year_Birth ne .)
2366400   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
2366401   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2366402   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2366403   +end;
MPRINT(EM_DIAGRAM):   end;
2366404   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2366405   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2366406    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
2366407    quit;
2366408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2366409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2366410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2366411    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2366412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2366413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2366415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366417    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2366418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2366422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2366423    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366424    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2366425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
2366426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2366427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2366430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2366431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366432    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2366434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2366434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
2366435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366436    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
2366437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366438    %macro varDept(fcmpdata=,id=);
2366439    %global nobs&id scoreFlag&id;
2366440    %let scoreFlag&id = 0;
2366441    %if &id=1 or ^&fcmpStart %then %do;
2366442    proc sort data=&fcmpdata out=_temp&id nodupkey;
2366443    by NAME;
2366444    where id=&id and LHS in( %let j=1;
2366445    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2366446    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2366447    "&var" %let j = %eval(&j+1);
2366448    %end;
2366449    );
2366450    run;
2366451    %let dsid = %sysfunc(open(_temp&id));
2366452    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2366453    %let dsid = %sysfunc(close(&dsid));
2366454    %if &&nobs&id %then %do;
2366455    %let scoreFlag&id = 1;
2366456    %let fcmpStart = 1;
2366457    %end;
2366458    %else %let fcmpStart = 0;
2366459    %end;
2366460    %else %do;
2366461    proc sort data=&fcmpdata out=_tempid;
2366462    where id=&id;
2366463    by LHS;
2366464    run;
2366465    %let dsid = %sysfunc(open(_tempid));
2366466    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2366467    %let dsid = %sysfunc(close(&dsid));
2366468    %if ^&&nobs&id %then %do;
2366469    proc datasets lib=work nolist;
2366470    delete _tempid;
2366471    run;
2366472    quit;
2366473    %end;
2366474    %else %do;
2366475    data _tempAll;
2366476    set %let j=%eval(&id-1);
2366477    %do x=1 %to &j;
2366478    %if &&nobs&x %then %do;
2366479    _temp&x %end;
2366480    %end;
2366481    ;
2366482    run;
2366483    proc sql;
2366484    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2366484  ! work._tempid p2 where p.name=p2.lhs;
2366485    quit;
2366486    data _temp&id;
2366487    set _temp&id;
2366488    where LHS ne '' and NAME ne '' and Node ne '';
2366489    run;
2366490    proc datasets lib=work nolist;
2366491    delete _tempAll;
2366492    run;
2366493    %let dsid = %sysfunc(open(_temp&id));
2366494    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2366495    %let dsid = %sysfunc(close(&dsid));
2366496    %if ^&&nobs&id %then %do;
2366497    proc datasets lib=work nolist;
2366498    delete _temp&id;
2366499    run;
2366500    quit;
2366501    %end;
2366502    %else %do;
2366503    %let scoreFlag&id = 1;
2366504    data _temp&id;
2366505    set _temp&id;
2366506    where LHS ne NAME and node ne '';
2366507    run;
2366508    %let dsid = %sysfunc(open(_temp&id));
2366509    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2366510    %let dsid = %sysfunc(close(&dsid));
2366511    %if ^&&nobs&id %then %do;
2366512    proc datasets lib=work nolist;
2366513    delete _temp&id;
2366514    run;
2366515    quit;
2366516    %end;
2366517    %else %do;
2366518    proc sort data=_temp&id nodupkey;
2366519    by LHS NAME;
2366520    run;
2366521    %end;
2366522    %end;
2366523    %end;
2366524    %end;
2366525    %mend varDept;
2366526    %macro optCode(outdata=fcmpdata);
2366527    %global fcmpStart;
2366528    %let fcmpStart = 0;
2366529    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2366530    %let NumNodes=9;
2366531    %do k=1 %to &NumNodes;
2366532    %vardept(fcmpdata=&outdata, id=&k);
2366533    %end;
2366534    %mend optCode;
2366535    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
2366536    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2366537    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2366538    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2366539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366540    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2366541    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2366542    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2366543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2366545    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2366545  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
2366546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
2366547    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2366548    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2366549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366550    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2366551    * Ensmbl42: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing metadata for TRAIN data;
2366552    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl42_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl42_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl42_TRAIN out=WORK.M1T867MI noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T867MI;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T867MI(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1T867MI;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1T867MI;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M19WC0II NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CXQWHD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   set WORK.M19WC0II;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl42";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl42";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2366872    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2366873    set EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMINFO;
2366874    where DATA='Ensmbl42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
2366875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_EMINFO.
      WHERE (DATA='Ensmbl42') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366876    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMINFO;
2366877    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2366878    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2366879    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
2366883    run;
2366884    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMINFO;
2366885    set EMWS8.Ensmbl42_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMINFO WORK.MODELTEMP_INFO;
2366886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366887    proc sort data = EMWS8.Ensmbl42_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl42_EMINFO NOTHREADS;
2366888    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2366889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366890    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
2366891    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2366892    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366893    proc sort data = EMWS8.Ensmbl42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2366894    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2366895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366896    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMINFO;
2366897    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2366898    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2366899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366900    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2366901    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2366902    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2366903    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL42_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.39 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.39 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1SJ6KXW
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1SJ6KXW new;
MPRINT(EM_DIAGRAM):   run;
2366927    data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMOUTFIT;
2366928    set EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMOUTFIT;
2366929    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
2366930    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
2366930  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
2366931    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
2366932    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL42_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL42_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366933    proc sort data=EMWS8.Ensmbl42_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl42_EMREPORTFIT nothreads;
2366934    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
2366935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL42_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL42_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366936    %let _EMwarndup = 0;
2366937    %let _EMtargetdup =;
2366938    %let _EMASEtargetdup =;
2366939    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
2366940    set EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMOUTFIT;
2366941    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
2366942    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
2366943    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
2366944    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
2366945    end;
MPRINT(EM_DIAGRAM):   end;
2366946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL42_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366947    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
2366948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366949    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366950    proc sort data=EMWS8.Ensmbl42_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl42_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
2366951    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366952    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL42_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366953    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
2366954    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
2366955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2366956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2366957    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2366958    set EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_CMeta_TRAIN;
2366959    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2366959  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2366960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2366961    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2366962    set EMWS8.Ensmbl42_TRAIN(keep=
2366963    F_DepVar
2366964    I_DepVar
2366965    P_DepVar0
2366966    P_DepVar1
2366967    R_DepVar0
2366968    R_DepVar1
2366969    U_DepVar
2366970    _WARN_
2366971    DepVar
2366972    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2366973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL42_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl42_3X5_KSF nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_3X5_KSF;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_3X5_KSF(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_3X5_KSF;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_3X5_KSF;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 6.9263822E-6 OVLMAX 0.9997310135 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2371239    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
2371240    set EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_CMeta_TRAIN;
2371241    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
2371241  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
2371242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2371243    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
2371244    set EMWS8.Ensmbl42_VALIDATE(keep=
2371245    F_DepVar
2371246    I_DepVar
2371247    P_DepVar0
2371248    P_DepVar1
2371249    R_DepVar0
2371250    R_DepVar1
2371251    U_DepVar
2371252    _WARN_
2371253    DepVar
2371254    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
2371255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL42_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL42_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl42_01SPQUR nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_01SPQUR;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_01SPQUR(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMCLASSIFICATION WORK.Ensmbl42_01SPQUR;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_01SPQUR;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 6.9275838E-6 OVLMAX 0.9997310068 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
2375530    %let _cn = %sysfunc(getoption(CENTER));
2375531    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2375532    proc print data=EMWS8.Ensmbl42_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMREPORTFIT noobs label;
2375533    var STAT LABEL TRAIN
2375534    VALIDATE
2375535    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
2375536    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
2375537    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2375538    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
2375539    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL42_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 2018.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2375540    title10;
MPRINT(EM_DIAGRAM):   title10;
2375541    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2375542    proc sort data=EMWS8.Ensmbl42_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl42_EMCLASSIFICATION nothreads;
2375543    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2375544    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL42_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2375545    %let _cn = %sysfunc(getoption(CENTER));
2375546    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
2375547    proc print data=EMWS8.Ensmbl42_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMCLASSIFICATION noobs label;
2375548    var from into pct_row pct_col count percent
2375549    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
2375550    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
2375551    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
2375552    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
2375553    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
2375554    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
2375555    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
2375556    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
2375557    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
2375558    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2375559    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
2375560    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 2019.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2375561    title9;
MPRINT(EM_DIAGRAM):   title9;
2375562    title10;
MPRINT(EM_DIAGRAM):   title10;
2375563    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2375564    %let _cn = %sysfunc(getoption(CENTER));
2375565    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2375566    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMEVENTREPORT;
2375567    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
2375567  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
2375568    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2375568  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
2375568  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
2375568  ! FALSEEVENT
2375569    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
2375569  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
2375569  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
2375570       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
2375571    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
2375572    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
2375573    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
2375574    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
2375575    set EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMEVENTREPORT;
2375576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL42_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL42_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
2375577    proc print data=EMWS8.Ensmbl42_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMEVENTREPORT noobs label;
2375578    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2375579    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
2375580    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
2375581    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL42_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 2020.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2375582    title10;
MPRINT(EM_DIAGRAM):   title10;
2375583    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2375584    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2375585    modify Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2375586    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2375587    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2375587  ! ;
MPRINT(EM_DIAGRAM):   run;
2375588    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL42_EMRANK.DATA.
2375589    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
2375590    %let _cn = %sysfunc(getoption(CENTER));
2375591    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
2375592    proc print data=EMWS8.Ensmbl42_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMRANK label noobs;
2375593    var
2375594    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
2375595    by
2375596    notsorted DATAROLE
2375597    notsorted TARGET
2375598    notsorted TARGETLABEL
2375599    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
2375600    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
2375601    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
2375602    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL42_EMRANK.
NOTE: The PROCEDURE PRINT printed page 2021.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
2375603    title10;
MPRINT(EM_DIAGRAM):   title10;
2375604    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
2375605    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
2375606    modify Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
2375607    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
2375607  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
2375608    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
2375608  ! ;
MPRINT(EM_DIAGRAM):   run;
2375609    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL42_EMSCOREDIST.DATA.
2375610    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
