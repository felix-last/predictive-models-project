*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                12.34 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                12.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1L057GP
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1L057GP new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[93463] MAX=1 EXCEEDMAXVALUE='' )[93467] )[93461]
VALIDCHOICES=(CHOICE1='Y' )[93465] )[93749] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[93471]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[93475] )[93473] )[93469] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[93479]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[93485] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[93483] )[93481] )[93477] )[93459]
1670386    proc freq data=EMWS8.Ensmbl42_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl42_VariableSet noprint;
1670387    table ROLE*LEVEL/out=WORK.Ensmbl42META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl42META;
1670388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL42_VARIABLESET.
NOTE: The data set WORK.ENSMBL42META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1670389    proc print data=WORK.Ensmbl42META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42META label noobs;
1670390    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1670391    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1670391  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1670391  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1670392    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1670393    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1670394    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL42META.
NOTE: The PROCEDURE PRINT printed page 46.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670395    title10;
MPRINT(EM_DIAGRAM):   title10;
1670396    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN
EMWS8.AutoNeural9_TRAIN EMWS8.AutoNeural9_TRAIN EMWS8 AutoNeural9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.AutoNeural9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1670425    data WORK.Ensmbl42_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1670426    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1670427    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1670427  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1670427  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1670428       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1670428  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1670428  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1670429    set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL9_DEPVAR_DM( where=(_TYPE_="TARGET"));
1670430    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1670431    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1670432    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1670433    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1670434    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1670435    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1670436    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1670437    end;
MPRINT(EM_DIAGRAM):   end;
1670438    output;
MPRINT(EM_DIAGRAM):   output;
1670439    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL42_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1670440    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1670441    proc print data=WORK.Ensmbl42_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42_EVENT noobs label;
1670442    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1670443    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1670444    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1670445    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL42_EVENT.
NOTE: The PROCEDURE PRINT printed page 47.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670446    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1670447    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural9_DepVar_DM noobs label;
1670448    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1670449    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1670450    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1670450  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1670450  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1670451    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1670452    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1670453    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 48.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670454    title10;
MPRINT(EM_DIAGRAM):   title10;
1670455    %let groupid =;
1670456    %let endGroupid =;
1670457    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1670458    set EMWS8.AutoNeural12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_EMINFO;
1670459    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1670459  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1670460    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1670461    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1670462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1670463    %let groupid =;
1670464    %let endGroupid =;
1670465    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1670466    set EMWS8.AutoNeural11_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural11_EMINFO;
1670467    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1670467  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1670468    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1670469    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1670470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL11_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670471    %let groupid =;
1670472    %let endGroupid =;
1670473    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1670474    set EMWS8.AutoNeural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_EMINFO;
1670475    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1670475  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1670476    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1670477    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1670478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670479    %let groupid =;
1670480    %let endGroupid =;
1670481    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1670482    set EMWS8.Ensmbl36_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl36_EMINFO;
1670483    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1670483  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1670484    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1670485    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1670486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL36_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670487    data WORK.Ensmbl42;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42;
1670488    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1670489    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1670489  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1670490    nodeid="AUTONEURAL12";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL12";
1670491    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1670492    output;
MPRINT(EM_DIAGRAM):   output;
1670493    nodeid="AUTONEURAL11";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL11";
1670494    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1670495    output;
MPRINT(EM_DIAGRAM):   output;
1670496    nodeid="AUTONEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL9";
1670497    model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
1670498    output;
MPRINT(EM_DIAGRAM):   output;
1670499    nodeid="ENSMBL36";
MPRINT(EM_DIAGRAM):   nodeid="ENSMBL36";
1670500    model="Ensemble";
MPRINT(EM_DIAGRAM):   model="Ensemble";
1670501    output;
MPRINT(EM_DIAGRAM):   output;
1670502    ;
MPRINT(EM_DIAGRAM):   ;
1670503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL42 has 4 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670504    title;
MPRINT(EM_DIAGRAM):   title;
1670505    proc print data=WORK.Ensmbl42 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl42 label noobs;
1670506    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1670507    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1670508    run;
 
NOTE: There were 4 observations read from the data set WORK.ENSMBL42.
NOTE: The PROCEDURE PRINT printed page 49.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670509    title9;
MPRINT(EM_DIAGRAM):   title9;
1670510    title10;
MPRINT(EM_DIAGRAM):   title10;
1670511    data WORK.M25VFY72;
MPRINT(EM_DIAGRAM):    data WORK.M25VFY72;
1670512    set WORK.M25VFY72;
MPRINT(EM_DIAGRAM):   set WORK.M25VFY72;
1670513    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1670514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M25VFY72.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M25VFY72 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1670515    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1670516    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1670517    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1670518    %macro DMDBClass;
1670519        DepVar(DESC)
1670520    %mend DMDBClass;
1670521    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1670522    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1670523    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1670524    %macro DMDBVar;
1670525
1670526    %mend DMDBVar;
1670527    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670528    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1670529    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670530    proc dmdb batch data=EMWS8.AutoNeural12_TRAIN
1670531    dmdbcat=WORK.EM_DMDB
1670532    maxlevel = 513
1670533    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.AutoNeural12_TRAIN dmdbcat=WORK.EM_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1670534    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1670535    target
1670536    DepVar
1670537    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1670538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL12_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1670539    quit;
1670540    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O36UQA1W
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O36UQA1W new;
MPRINT(EM_DIAGRAM):   run;
1670642    filename emflow
1670642  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring AUTONEURAL12_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670643    *------------------------------------------------------------*;
1670644    * Ensmbl42: Scoring AUTONEURAL12_TRAIN data;
1670645    *------------------------------------------------------------*;
1670646    data EMWS8.Ensmbl42_TRAIN
1670647    / view=EMWS8.Ensmbl42_TRAIN
1670648    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_TRAIN / view=EMWS8.Ensmbl42_TRAIN ;
1670649    set EMWS8.AutoNeural12_TRAIN
1670650    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_TRAIN ;
1670651    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas.
1670652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670653   +* Ensmbl42: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Combine model for DepVar;
1670654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670655   +* Ensmbl42: Scoring Code of model 1 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 1 of 4;
1670656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670658   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1670659   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1670660   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1670661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670663   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1670664   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1670665   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1670666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670668   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1670669   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1670670   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1670671   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670673   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1670674   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1670675   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1670676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670677   +
1670678   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1670679   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1670679  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1670680   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1670681   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1670682   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1670683   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1670684   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1670685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670686   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1670687   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1670688   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1670689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670691   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1670692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670693   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1670694   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1670695   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1670696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670697   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1670698   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1670699   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1670700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670702   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1670703   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1670704   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1670705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670707   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1670708   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1670709   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1670710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1670711   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1670712   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1670713   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1670714   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1670715   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1670716   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1670717   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1670718   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1670719   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1670720   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1670721   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1670722   +LENGTH _WARN_ $4
1670723   +      F_DepVar  $ 12
1670724   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1670725   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1670726   +
1670727   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1670728   +
1670729   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1670730   +
1670731   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1670732   +
1670733   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1670734   +
1670735   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1670736   +
1670737   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1670738   +
1670739   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1670740   +
1670741   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1670742   +
1670743   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1670744   +
1670745   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1670746   +
1670747   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1670748   +
1670749   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1670750   +
1670751   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1670752   +
1670753   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1670754   +
1670755   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1670756   +
1670757   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1670758   +
1670759   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1670760   +
1670761   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1670762   +
1670763   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1670764   +
1670765   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1670766   +
1670767   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1670768   +
1670769   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1670770   +
1670771   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1670772   +
1670773   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1670774   +
1670775   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1670776   +
1670777   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1670778   +
1670779   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1670780   +
1670781   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1670782   +
1670783   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1670784   +
1670785   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1670786   +
1670787   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1670788   +
1670789   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1670790   +
1670791   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1670792   +
1670793   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1670794   +
1670795   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1670796   +
1670797   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1670798   +
1670799   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1670800   +
1670801   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1670802   +
1670803   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1670804   +
1670805   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1670806   +
1670807   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1670808   +
1670809   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1670810   +
1670811   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1670812   +
1670813   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1670814   +
1670815   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1670816   +
1670817   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1670818   +
1670819   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1670820   +
1670821   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1670822   +
1670823   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1670824   +
1670825   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1670826   +
1670827   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1670828   +
1670829   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1670830   +
1670831   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1670832   +
1670833   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1670834   +
1670835   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1670836   +
1670837   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1670838   +
1670839   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1670840   +
1670841   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1670842   +
1670843   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1670844   +
1670845   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1670846   +
1670847   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1670848   +
1670849   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1670850   +
1670851   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1670852   +
1670853   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1670854   +
1670855   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1670856   +
1670857   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1670858   +
1670859   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1670860   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1670861   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1670862   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1670863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670865   +end;
MPRINT(EM_DIAGRAM):   end;
1670866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670868   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1670869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670870   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670871   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1670872   +   end;
MPRINT(EM_DIAGRAM):   end;
1670873   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670874   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1670875   +   end;
MPRINT(EM_DIAGRAM):   end;
1670876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670877   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1670878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670880   +   end;
MPRINT(EM_DIAGRAM):   end;
1670881   +end;
MPRINT(EM_DIAGRAM):   end;
1670882   +
1670883   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1670884   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1670885   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1670886   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1670887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670889   +end;
MPRINT(EM_DIAGRAM):   end;
1670890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670892   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1670893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670894   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670895   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1670896   +   end;
MPRINT(EM_DIAGRAM):   end;
1670897   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670898   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1670899   +   end;
MPRINT(EM_DIAGRAM):   end;
1670900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670901   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1670902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670904   +   end;
MPRINT(EM_DIAGRAM):   end;
1670905   +end;
MPRINT(EM_DIAGRAM):   end;
1670906   +
1670907   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1670908   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1670909   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1670910   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1670911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670913   +end;
MPRINT(EM_DIAGRAM):   end;
1670914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670915   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670916   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1670917   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670918   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670919   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1670920   +   end;
MPRINT(EM_DIAGRAM):   end;
1670921   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670922   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1670923   +   end;
MPRINT(EM_DIAGRAM):   end;
1670924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670925   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1670926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670928   +   end;
MPRINT(EM_DIAGRAM):   end;
1670929   +end;
MPRINT(EM_DIAGRAM):   end;
1670930   +
1670931   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1670932   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1670933   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1670934   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1670935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670937   +end;
MPRINT(EM_DIAGRAM):   end;
1670938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670940   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1670941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670942   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670943   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1670944   +   end;
MPRINT(EM_DIAGRAM):   end;
1670945   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670946   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1670947   +   end;
MPRINT(EM_DIAGRAM):   end;
1670948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670949   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1670950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670952   +   end;
MPRINT(EM_DIAGRAM):   end;
1670953   +end;
MPRINT(EM_DIAGRAM):   end;
1670954   +
1670955   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1670956   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1670957   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1670958   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1670959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670961   +end;
MPRINT(EM_DIAGRAM):   end;
1670962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670963   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670964   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1670965   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670966   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670967   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1670968   +   end;
MPRINT(EM_DIAGRAM):   end;
1670969   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670970   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1670971   +   end;
MPRINT(EM_DIAGRAM):   end;
1670972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670973   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1670974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670976   +   end;
MPRINT(EM_DIAGRAM):   end;
1670977   +end;
MPRINT(EM_DIAGRAM):   end;
1670978   +
1670979   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1670980   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1670981   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1670982   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1670983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1670984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1670985   +end;
MPRINT(EM_DIAGRAM):   end;
1670986   +else do;
MPRINT(EM_DIAGRAM):   else do;
1670987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1670988   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1670989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1670990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1670991   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1670992   +   end;
MPRINT(EM_DIAGRAM):   end;
1670993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1670994   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1670995   +   end;
MPRINT(EM_DIAGRAM):   end;
1670996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1670997   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1670998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1670999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671000   +   end;
MPRINT(EM_DIAGRAM):   end;
1671001   +end;
MPRINT(EM_DIAGRAM):   end;
1671002   +
1671003   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1671004   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1671005   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1671006   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1671007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1671008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671009   +end;
MPRINT(EM_DIAGRAM):   end;
1671010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1671011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1671012   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1671013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1671014   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1671015   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1671016   +   end;
MPRINT(EM_DIAGRAM):   end;
1671017   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1671018   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1671019   +   end;
MPRINT(EM_DIAGRAM):   end;
1671020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1671021   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1671022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1671023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671024   +   end;
MPRINT(EM_DIAGRAM):   end;
1671025   +end;
MPRINT(EM_DIAGRAM):   end;
1671026   +
1671027   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1671028   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1671029   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1671030   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1671031   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1671032   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1671033   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1671034   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1671035   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1671036   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1671037   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1671038   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1671039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1671040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671041   +end;
MPRINT(EM_DIAGRAM):   end;
1671042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1671043   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1671044   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1671045   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1671046   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1671047   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1671048   +   end;
MPRINT(EM_DIAGRAM):   end;
1671049   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1671050   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1671051   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1671052   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1671053   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1671054   +   end;
MPRINT(EM_DIAGRAM):   end;
1671055   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1671056   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1671057   +   end;
MPRINT(EM_DIAGRAM):   end;
1671058   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1671059   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1671060   +   end;
MPRINT(EM_DIAGRAM):   end;
1671061   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1671062   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1671063   +   end;
MPRINT(EM_DIAGRAM):   end;
1671064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1671065   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1671066   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1671067   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1671068   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1671069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1671070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671071   +   end;
MPRINT(EM_DIAGRAM):   end;
1671072   +end;
MPRINT(EM_DIAGRAM):   end;
1671073   +
1671074   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1671075   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1671076   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1671077   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1671078   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1671079   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1671080   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1671081   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1671082   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1671083   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1671084   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1671085   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1671086   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1671087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1671088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671089   +end;
MPRINT(EM_DIAGRAM):   end;
1671090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1671091   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1671092   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1671093   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1671094   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1671095   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1671096   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1671097   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1671098   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1671099   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1671100   +         end;
MPRINT(EM_DIAGRAM):   end;
1671101   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1671102   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1671103   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1671104   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1671105   +            end;
MPRINT(EM_DIAGRAM):   end;
1671106   +         end;
MPRINT(EM_DIAGRAM):   end;
1671107   +      end;
MPRINT(EM_DIAGRAM):   end;
1671108   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1671109   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1671110   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1671111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1671112   +         end;
MPRINT(EM_DIAGRAM):   end;
1671113   +      end;
MPRINT(EM_DIAGRAM):   end;
1671114   +   end;
MPRINT(EM_DIAGRAM):   end;
1671115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1671116   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1671117   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1671118   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1671119   +      end;
MPRINT(EM_DIAGRAM):   end;
1671120   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1671121   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1671122   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1671123   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1671124   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1671125   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1671126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1671127   +         end;
MPRINT(EM_DIAGRAM):   end;
1671128   +      end;
MPRINT(EM_DIAGRAM):   end;
1671129   +   end;
MPRINT(EM_DIAGRAM):   end;
1671130   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1671131   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1671132   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1671133   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1671134   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1671135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1671136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671137   +   end;
MPRINT(EM_DIAGRAM):   end;
1671138   +end;
MPRINT(EM_DIAGRAM):   end;
1671139   +
1671140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671141   +*** Checking missing input Interval
1671142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1671143   +
1671144   +IF NMISS(
1671145   +   AcceptedCmpTotal ,
1671146   +   Age ,
1671147   +   Frq ,
1671148   +   Income ,
1671149   +   Kidhome ,
1671150   +   Mnt ,
1671151   +   MntFishProducts ,
1671152   +   MntFruits ,
1671153   +   MntGoldProds ,
1671154   +   MntMeatProducts ,
1671155   +   MntSweetProducts ,
1671156   +   MntWines ,
1671157   +   MonthsAsCustomer ,
1671158   +   NumCatalogPurchases ,
1671159   +   NumDealsPurchases ,
1671160   +   NumDistPurchases ,
1671161   +   NumStorePurchases ,
1671162   +   NumWebPurchases ,
1671163   +   NumWebVisitsMonth ,
1671164   +   RFMstat ,
1671165   +   RMntFrq ,
1671166   +   Recency ,
1671167   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1671168   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1671169   +
1671170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1671171   +END;
MPRINT(EM_DIAGRAM):   END;
1671172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671173   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1671174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1671176   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1671177   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1671178   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1671179   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1671180   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1671181   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1671182   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1671183   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1671184   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1671185   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1671186   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1671187   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1671188   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1671189   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1671190   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1671191   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1671192   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1671193   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1671194   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1671195   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1671196   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1671197   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1671198   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1671199   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1671200   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1671201   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1671202   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1671203   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1671204   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1671205   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1671206   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1671207   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1671208   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1671209   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1671210   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1671211   +END;
MPRINT(EM_DIAGRAM):   END;
1671212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1671213   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1671214   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1671215   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1671216   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1671217   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1671218   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1671219   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1671220   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1671221   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1671222   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1671223   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1671224   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1671225   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1671226   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1671227   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1671228   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1671229   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1671230   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1671231   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1671232   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1671233   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1671234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1671235   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1671236   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1671237   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1671238   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1671239   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1671240   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1671241   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1671242   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1671243   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1671244   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1671245   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1671246   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1671247   +   ELSE S_NumCatalogPurchases
1671248   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1671249   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1671250   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1671251   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1671252   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1671253   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1671254   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1671255   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1671256   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1671257   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1671258   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1671259   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1671260   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1671261   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1671262   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1671263   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1671264   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1671265   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1671266   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1671267   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1671268   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1671269   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1671270   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1671271   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1671272   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1671273   +END;
MPRINT(EM_DIAGRAM):   END;
1671274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671275   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1671276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671278   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1671279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671281   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1671282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1671284   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1671285   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1671286   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1671287   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1671288   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1671289   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1671290   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1671291   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1671292   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1671293   +          +     1.17276395296242 * S_NumDealsPurchases
1671294   +          +     0.26632768295477 * S_NumDistPurchases
1671295   +          +    -1.26575615903579 * S_NumStorePurchases
1671296   +          +    -0.95316107557927 * S_NumWebPurchases
1671297   +          +     1.01828574356487 * S_NumWebVisitsMonth
1671298   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1671299   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1671300   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1671301   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1671302   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1671303   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1671304   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1671305   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1671306   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1671307   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1671308   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1671309   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1671310   +          +     1.14485571201233 * S_NumDealsPurchases
1671311   +          +     0.21414266588987 * S_NumDistPurchases
1671312   +          +    -0.10530090074297 * S_NumStorePurchases
1671313   +          +    -0.41712321238458 * S_NumWebPurchases
1671314   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1671315   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1671316   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1671317   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1671318   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1671319   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1671320   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1671321   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1671322   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1671323   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1671324   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1671325   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1671326   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1671327   +          +      0.7196418967437 * S_NumDealsPurchases
1671328   +          +     0.69035286374177 * S_NumDistPurchases
1671329   +          +     0.38027656631135 * S_NumStorePurchases
1671330   +          +    -0.18878358997924 * S_NumWebPurchases
1671331   +          +     1.61962062004798 * S_NumWebVisitsMonth
1671332   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1671333   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1671334   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1671335   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1671336   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1671337   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1671338   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1671339   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1671340   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1671341   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1671342   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1671343   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1671344   +          +    -0.00642902007204 * S_NumDealsPurchases
1671345   +          +     0.29785069480367 * S_NumDistPurchases
1671346   +          +    -0.42243322063147 * S_NumStorePurchases
1671347   +          +     0.54880896338383 * S_NumWebPurchases
1671348   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1671349   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1671350   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1671351   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1671352   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1671353   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1671354   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1671355   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1671356   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1671357   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1671358   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1671359   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1671360   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1671361   +          +    -0.48404738328225 * S_NumDealsPurchases
1671362   +          +    -0.02464180457879 * S_NumDistPurchases
1671363   +          +     1.17201831082067 * S_NumStorePurchases
1671364   +          +     0.57453655167516 * S_NumWebPurchases
1671365   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1671366   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1671367   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1671368   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1671369   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1671370   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1671371   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1671372   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1671373   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1671374   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1671375   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1671376   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1671377   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1671378   +          +    -1.49850531967483 * S_NumDealsPurchases
1671379   +          +    -0.82105466264223 * S_NumDistPurchases
1671380   +          +     0.29984603642824 * S_NumStorePurchases
1671381   +          +     0.06557123721611 * S_NumWebPurchases
1671382   +          +     1.04754749365002 * S_NumWebVisitsMonth
1671383   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1671384   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1671385   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1671386   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1671387   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1671388   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1671389   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1671390   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1671391   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1671392   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1671393   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1671394   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1671395   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1671396   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1671397   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1671398   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1671399   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1671400   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1671401   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1671402   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1671403   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1671404   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1671405   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1671406   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1671407   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1671408   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1671409   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1671410   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1671411   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1671412   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1671413   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1671414   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1671415   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1671416   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1671417   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1671418   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1671419   +          +     0.24583509957712 * Marital_StatusDivorced
1671420   +          +    -0.22681931588361 * Marital_StatusMarried
1671421   +          +    -0.12924106229536 * Marital_StatusSingle
1671422   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1671423   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1671424   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1671425   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1671426   +          +    -0.12585334311068 * Marital_StatusDivorced
1671427   +          +    -0.20835502467207 * Marital_StatusMarried
1671428   +          +    -0.13839534449368 * Marital_StatusSingle
1671429   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1671430   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1671431   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1671432   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1671433   +          +     0.35106363238113 * Marital_StatusDivorced
1671434   +          +     -1.3414808583918 * Marital_StatusMarried
1671435   +          +     1.40835320798486 * Marital_StatusSingle
1671436   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1671437   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1671438   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1671439   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1671440   +          +     0.48174546958393 * Marital_StatusDivorced
1671441   +          +    -0.41416978858191 * Marital_StatusMarried
1671442   +          +    -0.23376801546265 * Marital_StatusSingle
1671443   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1671444   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1671445   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1671446   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1671447   +          +    -0.67557643774246 * Marital_StatusDivorced
1671448   +          +     1.63844045917367 * Marital_StatusMarried
1671449   +          +    -0.70320960247699 * Marital_StatusSingle
1671450   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1671451   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1671452   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1671453   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1671454   +          +    -0.11371453086883 * Marital_StatusDivorced
1671455   +          +    -0.34226997176291 * Marital_StatusMarried
1671456   +          +    -1.01568676685754 * Marital_StatusSingle
1671457   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1671458   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1671459   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1671460   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1671461   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1671462   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1671463   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1671464   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1671465   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1671466   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1671467   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1671468   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1671469   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1671470   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1671471   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1671472   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1671473   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1671474   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1671475   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1671476   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1671477   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1671478   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1671479   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1671480   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1671481   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1671482   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1671483   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1671484   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1671485   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1671486   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1671487   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1671488   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1671489   +END;
MPRINT(EM_DIAGRAM):   END;
1671490   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1671491   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1671492   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1671493   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1671494   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1671495   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1671496   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1671497   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1671498   +END;
MPRINT(EM_DIAGRAM):   END;
1671499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671500   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1671501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671502   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1671503   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1671504   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1671505   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1671506   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1671507   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1671508   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1671509   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1671510   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1671511   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1671512   +          +    -0.87259051567474 * S_NumDealsPurchases
1671513   +          +    -0.36454149529139 * S_NumDistPurchases
1671514   +          +     0.12447759925061 * S_NumStorePurchases
1671515   +          +    -1.08133487947367 * S_NumWebPurchases
1671516   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1671517   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1671518   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1671519   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1671520   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1671521   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1671522   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1671523   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1671524   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1671525   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1671526   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1671527   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1671528   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1671529   +          +     2.23121497416403 * S_NumDealsPurchases
1671530   +          +    -0.48674842191071 * S_NumDistPurchases
1671531   +          +     1.77510728607544 * S_NumStorePurchases
1671532   +          +     0.14647433155436 * S_NumWebPurchases
1671533   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1671534   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1671535   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1671536   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1671537   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1671538   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1671539   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1671540   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1671541   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1671542   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1671543   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1671544   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1671545   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1671546   +          +     0.14338855349611 * S_NumDealsPurchases
1671547   +          +    -2.21071010829235 * S_NumDistPurchases
1671548   +          +    -0.21795889348002 * S_NumStorePurchases
1671549   +          +     1.98825087883535 * S_NumWebPurchases
1671550   +          +     1.02482442531149 * S_NumWebVisitsMonth
1671551   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1671552   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1671553   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1671554   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1671555   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1671556   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1671557   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1671558   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1671559   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1671560   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1671561   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1671562   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1671563   +          +     0.30041205661012 * S_NumDealsPurchases
1671564   +          +    -0.63499849986918 * S_NumDistPurchases
1671565   +          +    -0.34155713433714 * S_NumStorePurchases
1671566   +          +    -1.14183354933936 * S_NumWebPurchases
1671567   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1671568   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1671569   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1671570   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1671571   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1671572   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1671573   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1671574   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1671575   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1671576   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1671577   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1671578   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1671579   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1671580   +          +    -0.21237915559831 * S_NumDealsPurchases
1671581   +          +     0.48256923764182 * S_NumDistPurchases
1671582   +          +    -0.45553093140641 * S_NumStorePurchases
1671583   +          +      0.5593655963659 * S_NumWebPurchases
1671584   +          +     0.27943768691188 * S_NumWebVisitsMonth
1671585   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1671586   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1671587   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1671588   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1671589   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1671590   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1671591   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1671592   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1671593   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1671594   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1671595   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1671596   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1671597   +          +     2.38967021388062 * S_NumDealsPurchases
1671598   +          +    -0.97722398866481 * S_NumDistPurchases
1671599   +          +     1.57612333191312 * S_NumStorePurchases
1671600   +          +    -0.75968679115983 * S_NumWebPurchases
1671601   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1671602   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1671603   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1671604   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1671605   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1671606   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1671607   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1671608   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1671609   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1671610   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1671611   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1671612   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1671613   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1671614   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1671615   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1671616   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1671617   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1671618   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1671619   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1671620   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1671621   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1671622   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1671623   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1671624   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1671625   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1671626   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1671627   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1671628   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1671629   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1671630   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1671631   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1671632   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1671633   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1671634   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1671635   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1671636   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1671637   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1671638   +          +     0.96470902298142 * Marital_StatusDivorced
1671639   +          +     0.94805959268314 * Marital_StatusMarried
1671640   +          +     -0.6523948769616 * Marital_StatusSingle
1671641   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1671642   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1671643   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1671644   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1671645   +          +      0.3918249505531 * Marital_StatusDivorced
1671646   +          +    -0.00968091979586 * Marital_StatusMarried
1671647   +          +     0.84615379885071 * Marital_StatusSingle
1671648   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1671649   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1671650   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1671651   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1671652   +          +     1.14335160313191 * Marital_StatusDivorced
1671653   +          +     0.50580517192175 * Marital_StatusMarried
1671654   +          +     0.17264295020921 * Marital_StatusSingle
1671655   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1671656   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1671657   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1671658   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1671659   +          +    -0.11238504444225 * Marital_StatusDivorced
1671660   +          +    -0.81348274043749 * Marital_StatusMarried
1671661   +          +     0.46075415610001 * Marital_StatusSingle
1671662   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1671663   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1671664   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1671665   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1671666   +          +    -0.46342068701431 * Marital_StatusDivorced
1671667   +          +    -0.41667845270204 * Marital_StatusMarried
1671668   +          +    -0.47166707496281 * Marital_StatusSingle
1671669   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1671670   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1671671   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1671672   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1671673   +          +    -0.45376613787812 * Marital_StatusDivorced
1671674   +          +     0.01337046049801 * Marital_StatusMarried
1671675   +          +    -0.92811489484121 * Marital_StatusSingle
1671676   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1671677   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1671678   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1671679   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1671680   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1671681   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1671682   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1671683   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1671684   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1671685   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1671686   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1671687   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1671688   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1671689   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1671690   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1671691   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1671692   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1671693   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1671694   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1671695   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1671696   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1671697   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1671698   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1671699   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1671700   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1671701   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1671702   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1671703   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1671704   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1671705   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1671706   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1671707   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1671708   +END;
MPRINT(EM_DIAGRAM):   END;
1671709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1671710   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1671711   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1671712   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1671713   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1671714   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1671715   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1671716   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1671717   +END;
MPRINT(EM_DIAGRAM):   END;
1671718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671719   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1671720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671721   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1671722   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1671723   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1671724   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1671725   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1671726   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1671727   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1671728   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1671729   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1671730   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1671731   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1671732   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1671733   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1671734   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1671735   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1671736   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1671737   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1671738   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1671739   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1671740   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1671741   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1671742   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1671743   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1671744   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1671745   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1671746   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1671747   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1671748   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1671749   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1671750   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1671751   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1671752   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1671753   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1671754   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1671755   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1671756   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1671757   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1671758   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1671759   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1671760   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1671761   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1671762   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1671763   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1671764   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1671765   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1671766   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1671767   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1671768   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1671769   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1671770   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1671771   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1671772   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1671773   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1671774   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1671775   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1671776   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1671777   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1671778   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1671779   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1671780   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1671781   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1671782   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1671783   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1671784   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1671785   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1671786   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1671787   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1671788   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1671789   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1671790   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1671791   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1671792   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1671793   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1671794   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1671795   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1671796   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1671797   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1671798   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1671799   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1671800   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1671801   +END;
MPRINT(EM_DIAGRAM):   END;
1671802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1671803   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1671804   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1671805   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1671806   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1671807   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1671808   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1671809   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1671810   +END;
MPRINT(EM_DIAGRAM):   END;
1671811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671812   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1671813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671814   +
1671815   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1671816   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1671817   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1671818   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1671819   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1671820   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1671821   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1671822   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1671823   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1671824   +end;
MPRINT(EM_DIAGRAM):   end;
1671825   +else do;
MPRINT(EM_DIAGRAM):   else do;
1671826   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1671827   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1671828   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1671829   +   end;
MPRINT(EM_DIAGRAM):   end;
1671830   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1671831   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1671832   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1671833   +   end;
MPRINT(EM_DIAGRAM):   end;
1671834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1671835   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1671836   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1671837   +   end;
MPRINT(EM_DIAGRAM):   end;
1671838   +end;
MPRINT(EM_DIAGRAM):   end;
1671839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1671840   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1671841   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1671842   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1671843   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1671844   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1671845   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1671846   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1671847   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1671848   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1671849   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1671850   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1671851   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1671852   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1671853   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1671854   +END;
MPRINT(EM_DIAGRAM):   END;
1671855   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1671856   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1671857   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1671858   +END;
MPRINT(EM_DIAGRAM):   END;
1671859   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1671860   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1671861   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1671862   +END;
MPRINT(EM_DIAGRAM):   END;
1671863   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1671864   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1671865   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1671866   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1671867   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1671868   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1671869   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1671870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671871   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1671872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1671873   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1671874   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1671875   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1671876   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1671877   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1671878   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1671879   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1671880   +END;
MPRINT(EM_DIAGRAM):   END;
1671881   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1671882   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1671883   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1671884   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1671885   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1671886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671887   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1671888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671889   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1671890   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1671891   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1671892   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1671893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671894   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1671895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671896   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1671897   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1671898   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1671899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671900   +* Ensmbl42: Scoring Code of model 2 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 2 of 4;
1671901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671903   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1671904   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1671905   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1671906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1671907   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1671908   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1671909   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1671910   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1671911   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1671912   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1671913   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1671914   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1671915   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1671916   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1671917   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1671918   +LENGTH _WARN_ $4
1671919   +      F_DepVar  $ 12
1671920   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1671921   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1671922   +
1671923   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1671924   +
1671925   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1671926   +
1671927   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1671928   +
1671929   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1671930   +
1671931   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1671932   +
1671933   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1671934   +
1671935   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1671936   +
1671937   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1671938   +
1671939   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1671940   +
1671941   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1671942   +
1671943   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1671944   +
1671945   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1671946   +
1671947   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1671948   +
1671949   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1671950   +
1671951   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1671952   +
1671953   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1671954   +
1671955   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1671956   +
1671957   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1671958   +
1671959   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1671960   +
1671961   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1671962   +
1671963   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1671964   +
1671965   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1671966   +
1671967   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1671968   +
1671969   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1671970   +
1671971   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1671972   +
1671973   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1671974   +
1671975   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1671976   +
1671977   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1671978   +
1671979   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1671980   +
1671981   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1671982   +
1671983   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1671984   +
1671985   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1671986   +
1671987   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1671988   +
1671989   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1671990   +
1671991   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1671992   +
1671993   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1671994   +
1671995   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1671996   +
1671997   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1671998   +
1671999   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1672000   +
1672001   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1672002   +
1672003   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1672004   +
1672005   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1672006   +
1672007   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1672008   +
1672009   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1672010   +
1672011   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1672012   +
1672013   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1672014   +
1672015   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1672016   +
1672017   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1672018   +
1672019   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1672020   +
1672021   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1672022   +
1672023   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1672024   +
1672025   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1672026   +
1672027   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1672028   +
1672029   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1672030   +
1672031   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1672032   +
1672033   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1672034   +
1672035   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1672036   +
1672037   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1672038   +
1672039   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1672040   +
1672041   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1672042   +
1672043   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1672044   +
1672045   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1672046   +
1672047   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1672048   +
1672049   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1672050   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1672051   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1672052   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1672053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672055   +end;
MPRINT(EM_DIAGRAM):   end;
1672056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672058   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1672059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672060   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672061   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1672062   +   end;
MPRINT(EM_DIAGRAM):   end;
1672063   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672064   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1672065   +   end;
MPRINT(EM_DIAGRAM):   end;
1672066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672067   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1672068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672070   +   end;
MPRINT(EM_DIAGRAM):   end;
1672071   +end;
MPRINT(EM_DIAGRAM):   end;
1672072   +
1672073   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1672074   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1672075   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1672076   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1672077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672079   +end;
MPRINT(EM_DIAGRAM):   end;
1672080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672082   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1672083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672085   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1672086   +   end;
MPRINT(EM_DIAGRAM):   end;
1672087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672088   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1672089   +   end;
MPRINT(EM_DIAGRAM):   end;
1672090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672091   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1672092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672094   +   end;
MPRINT(EM_DIAGRAM):   end;
1672095   +end;
MPRINT(EM_DIAGRAM):   end;
1672096   +
1672097   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1672098   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1672099   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1672100   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1672101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672103   +end;
MPRINT(EM_DIAGRAM):   end;
1672104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672106   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1672107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672108   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672109   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1672110   +   end;
MPRINT(EM_DIAGRAM):   end;
1672111   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672112   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1672113   +   end;
MPRINT(EM_DIAGRAM):   end;
1672114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672115   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1672116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672118   +   end;
MPRINT(EM_DIAGRAM):   end;
1672119   +end;
MPRINT(EM_DIAGRAM):   end;
1672120   +
1672121   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1672122   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1672123   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1672124   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1672125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672127   +end;
MPRINT(EM_DIAGRAM):   end;
1672128   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672129   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672130   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1672131   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672132   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672133   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1672134   +   end;
MPRINT(EM_DIAGRAM):   end;
1672135   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672136   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1672137   +   end;
MPRINT(EM_DIAGRAM):   end;
1672138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672139   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1672140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672142   +   end;
MPRINT(EM_DIAGRAM):   end;
1672143   +end;
MPRINT(EM_DIAGRAM):   end;
1672144   +
1672145   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1672146   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1672147   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1672148   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1672149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672151   +end;
MPRINT(EM_DIAGRAM):   end;
1672152   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672154   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1672155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672156   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672157   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1672158   +   end;
MPRINT(EM_DIAGRAM):   end;
1672159   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672160   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1672161   +   end;
MPRINT(EM_DIAGRAM):   end;
1672162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672163   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1672164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672166   +   end;
MPRINT(EM_DIAGRAM):   end;
1672167   +end;
MPRINT(EM_DIAGRAM):   end;
1672168   +
1672169   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1672170   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1672171   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1672172   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1672173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672175   +end;
MPRINT(EM_DIAGRAM):   end;
1672176   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672177   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672178   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1672179   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672180   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1672181   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1672182   +   end;
MPRINT(EM_DIAGRAM):   end;
1672183   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1672184   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1672185   +   end;
MPRINT(EM_DIAGRAM):   end;
1672186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672187   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1672188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672190   +   end;
MPRINT(EM_DIAGRAM):   end;
1672191   +end;
MPRINT(EM_DIAGRAM):   end;
1672192   +
1672193   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1672194   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1672195   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1672196   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1672197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672199   +end;
MPRINT(EM_DIAGRAM):   end;
1672200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1672202   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1672203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672204   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1672205   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1672206   +   end;
MPRINT(EM_DIAGRAM):   end;
1672207   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1672208   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1672209   +   end;
MPRINT(EM_DIAGRAM):   end;
1672210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672211   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1672212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672214   +   end;
MPRINT(EM_DIAGRAM):   end;
1672215   +end;
MPRINT(EM_DIAGRAM):   end;
1672216   +
1672217   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1672218   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1672219   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1672220   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1672221   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1672222   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1672223   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1672224   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1672225   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1672226   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1672227   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1672228   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1672229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672231   +end;
MPRINT(EM_DIAGRAM):   end;
1672232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672233   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1672234   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1672235   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672236   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1672237   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1672238   +   end;
MPRINT(EM_DIAGRAM):   end;
1672239   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1672240   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1672241   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1672242   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1672243   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1672244   +   end;
MPRINT(EM_DIAGRAM):   end;
1672245   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1672246   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1672247   +   end;
MPRINT(EM_DIAGRAM):   end;
1672248   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1672249   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1672250   +   end;
MPRINT(EM_DIAGRAM):   end;
1672251   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1672252   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1672253   +   end;
MPRINT(EM_DIAGRAM):   end;
1672254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672255   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1672256   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1672257   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1672258   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1672259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672261   +   end;
MPRINT(EM_DIAGRAM):   end;
1672262   +end;
MPRINT(EM_DIAGRAM):   end;
1672263   +
1672264   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1672265   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1672266   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1672267   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1672268   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1672269   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1672270   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1672271   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1672272   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1672273   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1672274   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1672275   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1672276   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1672277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1672278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672279   +end;
MPRINT(EM_DIAGRAM):   end;
1672280   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672281   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1672282   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1672283   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672284   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1672285   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1672286   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1672287   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1672288   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1672289   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1672290   +         end;
MPRINT(EM_DIAGRAM):   end;
1672291   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1672292   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1672293   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1672294   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1672295   +            end;
MPRINT(EM_DIAGRAM):   end;
1672296   +         end;
MPRINT(EM_DIAGRAM):   end;
1672297   +      end;
MPRINT(EM_DIAGRAM):   end;
1672298   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1672299   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1672300   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1672301   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1672302   +         end;
MPRINT(EM_DIAGRAM):   end;
1672303   +      end;
MPRINT(EM_DIAGRAM):   end;
1672304   +   end;
MPRINT(EM_DIAGRAM):   end;
1672305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672306   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1672307   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1672308   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1672309   +      end;
MPRINT(EM_DIAGRAM):   end;
1672310   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1672311   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1672312   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1672313   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1672314   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1672315   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1672316   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1672317   +         end;
MPRINT(EM_DIAGRAM):   end;
1672318   +      end;
MPRINT(EM_DIAGRAM):   end;
1672319   +   end;
MPRINT(EM_DIAGRAM):   end;
1672320   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1672321   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1672322   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1672323   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1672324   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1672325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1672326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672327   +   end;
MPRINT(EM_DIAGRAM):   end;
1672328   +end;
MPRINT(EM_DIAGRAM):   end;
1672329   +
1672330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672331   +*** Checking missing input Interval
1672332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1672333   +
1672334   +IF NMISS(
1672335   +   AcceptedCmpTotal ,
1672336   +   Age ,
1672337   +   Frq ,
1672338   +   Income ,
1672339   +   Kidhome ,
1672340   +   Mnt ,
1672341   +   MntFishProducts ,
1672342   +   MntFruits ,
1672343   +   MntGoldProds ,
1672344   +   MntMeatProducts ,
1672345   +   MntSweetProducts ,
1672346   +   MntWines ,
1672347   +   MonthsAsCustomer ,
1672348   +   NumCatalogPurchases ,
1672349   +   NumDealsPurchases ,
1672350   +   NumDistPurchases ,
1672351   +   NumStorePurchases ,
1672352   +   NumWebPurchases ,
1672353   +   NumWebVisitsMonth ,
1672354   +   RFMstat ,
1672355   +   RMntFrq ,
1672356   +   Recency ,
1672357   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1672358   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1672359   +
1672360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1672361   +END;
MPRINT(EM_DIAGRAM):   END;
1672362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672363   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1672364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672365   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1672366   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1672367   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1672368   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1672369   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1672370   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1672371   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1672372   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1672373   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1672374   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1672375   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1672376   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1672377   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1672378   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1672379   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1672380   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1672381   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1672382   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1672383   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1672384   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1672385   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1672386   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1672387   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1672388   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1672389   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1672390   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1672391   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1672392   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1672393   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1672394   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1672395   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1672396   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1672397   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1672398   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1672399   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1672400   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1672401   +END;
MPRINT(EM_DIAGRAM):   END;
1672402   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1672403   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1672404   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1672405   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1672406   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1672407   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1672408   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1672409   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1672410   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1672411   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1672412   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1672413   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1672414   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1672415   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1672416   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1672417   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1672418   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1672419   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1672420   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1672421   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1672422   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1672423   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1672424   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1672425   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1672426   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1672427   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1672428   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1672429   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1672430   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1672431   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1672432   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1672433   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1672434   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1672435   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1672436   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1672437   +   ELSE S_NumCatalogPurchases
1672438   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1672439   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1672440   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1672441   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1672442   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1672443   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1672444   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1672445   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1672446   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1672447   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1672448   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1672449   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1672450   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1672451   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1672452   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1672453   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1672454   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1672455   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1672456   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1672457   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1672458   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1672459   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1672460   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1672461   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1672462   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1672463   +END;
MPRINT(EM_DIAGRAM):   END;
1672464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672465   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1672466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672468   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1672469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672471   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1672472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1672474   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1672475   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1672476   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1672477   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1672478   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1672479   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1672480   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1672481   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1672482   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1672483   +          +     0.89422627895323 * S_NumDealsPurchases
1672484   +          +    -0.13304125929765 * S_NumDistPurchases
1672485   +          +    -1.04568442570811 * S_NumStorePurchases
1672486   +          +    -0.28677765126751 * S_NumWebPurchases
1672487   +          +      1.2327638737509 * S_NumWebVisitsMonth
1672488   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1672489   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1672490   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1672491   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1672492   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1672493   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1672494   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1672495   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1672496   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1672497   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1672498   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1672499   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1672500   +          +     0.04224590196535 * S_NumDealsPurchases
1672501   +          +     0.76554742700113 * S_NumDistPurchases
1672502   +          +    -0.49155496870812 * S_NumStorePurchases
1672503   +          +     0.59606812744403 * S_NumWebPurchases
1672504   +          +     1.86809286276405 * S_NumWebVisitsMonth
1672505   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1672506   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1672507   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1672508   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1672509   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1672510   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1672511   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1672512   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1672513   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1672514   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1672515   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1672516   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1672517   +          +    -0.04866536993486 * S_NumDealsPurchases
1672518   +          +    -0.53535979020214 * S_NumDistPurchases
1672519   +          +     2.20634071253676 * S_NumStorePurchases
1672520   +          +      0.6164564989007 * S_NumWebPurchases
1672521   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1672522   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1672523   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1672524   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1672525   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1672526   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1672527   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1672528   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1672529   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1672530   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1672531   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1672532   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1672533   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1672534   +          +     1.37461255707863 * S_NumDealsPurchases
1672535   +          +    -0.17684775000818 * S_NumDistPurchases
1672536   +          +    -0.62755623855535 * S_NumStorePurchases
1672537   +          +    -1.46551649022657 * S_NumWebPurchases
1672538   +          +     3.35784247878638 * S_NumWebVisitsMonth
1672539   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1672540   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1672541   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1672542   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1672543   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1672544   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1672545   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1672546   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1672547   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1672548   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1672549   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1672550   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1672551   +          +    -0.76256677907121 * S_NumDealsPurchases
1672552   +          +    -0.31591571751692 * S_NumDistPurchases
1672553   +          +      0.0506832614089 * S_NumStorePurchases
1672554   +          +      1.4636796923764 * S_NumWebPurchases
1672555   +          +     0.37743519705036 * S_NumWebVisitsMonth
1672556   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1672557   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1672558   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1672559   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1672560   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1672561   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1672562   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1672563   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1672564   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1672565   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1672566   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1672567   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1672568   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1672569   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1672570   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1672571   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1672572   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1672573   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1672574   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1672575   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1672576   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1672577   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1672578   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1672579   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1672580   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1672581   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1672582   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1672583   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1672584   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1672585   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1672586   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1672587   +          +     0.68641668264565 * Marital_StatusDivorced
1672588   +          +    -0.81586871439732 * Marital_StatusMarried
1672589   +          +     0.63758920518451 * Marital_StatusSingle
1672590   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1672591   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1672592   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1672593   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1672594   +          +     0.05137560133238 * Marital_StatusDivorced
1672595   +          +    -2.24401993266209 * Marital_StatusMarried
1672596   +          +     1.57359386216115 * Marital_StatusSingle
1672597   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1672598   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1672599   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1672600   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1672601   +          +     -1.0649987815942 * Marital_StatusDivorced
1672602   +          +     0.76065111692388 * Marital_StatusMarried
1672603   +          +    -0.21694149754801 * Marital_StatusSingle
1672604   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1672605   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1672606   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1672607   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1672608   +          +     2.02155453548328 * Marital_StatusDivorced
1672609   +          +    -2.60190649735306 * Marital_StatusMarried
1672610   +          +     1.09149388354927 * Marital_StatusSingle
1672611   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1672612   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1672613   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1672614   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1672615   +          +     0.66315970650309 * Marital_StatusDivorced
1672616   +          +    -1.20476729758152 * Marital_StatusMarried
1672617   +          +     0.56175027826397 * Marital_StatusSingle
1672618   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1672619   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1672620   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1672621   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1672622   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1672623   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1672624   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1672625   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1672626   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1672627   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1672628   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1672629   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1672630   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1672631   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1672632   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1672633   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1672634   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1672635   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1672636   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1672637   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1672638   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1672639   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1672640   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1672641   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1672642   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1672643   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1672644   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1672645   +END;
MPRINT(EM_DIAGRAM):   END;
1672646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1672647   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1672648   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1672649   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1672650   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1672651   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1672652   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1672653   +END;
MPRINT(EM_DIAGRAM):   END;
1672654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672655   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1672656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672657   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1672658   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1672659   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1672660   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1672661   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1672662   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1672663   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1672664   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1672665   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1672666   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1672667   +          +     1.50005927423985 * S_NumDealsPurchases
1672668   +          +      0.5590536933569 * S_NumDistPurchases
1672669   +          +    -0.61757824339318 * S_NumStorePurchases
1672670   +          +     0.37259686538158 * S_NumWebPurchases
1672671   +          +     2.59725437895564 * S_NumWebVisitsMonth
1672672   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1672673   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1672674   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1672675   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1672676   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1672677   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1672678   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1672679   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1672680   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1672681   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1672682   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1672683   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1672684   +          +    -0.09282222088797 * S_NumDealsPurchases
1672685   +          +     0.10726247938321 * S_NumDistPurchases
1672686   +          +     -1.1235971458527 * S_NumStorePurchases
1672687   +          +    -0.78304387839877 * S_NumWebPurchases
1672688   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1672689   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1672690   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1672691   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1672692   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1672693   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1672694   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1672695   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1672696   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1672697   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1672698   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1672699   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1672700   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1672701   +          +     0.35349185459988 * S_NumDealsPurchases
1672702   +          +     0.06853677714859 * S_NumDistPurchases
1672703   +          +    -1.47546012999338 * S_NumStorePurchases
1672704   +          +     0.20926435398916 * S_NumWebPurchases
1672705   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1672706   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1672707   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1672708   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1672709   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1672710   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1672711   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1672712   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1672713   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1672714   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1672715   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1672716   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1672717   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1672718   +          +      0.3873586120272 * S_NumDealsPurchases
1672719   +          +     0.25911651157596 * S_NumDistPurchases
1672720   +          +     1.58922489084287 * S_NumStorePurchases
1672721   +          +     0.49041797743368 * S_NumWebPurchases
1672722   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1672723   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1672724   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1672725   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1672726   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1672727   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1672728   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1672729   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1672730   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1672731   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1672732   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1672733   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1672734   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1672735   +          +    -0.60830880287865 * S_NumDealsPurchases
1672736   +          +      0.0745331267194 * S_NumDistPurchases
1672737   +          +    -1.39472448256952 * S_NumStorePurchases
1672738   +          +     1.95372179969087 * S_NumWebPurchases
1672739   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1672740   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1672741   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1672742   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1672743   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1672744   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1672745   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1672746   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1672747   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1672748   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1672749   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1672750   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1672751   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1672752   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1672753   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1672754   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1672755   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1672756   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1672757   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1672758   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1672759   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1672760   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1672761   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1672762   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1672763   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1672764   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1672765   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1672766   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1672767   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1672768   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1672769   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1672770   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1672771   +          +    -1.33377871643323 * Marital_StatusDivorced
1672772   +          +    -0.87184228840898 * Marital_StatusMarried
1672773   +          +     1.41223186340257 * Marital_StatusSingle
1672774   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1672775   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1672776   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1672777   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1672778   +          +    -0.21479890935233 * Marital_StatusDivorced
1672779   +          +     -0.0025459519579 * Marital_StatusMarried
1672780   +          +     1.33900491702264 * Marital_StatusSingle
1672781   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1672782   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1672783   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1672784   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1672785   +          +    -0.38307267471999 * Marital_StatusDivorced
1672786   +          +     0.97088969451415 * Marital_StatusMarried
1672787   +          +    -0.28578224473381 * Marital_StatusSingle
1672788   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1672789   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1672790   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1672791   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1672792   +          +    -1.42229401093569 * Marital_StatusDivorced
1672793   +          +      0.7234508382397 * Marital_StatusMarried
1672794   +          +    -0.29062202974628 * Marital_StatusSingle
1672795   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1672796   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1672797   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1672798   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1672799   +          +    -0.99067637207205 * Marital_StatusDivorced
1672800   +          +    -0.50245902142079 * Marital_StatusMarried
1672801   +          +     0.54214494533793 * Marital_StatusSingle
1672802   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1672803   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1672804   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1672805   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1672806   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1672807   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1672808   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1672809   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1672810   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1672811   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1672812   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1672813   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1672814   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1672815   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1672816   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1672817   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1672818   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1672819   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1672820   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1672821   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1672822   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1672823   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1672824   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1672825   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1672826   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1672827   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1672828   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1672829   +END;
MPRINT(EM_DIAGRAM):   END;
1672830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1672831   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1672832   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1672833   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1672834   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1672835   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1672836   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1672837   +END;
MPRINT(EM_DIAGRAM):   END;
1672838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672839   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1672840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1672842   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1672843   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1672844   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1672845   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1672846   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1672847   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1672848   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1672849   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1672850   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1672851   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1672852   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1672853   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1672854   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1672855   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1672856   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1672857   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1672858   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1672859   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1672860   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1672861   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1672862   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1672863   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1672864   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1672865   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1672866   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1672867   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1672868   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1672869   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1672870   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1672871   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1672872   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1672873   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1672874   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1672875   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1672876   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1672877   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1672878   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1672879   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1672880   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1672881   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1672882   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1672883   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1672884   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1672885   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1672886   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1672887   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1672888   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1672889   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1672890   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1672891   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1672892   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1672893   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1672894   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1672895   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1672896   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1672897   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1672898   +END;
MPRINT(EM_DIAGRAM):   END;
1672899   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1672900   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1672901   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1672902   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1672903   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1672904   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1672905   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1672906   +END;
MPRINT(EM_DIAGRAM):   END;
1672907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672908   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1672909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672910   +
1672911   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1672912   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1672913   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1672914   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1672915   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1672916   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1672917   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1672918   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1672919   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1672920   +end;
MPRINT(EM_DIAGRAM):   end;
1672921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1672922   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1672923   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1672924   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1672925   +   end;
MPRINT(EM_DIAGRAM):   end;
1672926   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1672927   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1672928   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1672929   +   end;
MPRINT(EM_DIAGRAM):   end;
1672930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1672931   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1672932   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1672933   +   end;
MPRINT(EM_DIAGRAM):   end;
1672934   +end;
MPRINT(EM_DIAGRAM):   end;
1672935   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1672936   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1672937   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1672938   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1672939   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1672940   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1672941   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1672942   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1672943   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1672944   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1672945   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1672946   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1672947   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1672948   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1672949   +END;
MPRINT(EM_DIAGRAM):   END;
1672950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1672951   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1672952   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1672953   +END;
MPRINT(EM_DIAGRAM):   END;
1672954   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1672955   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1672956   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1672957   +END;
MPRINT(EM_DIAGRAM):   END;
1672958   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1672959   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1672960   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1672961   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1672962   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1672963   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1672964   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1672965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672966   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1672967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1672968   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1672969   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1672970   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1672971   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1672972   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1672973   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1672974   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1672975   +END;
MPRINT(EM_DIAGRAM):   END;
1672976   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1672977   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1672978   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1672979   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1672980   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1672981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672982   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1672983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672984   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1672985   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1672986   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1672987   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1672988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672989   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1672990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672991   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1672992   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1672993   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1672994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672995   +* Ensmbl42: Scoring Code of model 3 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 3 of 4;
1672996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1672998   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1672999   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1673000   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1673001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673002   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1673003   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1673004   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1673005   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1673006   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1673007   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1673008   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1673009   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1673010   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1673011   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1673012   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1673013   +LENGTH _WARN_ $4
1673014   +      F_DepVar  $ 12
1673015   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1673016   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1673017   +
1673018   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1673019   +
1673020   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1673021   +
1673022   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1673023   +
1673024   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1673025   +
1673026   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1673027   +
1673028   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1673029   +
1673030   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1673031   +
1673032   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1673033   +
1673034   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1673035   +
1673036   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1673037   +
1673038   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1673039   +
1673040   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1673041   +
1673042   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1673043   +
1673044   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1673045   +
1673046   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1673047   +
1673048   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1673049   +
1673050   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1673051   +
1673052   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1673053   +
1673054   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1673055   +
1673056   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1673057   +
1673058   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1673059   +
1673060   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1673061   +
1673062   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1673063   +
1673064   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1673065   +
1673066   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1673067   +
1673068   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1673069   +
1673070   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1673071   +
1673072   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1673073   +
1673074   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1673075   +
1673076   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1673077   +
1673078   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1673079   +
1673080   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1673081   +
1673082   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1673083   +
1673084   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1673085   +
1673086   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1673087   +
1673088   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1673089   +
1673090   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1673091   +
1673092   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1673093   +
1673094   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1673095   +
1673096   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1673097   +
1673098   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1673099   +
1673100   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1673101   +
1673102   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1673103   +
1673104   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1673105   +
1673106   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1673107   +
1673108   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1673109   +
1673110   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1673111   +
1673112   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1673113   +
1673114   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1673115   +
1673116   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1673117   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1673118   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1673119   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1673120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673122   +end;
MPRINT(EM_DIAGRAM):   end;
1673123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673125   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1673126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673127   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673128   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1673129   +   end;
MPRINT(EM_DIAGRAM):   end;
1673130   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673131   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1673132   +   end;
MPRINT(EM_DIAGRAM):   end;
1673133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673134   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1673135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673137   +   end;
MPRINT(EM_DIAGRAM):   end;
1673138   +end;
MPRINT(EM_DIAGRAM):   end;
1673139   +
1673140   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1673141   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1673142   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1673143   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1673144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673146   +end;
MPRINT(EM_DIAGRAM):   end;
1673147   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673148   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673149   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1673150   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673151   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673152   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1673153   +   end;
MPRINT(EM_DIAGRAM):   end;
1673154   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673155   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1673156   +   end;
MPRINT(EM_DIAGRAM):   end;
1673157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673158   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1673159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673161   +   end;
MPRINT(EM_DIAGRAM):   end;
1673162   +end;
MPRINT(EM_DIAGRAM):   end;
1673163   +
1673164   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1673165   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1673166   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1673167   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1673168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673170   +end;
MPRINT(EM_DIAGRAM):   end;
1673171   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673172   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673173   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1673174   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673175   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673176   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1673177   +   end;
MPRINT(EM_DIAGRAM):   end;
1673178   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673179   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1673180   +   end;
MPRINT(EM_DIAGRAM):   end;
1673181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673182   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1673183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673185   +   end;
MPRINT(EM_DIAGRAM):   end;
1673186   +end;
MPRINT(EM_DIAGRAM):   end;
1673187   +
1673188   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1673189   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1673190   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1673191   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1673192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673194   +end;
MPRINT(EM_DIAGRAM):   end;
1673195   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673197   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1673198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673200   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1673201   +   end;
MPRINT(EM_DIAGRAM):   end;
1673202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673203   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1673204   +   end;
MPRINT(EM_DIAGRAM):   end;
1673205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673206   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1673207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673209   +   end;
MPRINT(EM_DIAGRAM):   end;
1673210   +end;
MPRINT(EM_DIAGRAM):   end;
1673211   +
1673212   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1673213   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1673214   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1673215   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1673216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673218   +end;
MPRINT(EM_DIAGRAM):   end;
1673219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673221   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1673222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673224   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1673225   +   end;
MPRINT(EM_DIAGRAM):   end;
1673226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673227   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1673228   +   end;
MPRINT(EM_DIAGRAM):   end;
1673229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673230   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1673231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673233   +   end;
MPRINT(EM_DIAGRAM):   end;
1673234   +end;
MPRINT(EM_DIAGRAM):   end;
1673235   +
1673236   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1673237   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1673238   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1673239   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1673240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673242   +end;
MPRINT(EM_DIAGRAM):   end;
1673243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673245   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1673246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673248   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1673249   +   end;
MPRINT(EM_DIAGRAM):   end;
1673250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673251   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1673252   +   end;
MPRINT(EM_DIAGRAM):   end;
1673253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673254   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1673255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673257   +   end;
MPRINT(EM_DIAGRAM):   end;
1673258   +end;
MPRINT(EM_DIAGRAM):   end;
1673259   +
1673260   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1673261   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1673262   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1673263   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1673264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673266   +end;
MPRINT(EM_DIAGRAM):   end;
1673267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673269   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1673270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673271   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1673272   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1673273   +   end;
MPRINT(EM_DIAGRAM):   end;
1673274   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1673275   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1673276   +   end;
MPRINT(EM_DIAGRAM):   end;
1673277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673278   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1673279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673281   +   end;
MPRINT(EM_DIAGRAM):   end;
1673282   +end;
MPRINT(EM_DIAGRAM):   end;
1673283   +
1673284   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1673285   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1673286   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1673287   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1673288   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1673289   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1673290   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1673291   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1673292   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1673293   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1673294   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1673295   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1673296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673298   +end;
MPRINT(EM_DIAGRAM):   end;
1673299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673300   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1673301   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1673302   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673303   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1673304   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1673305   +   end;
MPRINT(EM_DIAGRAM):   end;
1673306   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1673307   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1673308   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1673309   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1673310   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1673311   +   end;
MPRINT(EM_DIAGRAM):   end;
1673312   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1673313   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1673314   +   end;
MPRINT(EM_DIAGRAM):   end;
1673315   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1673316   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1673317   +   end;
MPRINT(EM_DIAGRAM):   end;
1673318   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1673319   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1673320   +   end;
MPRINT(EM_DIAGRAM):   end;
1673321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673322   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1673323   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1673324   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1673325   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1673326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673328   +   end;
MPRINT(EM_DIAGRAM):   end;
1673329   +end;
MPRINT(EM_DIAGRAM):   end;
1673330   +
1673331   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1673332   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1673333   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1673334   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1673335   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1673336   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1673337   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1673338   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1673339   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1673340   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1673341   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1673342   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1673343   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1673344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673346   +end;
MPRINT(EM_DIAGRAM):   end;
1673347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673348   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1673349   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1673350   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673351   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1673352   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1673353   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1673354   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1673355   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1673356   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1673357   +         end;
MPRINT(EM_DIAGRAM):   end;
1673358   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1673359   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1673360   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1673361   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1673362   +            end;
MPRINT(EM_DIAGRAM):   end;
1673363   +         end;
MPRINT(EM_DIAGRAM):   end;
1673364   +      end;
MPRINT(EM_DIAGRAM):   end;
1673365   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1673366   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1673367   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1673368   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1673369   +         end;
MPRINT(EM_DIAGRAM):   end;
1673370   +      end;
MPRINT(EM_DIAGRAM):   end;
1673371   +   end;
MPRINT(EM_DIAGRAM):   end;
1673372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673373   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1673374   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1673375   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1673376   +      end;
MPRINT(EM_DIAGRAM):   end;
1673377   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1673378   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1673379   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1673380   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1673381   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1673382   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1673383   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1673384   +         end;
MPRINT(EM_DIAGRAM):   end;
1673385   +      end;
MPRINT(EM_DIAGRAM):   end;
1673386   +   end;
MPRINT(EM_DIAGRAM):   end;
1673387   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1673388   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1673389   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1673390   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1673391   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1673392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673394   +   end;
MPRINT(EM_DIAGRAM):   end;
1673395   +end;
MPRINT(EM_DIAGRAM):   end;
1673396   +
1673397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673398   +*** Checking missing input Interval
1673399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1673400   +
1673401   +IF NMISS(
1673402   +   AcceptedCmpTotal ,
1673403   +   Age ,
1673404   +   Frq ,
1673405   +   Income ,
1673406   +   Kidhome ,
1673407   +   Mnt ,
1673408   +   MntFishProducts ,
1673409   +   MntFruits ,
1673410   +   MntGoldProds ,
1673411   +   MntMeatProducts ,
1673412   +   MntSweetProducts ,
1673413   +   MntWines ,
1673414   +   MonthsAsCustomer ,
1673415   +   NumCatalogPurchases ,
1673416   +   NumDealsPurchases ,
1673417   +   NumDistPurchases ,
1673418   +   NumStorePurchases ,
1673419   +   NumWebPurchases ,
1673420   +   NumWebVisitsMonth ,
1673421   +   RFMstat ,
1673422   +   RMntFrq ,
1673423   +   Recency ,
1673424   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1673425   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1673426   +
1673427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673428   +END;
MPRINT(EM_DIAGRAM):   END;
1673429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673430   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1673431   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673432   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1673433   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1673434   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1673435   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1673436   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1673437   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1673438   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1673439   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1673440   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1673441   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1673442   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1673443   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1673444   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1673445   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1673446   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1673447   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1673448   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1673449   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1673450   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1673451   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1673452   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1673453   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1673454   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1673455   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1673456   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1673457   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1673458   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1673459   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1673460   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1673461   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1673462   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1673463   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1673464   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1673465   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1673466   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1673467   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1673468   +END;
MPRINT(EM_DIAGRAM):   END;
1673469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1673470   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1673471   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1673472   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1673473   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1673474   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1673475   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1673476   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1673477   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1673478   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1673479   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1673480   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1673481   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1673482   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1673483   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1673484   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1673485   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1673486   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1673487   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1673488   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1673489   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1673490   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1673491   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1673492   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1673493   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1673494   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1673495   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1673496   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1673497   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1673498   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1673499   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1673500   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1673501   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1673502   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1673503   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1673504   +   ELSE S_NumCatalogPurchases
1673505   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1673506   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1673507   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1673508   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1673509   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1673510   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1673511   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1673512   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1673513   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1673514   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1673515   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1673516   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1673517   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1673518   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1673519   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1673520   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1673521   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1673522   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1673523   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1673524   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1673525   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1673526   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1673527   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1673528   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1673529   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1673530   +END;
MPRINT(EM_DIAGRAM):   END;
1673531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673532   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1673533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673535   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1673536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673538   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1673539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673540   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1673541   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1673542   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1673543   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1673544   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1673545   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1673546   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1673547   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1673548   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1673549   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1673550   +          +    -1.14704878034134 * S_NumDealsPurchases
1673551   +          +    -0.17763404274659 * S_NumDistPurchases
1673552   +          +     0.08894400267969 * S_NumStorePurchases
1673553   +          +     0.59283747891957 * S_NumWebPurchases
1673554   +          +     0.85268274682505 * S_NumWebVisitsMonth
1673555   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1673556   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1673557   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1673558   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1673559   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1673560   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1673561   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1673562   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1673563   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1673564   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1673565   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1673566   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1673567   +          +    -0.80841566068716 * S_NumDealsPurchases
1673568   +          +    -0.17995640033768 * S_NumDistPurchases
1673569   +          +     0.00713417460936 * S_NumStorePurchases
1673570   +          +     0.57881024323076 * S_NumWebPurchases
1673571   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1673572   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1673573   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1673574   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1673575   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1673576   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1673577   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1673578   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1673579   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1673580   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1673581   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1673582   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1673583   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1673584   +          +     0.57891364118717 * S_NumDealsPurchases
1673585   +          +    -0.31024556838688 * S_NumDistPurchases
1673586   +          +    -1.48708542986704 * S_NumStorePurchases
1673587   +          +    -0.93009875249206 * S_NumWebPurchases
1673588   +          +     2.01900039122935 * S_NumWebVisitsMonth
1673589   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1673590   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1673591   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1673592   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1673593   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1673594   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1673595   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1673596   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1673597   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1673598   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1673599   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1673600   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1673601   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1673602   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1673603   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1673604   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1673605   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1673606   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1673607   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1673608   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1673609   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1673610   +          +     0.55883606830033 * Marital_StatusDivorced
1673611   +          +    -0.54530037567066 * Marital_StatusMarried
1673612   +          +    -0.52994736075753 * Marital_StatusSingle
1673613   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1673614   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1673615   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1673616   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1673617   +          +    -1.07368484057033 * Marital_StatusDivorced
1673618   +          +     2.73313504711262 * Marital_StatusMarried
1673619   +          +    -2.18530462876058 * Marital_StatusSingle
1673620   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1673621   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1673622   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1673623   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1673624   +          +     0.49993144243043 * Marital_StatusDivorced
1673625   +          +    -0.38953339116829 * Marital_StatusMarried
1673626   +          +    -0.10836287319942 * Marital_StatusSingle
1673627   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1673628   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1673629   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1673630   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1673631   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1673632   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1673633   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1673634   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1673635   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1673636   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1673637   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1673638   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1673639   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1673640   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1673641   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1673642   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1673643   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1673644   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1673645   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1673646   +END;
MPRINT(EM_DIAGRAM):   END;
1673647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1673648   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1673649   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1673650   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1673651   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1673652   +END;
MPRINT(EM_DIAGRAM):   END;
1673653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673654   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1673655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673656   +
1673657   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1673658   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1673659   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1673660   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1673661   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1673662   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673663   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1673664   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1673665   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1673666   +end;
MPRINT(EM_DIAGRAM):   end;
1673667   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673668   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1673669   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1673670   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1673671   +   end;
MPRINT(EM_DIAGRAM):   end;
1673672   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1673673   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1673674   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1673675   +   end;
MPRINT(EM_DIAGRAM):   end;
1673676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673677   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1673678   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1673679   +   end;
MPRINT(EM_DIAGRAM):   end;
1673680   +end;
MPRINT(EM_DIAGRAM):   end;
1673681   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1673682   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1673683   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1673684   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1673685   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1673686   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1673687   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1673688   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1673689   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1673690   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1673691   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1673692   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1673693   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1673694   +END;
MPRINT(EM_DIAGRAM):   END;
1673695   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1673696   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1673697   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1673698   +END;
MPRINT(EM_DIAGRAM):   END;
1673699   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1673700   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1673701   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1673702   +END;
MPRINT(EM_DIAGRAM):   END;
1673703   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1673704   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1673705   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1673706   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1673707   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1673708   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1673709   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1673710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673711   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1673712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1673713   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1673714   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1673715   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1673716   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1673717   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1673718   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1673719   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1673720   +END;
MPRINT(EM_DIAGRAM):   END;
1673721   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1673722   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1673723   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1673724   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1673725   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1673726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673727   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1673728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673729   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1673730   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1673731   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1673732   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1673733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673734   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1673735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673736   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1673737   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1673738   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1673739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673740   +* Ensmbl42: Scoring Code of model 4 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 4 of 4;
1673741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673743   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1673744   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1673745   +* NODE: AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL10;
1673746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1673747   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1673748   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1673749   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1673750   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1673751   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1673752   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1673753   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1673754   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1673755   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1673756   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1673757   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1673758   +LENGTH _WARN_ $4
1673759   +      F_DepVar  $ 12
1673760   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1673761   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1673762   +
1673763   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1673764   +
1673765   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1673766   +
1673767   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1673768   +
1673769   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1673770   +
1673771   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1673772   +
1673773   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1673774   +
1673775   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1673776   +
1673777   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1673778   +
1673779   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1673780   +
1673781   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1673782   +
1673783   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1673784   +
1673785   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1673786   +
1673787   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1673788   +
1673789   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1673790   +
1673791   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1673792   +
1673793   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1673794   +
1673795   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1673796   +
1673797   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1673798   +
1673799   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1673800   +
1673801   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1673802   +
1673803   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1673804   +
1673805   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1673806   +
1673807   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1673808   +
1673809   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1673810   +
1673811   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1673812   +
1673813   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1673814   +
1673815   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1673816   +
1673817   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1673818   +
1673819   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1673820   +
1673821   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1673822   +
1673823   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1673824   +
1673825   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1673826   +
1673827   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1673828   +
1673829   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1673830   +
1673831   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1673832   +
1673833   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1673834   +
1673835   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1673836   +
1673837   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1673838   +
1673839   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1673840   +
1673841   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1673842   +
1673843   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1673844   +
1673845   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1673846   +
1673847   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1673848   +
1673849   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1673850   +
1673851   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1673852   +
1673853   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1673854   +
1673855   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1673856   +
1673857   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1673858   +
1673859   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1673860   +
1673861   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1673862   +
1673863   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1673864   +
1673865   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1673866   +
1673867   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1673868   +
1673869   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1673870   +
1673871   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1673872   +
1673873   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1673874   +
1673875   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1673876   +
1673877   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1673878   +
1673879   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1673880   +
1673881   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1673882   +
1673883   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1673884   +
1673885   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1673886   +
1673887   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1673888   +
1673889   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1673890   +
1673891   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1673892   +
1673893   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1673894   +
1673895   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1673896   +
1673897   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1673898   +
1673899   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1673900   +
1673901   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1673902   +
1673903   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1673904   +
1673905   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1673906   +
1673907   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1673908   +
1673909   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1673910   +
1673911   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1673912   +
1673913   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1673914   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1673915   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1673916   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1673917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673919   +end;
MPRINT(EM_DIAGRAM):   end;
1673920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673922   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1673923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673925   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1673926   +   end;
MPRINT(EM_DIAGRAM):   end;
1673927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673928   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1673929   +   end;
MPRINT(EM_DIAGRAM):   end;
1673930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673931   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1673932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673934   +   end;
MPRINT(EM_DIAGRAM):   end;
1673935   +end;
MPRINT(EM_DIAGRAM):   end;
1673936   +
1673937   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1673938   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1673939   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1673940   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1673941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673943   +end;
MPRINT(EM_DIAGRAM):   end;
1673944   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673946   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1673947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673949   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1673950   +   end;
MPRINT(EM_DIAGRAM):   end;
1673951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673952   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1673953   +   end;
MPRINT(EM_DIAGRAM):   end;
1673954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673955   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1673956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673958   +   end;
MPRINT(EM_DIAGRAM):   end;
1673959   +end;
MPRINT(EM_DIAGRAM):   end;
1673960   +
1673961   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1673962   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1673963   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1673964   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1673965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673967   +end;
MPRINT(EM_DIAGRAM):   end;
1673968   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673970   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1673971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673972   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673973   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1673974   +   end;
MPRINT(EM_DIAGRAM):   end;
1673975   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1673976   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1673977   +   end;
MPRINT(EM_DIAGRAM):   end;
1673978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1673979   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1673980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1673981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673982   +   end;
MPRINT(EM_DIAGRAM):   end;
1673983   +end;
MPRINT(EM_DIAGRAM):   end;
1673984   +
1673985   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1673986   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1673987   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1673988   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1673989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1673990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1673991   +end;
MPRINT(EM_DIAGRAM):   end;
1673992   +else do;
MPRINT(EM_DIAGRAM):   else do;
1673993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1673994   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1673995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1673996   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1673997   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1673998   +   end;
MPRINT(EM_DIAGRAM):   end;
1673999   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1674000   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1674001   +   end;
MPRINT(EM_DIAGRAM):   end;
1674002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674003   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1674004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674006   +   end;
MPRINT(EM_DIAGRAM):   end;
1674007   +end;
MPRINT(EM_DIAGRAM):   end;
1674008   +
1674009   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1674010   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1674011   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1674012   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1674013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1674014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674015   +end;
MPRINT(EM_DIAGRAM):   end;
1674016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1674017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1674018   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1674019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1674020   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1674021   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1674022   +   end;
MPRINT(EM_DIAGRAM):   end;
1674023   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1674024   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1674025   +   end;
MPRINT(EM_DIAGRAM):   end;
1674026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674027   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1674028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674030   +   end;
MPRINT(EM_DIAGRAM):   end;
1674031   +end;
MPRINT(EM_DIAGRAM):   end;
1674032   +
1674033   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1674034   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1674035   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1674036   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1674037   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1674038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674039   +end;
MPRINT(EM_DIAGRAM):   end;
1674040   +else do;
MPRINT(EM_DIAGRAM):   else do;
1674041   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1674042   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1674043   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1674044   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1674045   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1674046   +   end;
MPRINT(EM_DIAGRAM):   end;
1674047   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1674048   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1674049   +   end;
MPRINT(EM_DIAGRAM):   end;
1674050   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674051   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1674052   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674053   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674054   +   end;
MPRINT(EM_DIAGRAM):   end;
1674055   +end;
MPRINT(EM_DIAGRAM):   end;
1674056   +
1674057   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1674058   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1674059   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1674060   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1674061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1674062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674063   +end;
MPRINT(EM_DIAGRAM):   end;
1674064   +else do;
MPRINT(EM_DIAGRAM):   else do;
1674065   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1674066   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1674067   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1674068   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1674069   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1674070   +   end;
MPRINT(EM_DIAGRAM):   end;
1674071   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1674072   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1674073   +   end;
MPRINT(EM_DIAGRAM):   end;
1674074   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674075   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1674076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674078   +   end;
MPRINT(EM_DIAGRAM):   end;
1674079   +end;
MPRINT(EM_DIAGRAM):   end;
1674080   +
1674081   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1674082   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1674083   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1674084   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1674085   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1674086   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1674087   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1674088   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1674089   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1674090   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1674091   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1674092   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1674093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1674094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674095   +end;
MPRINT(EM_DIAGRAM):   end;
1674096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1674097   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1674098   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1674099   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1674100   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1674101   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1674102   +   end;
MPRINT(EM_DIAGRAM):   end;
1674103   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1674104   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1674105   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1674106   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1674107   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1674108   +   end;
MPRINT(EM_DIAGRAM):   end;
1674109   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1674110   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1674111   +   end;
MPRINT(EM_DIAGRAM):   end;
1674112   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1674113   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1674114   +   end;
MPRINT(EM_DIAGRAM):   end;
1674115   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1674116   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1674117   +   end;
MPRINT(EM_DIAGRAM):   end;
1674118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674119   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1674120   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1674121   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1674122   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1674123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674125   +   end;
MPRINT(EM_DIAGRAM):   end;
1674126   +end;
MPRINT(EM_DIAGRAM):   end;
1674127   +
1674128   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1674129   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1674130   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1674131   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1674132   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1674133   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1674134   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1674135   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1674136   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1674137   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1674138   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1674139   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1674140   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1674141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1674142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674143   +end;
MPRINT(EM_DIAGRAM):   end;
1674144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1674145   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1674146   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1674147   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1674148   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1674149   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1674150   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1674151   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1674152   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1674153   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1674154   +         end;
MPRINT(EM_DIAGRAM):   end;
1674155   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1674156   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1674157   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1674158   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1674159   +            end;
MPRINT(EM_DIAGRAM):   end;
1674160   +         end;
MPRINT(EM_DIAGRAM):   end;
1674161   +      end;
MPRINT(EM_DIAGRAM):   end;
1674162   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1674163   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1674164   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1674165   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1674166   +         end;
MPRINT(EM_DIAGRAM):   end;
1674167   +      end;
MPRINT(EM_DIAGRAM):   end;
1674168   +   end;
MPRINT(EM_DIAGRAM):   end;
1674169   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1674170   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1674171   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1674172   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1674173   +      end;
MPRINT(EM_DIAGRAM):   end;
1674174   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1674175   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1674176   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1674177   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1674178   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1674179   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1674180   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1674181   +         end;
MPRINT(EM_DIAGRAM):   end;
1674182   +      end;
MPRINT(EM_DIAGRAM):   end;
1674183   +   end;
MPRINT(EM_DIAGRAM):   end;
1674184   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1674185   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1674186   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1674187   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1674188   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1674189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1674190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674191   +   end;
MPRINT(EM_DIAGRAM):   end;
1674192   +end;
MPRINT(EM_DIAGRAM):   end;
1674193   +
1674194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674195   +*** Checking missing input Interval
1674196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1674197   +
1674198   +IF NMISS(
1674199   +   AcceptedCmpTotal ,
1674200   +   Age ,
1674201   +   Frq ,
1674202   +   Income ,
1674203   +   Kidhome ,
1674204   +   Mnt ,
1674205   +   MntFishProducts ,
1674206   +   MntFruits ,
1674207   +   MntGoldProds ,
1674208   +   MntMeatProducts ,
1674209   +   MntSweetProducts ,
1674210   +   MntWines ,
1674211   +   MonthsAsCustomer ,
1674212   +   NumCatalogPurchases ,
1674213   +   NumDealsPurchases ,
1674214   +   NumDistPurchases ,
1674215   +   NumStorePurchases ,
1674216   +   NumWebPurchases ,
1674217   +   NumWebVisitsMonth ,
1674218   +   RFMstat ,
1674219   +   RMntFrq ,
1674220   +   Recency ,
1674221   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1674222   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1674223   +
1674224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1674225   +END;
MPRINT(EM_DIAGRAM):   END;
1674226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674227   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1674228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674229   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674230   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1674231   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1674232   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1674233   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1674234   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1674235   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1674236   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1674237   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1674238   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1674239   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1674240   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1674241   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1674242   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1674243   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1674244   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1674245   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1674246   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1674247   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1674248   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1674249   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1674250   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1674251   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1674252   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1674253   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1674254   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1674255   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1674256   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1674257   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1674258   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1674259   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1674260   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1674261   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1674262   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1674263   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1674264   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1674265   +END;
MPRINT(EM_DIAGRAM):   END;
1674266   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674267   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1674268   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1674269   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1674270   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1674271   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1674272   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1674273   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1674274   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1674275   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1674276   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1674277   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1674278   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1674279   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1674280   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1674281   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1674282   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1674283   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1674284   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1674285   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1674286   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1674287   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1674288   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1674289   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1674290   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1674291   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1674292   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1674293   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1674294   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1674295   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1674296   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1674297   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1674298   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1674299   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1674300   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1674301   +   ELSE S_NumCatalogPurchases
1674302   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1674303   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1674304   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1674305   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1674306   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1674307   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1674308   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1674309   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1674310   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1674311   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1674312   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1674313   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1674314   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1674315   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1674316   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1674317   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1674318   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1674319   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1674320   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1674321   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1674322   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1674323   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1674324   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1674325   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1674326   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1674327   +END;
MPRINT(EM_DIAGRAM):   END;
1674328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674329   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1674330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674332   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1674333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674335   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1674336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674337   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674338   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1674339   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1674340   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1674341   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1674342   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1674343   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1674344   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1674345   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1674346   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1674347   +          +     3.45371614080196 * S_NumDealsPurchases
1674348   +          +     0.19118374544537 * S_NumDistPurchases
1674349   +          +    -2.45138001446793 * S_NumStorePurchases
1674350   +          +    -0.11424280244155 * S_NumWebPurchases
1674351   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1674352   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1674353   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1674354   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1674355   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1674356   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1674357   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1674358   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1674359   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1674360   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1674361   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1674362   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1674363   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1674364   +          +    -1.28390925647659 * S_NumDealsPurchases
1674365   +          +     0.82669177239926 * S_NumDistPurchases
1674366   +          +     1.71678585204511 * S_NumStorePurchases
1674367   +          +     1.49226295608046 * S_NumWebPurchases
1674368   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1674369   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1674370   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1674371   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1674372   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1674373   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1674374   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1674375   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1674376   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1674377   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1674378   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1674379   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1674380   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1674381   +          +     0.22958626391725 * S_NumDealsPurchases
1674382   +          +    -0.02046515813996 * S_NumDistPurchases
1674383   +          +      0.8618502050837 * S_NumStorePurchases
1674384   +          +     1.45175370326009 * S_NumWebPurchases
1674385   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1674386   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1674387   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1674388   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1674389   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1674390   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1674391   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1674392   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1674393   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1674394   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1674395   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1674396   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1674397   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1674398   +          +     1.25310034610344 * S_NumDealsPurchases
1674399   +          +     0.92141098602176 * S_NumDistPurchases
1674400   +          +    -0.08806509391473 * S_NumStorePurchases
1674401   +          +     -1.0533787624668 * S_NumWebPurchases
1674402   +          +     3.07050739830585 * S_NumWebVisitsMonth
1674403   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1674404   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1674405   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1674406   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1674407   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1674408   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1674409   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1674410   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1674411   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1674412   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1674413   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1674414   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1674415   +          +    -1.68259553608287 * S_NumDealsPurchases
1674416   +          +    -0.53835572290445 * S_NumDistPurchases
1674417   +          +     1.25833922835446 * S_NumStorePurchases
1674418   +          +     0.48300830623998 * S_NumWebPurchases
1674419   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1674420   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1674421   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1674422   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1674423   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1674424   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1674425   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1674426   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1674427   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1674428   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1674429   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1674430   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1674431   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1674432   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1674433   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1674434   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1674435   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1674436   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1674437   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1674438   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1674439   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1674440   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1674441   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1674442   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1674443   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1674444   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1674445   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1674446   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1674447   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1674448   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1674449   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1674450   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1674451   +          +     0.26230568150721 * Marital_StatusDivorced
1674452   +          +     0.27563523967756 * Marital_StatusMarried
1674453   +          +     0.54464481618478 * Marital_StatusSingle
1674454   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1674455   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1674456   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1674457   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1674458   +          +    -0.06750661313108 * Marital_StatusDivorced
1674459   +          +     1.48628445854207 * Marital_StatusMarried
1674460   +          +    -0.52197797291165 * Marital_StatusSingle
1674461   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1674462   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1674463   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1674464   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1674465   +          +     0.03219453957597 * Marital_StatusDivorced
1674466   +          +    -0.73835008216677 * Marital_StatusMarried
1674467   +          +     0.11212575818086 * Marital_StatusSingle
1674468   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1674469   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1674470   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1674471   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1674472   +          +    -0.95055539413405 * Marital_StatusDivorced
1674473   +          +    -1.65922419336067 * Marital_StatusMarried
1674474   +          +     0.78727538125107 * Marital_StatusSingle
1674475   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1674476   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1674477   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1674478   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1674479   +          +     -4.1747415035634 * Marital_StatusDivorced
1674480   +          +     3.61194282451968 * Marital_StatusMarried
1674481   +          +     -3.2800495365546 * Marital_StatusSingle
1674482   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1674483   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1674484   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1674485   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1674486   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1674487   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1674488   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1674489   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1674490   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1674491   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1674492   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1674493   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1674494   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1674495   +END;
MPRINT(EM_DIAGRAM):   END;
1674496   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674497   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1674498   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1674499   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1674500   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1674501   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1674502   +END;
MPRINT(EM_DIAGRAM):   END;
1674503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674504   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1674505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674506   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674507   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1674508   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1674509   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1674510   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1674511   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1674512   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1674513   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1674514   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1674515   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1674516   +          +     1.29727972396867 * S_NumDealsPurchases
1674517   +          +     -0.4796144286007 * S_NumDistPurchases
1674518   +          +     0.88365985808591 * S_NumStorePurchases
1674519   +          +     0.68522096892804 * S_NumWebPurchases
1674520   +          +     0.54931043107798 * S_NumWebVisitsMonth
1674521   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1674522   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1674523   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1674524   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1674525   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1674526   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1674527   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1674528   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1674529   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1674530   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1674531   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1674532   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1674533   +          +     0.26997834581422 * S_NumDealsPurchases
1674534   +          +      1.4974894627406 * S_NumDistPurchases
1674535   +          +     0.20577850505638 * S_NumStorePurchases
1674536   +          +     0.67578530037026 * S_NumWebPurchases
1674537   +          +     1.48893165613941 * S_NumWebVisitsMonth
1674538   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1674539   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1674540   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1674541   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1674542   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1674543   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1674544   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1674545   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1674546   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1674547   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1674548   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1674549   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1674550   +          +    -0.75474919633886 * S_NumDealsPurchases
1674551   +          +     2.21872386475638 * S_NumDistPurchases
1674552   +          +    -0.36191460108989 * S_NumStorePurchases
1674553   +          +     0.03160010932412 * S_NumWebPurchases
1674554   +          +     0.00984650739909 * S_NumWebVisitsMonth
1674555   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1674556   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1674557   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1674558   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1674559   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1674560   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1674561   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1674562   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1674563   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1674564   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1674565   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1674566   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1674567   +          +    -1.12057357865269 * S_NumDealsPurchases
1674568   +          +    -0.70841760614521 * S_NumDistPurchases
1674569   +          +    -1.39174816270404 * S_NumStorePurchases
1674570   +          +    -1.62343249380806 * S_NumWebPurchases
1674571   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1674572   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1674573   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1674574   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1674575   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1674576   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1674577   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1674578   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1674579   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1674580   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1674581   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1674582   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1674583   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1674584   +          +     0.66880481485557 * S_NumDealsPurchases
1674585   +          +     0.69540174544859 * S_NumDistPurchases
1674586   +          +     1.68246546921736 * S_NumStorePurchases
1674587   +          +     1.85958176898295 * S_NumWebPurchases
1674588   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1674589   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1674590   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1674591   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1674592   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1674593   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1674594   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1674595   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1674596   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1674597   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1674598   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1674599   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1674600   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1674601   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1674602   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1674603   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1674604   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1674605   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1674606   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1674607   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1674608   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1674609   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1674610   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1674611   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1674612   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1674613   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1674614   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1674615   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1674616   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1674617   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1674618   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1674619   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1674620   +          +      0.2766977476799 * Marital_StatusDivorced
1674621   +          +     0.99585126449473 * Marital_StatusMarried
1674622   +          +    -0.71244490682808 * Marital_StatusSingle
1674623   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1674624   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1674625   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1674626   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1674627   +          +     0.04724779113048 * Marital_StatusDivorced
1674628   +          +    -0.80186231440666 * Marital_StatusMarried
1674629   +          +    -0.02226793584171 * Marital_StatusSingle
1674630   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1674631   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1674632   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1674633   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1674634   +          +     0.28206835683721 * Marital_StatusDivorced
1674635   +          +     0.46500886756532 * Marital_StatusMarried
1674636   +          +     0.35327545255503 * Marital_StatusSingle
1674637   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1674638   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1674639   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1674640   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1674641   +          +     1.22291788006392 * Marital_StatusDivorced
1674642   +          +    -2.27040720272432 * Marital_StatusMarried
1674643   +          +     1.13606780043773 * Marital_StatusSingle
1674644   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1674645   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1674646   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1674647   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1674648   +          +     -0.3999800759199 * Marital_StatusDivorced
1674649   +          +    -0.40978271635345 * Marital_StatusMarried
1674650   +          +    -0.55524279444227 * Marital_StatusSingle
1674651   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1674652   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1674653   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1674654   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1674655   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1674656   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1674657   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1674658   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1674659   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1674660   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1674661   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1674662   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1674663   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1674664   +END;
MPRINT(EM_DIAGRAM):   END;
1674665   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674666   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1674667   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1674668   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1674669   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1674670   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1674671   +END;
MPRINT(EM_DIAGRAM):   END;
1674672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674673   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1674674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674676   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1674677   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1674678   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1674679   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1674680   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1674681   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1674682   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1674683   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1674684   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1674685   +          +     0.15783958682465 * S_NumDealsPurchases
1674686   +          +     1.52124708558457 * S_NumDistPurchases
1674687   +          +     -1.3804418313581 * S_NumStorePurchases
1674688   +          +    -1.29570111649272 * S_NumWebPurchases
1674689   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1674690   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1674691   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1674692   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1674693   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1674694   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1674695   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1674696   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1674697   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1674698   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1674699   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1674700   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1674701   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1674702   +          +     0.12337111358286 * S_NumDealsPurchases
1674703   +          +     -2.3848926094027 * S_NumDistPurchases
1674704   +          +    -1.20666646996433 * S_NumStorePurchases
1674705   +          +     0.89549302881365 * S_NumWebPurchases
1674706   +          +     0.95359042569947 * S_NumWebVisitsMonth
1674707   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1674708   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1674709   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1674710   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1674711   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1674712   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1674713   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1674714   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1674715   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1674716   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1674717   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1674718   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1674719   +          +    -1.05383642674948 * S_NumDealsPurchases
1674720   +          +     1.71861984509369 * S_NumDistPurchases
1674721   +          +     1.47595181536047 * S_NumStorePurchases
1674722   +          +    -1.64165005491178 * S_NumWebPurchases
1674723   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1674724   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1674725   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1674726   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1674727   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1674728   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1674729   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1674730   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1674731   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1674732   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1674733   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1674734   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1674735   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1674736   +          +     0.13347794794222 * S_NumDealsPurchases
1674737   +          +     0.30533639886561 * S_NumDistPurchases
1674738   +          +     1.63892955540526 * S_NumStorePurchases
1674739   +          +     0.43734586516446 * S_NumWebPurchases
1674740   +          +     1.79260779802864 * S_NumWebVisitsMonth
1674741   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1674742   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1674743   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1674744   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1674745   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1674746   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1674747   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1674748   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1674749   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1674750   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1674751   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1674752   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1674753   +          +     1.64209094349557 * S_NumDealsPurchases
1674754   +          +    -0.38876870460627 * S_NumDistPurchases
1674755   +          +    -0.48559309584971 * S_NumStorePurchases
1674756   +          +     0.21254626353218 * S_NumWebPurchases
1674757   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1674758   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1674759   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1674760   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1674761   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1674762   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1674763   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1674764   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1674765   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1674766   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1674767   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1674768   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1674769   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1674770   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1674771   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1674772   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1674773   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1674774   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1674775   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1674776   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1674777   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1674778   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1674779   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1674780   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1674781   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1674782   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1674783   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1674784   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1674785   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1674786   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1674787   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1674788   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1674789   +          +     1.33953173091973 * Marital_StatusDivorced
1674790   +          +    -0.26253208073262 * Marital_StatusMarried
1674791   +          +    -0.00960552682431 * Marital_StatusSingle
1674792   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1674793   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1674794   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1674795   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1674796   +          +     1.43150850334311 * Marital_StatusDivorced
1674797   +          +    -0.69239127844934 * Marital_StatusMarried
1674798   +          +     2.08477562471559 * Marital_StatusSingle
1674799   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1674800   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1674801   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1674802   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1674803   +          +     1.08387556786168 * Marital_StatusDivorced
1674804   +          +      1.0283506000217 * Marital_StatusMarried
1674805   +          +    -0.87069431107983 * Marital_StatusSingle
1674806   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1674807   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1674808   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1674809   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1674810   +          +      -1.347780188307 * Marital_StatusDivorced
1674811   +          +    -0.53911983240372 * Marital_StatusMarried
1674812   +          +     0.22083074159185 * Marital_StatusSingle
1674813   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1674814   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1674815   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1674816   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1674817   +          +     1.46582538311384 * Marital_StatusDivorced
1674818   +          +     0.05256161016002 * Marital_StatusMarried
1674819   +          +    -1.21402967626877 * Marital_StatusSingle
1674820   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1674821   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1674822   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1674823   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1674824   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1674825   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1674826   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1674827   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1674828   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1674829   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1674830   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1674831   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1674832   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1674833   +END;
MPRINT(EM_DIAGRAM):   END;
1674834   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674835   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1674836   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1674837   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1674838   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1674839   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1674840   +END;
MPRINT(EM_DIAGRAM):   END;
1674841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674842   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1674843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674844   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674845   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1674846   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1674847   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1674848   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1674849   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1674850   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1674851   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1674852   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1674853   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1674854   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1674855   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1674856   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1674857   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1674858   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1674859   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1674860   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1674861   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1674862   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1674863   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1674864   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1674865   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1674866   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1674867   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1674868   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1674869   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1674870   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1674871   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1674872   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1674873   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1674874   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1674875   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1674876   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1674877   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1674878   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1674879   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1674880   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1674881   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1674882   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1674883   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1674884   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1674885   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1674886   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1674887   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1674888   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1674889   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1674890   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1674891   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1674892   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1674893   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1674894   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1674895   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1674896   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1674897   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1674898   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1674899   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1674900   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1674901   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1674902   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1674903   +END;
MPRINT(EM_DIAGRAM):   END;
1674904   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674905   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1674906   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1674907   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1674908   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1674909   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1674910   +END;
MPRINT(EM_DIAGRAM):   END;
1674911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674912   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1674913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674914   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674915   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1674916   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1674917   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1674918   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1674919   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1674920   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1674921   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1674922   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1674923   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1674924   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1674925   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1674926   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1674927   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1674928   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1674929   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1674930   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1674931   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1674932   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1674933   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1674934   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1674935   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1674936   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1674937   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1674938   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1674939   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1674940   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1674941   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1674942   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1674943   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1674944   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1674945   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1674946   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1674947   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1674948   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1674949   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1674950   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1674951   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1674952   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1674953   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1674954   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1674955   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1674956   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1674957   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1674958   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1674959   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1674960   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1674961   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1674962   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1674963   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1674964   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1674965   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1674966   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1674967   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1674968   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1674969   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1674970   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1674971   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1674972   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1674973   +END;
MPRINT(EM_DIAGRAM):   END;
1674974   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1674975   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1674976   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1674977   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1674978   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1674979   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1674980   +END;
MPRINT(EM_DIAGRAM):   END;
1674981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674982   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1674983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1674984   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1674985   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1674986   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1674987   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1674988   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1674989   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1674990   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1674991   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1674992   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1674993   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1674994   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1674995   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1674996   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1674997   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1674998   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1674999   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1675000   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1675001   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1675002   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1675003   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1675004   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1675005   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1675006   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1675007   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1675008   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1675009   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1675010   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1675011   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1675012   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1675013   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1675014   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1675015   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675016   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1675017   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1675018   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1675019   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1675020   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1675021   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1675022   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1675023   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1675024   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1675025   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1675026   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1675027   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1675028   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1675029   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1675030   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1675031   +END;
MPRINT(EM_DIAGRAM):   END;
1675032   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675033   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1675034   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1675035   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1675036   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1675037   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1675038   +END;
MPRINT(EM_DIAGRAM):   END;
1675039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675040   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1675041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675042   +
1675043   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1675044   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1675045   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1675046   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1675047   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1675048   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675049   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1675050   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675051   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675052   +end;
MPRINT(EM_DIAGRAM):   end;
1675053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675054   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1675055   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1675056   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1675057   +   end;
MPRINT(EM_DIAGRAM):   end;
1675058   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1675059   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1675060   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1675061   +   end;
MPRINT(EM_DIAGRAM):   end;
1675062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675063   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675064   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675065   +   end;
MPRINT(EM_DIAGRAM):   end;
1675066   +end;
MPRINT(EM_DIAGRAM):   end;
1675067   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675068   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1675069   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1675070   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1675071   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1675072   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1675073   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1675074   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675075   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1675076   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1675077   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1675078   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1675079   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1675080   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1675081   +END;
MPRINT(EM_DIAGRAM):   END;
1675082   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675083   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1675084   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1675085   +END;
MPRINT(EM_DIAGRAM):   END;
1675086   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1675087   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1675088   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1675089   +END;
MPRINT(EM_DIAGRAM):   END;
1675090   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1675091   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1675092   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1675093   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1675094   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1675095   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1675096   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1675097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675098   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1675099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675100   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1675101   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
The SAS System
 
1675102   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1675103   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1675104   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1675105   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1675106   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1675107   +END;
MPRINT(EM_DIAGRAM):   END;
1675108   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675109   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1675110   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675111   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1675112   +* Renaming variables for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL10;
1675113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675114   +* Renaming Posterior variables for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL10;
1675115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675116   +drop AUTONEURAL10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_P_DepVar1;
1675117   +AUTONEURAL10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_P_DepVar1 = P_DepVar1;
1675118   +drop AUTONEURAL10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_P_DepVar0;
1675119   +AUTONEURAL10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_P_DepVar0 = P_DepVar0;
1675120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675121   +* Renaming _WARN_ variable for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL10;
1675122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675123   +length AUTONEURAL10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL10_WARN_ $4;
1675124   +drop AUTONEURAL10_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_WARN_;
1675125   +AUTONEURAL10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_WARN_ = _WARN_;
1675126   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675127   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1675128   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1675129   +* NODE: AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL8;
1675130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675131   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675132   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1675133   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675134   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1675135   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1675136   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1675137   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1675138   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1675139   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1675140   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1675141   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1675142   +LENGTH _WARN_ $4
1675143   +      F_DepVar  $ 12
1675144   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1675145   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1675146   +
1675147   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1675148   +
1675149   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1675150   +
1675151   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1675152   +
1675153   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1675154   +
1675155   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1675156   +
1675157   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1675158   +
1675159   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1675160   +
1675161   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1675162   +
1675163   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1675164   +
1675165   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1675166   +
1675167   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1675168   +
1675169   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1675170   +
1675171   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1675172   +
1675173   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1675174   +
1675175   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1675176   +
1675177   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1675178   +
1675179   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1675180   +
1675181   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1675182   +
1675183   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1675184   +
1675185   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1675186   +
1675187   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1675188   +
1675189   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1675190   +
1675191   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1675192   +
1675193   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1675194   +
1675195   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1675196   +
1675197   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1675198   +
1675199   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1675200   +
1675201   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1675202   +
1675203   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1675204   +
1675205   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1675206   +
1675207   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1675208   +
1675209   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1675210   +
1675211   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1675212   +
1675213   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1675214   +
1675215   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1675216   +
1675217   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1675218   +
1675219   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1675220   +
1675221   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1675222   +
1675223   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1675224   +
1675225   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1675226   +
1675227   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1675228   +
1675229   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1675230   +
1675231   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1675232   +
1675233   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1675234   +
1675235   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1675236   +
1675237   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1675238   +
1675239   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1675240   +
1675241   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1675242   +
1675243   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1675244   +
1675245   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1675246   +
1675247   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1675248   +
1675249   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1675250   +
1675251   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1675252   +
1675253   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1675254   +
1675255   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1675256   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1675257   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1675258   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1675259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675261   +end;
MPRINT(EM_DIAGRAM):   end;
1675262   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675264   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1675265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675266   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675267   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1675268   +   end;
MPRINT(EM_DIAGRAM):   end;
1675269   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675270   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1675271   +   end;
MPRINT(EM_DIAGRAM):   end;
1675272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675273   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1675274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675276   +   end;
MPRINT(EM_DIAGRAM):   end;
1675277   +end;
MPRINT(EM_DIAGRAM):   end;
1675278   +
1675279   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1675280   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1675281   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1675282   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1675283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675285   +end;
MPRINT(EM_DIAGRAM):   end;
1675286   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675288   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1675289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675290   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675291   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1675292   +   end;
MPRINT(EM_DIAGRAM):   end;
1675293   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675294   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1675295   +   end;
MPRINT(EM_DIAGRAM):   end;
1675296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675297   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1675298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675300   +   end;
MPRINT(EM_DIAGRAM):   end;
1675301   +end;
MPRINT(EM_DIAGRAM):   end;
1675302   +
1675303   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1675304   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1675305   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1675306   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1675307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675309   +end;
MPRINT(EM_DIAGRAM):   end;
1675310   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675312   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1675313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675315   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1675316   +   end;
MPRINT(EM_DIAGRAM):   end;
1675317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675318   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1675319   +   end;
MPRINT(EM_DIAGRAM):   end;
1675320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675321   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1675322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675324   +   end;
MPRINT(EM_DIAGRAM):   end;
1675325   +end;
MPRINT(EM_DIAGRAM):   end;
1675326   +
1675327   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1675328   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1675329   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1675330   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1675331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675333   +end;
MPRINT(EM_DIAGRAM):   end;
1675334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675336   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1675337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675339   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1675340   +   end;
MPRINT(EM_DIAGRAM):   end;
1675341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675342   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1675343   +   end;
MPRINT(EM_DIAGRAM):   end;
1675344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675345   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1675346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675348   +   end;
MPRINT(EM_DIAGRAM):   end;
1675349   +end;
MPRINT(EM_DIAGRAM):   end;
1675350   +
1675351   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1675352   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1675353   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1675354   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1675355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675357   +end;
MPRINT(EM_DIAGRAM):   end;
1675358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675360   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1675361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675363   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1675364   +   end;
MPRINT(EM_DIAGRAM):   end;
1675365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675366   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1675367   +   end;
MPRINT(EM_DIAGRAM):   end;
1675368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675369   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1675370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675372   +   end;
MPRINT(EM_DIAGRAM):   end;
1675373   +end;
MPRINT(EM_DIAGRAM):   end;
1675374   +
1675375   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1675376   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1675377   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1675378   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1675379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675381   +end;
MPRINT(EM_DIAGRAM):   end;
1675382   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675384   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1675385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675386   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1675387   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1675388   +   end;
MPRINT(EM_DIAGRAM):   end;
1675389   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1675390   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1675391   +   end;
MPRINT(EM_DIAGRAM):   end;
1675392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675393   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1675394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675396   +   end;
MPRINT(EM_DIAGRAM):   end;
1675397   +end;
MPRINT(EM_DIAGRAM):   end;
1675398   +
1675399   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1675400   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1675401   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1675402   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1675403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675405   +end;
MPRINT(EM_DIAGRAM):   end;
1675406   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1675408   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1675409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675410   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1675411   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1675412   +   end;
MPRINT(EM_DIAGRAM):   end;
1675413   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1675414   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1675415   +   end;
MPRINT(EM_DIAGRAM):   end;
1675416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675417   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1675418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675420   +   end;
MPRINT(EM_DIAGRAM):   end;
1675421   +end;
MPRINT(EM_DIAGRAM):   end;
1675422   +
1675423   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1675424   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1675425   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1675426   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1675427   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1675428   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1675429   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1675430   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1675431   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1675432   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1675433   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1675434   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1675435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675437   +end;
MPRINT(EM_DIAGRAM):   end;
1675438   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675439   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1675440   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1675441   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675442   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1675443   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1675444   +   end;
MPRINT(EM_DIAGRAM):   end;
1675445   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1675446   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1675447   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1675448   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1675449   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1675450   +   end;
MPRINT(EM_DIAGRAM):   end;
1675451   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1675452   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1675453   +   end;
MPRINT(EM_DIAGRAM):   end;
1675454   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1675455   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1675456   +   end;
MPRINT(EM_DIAGRAM):   end;
1675457   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1675458   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1675459   +   end;
MPRINT(EM_DIAGRAM):   end;
1675460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675461   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1675462   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1675463   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1675464   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1675465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675467   +   end;
MPRINT(EM_DIAGRAM):   end;
1675468   +end;
MPRINT(EM_DIAGRAM):   end;
1675469   +
1675470   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1675471   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1675472   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1675473   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1675474   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1675475   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1675476   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1675477   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1675478   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1675479   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1675480   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1675481   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1675482   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1675483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1675484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675485   +end;
MPRINT(EM_DIAGRAM):   end;
1675486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675487   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1675488   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1675489   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675490   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1675491   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1675492   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1675493   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1675494   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1675495   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1675496   +         end;
MPRINT(EM_DIAGRAM):   end;
1675497   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1675498   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1675499   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1675500   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1675501   +            end;
MPRINT(EM_DIAGRAM):   end;
1675502   +         end;
MPRINT(EM_DIAGRAM):   end;
1675503   +      end;
MPRINT(EM_DIAGRAM):   end;
1675504   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1675505   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1675506   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1675507   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1675508   +         end;
MPRINT(EM_DIAGRAM):   end;
1675509   +      end;
MPRINT(EM_DIAGRAM):   end;
1675510   +   end;
MPRINT(EM_DIAGRAM):   end;
1675511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675512   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1675513   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1675514   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1675515   +      end;
MPRINT(EM_DIAGRAM):   end;
1675516   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1675517   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1675518   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1675519   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1675520   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1675521   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1675522   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1675523   +         end;
MPRINT(EM_DIAGRAM):   end;
1675524   +      end;
MPRINT(EM_DIAGRAM):   end;
1675525   +   end;
MPRINT(EM_DIAGRAM):   end;
1675526   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1675527   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1675528   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1675529   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1675530   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1675531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1675532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675533   +   end;
MPRINT(EM_DIAGRAM):   end;
1675534   +end;
MPRINT(EM_DIAGRAM):   end;
1675535   +
1675536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675537   +*** Checking missing input Interval
1675538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1675539   +
1675540   +IF NMISS(
1675541   +   AcceptedCmpTotal ,
1675542   +   Age ,
1675543   +   Frq ,
1675544   +   Income ,
1675545   +   Kidhome ,
1675546   +   Mnt ,
1675547   +   MntFishProducts ,
1675548   +   MntFruits ,
1675549   +   MntGoldProds ,
1675550   +   MntMeatProducts ,
1675551   +   MntSweetProducts ,
1675552   +   MntWines ,
1675553   +   MonthsAsCustomer ,
1675554   +   NumCatalogPurchases ,
1675555   +   NumDealsPurchases ,
1675556   +   NumDistPurchases ,
1675557   +   NumStorePurchases ,
1675558   +   NumWebPurchases ,
1675559   +   NumWebVisitsMonth ,
1675560   +   RFMstat ,
1675561   +   RMntFrq ,
1675562   +   Recency ,
1675563   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1675564   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1675565   +
1675566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1675567   +END;
MPRINT(EM_DIAGRAM):   END;
1675568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675569   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1675570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675571   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675572   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1675573   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1675574   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1675575   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1675576   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1675577   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1675578   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1675579   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1675580   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1675581   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1675582   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1675583   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1675584   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1675585   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1675586   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1675587   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1675588   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1675589   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1675590   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1675591   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1675592   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1675593   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1675594   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1675595   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1675596   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1675597   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1675598   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1675599   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1675600   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1675601   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1675602   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1675603   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1675604   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1675605   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1675606   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1675607   +END;
MPRINT(EM_DIAGRAM):   END;
1675608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675609   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1675610   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1675611   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1675612   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1675613   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1675614   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1675615   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1675616   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1675617   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1675618   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1675619   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1675620   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1675621   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1675622   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1675623   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1675624   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1675625   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1675626   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1675627   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1675628   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1675629   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1675630   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1675631   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1675632   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1675633   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1675634   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1675635   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1675636   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1675637   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1675638   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1675639   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1675640   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1675641   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1675642   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1675643   +   ELSE S_NumCatalogPurchases
1675644   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1675645   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1675646   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1675647   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1675648   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1675649   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1675650   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1675651   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1675652   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1675653   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1675654   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1675655   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1675656   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1675657   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1675658   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1675659   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1675660   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1675661   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1675662   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1675663   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1675664   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1675665   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1675666   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1675667   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1675668   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1675669   +END;
MPRINT(EM_DIAGRAM):   END;
1675670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675671   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1675672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675674   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1675675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675677   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1675678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675679   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675680   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
1675681   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
1675682   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
1675683   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
1675684   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
1675685   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
1675686   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
1675687   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
1675688   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
1675689   +          +     0.76573417773216 * S_NumDealsPurchases
1675690   +          +     0.22648400529885 * S_NumDistPurchases
1675691   +          +     1.21720286527592 * S_NumStorePurchases
1675692   +          +     0.60948566229097 * S_NumWebPurchases
1675693   +          +    -2.18126452011089 * S_NumWebVisitsMonth
1675694   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
1675695   +        S_RMntFrq  +     2.00816730203973 * S_Recency
1675696   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
1675697   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
1675698   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
1675699   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
1675700   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
1675701   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
1675702   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
1675703   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
1675704   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
1675705   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
1675706   +          +    -1.52828428070828 * S_NumDealsPurchases
1675707   +          +    -0.01775178145113 * S_NumDistPurchases
1675708   +          +     1.11531198663491 * S_NumStorePurchases
1675709   +          +     1.79501098452904 * S_NumWebPurchases
1675710   +          +     -0.7392686013605 * S_NumWebVisitsMonth
1675711   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
1675712   +        S_RMntFrq  +     0.68917175969495 * S_Recency
1675713   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
1675714   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
1675715   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
1675716   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
1675717   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
1675718   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
1675719   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
1675720   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
1675721   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
1675722   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
1675723   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
1675724   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
1675725   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
1675726   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
1675727   +          +    -1.56926331102732 * Marital_StatusDivorced
1675728   +          +     2.38562782588323 * Marital_StatusMarried
1675729   +          +    -1.91012008029228 * Marital_StatusSingle
1675730   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
1675731   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
1675732   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
1675733   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
1675734   +          +     0.39329538853368 * Marital_StatusDivorced
1675735   +          +       0.055543492668 * Marital_StatusMarried
1675736   +          +    -0.36260663573441 * Marital_StatusSingle
1675737   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
1675738   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
1675739   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
1675740   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1675741   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1675742   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675743   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1675744   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1675745   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1675746   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1675747   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1675748   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1675749   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1675750   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1675751   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1675752   +END;
MPRINT(EM_DIAGRAM):   END;
1675753   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675754   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1675755   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1675756   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1675757   +END;
MPRINT(EM_DIAGRAM):   END;
1675758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675759   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1675760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675762   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
1675763   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
1675764   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
1675765   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
1675766   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
1675767   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
1675768   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
1675769   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
1675770   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
1675771   +          +    -0.41717905931734 * S_NumDealsPurchases
1675772   +          +    -0.48750443671176 * S_NumDistPurchases
1675773   +          +      1.9775770151507 * S_NumStorePurchases
1675774   +          +    -0.43534422425416 * S_NumWebPurchases
1675775   +          +    -1.48049451059329 * S_NumWebVisitsMonth
1675776   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
1675777   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
1675778   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
1675779   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
1675780   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
1675781   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
1675782   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
1675783   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
1675784   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
1675785   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
1675786   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
1675787   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
1675788   +          +     0.76267091632012 * S_NumDealsPurchases
1675789   +          +     1.55118513069849 * S_NumDistPurchases
1675790   +          +       1.649962776028 * S_NumStorePurchases
1675791   +          +    -0.27453335733875 * S_NumWebPurchases
1675792   +          +     0.26599210649756 * S_NumWebVisitsMonth
1675793   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
1675794   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
1675795   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
1675796   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
1675797   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
1675798   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
1675799   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
1675800   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
1675801   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
1675802   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
1675803   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
1675804   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
1675805   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
1675806   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
1675807   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
1675808   +        EducationGraduation  +     0.24617525366101 * EducationMaster
1675809   +          +    -1.84502099308633 * Marital_StatusDivorced
1675810   +          +     0.16524535969204 * Marital_StatusMarried
1675811   +          +     0.01375012857393 * Marital_StatusSingle
1675812   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
1675813   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
1675814   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
1675815   +        EducationGraduation  +      0.6427794380992 * EducationMaster
1675816   +          +     0.18210930140238 * Marital_StatusDivorced
1675817   +          +    -1.49615662968181 * Marital_StatusMarried
1675818   +          +     1.61043484549536 * Marital_StatusSingle
1675819   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
1675820   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
1675821   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
1675822   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1675823   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1675824   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675825   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1675826   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1675827   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1675828   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1675829   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1675830   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1675831   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1675832   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1675833   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1675834   +END;
MPRINT(EM_DIAGRAM):   END;
1675835   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675836   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1675837   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1675838   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1675839   +END;
MPRINT(EM_DIAGRAM):   END;
1675840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675841   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1675842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675844   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
1675845   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
1675846   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
1675847   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
1675848   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
1675849   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
1675850   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
1675851   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
1675852   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
1675853   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
1675854   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
1675855   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
1675856   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
1675857   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
1675858   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
1675859   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1675860   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1675861   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1675862   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1675863   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1675864   +END;
MPRINT(EM_DIAGRAM):   END;
1675865   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675866   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1675867   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1675868   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1675869   +END;
MPRINT(EM_DIAGRAM):   END;
1675870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675871   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1675872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675873   +
1675874   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1675875   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1675876   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1675877   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1675878   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1675879   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1675880   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1675881   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675882   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675883   +end;
MPRINT(EM_DIAGRAM):   end;
1675884   +else do;
MPRINT(EM_DIAGRAM):   else do;
1675885   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1675886   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1675887   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1675888   +   end;
MPRINT(EM_DIAGRAM):   end;
1675889   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1675890   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1675891   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1675892   +   end;
MPRINT(EM_DIAGRAM):   end;
1675893   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1675894   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1675895   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1675896   +   end;
MPRINT(EM_DIAGRAM):   end;
1675897   +end;
MPRINT(EM_DIAGRAM):   end;
1675898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1675899   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
1675900   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
1675901   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
1675902   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1675903   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1675904   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1675905   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1675906   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1675907   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1675908   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1675909   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1675910   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1675911   +END;
MPRINT(EM_DIAGRAM):   END;
1675912   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1675913   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1675914   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1675915   +END;
MPRINT(EM_DIAGRAM):   END;
1675916   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1675917   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1675918   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1675919   +END;
MPRINT(EM_DIAGRAM):   END;
1675920   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1675921   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1675922   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1675923   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1675924   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1675925   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1675926   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1675927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675928   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1675929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1675930   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1675931   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1675932   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1675933   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1675934   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1675935   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1675936   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1675937   +END;
MPRINT(EM_DIAGRAM):   END;
1675938   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675939   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1675940   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1675941   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1675942   +* Renaming variables for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL8;
1675943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675944   +* Renaming Posterior variables for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL8;
1675945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675946   +drop AUTONEURAL8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_P_DepVar1;
1675947   +AUTONEURAL8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_P_DepVar1 = P_DepVar1;
1675948   +drop AUTONEURAL8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_P_DepVar0;
1675949   +AUTONEURAL8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_P_DepVar0 = P_DepVar0;
1675950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675951   +* Renaming _WARN_ variable for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL8;
1675952   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675953   +length AUTONEURAL8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL8_WARN_ $4;
1675954   +drop AUTONEURAL8_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_WARN_;
1675955   +AUTONEURAL8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_WARN_ = _WARN_;
1675956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675957   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1675958   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1675959   +* NODE: AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL7;
1675960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1675961   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675962   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1675963   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1675964   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1675965   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1675966   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1675967   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1675968   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1675969   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1675970   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1675971   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1675972   +LENGTH _WARN_ $4
1675973   +      F_DepVar  $ 12
1675974   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1675975   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1675976   +
1675977   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1675978   +
1675979   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1675980   +
1675981   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1675982   +
1675983   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1675984   +
1675985   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1675986   +
1675987   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1675988   +
1675989   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1675990   +
1675991   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1675992   +
1675993   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1675994   +
1675995   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1675996   +
1675997   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1675998   +
1675999   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1676000   +
1676001   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1676002   +
1676003   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1676004   +
1676005   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1676006   +
1676007   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1676008   +
1676009   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1676010   +
1676011   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1676012   +
1676013   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1676014   +
1676015   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1676016   +
1676017   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1676018   +
1676019   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1676020   +
1676021   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1676022   +
1676023   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1676024   +
1676025   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1676026   +
1676027   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1676028   +
1676029   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1676030   +
1676031   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1676032   +
1676033   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1676034   +
1676035   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1676036   +
1676037   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1676038   +
1676039   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1676040   +
1676041   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1676042   +
1676043   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1676044   +
1676045   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1676046   +
1676047   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1676048   +
1676049   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1676050   +
1676051   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1676052   +
1676053   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1676054   +
1676055   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1676056   +
1676057   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1676058   +
1676059   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1676060   +
1676061   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1676062   +
1676063   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1676064   +
1676065   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1676066   +
1676067   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1676068   +
1676069   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1676070   +
1676071   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1676072   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1676073   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1676074   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1676075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676077   +end;
MPRINT(EM_DIAGRAM):   end;
1676078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676080   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1676081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676083   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1676084   +   end;
MPRINT(EM_DIAGRAM):   end;
1676085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676086   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1676087   +   end;
MPRINT(EM_DIAGRAM):   end;
1676088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676089   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1676090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676092   +   end;
MPRINT(EM_DIAGRAM):   end;
1676093   +end;
MPRINT(EM_DIAGRAM):   end;
1676094   +
1676095   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1676096   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1676097   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1676098   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1676099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676101   +end;
MPRINT(EM_DIAGRAM):   end;
1676102   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676104   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1676105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676106   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676107   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1676108   +   end;
MPRINT(EM_DIAGRAM):   end;
1676109   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676110   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1676111   +   end;
MPRINT(EM_DIAGRAM):   end;
1676112   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676113   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1676114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676116   +   end;
MPRINT(EM_DIAGRAM):   end;
1676117   +end;
MPRINT(EM_DIAGRAM):   end;
1676118   +
1676119   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1676120   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1676121   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1676122   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1676123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676125   +end;
MPRINT(EM_DIAGRAM):   end;
1676126   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676128   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1676129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676131   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1676132   +   end;
MPRINT(EM_DIAGRAM):   end;
1676133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676134   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1676135   +   end;
MPRINT(EM_DIAGRAM):   end;
1676136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676137   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1676138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676140   +   end;
MPRINT(EM_DIAGRAM):   end;
1676141   +end;
MPRINT(EM_DIAGRAM):   end;
1676142   +
1676143   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1676144   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1676145   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1676146   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1676147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676149   +end;
MPRINT(EM_DIAGRAM):   end;
1676150   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676152   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1676153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676154   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676155   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1676156   +   end;
MPRINT(EM_DIAGRAM):   end;
1676157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676158   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1676159   +   end;
MPRINT(EM_DIAGRAM):   end;
1676160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676161   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1676162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676164   +   end;
MPRINT(EM_DIAGRAM):   end;
1676165   +end;
MPRINT(EM_DIAGRAM):   end;
1676166   +
1676167   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1676168   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1676169   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1676170   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1676171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676173   +end;
MPRINT(EM_DIAGRAM):   end;
1676174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676176   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1676177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676179   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1676180   +   end;
MPRINT(EM_DIAGRAM):   end;
1676181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676182   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1676183   +   end;
MPRINT(EM_DIAGRAM):   end;
1676184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676185   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1676186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676188   +   end;
MPRINT(EM_DIAGRAM):   end;
1676189   +end;
MPRINT(EM_DIAGRAM):   end;
1676190   +
1676191   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1676192   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1676193   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1676194   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1676195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676197   +end;
MPRINT(EM_DIAGRAM):   end;
1676198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676200   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1676201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676203   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1676204   +   end;
MPRINT(EM_DIAGRAM):   end;
1676205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676206   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1676207   +   end;
MPRINT(EM_DIAGRAM):   end;
1676208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676209   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1676210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676212   +   end;
MPRINT(EM_DIAGRAM):   end;
1676213   +end;
MPRINT(EM_DIAGRAM):   end;
1676214   +
1676215   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1676216   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1676217   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1676218   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1676219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676221   +end;
MPRINT(EM_DIAGRAM):   end;
1676222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676224   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1676225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676226   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1676227   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1676228   +   end;
MPRINT(EM_DIAGRAM):   end;
1676229   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1676230   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1676231   +   end;
MPRINT(EM_DIAGRAM):   end;
1676232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676233   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1676234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676236   +   end;
MPRINT(EM_DIAGRAM):   end;
1676237   +end;
MPRINT(EM_DIAGRAM):   end;
1676238   +
1676239   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1676240   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1676241   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1676242   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1676243   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1676244   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1676245   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1676246   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1676247   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1676248   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1676249   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1676250   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1676251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676253   +end;
MPRINT(EM_DIAGRAM):   end;
1676254   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676255   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1676256   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1676257   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676258   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1676259   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1676260   +   end;
MPRINT(EM_DIAGRAM):   end;
1676261   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1676262   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1676263   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1676264   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1676265   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1676266   +   end;
MPRINT(EM_DIAGRAM):   end;
1676267   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1676268   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1676269   +   end;
MPRINT(EM_DIAGRAM):   end;
1676270   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1676271   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1676272   +   end;
MPRINT(EM_DIAGRAM):   end;
1676273   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1676274   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1676275   +   end;
MPRINT(EM_DIAGRAM):   end;
1676276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676277   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1676278   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1676279   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1676280   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1676281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676283   +   end;
MPRINT(EM_DIAGRAM):   end;
1676284   +end;
MPRINT(EM_DIAGRAM):   end;
1676285   +
1676286   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1676287   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1676288   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1676289   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1676290   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1676291   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1676292   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1676293   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1676294   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1676295   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1676296   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1676297   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1676298   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1676299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676301   +end;
MPRINT(EM_DIAGRAM):   end;
1676302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676303   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1676304   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1676305   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676306   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1676307   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1676308   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1676309   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1676310   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1676311   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1676312   +         end;
MPRINT(EM_DIAGRAM):   end;
1676313   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1676314   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1676315   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1676316   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1676317   +            end;
MPRINT(EM_DIAGRAM):   end;
1676318   +         end;
MPRINT(EM_DIAGRAM):   end;
1676319   +      end;
MPRINT(EM_DIAGRAM):   end;
1676320   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1676321   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1676322   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1676323   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1676324   +         end;
MPRINT(EM_DIAGRAM):   end;
1676325   +      end;
MPRINT(EM_DIAGRAM):   end;
1676326   +   end;
MPRINT(EM_DIAGRAM):   end;
1676327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676328   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1676329   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1676330   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1676331   +      end;
MPRINT(EM_DIAGRAM):   end;
1676332   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1676333   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1676334   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1676335   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1676336   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1676337   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1676338   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1676339   +         end;
MPRINT(EM_DIAGRAM):   end;
1676340   +      end;
MPRINT(EM_DIAGRAM):   end;
1676341   +   end;
MPRINT(EM_DIAGRAM):   end;
1676342   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1676343   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1676344   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1676345   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1676346   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1676347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676349   +   end;
MPRINT(EM_DIAGRAM):   end;
1676350   +end;
MPRINT(EM_DIAGRAM):   end;
1676351   +
1676352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676353   +*** Checking missing input Interval
1676354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1676355   +
1676356   +IF NMISS(
1676357   +   AcceptedCmpTotal ,
1676358   +   Age ,
1676359   +   Frq ,
1676360   +   Income ,
1676361   +   Kidhome ,
1676362   +   Mnt ,
1676363   +   MntFishProducts ,
1676364   +   MntFruits ,
1676365   +   MntGoldProds ,
1676366   +   MntMeatProducts ,
1676367   +   MntSweetProducts ,
1676368   +   MntWines ,
1676369   +   MonthsAsCustomer ,
1676370   +   NumCatalogPurchases ,
1676371   +   NumDealsPurchases ,
1676372   +   NumDistPurchases ,
1676373   +   NumStorePurchases ,
1676374   +   NumWebPurchases ,
1676375   +   NumWebVisitsMonth ,
1676376   +   RFMstat ,
1676377   +   RMntFrq ,
1676378   +   Recency ,
1676379   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1676380   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1676381   +
1676382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676383   +END;
MPRINT(EM_DIAGRAM):   END;
1676384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676385   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1676386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676388   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1676389   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1676390   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1676391   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1676392   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1676393   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1676394   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1676395   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1676396   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1676397   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1676398   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1676399   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1676400   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1676401   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1676402   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1676403   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1676404   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1676405   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1676406   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1676407   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1676408   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1676409   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1676410   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1676411   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1676412   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1676413   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1676414   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1676415   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1676416   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1676417   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1676418   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1676419   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1676420   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1676421   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1676422   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1676423   +END;
MPRINT(EM_DIAGRAM):   END;
1676424   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676425   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1676426   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1676427   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1676428   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1676429   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1676430   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1676431   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1676432   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1676433   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1676434   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1676435   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1676436   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1676437   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1676438   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1676439   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1676440   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1676441   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1676442   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1676443   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1676444   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1676445   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1676446   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1676447   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1676448   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1676449   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1676450   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1676451   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1676452   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1676453   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1676454   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1676455   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1676456   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1676457   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1676458   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1676459   +   ELSE S_NumCatalogPurchases
1676460   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1676461   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1676462   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1676463   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1676464   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1676465   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1676466   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1676467   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1676468   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1676469   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1676470   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1676471   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1676472   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1676473   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1676474   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1676475   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1676476   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1676477   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1676478   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1676479   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1676480   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1676481   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1676482   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1676483   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1676484   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1676485   +END;
MPRINT(EM_DIAGRAM):   END;
1676486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676487   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1676488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676490   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1676491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676493   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1676494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676495   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676496   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1676497   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1676498   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1676499   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1676500   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1676501   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1676502   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1676503   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1676504   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1676505   +          +     0.09708841024031 * S_NumDealsPurchases
1676506   +          +    -0.29075561032014 * S_NumDistPurchases
1676507   +          +    -0.14495394259873 * S_NumStorePurchases
1676508   +          +     0.11890705145732 * S_NumWebPurchases
1676509   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1676510   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1676511   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1676512   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1676513   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1676514   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1676515   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1676516   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1676517   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1676518   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1676519   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1676520   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1676521   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1676522   +          +     0.16274478997892 * S_NumDealsPurchases
1676523   +          +     0.03966958784582 * S_NumDistPurchases
1676524   +          +    -0.04714110726598 * S_NumStorePurchases
1676525   +          +    -0.02124229528082 * S_NumWebPurchases
1676526   +          +     0.29753299776832 * S_NumWebVisitsMonth
1676527   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1676528   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1676529   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1676530   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1676531   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1676532   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1676533   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1676534   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1676535   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1676536   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1676537   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1676538   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1676539   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1676540   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1676541   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1676542   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1676543   +          +    -0.05037639679806 * Marital_StatusDivorced
1676544   +          +     0.28781968727878 * Marital_StatusMarried
1676545   +          +    -0.20382417074384 * Marital_StatusSingle
1676546   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1676547   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1676548   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1676549   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1676550   +          +     0.06970969219123 * Marital_StatusDivorced
1676551   +          +    -0.15787475744986 * Marital_StatusMarried
1676552   +          +     0.14345344072192 * Marital_StatusSingle
1676553   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1676554   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1676555   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1676556   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1676557   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1676558   +END;
MPRINT(EM_DIAGRAM):   END;
1676559   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676560   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1676561   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1676562   +END;
MPRINT(EM_DIAGRAM):   END;
1676563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676564   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1676565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676566   +
1676567   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1676568   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1676569   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1676570   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1676571   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1676572   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676573   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1676574   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1676575   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1676576   +end;
MPRINT(EM_DIAGRAM):   end;
1676577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676578   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1676579   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1676580   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1676581   +   end;
MPRINT(EM_DIAGRAM):   end;
1676582   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1676583   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1676584   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1676585   +   end;
MPRINT(EM_DIAGRAM):   end;
1676586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676587   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1676588   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1676589   +   end;
MPRINT(EM_DIAGRAM):   end;
1676590   +end;
MPRINT(EM_DIAGRAM):   end;
1676591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1676592   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1676593   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1676594   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1676595   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1676596   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1676597   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1676598   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1676599   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1676600   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1676601   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1676602   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1676603   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1676604   +END;
MPRINT(EM_DIAGRAM):   END;
1676605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1676606   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1676607   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1676608   +END;
MPRINT(EM_DIAGRAM):   END;
1676609   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1676610   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1676611   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1676612   +END;
MPRINT(EM_DIAGRAM):   END;
1676613   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1676614   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1676615   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1676616   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1676617   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1676618   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1676619   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1676620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676621   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1676622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1676623   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1676624   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1676625   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1676626   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1676627   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1676628   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1676629   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1676630   +END;
MPRINT(EM_DIAGRAM):   END;
1676631   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1676632   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1676633   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1676634   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1676635   +* Renaming variables for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL7;
1676636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676637   +* Renaming Posterior variables for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL7;
1676638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676639   +drop AUTONEURAL7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_P_DepVar1;
1676640   +AUTONEURAL7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_P_DepVar1 = P_DepVar1;
1676641   +drop AUTONEURAL7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_P_DepVar0;
1676642   +AUTONEURAL7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_P_DepVar0 = P_DepVar0;
1676643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676644   +* Renaming _WARN_ variable for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL7;
1676645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676646   +length AUTONEURAL7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL7_WARN_ $4;
1676647   +drop AUTONEURAL7_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_WARN_;
1676648   +AUTONEURAL7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_WARN_ = _WARN_;
1676649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676650   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1676651   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1676652   +* NODE: AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL6;
1676653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1676654   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1676655   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1676656   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1676657   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1676658   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1676659   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1676660   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1676661   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1676662   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1676663   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1676664   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1676665   +LENGTH _WARN_ $4
1676666   +      F_DepVar  $ 12
1676667   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1676668   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1676669   +
1676670   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1676671   +
1676672   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1676673   +
1676674   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1676675   +
1676676   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1676677   +
1676678   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1676679   +
1676680   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1676681   +
1676682   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1676683   +
1676684   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1676685   +
1676686   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1676687   +
1676688   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1676689   +
1676690   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1676691   +
1676692   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1676693   +
1676694   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1676695   +
1676696   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1676697   +
1676698   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1676699   +
1676700   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1676701   +
1676702   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1676703   +
1676704   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1676705   +
1676706   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1676707   +
1676708   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1676709   +
1676710   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1676711   +
1676712   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1676713   +
1676714   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1676715   +
1676716   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1676717   +
1676718   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1676719   +
1676720   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1676721   +
1676722   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1676723   +
1676724   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1676725   +
1676726   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1676727   +
1676728   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1676729   +
1676730   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1676731   +
1676732   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1676733   +
1676734   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1676735   +
1676736   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1676737   +
1676738   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1676739   +
1676740   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1676741   +
1676742   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1676743   +
1676744   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1676745   +
1676746   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1676747   +
1676748   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1676749   +
1676750   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1676751   +
1676752   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1676753   +
1676754   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1676755   +
1676756   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1676757   +
1676758   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1676759   +
1676760   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1676761   +
1676762   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1676763   +
1676764   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1676765   +
1676766   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1676767   +
1676768   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1676769   +
1676770   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1676771   +
1676772   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1676773   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1676774   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1676775   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1676776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676778   +end;
MPRINT(EM_DIAGRAM):   end;
1676779   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676780   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676781   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1676782   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676783   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676784   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1676785   +   end;
MPRINT(EM_DIAGRAM):   end;
1676786   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676787   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1676788   +   end;
MPRINT(EM_DIAGRAM):   end;
1676789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676790   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1676791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676793   +   end;
MPRINT(EM_DIAGRAM):   end;
1676794   +end;
MPRINT(EM_DIAGRAM):   end;
1676795   +
1676796   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1676797   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1676798   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1676799   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1676800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676802   +end;
MPRINT(EM_DIAGRAM):   end;
1676803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676805   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1676806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676807   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676808   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1676809   +   end;
MPRINT(EM_DIAGRAM):   end;
1676810   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676811   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1676812   +   end;
MPRINT(EM_DIAGRAM):   end;
1676813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676814   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1676815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676817   +   end;
MPRINT(EM_DIAGRAM):   end;
1676818   +end;
MPRINT(EM_DIAGRAM):   end;
1676819   +
1676820   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1676821   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1676822   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1676823   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1676824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676826   +end;
MPRINT(EM_DIAGRAM):   end;
1676827   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676829   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1676830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676831   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676832   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1676833   +   end;
MPRINT(EM_DIAGRAM):   end;
1676834   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676835   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1676836   +   end;
MPRINT(EM_DIAGRAM):   end;
1676837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676838   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1676839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676841   +   end;
MPRINT(EM_DIAGRAM):   end;
1676842   +end;
MPRINT(EM_DIAGRAM):   end;
1676843   +
1676844   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1676845   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1676846   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1676847   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1676848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676850   +end;
MPRINT(EM_DIAGRAM):   end;
1676851   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676853   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1676854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676856   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1676857   +   end;
MPRINT(EM_DIAGRAM):   end;
1676858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676859   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1676860   +   end;
MPRINT(EM_DIAGRAM):   end;
1676861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676862   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1676863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676865   +   end;
MPRINT(EM_DIAGRAM):   end;
1676866   +end;
MPRINT(EM_DIAGRAM):   end;
1676867   +
1676868   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1676869   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1676870   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1676871   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1676872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676874   +end;
MPRINT(EM_DIAGRAM):   end;
1676875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676877   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1676878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676880   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1676881   +   end;
MPRINT(EM_DIAGRAM):   end;
1676882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676883   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1676884   +   end;
MPRINT(EM_DIAGRAM):   end;
1676885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676886   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1676887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676889   +   end;
MPRINT(EM_DIAGRAM):   end;
1676890   +end;
MPRINT(EM_DIAGRAM):   end;
1676891   +
1676892   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1676893   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1676894   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1676895   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1676896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676898   +end;
MPRINT(EM_DIAGRAM):   end;
1676899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676901   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1676902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1676904   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1676905   +   end;
MPRINT(EM_DIAGRAM):   end;
1676906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1676907   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1676908   +   end;
MPRINT(EM_DIAGRAM):   end;
1676909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676910   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1676911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676913   +   end;
MPRINT(EM_DIAGRAM):   end;
1676914   +end;
MPRINT(EM_DIAGRAM):   end;
1676915   +
1676916   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1676917   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1676918   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1676919   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1676920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676922   +end;
MPRINT(EM_DIAGRAM):   end;
1676923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1676925   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1676926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676927   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1676928   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1676929   +   end;
MPRINT(EM_DIAGRAM):   end;
1676930   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1676931   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1676932   +   end;
MPRINT(EM_DIAGRAM):   end;
1676933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676934   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1676935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676937   +   end;
MPRINT(EM_DIAGRAM):   end;
1676938   +end;
MPRINT(EM_DIAGRAM):   end;
1676939   +
1676940   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1676941   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1676942   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1676943   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1676944   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1676945   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1676946   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1676947   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1676948   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1676949   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1676950   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1676951   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1676952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1676953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676954   +end;
MPRINT(EM_DIAGRAM):   end;
1676955   +else do;
MPRINT(EM_DIAGRAM):   else do;
1676956   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1676957   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1676958   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1676959   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1676960   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1676961   +   end;
MPRINT(EM_DIAGRAM):   end;
1676962   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1676963   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1676964   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1676965   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1676966   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1676967   +   end;
MPRINT(EM_DIAGRAM):   end;
1676968   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1676969   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1676970   +   end;
MPRINT(EM_DIAGRAM):   end;
1676971   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1676972   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1676973   +   end;
MPRINT(EM_DIAGRAM):   end;
1676974   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1676975   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1676976   +   end;
MPRINT(EM_DIAGRAM):   end;
1676977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1676978   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1676979   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1676980   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1676981   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1676982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1676983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1676984   +   end;
MPRINT(EM_DIAGRAM):   end;
1676985   +end;
MPRINT(EM_DIAGRAM):   end;
1676986   +
1676987   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1676988   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1676989   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1676990   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1676991   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1676992   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1676993   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1676994   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1676995   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1676996   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1676997   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1676998   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1676999   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1677000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677002   +end;
MPRINT(EM_DIAGRAM):   end;
1677003   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677004   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1677005   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1677006   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677007   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1677008   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1677009   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1677010   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1677011   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1677012   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1677013   +         end;
MPRINT(EM_DIAGRAM):   end;
1677014   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1677015   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1677016   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1677017   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1677018   +            end;
MPRINT(EM_DIAGRAM):   end;
1677019   +         end;
MPRINT(EM_DIAGRAM):   end;
1677020   +      end;
MPRINT(EM_DIAGRAM):   end;
1677021   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1677022   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1677023   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1677024   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1677025   +         end;
MPRINT(EM_DIAGRAM):   end;
1677026   +      end;
MPRINT(EM_DIAGRAM):   end;
1677027   +   end;
MPRINT(EM_DIAGRAM):   end;
1677028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677029   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1677030   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1677031   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1677032   +      end;
MPRINT(EM_DIAGRAM):   end;
1677033   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1677034   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1677035   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1677036   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1677037   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1677038   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1677039   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1677040   +         end;
MPRINT(EM_DIAGRAM):   end;
1677041   +      end;
MPRINT(EM_DIAGRAM):   end;
1677042   +   end;
MPRINT(EM_DIAGRAM):   end;
1677043   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1677044   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1677045   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1677046   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1677047   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1677048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677050   +   end;
MPRINT(EM_DIAGRAM):   end;
1677051   +end;
MPRINT(EM_DIAGRAM):   end;
1677052   +
1677053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677054   +*** Checking missing input Interval
1677055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1677056   +
1677057   +IF NMISS(
1677058   +   AcceptedCmpTotal ,
1677059   +   Age ,
1677060   +   Frq ,
1677061   +   Income ,
1677062   +   Kidhome ,
1677063   +   Mnt ,
1677064   +   MntFishProducts ,
1677065   +   MntFruits ,
1677066   +   MntGoldProds ,
1677067   +   MntMeatProducts ,
1677068   +   MntSweetProducts ,
1677069   +   MntWines ,
1677070   +   MonthsAsCustomer ,
1677071   +   NumCatalogPurchases ,
1677072   +   NumDealsPurchases ,
1677073   +   NumDistPurchases ,
1677074   +   NumStorePurchases ,
1677075   +   NumWebPurchases ,
1677076   +   NumWebVisitsMonth ,
1677077   +   RFMstat ,
1677078   +   RMntFrq ,
1677079   +   Recency ,
1677080   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1677081   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1677082   +
1677083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677084   +END;
MPRINT(EM_DIAGRAM):   END;
1677085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677086   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1677087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677088   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677089   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1677090   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1677091   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1677092   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1677093   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1677094   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1677095   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1677096   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1677097   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1677098   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1677099   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1677100   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1677101   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1677102   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1677103   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1677104   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1677105   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1677106   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1677107   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1677108   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1677109   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1677110   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1677111   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1677112   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1677113   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1677114   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1677115   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1677116   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1677117   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1677118   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1677119   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1677120   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1677121   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1677122   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1677123   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1677124   +END;
MPRINT(EM_DIAGRAM):   END;
1677125   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677126   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1677127   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1677128   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1677129   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1677130   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1677131   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1677132   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1677133   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1677134   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1677135   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1677136   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1677137   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1677138   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1677139   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1677140   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1677141   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1677142   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1677143   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1677144   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1677145   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1677146   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1677147   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1677148   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1677149   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1677150   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1677151   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1677152   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1677153   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1677154   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1677155   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1677156   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1677157   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1677158   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1677159   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1677160   +   ELSE S_NumCatalogPurchases
1677161   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1677162   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1677163   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1677164   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1677165   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1677166   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1677167   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1677168   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1677169   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1677170   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1677171   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1677172   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1677173   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1677174   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1677175   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1677176   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1677177   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1677178   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1677179   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1677180   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1677181   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1677182   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1677183   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1677184   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1677185   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1677186   +END;
MPRINT(EM_DIAGRAM):   END;
1677187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677188   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1677189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677191   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1677192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677194   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1677195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677197   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
1677198   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
1677199   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
1677200   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
1677201   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
1677202   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
1677203   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
1677204   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
1677205   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
1677206   +          +     -0.4295354470932 * S_NumDealsPurchases
1677207   +          +    -0.08226280459837 * S_NumDistPurchases
1677208   +          +      0.2932815275833 * S_NumStorePurchases
1677209   +          +     0.19049189042599 * S_NumWebPurchases
1677210   +          +    -0.98799339280673 * S_NumWebVisitsMonth
1677211   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
1677212   +        S_RMntFrq  +     1.04348870032296 * S_Recency
1677213   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
1677214   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
1677215   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
1677216   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
1677217   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
1677218   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
1677219   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
1677220   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
1677221   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
1677222   +          +    -0.78551174413278 * Marital_StatusDivorced
1677223   +          +     1.14162836709205 * Marital_StatusMarried
1677224   +          +    -0.85471695548675 * Marital_StatusSingle
1677225   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
1677226   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
1677227   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1677228   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1677229   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1677230   +END;
MPRINT(EM_DIAGRAM):   END;
1677231   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677232   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1677233   +END;
MPRINT(EM_DIAGRAM):   END;
1677234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677235   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1677236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677237   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677238   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
1677239   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
1677240   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
1677241   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
1677242   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
1677243   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
1677244   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
1677245   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
1677246   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
1677247   +          +      0.1710743409836 * S_NumDealsPurchases
1677248   +          +     1.10019178495427 * S_NumDistPurchases
1677249   +          +     0.06701301620472 * S_NumStorePurchases
1677250   +          +    -1.47240374003368 * S_NumWebPurchases
1677251   +          +     0.38443387640949 * S_NumWebVisitsMonth
1677252   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
1677253   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
1677254   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
1677255   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
1677256   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
1677257   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
1677258   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
1677259   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
1677260   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
1677261   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
1677262   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
1677263   +          +    -0.36835980184757 * Marital_StatusDivorced
1677264   +          +     0.71718933679692 * Marital_StatusMarried
1677265   +          +    -0.35767236657055 * Marital_StatusSingle
1677266   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
1677267   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
1677268   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1677269   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1677270   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1677271   +END;
MPRINT(EM_DIAGRAM):   END;
1677272   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677273   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1677274   +END;
MPRINT(EM_DIAGRAM):   END;
1677275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677276   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1677277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677279   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
1677280   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
1677281   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
1677282   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
1677283   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
1677284   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
1677285   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
1677286   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
1677287   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
1677288   +          +    -1.99858075809796 * S_NumDealsPurchases
1677289   +          +    -0.37353682448701 * S_NumDistPurchases
1677290   +          +     1.16275863071649 * S_NumStorePurchases
1677291   +          +       -0.75936809253 * S_NumWebPurchases
1677292   +          +     2.17936226306026 * S_NumWebVisitsMonth
1677293   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
1677294   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
1677295   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
1677296   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
1677297   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
1677298   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
1677299   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
1677300   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
1677301   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
1677302   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
1677303   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
1677304   +          +     0.60036315441483 * Marital_StatusDivorced
1677305   +          +    -0.94084946353672 * Marital_StatusMarried
1677306   +          +     0.34594388147374 * Marital_StatusSingle
1677307   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
1677308   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
1677309   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1677310   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1677311   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1677312   +END;
MPRINT(EM_DIAGRAM):   END;
1677313   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677314   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1677315   +END;
MPRINT(EM_DIAGRAM):   END;
1677316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677317   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1677318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677319   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677320   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
1677321   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
1677322   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
1677323   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
1677324   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1677325   +END;
MPRINT(EM_DIAGRAM):   END;
1677326   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677327   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1677328   +END;
MPRINT(EM_DIAGRAM):   END;
1677329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677330   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1677331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677332   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677333   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
1677334   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
1677335   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
1677336   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
1677337   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1677338   +END;
MPRINT(EM_DIAGRAM):   END;
1677339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677340   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1677341   +END;
MPRINT(EM_DIAGRAM):   END;
1677342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677343   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1677344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677345   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677346   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
1677347   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
1677348   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
1677349   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1677350   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1677351   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1677352   +END;
MPRINT(EM_DIAGRAM):   END;
1677353   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677354   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1677355   +END;
MPRINT(EM_DIAGRAM):   END;
1677356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677357   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1677358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677359   +
1677360   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1677361   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1677362   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1677363   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1677364   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1677365   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677366   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1677367   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1677368   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1677369   +end;
MPRINT(EM_DIAGRAM):   end;
1677370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677371   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1677372   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1677373   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1677374   +   end;
MPRINT(EM_DIAGRAM):   end;
1677375   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1677376   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1677377   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1677378   +   end;
MPRINT(EM_DIAGRAM):   end;
1677379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677380   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1677381   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1677382   +   end;
MPRINT(EM_DIAGRAM):   end;
1677383   +end;
MPRINT(EM_DIAGRAM):   end;
1677384   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1677385   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
1677386   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
1677387   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1677388   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1677389   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1677390   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1677391   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1677392   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1677393   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1677394   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1677395   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1677396   +END;
MPRINT(EM_DIAGRAM):   END;
1677397   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1677398   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1677399   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1677400   +END;
MPRINT(EM_DIAGRAM):   END;
1677401   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1677402   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1677403   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1677404   +END;
MPRINT(EM_DIAGRAM):   END;
1677405   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1677406   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1677407   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1677408   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1677409   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1677410   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1677411   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1677412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677413   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1677414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1677415   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1677416   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1677417   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1677418   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1677419   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1677420   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1677421   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1677422   +END;
MPRINT(EM_DIAGRAM):   END;
1677423   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1677424   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1677425   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1677426   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1677427   +* Renaming variables for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL6;
1677428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677429   +* Renaming Posterior variables for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL6;
1677430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677431   +drop AUTONEURAL6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_P_DepVar1;
1677432   +AUTONEURAL6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_P_DepVar1 = P_DepVar1;
1677433   +drop AUTONEURAL6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_P_DepVar0;
1677434   +AUTONEURAL6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_P_DepVar0 = P_DepVar0;
1677435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677436   +* Renaming _WARN_ variable for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL6;
1677437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677438   +length AUTONEURAL6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL6_WARN_ $4;
1677439   +drop AUTONEURAL6_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_WARN_;
1677440   +AUTONEURAL6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_WARN_ = _WARN_;
1677441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677442   +* TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
1677443   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1677444   +* NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
1677445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677447   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
1677448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677449   +P_DepVar1 = (
1677450   +AutoNeural6_P_DepVar1 +
1677451   +AutoNeural7_P_DepVar1 +
1677452   +AutoNeural8_P_DepVar1 +
1677453   +AutoNeural10_P_DepVar1 +
1677454   +AutoNeural9_P_DepVar1 +
1677455   +AutoNeural11_P_DepVar1 +
1677456   +AutoNeural12_P_DepVar1
1677457   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
1677458   +P_DepVar0 = (
1677459   +AutoNeural6_P_DepVar0 +
1677460   +AutoNeural7_P_DepVar0 +
1677461   +AutoNeural8_P_DepVar0 +
1677462   +AutoNeural10_P_DepVar0 +
1677463   +AutoNeural9_P_DepVar0 +
1677464   +AutoNeural11_P_DepVar0 +
1677465   +AutoNeural12_P_DepVar0
1677466   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
1677467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677468   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
1677469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677470   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1677471   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1677472   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1677473   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1677474   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1677475   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1677476   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1677477   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1677478   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1677479   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1677480   +end;
MPRINT(EM_DIAGRAM):   end;
1677481   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1677482   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1677483   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1677484   +end;
MPRINT(EM_DIAGRAM):   end;
1677485   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1677486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677487   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
1677488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677489   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1677490   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1677491   +else
1677492   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1677493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677494   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
1677495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677496   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1677497   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1677498   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1677499   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677499  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677500   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677500  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677501   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677501  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677502   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677502  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677503   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677503  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677504   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677504  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677505   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677505  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677506   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677506  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677507   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677507  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677508   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677508  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677509   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677509  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677510   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677510  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677511   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677511  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677512   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677512  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677513   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677513  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677514   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677514  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677515   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677515  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677516   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677516  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677517   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677517  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677518   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677518  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677519   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677519  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677520   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677520  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677521   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677521  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677522   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677522  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677523   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677523  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677524   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677524  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677525   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677525  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677526   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677526  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677528   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
1677529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677530   +if
1677531   +F_DepVar NE '1'
1677532   +AND F_DepVar NE '0'
1677533   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1677534   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1677535   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1677536   +end;
MPRINT(EM_DIAGRAM):   end;
1677537   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677538   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1677539   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1677540   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1677541   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1677542   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1677543   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1677544   +END;
MPRINT(EM_DIAGRAM):   END;
1677545   +END;
MPRINT(EM_DIAGRAM):   END;
1677546   +* Renaming variables for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Ensmbl36;
1677547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677548   +* Renaming Posterior variables for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Ensmbl36;
1677549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677550   +drop Ensmbl36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_P_DepVar1;
1677551   +Ensmbl36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl36_P_DepVar1 = P_DepVar1;
1677552   +drop Ensmbl36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_P_DepVar0;
1677553   +Ensmbl36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl36_P_DepVar0 = P_DepVar0;
1677554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677555   +* Renaming _WARN_ variable for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Ensmbl36;
1677556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677557   +length Ensmbl36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Ensmbl36_WARN_ $4;
1677558   +drop Ensmbl36_WARN_;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_WARN_;
1677559   +Ensmbl36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Ensmbl36_WARN_ = _WARN_;
1677560   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677561   +* Ensmbl42: Average Posteriors of 4 models;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Average Posteriors of 4 models;
1677562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677563   +P_DepVar1 = (
1677564   +AutoNeural12_P_DepVar1 +
1677565   +AutoNeural11_P_DepVar1 +
1677566   +AutoNeural9_P_DepVar1 +
1677567   +Ensmbl36_P_DepVar1
1677568   +)/4;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural12_P_DepVar1 + AutoNeural11_P_DepVar1 +
AutoNeural9_P_DepVar1 + Ensmbl36_P_DepVar1 )/4;
1677569   +P_DepVar0 = (
1677570   +AutoNeural12_P_DepVar0 +
1677571   +AutoNeural11_P_DepVar0 +
1677572   +AutoNeural9_P_DepVar0 +
1677573   +Ensmbl36_P_DepVar0
1677574   +)/4;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural12_P_DepVar0 + AutoNeural11_P_DepVar0 +
AutoNeural9_P_DepVar0 + Ensmbl36_P_DepVar0 )/4;
1677575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677576   +* Ensmbl42: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Classification Vars;
1677577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677578   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1677579   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1677580   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1677581   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1677582   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1677583   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1677584   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1677585   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1677586   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1677587   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1677588   +end;
MPRINT(EM_DIAGRAM):   end;
1677589   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1677590   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1677591   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1677592   +end;
MPRINT(EM_DIAGRAM):   end;
1677593   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1677594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677595   +* Ensmbl42: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Producing Unformatted variable;
1677596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677597   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1677598   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1677599   +else
1677600   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1677601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677602   +* Ensmbl42: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing _WARN_ Variable;
1677603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677604   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1677605   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1677606   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1677607   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677607  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677608   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677608  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677609   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677609  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677610   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677610  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677611   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677611  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677612   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677612  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677613   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677613  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677614   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677614  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677615   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1677615  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677616   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1677616  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677617   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1677617  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677618   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1677618  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677619   +if index(ENSMBL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1677619  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1677620   +if index(ENSMBL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1677620  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1677621   +if index(ENSMBL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1677621  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1677622   +if index(ENSMBL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1677622  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1677623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677624   +* Ensmbl42: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Residual Vars;
1677625   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677626   +if
1677627   +F_DepVar NE '1'
1677628   +AND F_DepVar NE '0'
1677629   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1677630   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1677631   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1677632   +end;
MPRINT(EM_DIAGRAM):   end;
1677633   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677634   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1677635   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1677636   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1677637   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1677638   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1677639   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1677640   +END;
MPRINT(EM_DIAGRAM):   END;
1677641   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1677642    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL42_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL12_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1677643    quit;
1677644    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1677645    filename emflow
1677645  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring AUTONEURAL12_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677646    *------------------------------------------------------------*;
1677647    * Ensmbl42: Scoring AUTONEURAL12_VALIDATE data;
1677648    *------------------------------------------------------------*;
1677649    data EMWS8.Ensmbl42_VALIDATE
1677650    / view=EMWS8.Ensmbl42_VALIDATE
1677651    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_VALIDATE / view=EMWS8.Ensmbl42_VALIDATE ;
1677652    set EMWS8.AutoNeural12_VALIDATE
1677653    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural12_VALIDATE ;
1677654    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMFLOWSCORE.sas.
1677655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677656   +* Ensmbl42: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Combine model for DepVar;
1677657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677658   +* Ensmbl42: Scoring Code of model 1 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 1 of 4;
1677659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677661   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1677662   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1677663   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1677664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677666   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1677667   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1677668   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1677669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677671   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1677672   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1677673   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1677674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677676   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1677677   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1677678   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1677679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677680   +
1677681   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1677682   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1677682  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1677683   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1677684   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1677685   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1677686   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1677687   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1677688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677689   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1677690   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1677691   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1677692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677694   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1677695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677696   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1677697   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1677698   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1677699   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677700   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1677701   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1677702   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1677703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677705   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1677706   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1677707   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1677708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677710   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1677711   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1677712   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1677713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1677714   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1677715   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1677716   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1677717   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1677718   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1677719   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1677720   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1677721   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1677722   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1677723   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1677724   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1677725   +LENGTH _WARN_ $4
1677726   +      F_DepVar  $ 12
1677727   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1677728   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1677729   +
1677730   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1677731   +
1677732   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1677733   +
1677734   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1677735   +
1677736   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1677737   +
1677738   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1677739   +
1677740   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1677741   +
1677742   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1677743   +
1677744   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1677745   +
1677746   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1677747   +
1677748   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1677749   +
1677750   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1677751   +
1677752   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1677753   +
1677754   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1677755   +
1677756   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1677757   +
1677758   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1677759   +
1677760   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1677761   +
1677762   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1677763   +
1677764   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1677765   +
1677766   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1677767   +
1677768   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1677769   +
1677770   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1677771   +
1677772   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1677773   +
1677774   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1677775   +
1677776   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1677777   +
1677778   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1677779   +
1677780   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1677781   +
1677782   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1677783   +
1677784   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1677785   +
1677786   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1677787   +
1677788   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1677789   +
1677790   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1677791   +
1677792   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1677793   +
1677794   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1677795   +
1677796   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1677797   +
1677798   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1677799   +
1677800   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1677801   +
1677802   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1677803   +
1677804   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1677805   +
1677806   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1677807   +
1677808   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1677809   +
1677810   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1677811   +
1677812   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1677813   +
1677814   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1677815   +
1677816   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1677817   +
1677818   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1677819   +
1677820   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1677821   +
1677822   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1677823   +
1677824   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1677825   +
1677826   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1677827   +
1677828   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1677829   +
1677830   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1677831   +
1677832   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1677833   +
1677834   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1677835   +
1677836   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1677837   +
1677838   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1677839   +
1677840   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1677841   +
1677842   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1677843   +
1677844   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1677845   +
1677846   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1677847   +
1677848   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1677849   +
1677850   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1677851   +
1677852   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1677853   +
1677854   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1677855   +
1677856   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1677857   +
1677858   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1677859   +
1677860   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1677861   +
1677862   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1677863   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1677864   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1677865   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1677866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677868   +end;
MPRINT(EM_DIAGRAM):   end;
1677869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677870   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677871   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1677872   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677873   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677874   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1677875   +   end;
MPRINT(EM_DIAGRAM):   end;
1677876   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677877   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1677878   +   end;
MPRINT(EM_DIAGRAM):   end;
1677879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677880   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1677881   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677882   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677883   +   end;
MPRINT(EM_DIAGRAM):   end;
1677884   +end;
MPRINT(EM_DIAGRAM):   end;
1677885   +
1677886   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1677887   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1677888   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1677889   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1677890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677892   +end;
MPRINT(EM_DIAGRAM):   end;
1677893   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677894   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677895   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1677896   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677897   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677898   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1677899   +   end;
MPRINT(EM_DIAGRAM):   end;
1677900   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677901   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1677902   +   end;
MPRINT(EM_DIAGRAM):   end;
1677903   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677904   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1677905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677907   +   end;
MPRINT(EM_DIAGRAM):   end;
1677908   +end;
MPRINT(EM_DIAGRAM):   end;
1677909   +
1677910   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1677911   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1677912   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1677913   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1677914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677916   +end;
MPRINT(EM_DIAGRAM):   end;
1677917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677918   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677919   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1677920   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677921   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677922   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1677923   +   end;
MPRINT(EM_DIAGRAM):   end;
1677924   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677925   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1677926   +   end;
MPRINT(EM_DIAGRAM):   end;
1677927   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677928   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1677929   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677930   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677931   +   end;
MPRINT(EM_DIAGRAM):   end;
1677932   +end;
MPRINT(EM_DIAGRAM):   end;
1677933   +
1677934   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1677935   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1677936   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1677937   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1677938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677940   +end;
MPRINT(EM_DIAGRAM):   end;
1677941   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677942   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677943   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1677944   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677945   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677946   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1677947   +   end;
MPRINT(EM_DIAGRAM):   end;
1677948   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677949   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1677950   +   end;
MPRINT(EM_DIAGRAM):   end;
1677951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677952   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1677953   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677954   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677955   +   end;
MPRINT(EM_DIAGRAM):   end;
1677956   +end;
MPRINT(EM_DIAGRAM):   end;
1677957   +
1677958   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1677959   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1677960   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1677961   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1677962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677964   +end;
MPRINT(EM_DIAGRAM):   end;
1677965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677967   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1677968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677970   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1677971   +   end;
MPRINT(EM_DIAGRAM):   end;
1677972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677973   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1677974   +   end;
MPRINT(EM_DIAGRAM):   end;
1677975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1677976   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1677977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1677978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677979   +   end;
MPRINT(EM_DIAGRAM):   end;
1677980   +end;
MPRINT(EM_DIAGRAM):   end;
1677981   +
1677982   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1677983   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1677984   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1677985   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1677986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1677987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1677988   +end;
MPRINT(EM_DIAGRAM):   end;
1677989   +else do;
MPRINT(EM_DIAGRAM):   else do;
1677990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1677991   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1677992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1677993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1677994   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1677995   +   end;
MPRINT(EM_DIAGRAM):   end;
1677996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1677997   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1677998   +   end;
MPRINT(EM_DIAGRAM):   end;
1677999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1678000   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1678001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1678002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678003   +   end;
MPRINT(EM_DIAGRAM):   end;
1678004   +end;
MPRINT(EM_DIAGRAM):   end;
1678005   +
1678006   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1678007   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1678008   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1678009   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1678010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1678011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678012   +end;
MPRINT(EM_DIAGRAM):   end;
1678013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1678014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1678015   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1678016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1678017   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1678018   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1678019   +   end;
MPRINT(EM_DIAGRAM):   end;
1678020   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1678021   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1678022   +   end;
MPRINT(EM_DIAGRAM):   end;
1678023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1678024   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1678025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1678026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678027   +   end;
MPRINT(EM_DIAGRAM):   end;
1678028   +end;
MPRINT(EM_DIAGRAM):   end;
1678029   +
1678030   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1678031   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1678032   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1678033   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1678034   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1678035   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1678036   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1678037   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1678038   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1678039   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1678040   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1678041   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1678042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1678043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678044   +end;
MPRINT(EM_DIAGRAM):   end;
1678045   +else do;
MPRINT(EM_DIAGRAM):   else do;
1678046   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1678047   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1678048   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1678049   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1678050   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1678051   +   end;
MPRINT(EM_DIAGRAM):   end;
1678052   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1678053   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1678054   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1678055   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1678056   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1678057   +   end;
MPRINT(EM_DIAGRAM):   end;
1678058   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1678059   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1678060   +   end;
MPRINT(EM_DIAGRAM):   end;
1678061   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1678062   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1678063   +   end;
MPRINT(EM_DIAGRAM):   end;
1678064   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1678065   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1678066   +   end;
MPRINT(EM_DIAGRAM):   end;
1678067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1678068   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1678069   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1678070   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1678071   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1678072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1678073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678074   +   end;
MPRINT(EM_DIAGRAM):   end;
1678075   +end;
MPRINT(EM_DIAGRAM):   end;
1678076   +
1678077   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1678078   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1678079   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1678080   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1678081   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1678082   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1678083   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1678084   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1678085   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1678086   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1678087   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1678088   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1678089   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1678090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1678091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678092   +end;
MPRINT(EM_DIAGRAM):   end;
1678093   +else do;
MPRINT(EM_DIAGRAM):   else do;
1678094   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1678095   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1678096   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1678097   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1678098   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1678099   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1678100   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1678101   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1678102   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1678103   +         end;
MPRINT(EM_DIAGRAM):   end;
1678104   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1678105   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1678106   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1678107   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1678108   +            end;
MPRINT(EM_DIAGRAM):   end;
1678109   +         end;
MPRINT(EM_DIAGRAM):   end;
1678110   +      end;
MPRINT(EM_DIAGRAM):   end;
1678111   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1678112   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1678113   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1678114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1678115   +         end;
MPRINT(EM_DIAGRAM):   end;
1678116   +      end;
MPRINT(EM_DIAGRAM):   end;
1678117   +   end;
MPRINT(EM_DIAGRAM):   end;
1678118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1678119   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1678120   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1678121   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1678122   +      end;
MPRINT(EM_DIAGRAM):   end;
1678123   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1678124   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1678125   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1678126   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1678127   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1678128   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1678129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1678130   +         end;
MPRINT(EM_DIAGRAM):   end;
1678131   +      end;
MPRINT(EM_DIAGRAM):   end;
1678132   +   end;
MPRINT(EM_DIAGRAM):   end;
1678133   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1678134   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1678135   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1678136   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1678137   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1678138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1678139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678140   +   end;
MPRINT(EM_DIAGRAM):   end;
1678141   +end;
MPRINT(EM_DIAGRAM):   end;
1678142   +
1678143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678144   +*** Checking missing input Interval
1678145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1678146   +
1678147   +IF NMISS(
1678148   +   AcceptedCmpTotal ,
1678149   +   Age ,
1678150   +   Frq ,
1678151   +   Income ,
1678152   +   Kidhome ,
1678153   +   Mnt ,
1678154   +   MntFishProducts ,
1678155   +   MntFruits ,
1678156   +   MntGoldProds ,
1678157   +   MntMeatProducts ,
1678158   +   MntSweetProducts ,
1678159   +   MntWines ,
1678160   +   MonthsAsCustomer ,
1678161   +   NumCatalogPurchases ,
1678162   +   NumDealsPurchases ,
1678163   +   NumDistPurchases ,
1678164   +   NumStorePurchases ,
1678165   +   NumWebPurchases ,
1678166   +   NumWebVisitsMonth ,
1678167   +   RFMstat ,
1678168   +   RMntFrq ,
1678169   +   Recency ,
1678170   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1678171   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1678172   +
1678173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1678174   +END;
MPRINT(EM_DIAGRAM):   END;
1678175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678176   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1678177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678178   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1678179   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1678180   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1678181   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1678182   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1678183   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1678184   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1678185   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1678186   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1678187   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1678188   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1678189   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1678190   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1678191   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1678192   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1678193   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1678194   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1678195   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1678196   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1678197   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1678198   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1678199   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1678200   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1678201   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1678202   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1678203   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1678204   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1678205   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1678206   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1678207   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1678208   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1678209   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1678210   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1678211   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1678212   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1678213   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1678214   +END;
MPRINT(EM_DIAGRAM):   END;
1678215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1678216   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1678217   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1678218   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1678219   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1678220   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1678221   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1678222   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1678223   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1678224   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1678225   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1678226   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1678227   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1678228   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1678229   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1678230   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1678231   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1678232   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1678233   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1678234   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1678235   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1678236   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1678237   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1678238   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1678239   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1678240   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1678241   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1678242   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1678243   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1678244   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1678245   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1678246   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1678247   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1678248   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1678249   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1678250   +   ELSE S_NumCatalogPurchases
1678251   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1678252   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1678253   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1678254   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1678255   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1678256   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1678257   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1678258   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1678259   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1678260   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1678261   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1678262   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1678263   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1678264   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1678265   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1678266   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1678267   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1678268   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1678269   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1678270   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1678271   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1678272   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1678273   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1678274   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1678275   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1678276   +END;
MPRINT(EM_DIAGRAM):   END;
1678277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678278   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1678279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678281   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1678282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678284   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1678285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678286   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1678287   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1678288   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1678289   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1678290   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1678291   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1678292   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1678293   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1678294   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1678295   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1678296   +          +     1.17276395296242 * S_NumDealsPurchases
1678297   +          +     0.26632768295477 * S_NumDistPurchases
1678298   +          +    -1.26575615903579 * S_NumStorePurchases
1678299   +          +    -0.95316107557927 * S_NumWebPurchases
1678300   +          +     1.01828574356487 * S_NumWebVisitsMonth
1678301   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1678302   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1678303   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1678304   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1678305   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1678306   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1678307   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1678308   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1678309   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1678310   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1678311   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1678312   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1678313   +          +     1.14485571201233 * S_NumDealsPurchases
1678314   +          +     0.21414266588987 * S_NumDistPurchases
1678315   +          +    -0.10530090074297 * S_NumStorePurchases
1678316   +          +    -0.41712321238458 * S_NumWebPurchases
1678317   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1678318   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1678319   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1678320   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1678321   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1678322   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1678323   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1678324   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1678325   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1678326   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1678327   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1678328   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1678329   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1678330   +          +      0.7196418967437 * S_NumDealsPurchases
1678331   +          +     0.69035286374177 * S_NumDistPurchases
1678332   +          +     0.38027656631135 * S_NumStorePurchases
1678333   +          +    -0.18878358997924 * S_NumWebPurchases
1678334   +          +     1.61962062004798 * S_NumWebVisitsMonth
1678335   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1678336   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1678337   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1678338   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1678339   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1678340   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1678341   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1678342   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1678343   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1678344   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1678345   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1678346   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1678347   +          +    -0.00642902007204 * S_NumDealsPurchases
1678348   +          +     0.29785069480367 * S_NumDistPurchases
1678349   +          +    -0.42243322063147 * S_NumStorePurchases
1678350   +          +     0.54880896338383 * S_NumWebPurchases
1678351   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1678352   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1678353   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1678354   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1678355   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1678356   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1678357   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1678358   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1678359   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1678360   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1678361   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1678362   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1678363   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1678364   +          +    -0.48404738328225 * S_NumDealsPurchases
1678365   +          +    -0.02464180457879 * S_NumDistPurchases
1678366   +          +     1.17201831082067 * S_NumStorePurchases
1678367   +          +     0.57453655167516 * S_NumWebPurchases
1678368   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1678369   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1678370   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1678371   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1678372   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1678373   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1678374   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1678375   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1678376   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1678377   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1678378   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1678379   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1678380   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1678381   +          +    -1.49850531967483 * S_NumDealsPurchases
1678382   +          +    -0.82105466264223 * S_NumDistPurchases
1678383   +          +     0.29984603642824 * S_NumStorePurchases
1678384   +          +     0.06557123721611 * S_NumWebPurchases
1678385   +          +     1.04754749365002 * S_NumWebVisitsMonth
1678386   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1678387   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1678388   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1678389   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1678390   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1678391   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1678392   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1678393   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1678394   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1678395   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1678396   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1678397   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1678398   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1678399   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1678400   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1678401   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1678402   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1678403   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1678404   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1678405   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1678406   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1678407   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1678408   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1678409   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1678410   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1678411   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1678412   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1678413   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1678414   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1678415   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1678416   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1678417   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1678418   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1678419   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1678420   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1678421   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1678422   +          +     0.24583509957712 * Marital_StatusDivorced
1678423   +          +    -0.22681931588361 * Marital_StatusMarried
1678424   +          +    -0.12924106229536 * Marital_StatusSingle
1678425   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1678426   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1678427   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1678428   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1678429   +          +    -0.12585334311068 * Marital_StatusDivorced
1678430   +          +    -0.20835502467207 * Marital_StatusMarried
1678431   +          +    -0.13839534449368 * Marital_StatusSingle
1678432   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1678433   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1678434   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1678435   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1678436   +          +     0.35106363238113 * Marital_StatusDivorced
1678437   +          +     -1.3414808583918 * Marital_StatusMarried
1678438   +          +     1.40835320798486 * Marital_StatusSingle
1678439   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1678440   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1678441   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1678442   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1678443   +          +     0.48174546958393 * Marital_StatusDivorced
1678444   +          +    -0.41416978858191 * Marital_StatusMarried
1678445   +          +    -0.23376801546265 * Marital_StatusSingle
1678446   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1678447   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1678448   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1678449   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1678450   +          +    -0.67557643774246 * Marital_StatusDivorced
1678451   +          +     1.63844045917367 * Marital_StatusMarried
1678452   +          +    -0.70320960247699 * Marital_StatusSingle
1678453   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1678454   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1678455   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1678456   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1678457   +          +    -0.11371453086883 * Marital_StatusDivorced
1678458   +          +    -0.34226997176291 * Marital_StatusMarried
1678459   +          +    -1.01568676685754 * Marital_StatusSingle
1678460   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1678461   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1678462   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1678463   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1678464   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1678465   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1678466   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1678467   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1678468   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1678469   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1678470   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1678471   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1678472   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1678473   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1678474   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1678475   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1678476   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1678477   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1678478   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1678479   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1678480   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1678481   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1678482   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1678483   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1678484   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1678485   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1678486   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1678487   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1678488   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1678489   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1678490   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1678491   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1678492   +END;
MPRINT(EM_DIAGRAM):   END;
1678493   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1678494   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1678495   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1678496   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1678497   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1678498   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1678499   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1678500   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1678501   +END;
MPRINT(EM_DIAGRAM):   END;
1678502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678503   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1678504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678505   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1678506   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1678507   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1678508   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1678509   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1678510   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1678511   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1678512   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1678513   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1678514   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1678515   +          +    -0.87259051567474 * S_NumDealsPurchases
1678516   +          +    -0.36454149529139 * S_NumDistPurchases
1678517   +          +     0.12447759925061 * S_NumStorePurchases
1678518   +          +    -1.08133487947367 * S_NumWebPurchases
1678519   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1678520   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1678521   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1678522   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1678523   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1678524   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1678525   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1678526   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1678527   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1678528   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1678529   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1678530   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1678531   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1678532   +          +     2.23121497416403 * S_NumDealsPurchases
1678533   +          +    -0.48674842191071 * S_NumDistPurchases
1678534   +          +     1.77510728607544 * S_NumStorePurchases
1678535   +          +     0.14647433155436 * S_NumWebPurchases
1678536   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1678537   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1678538   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1678539   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1678540   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1678541   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1678542   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1678543   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1678544   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1678545   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1678546   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1678547   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1678548   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1678549   +          +     0.14338855349611 * S_NumDealsPurchases
1678550   +          +    -2.21071010829235 * S_NumDistPurchases
1678551   +          +    -0.21795889348002 * S_NumStorePurchases
1678552   +          +     1.98825087883535 * S_NumWebPurchases
1678553   +          +     1.02482442531149 * S_NumWebVisitsMonth
1678554   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1678555   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1678556   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1678557   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1678558   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1678559   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1678560   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1678561   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1678562   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1678563   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1678564   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1678565   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1678566   +          +     0.30041205661012 * S_NumDealsPurchases
1678567   +          +    -0.63499849986918 * S_NumDistPurchases
1678568   +          +    -0.34155713433714 * S_NumStorePurchases
1678569   +          +    -1.14183354933936 * S_NumWebPurchases
1678570   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1678571   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1678572   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1678573   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1678574   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1678575   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1678576   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1678577   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1678578   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1678579   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1678580   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1678581   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1678582   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1678583   +          +    -0.21237915559831 * S_NumDealsPurchases
1678584   +          +     0.48256923764182 * S_NumDistPurchases
1678585   +          +    -0.45553093140641 * S_NumStorePurchases
1678586   +          +      0.5593655963659 * S_NumWebPurchases
1678587   +          +     0.27943768691188 * S_NumWebVisitsMonth
1678588   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1678589   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1678590   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1678591   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1678592   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1678593   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1678594   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1678595   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1678596   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1678597   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1678598   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1678599   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1678600   +          +     2.38967021388062 * S_NumDealsPurchases
1678601   +          +    -0.97722398866481 * S_NumDistPurchases
1678602   +          +     1.57612333191312 * S_NumStorePurchases
1678603   +          +    -0.75968679115983 * S_NumWebPurchases
1678604   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1678605   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1678606   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1678607   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1678608   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1678609   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1678610   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1678611   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1678612   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1678613   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1678614   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1678615   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1678616   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1678617   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1678618   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1678619   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1678620   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1678621   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1678622   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1678623   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1678624   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1678625   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1678626   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1678627   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1678628   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1678629   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1678630   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1678631   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1678632   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1678633   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1678634   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1678635   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1678636   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1678637   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1678638   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1678639   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1678640   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1678641   +          +     0.96470902298142 * Marital_StatusDivorced
1678642   +          +     0.94805959268314 * Marital_StatusMarried
1678643   +          +     -0.6523948769616 * Marital_StatusSingle
1678644   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1678645   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1678646   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1678647   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1678648   +          +      0.3918249505531 * Marital_StatusDivorced
1678649   +          +    -0.00968091979586 * Marital_StatusMarried
1678650   +          +     0.84615379885071 * Marital_StatusSingle
1678651   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1678652   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1678653   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1678654   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1678655   +          +     1.14335160313191 * Marital_StatusDivorced
1678656   +          +     0.50580517192175 * Marital_StatusMarried
1678657   +          +     0.17264295020921 * Marital_StatusSingle
1678658   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1678659   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1678660   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1678661   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1678662   +          +    -0.11238504444225 * Marital_StatusDivorced
1678663   +          +    -0.81348274043749 * Marital_StatusMarried
1678664   +          +     0.46075415610001 * Marital_StatusSingle
1678665   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1678666   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1678667   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1678668   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1678669   +          +    -0.46342068701431 * Marital_StatusDivorced
1678670   +          +    -0.41667845270204 * Marital_StatusMarried
1678671   +          +    -0.47166707496281 * Marital_StatusSingle
1678672   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1678673   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1678674   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1678675   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1678676   +          +    -0.45376613787812 * Marital_StatusDivorced
1678677   +          +     0.01337046049801 * Marital_StatusMarried
1678678   +          +    -0.92811489484121 * Marital_StatusSingle
1678679   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1678680   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1678681   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1678682   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1678683   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1678684   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1678685   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1678686   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1678687   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1678688   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1678689   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1678690   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1678691   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1678692   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1678693   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1678694   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1678695   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1678696   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1678697   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1678698   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1678699   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1678700   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1678701   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1678702   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1678703   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1678704   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1678705   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1678706   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1678707   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1678708   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1678709   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1678710   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1678711   +END;
MPRINT(EM_DIAGRAM):   END;
1678712   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1678713   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1678714   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1678715   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1678716   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1678717   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1678718   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1678719   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1678720   +END;
MPRINT(EM_DIAGRAM):   END;
1678721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678722   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1678723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678724   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1678725   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1678726   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1678727   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1678728   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1678729   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1678730   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1678731   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1678732   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1678733   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1678734   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1678735   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1678736   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1678737   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1678738   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1678739   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1678740   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1678741   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1678742   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1678743   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1678744   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1678745   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1678746   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1678747   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1678748   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1678749   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1678750   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1678751   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1678752   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1678753   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1678754   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1678755   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1678756   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1678757   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1678758   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1678759   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1678760   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1678761   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1678762   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1678763   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1678764   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1678765   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1678766   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1678767   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1678768   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1678769   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1678770   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1678771   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1678772   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1678773   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1678774   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1678775   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1678776   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1678777   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1678778   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1678779   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1678780   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1678781   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1678782   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1678783   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1678784   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1678785   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1678786   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1678787   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1678788   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1678789   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1678790   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1678791   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1678792   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1678793   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1678794   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1678795   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1678796   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1678797   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1678798   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1678799   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1678800   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1678801   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1678802   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1678803   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1678804   +END;
MPRINT(EM_DIAGRAM):   END;
1678805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1678806   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1678807   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1678808   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1678809   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1678810   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1678811   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1678812   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1678813   +END;
MPRINT(EM_DIAGRAM):   END;
1678814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678815   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1678816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678817   +
1678818   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1678819   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1678820   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1678821   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1678822   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1678823   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1678824   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1678825   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1678826   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1678827   +end;
MPRINT(EM_DIAGRAM):   end;
1678828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1678829   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1678830   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1678831   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1678832   +   end;
MPRINT(EM_DIAGRAM):   end;
1678833   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1678834   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1678835   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1678836   +   end;
MPRINT(EM_DIAGRAM):   end;
1678837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1678838   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1678839   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1678840   +   end;
MPRINT(EM_DIAGRAM):   end;
1678841   +end;
MPRINT(EM_DIAGRAM):   end;
1678842   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1678843   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1678844   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1678845   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1678846   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1678847   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1678848   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1678849   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1678850   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1678851   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1678852   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1678853   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1678854   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1678855   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1678856   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1678857   +END;
MPRINT(EM_DIAGRAM):   END;
1678858   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1678859   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1678860   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1678861   +END;
MPRINT(EM_DIAGRAM):   END;
1678862   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1678863   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1678864   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1678865   +END;
MPRINT(EM_DIAGRAM):   END;
1678866   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1678867   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1678868   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1678869   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1678870   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1678871   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1678872   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1678873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678874   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1678875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1678876   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1678877   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1678878   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1678879   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1678880   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1678881   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1678882   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1678883   +END;
MPRINT(EM_DIAGRAM):   END;
1678884   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1678885   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1678886   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1678887   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1678888   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1678889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678890   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1678891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678892   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1678893   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1678894   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1678895   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1678896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678897   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1678898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678899   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1678900   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1678901   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1678902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678903   +* Ensmbl42: Scoring Code of model 2 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 2 of 4;
1678904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678906   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1678907   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1678908   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1678909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1678910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1678911   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1678912   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1678913   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1678914   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1678915   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1678916   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1678917   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1678918   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1678919   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1678920   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1678921   +LENGTH _WARN_ $4
1678922   +      F_DepVar  $ 12
1678923   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1678924   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1678925   +
1678926   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1678927   +
1678928   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1678929   +
1678930   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1678931   +
1678932   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1678933   +
1678934   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1678935   +
1678936   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1678937   +
1678938   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1678939   +
1678940   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1678941   +
1678942   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1678943   +
1678944   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1678945   +
1678946   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1678947   +
1678948   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1678949   +
1678950   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1678951   +
1678952   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1678953   +
1678954   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1678955   +
1678956   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1678957   +
1678958   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1678959   +
1678960   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1678961   +
1678962   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1678963   +
1678964   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1678965   +
1678966   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1678967   +
1678968   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1678969   +
1678970   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1678971   +
1678972   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1678973   +
1678974   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1678975   +
1678976   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1678977   +
1678978   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1678979   +
1678980   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1678981   +
1678982   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1678983   +
1678984   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1678985   +
1678986   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1678987   +
1678988   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1678989   +
1678990   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1678991   +
1678992   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1678993   +
1678994   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1678995   +
1678996   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1678997   +
1678998   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1678999   +
1679000   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1679001   +
1679002   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1679003   +
1679004   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1679005   +
1679006   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1679007   +
1679008   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1679009   +
1679010   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1679011   +
1679012   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1679013   +
1679014   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1679015   +
1679016   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1679017   +
1679018   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1679019   +
1679020   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1679021   +
1679022   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1679023   +
1679024   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1679025   +
1679026   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1679027   +
1679028   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1679029   +
1679030   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1679031   +
1679032   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1679033   +
1679034   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1679035   +
1679036   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1679037   +
1679038   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1679039   +
1679040   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1679041   +
1679042   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1679043   +
1679044   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1679045   +
1679046   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1679047   +
1679048   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1679049   +
1679050   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1679051   +
1679052   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1679053   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1679054   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1679055   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1679056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679058   +end;
MPRINT(EM_DIAGRAM):   end;
1679059   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679061   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1679062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679064   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1679065   +   end;
MPRINT(EM_DIAGRAM):   end;
1679066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679067   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1679068   +   end;
MPRINT(EM_DIAGRAM):   end;
1679069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679070   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1679071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679073   +   end;
MPRINT(EM_DIAGRAM):   end;
1679074   +end;
MPRINT(EM_DIAGRAM):   end;
1679075   +
1679076   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1679077   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1679078   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1679079   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1679080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679082   +end;
MPRINT(EM_DIAGRAM):   end;
1679083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679085   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1679086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679088   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1679089   +   end;
MPRINT(EM_DIAGRAM):   end;
1679090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679091   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1679092   +   end;
MPRINT(EM_DIAGRAM):   end;
1679093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679094   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1679095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679097   +   end;
MPRINT(EM_DIAGRAM):   end;
1679098   +end;
MPRINT(EM_DIAGRAM):   end;
1679099   +
1679100   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1679101   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1679102   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1679103   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1679104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679106   +end;
MPRINT(EM_DIAGRAM):   end;
1679107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679109   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1679110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679112   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1679113   +   end;
MPRINT(EM_DIAGRAM):   end;
1679114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679115   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1679116   +   end;
MPRINT(EM_DIAGRAM):   end;
1679117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679118   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1679119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679121   +   end;
MPRINT(EM_DIAGRAM):   end;
1679122   +end;
MPRINT(EM_DIAGRAM):   end;
1679123   +
1679124   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1679125   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1679126   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1679127   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1679128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679130   +end;
MPRINT(EM_DIAGRAM):   end;
1679131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679133   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1679134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679136   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1679137   +   end;
MPRINT(EM_DIAGRAM):   end;
1679138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679139   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1679140   +   end;
MPRINT(EM_DIAGRAM):   end;
1679141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679142   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1679143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679145   +   end;
MPRINT(EM_DIAGRAM):   end;
1679146   +end;
MPRINT(EM_DIAGRAM):   end;
1679147   +
1679148   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1679149   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1679150   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1679151   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1679152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679154   +end;
MPRINT(EM_DIAGRAM):   end;
1679155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679157   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1679158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679160   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1679161   +   end;
MPRINT(EM_DIAGRAM):   end;
1679162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679163   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1679164   +   end;
MPRINT(EM_DIAGRAM):   end;
1679165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679166   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1679167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679169   +   end;
MPRINT(EM_DIAGRAM):   end;
1679170   +end;
MPRINT(EM_DIAGRAM):   end;
1679171   +
1679172   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1679173   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1679174   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1679175   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1679176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679178   +end;
MPRINT(EM_DIAGRAM):   end;
1679179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679181   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1679182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1679184   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1679185   +   end;
MPRINT(EM_DIAGRAM):   end;
1679186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1679187   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1679188   +   end;
MPRINT(EM_DIAGRAM):   end;
1679189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679190   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1679191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679193   +   end;
MPRINT(EM_DIAGRAM):   end;
1679194   +end;
MPRINT(EM_DIAGRAM):   end;
1679195   +
1679196   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1679197   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1679198   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1679199   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1679200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679202   +end;
MPRINT(EM_DIAGRAM):   end;
1679203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1679205   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1679206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679207   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1679208   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1679209   +   end;
MPRINT(EM_DIAGRAM):   end;
1679210   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1679211   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1679212   +   end;
MPRINT(EM_DIAGRAM):   end;
1679213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679214   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1679215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679217   +   end;
MPRINT(EM_DIAGRAM):   end;
1679218   +end;
MPRINT(EM_DIAGRAM):   end;
1679219   +
1679220   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1679221   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1679222   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1679223   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1679224   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1679225   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1679226   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1679227   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1679228   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1679229   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1679230   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1679231   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1679232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679234   +end;
MPRINT(EM_DIAGRAM):   end;
1679235   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679236   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1679237   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1679238   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679239   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1679240   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1679241   +   end;
MPRINT(EM_DIAGRAM):   end;
1679242   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1679243   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1679244   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1679245   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1679246   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1679247   +   end;
MPRINT(EM_DIAGRAM):   end;
1679248   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1679249   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1679250   +   end;
MPRINT(EM_DIAGRAM):   end;
1679251   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1679252   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1679253   +   end;
MPRINT(EM_DIAGRAM):   end;
1679254   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1679255   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1679256   +   end;
MPRINT(EM_DIAGRAM):   end;
1679257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679258   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1679259   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1679260   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1679261   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1679262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679264   +   end;
MPRINT(EM_DIAGRAM):   end;
1679265   +end;
MPRINT(EM_DIAGRAM):   end;
1679266   +
1679267   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1679268   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1679269   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1679270   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1679271   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1679272   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1679273   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1679274   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1679275   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1679276   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1679277   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1679278   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1679279   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1679280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1679281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679282   +end;
MPRINT(EM_DIAGRAM):   end;
1679283   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679284   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1679285   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1679286   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679287   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1679288   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1679289   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1679290   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1679291   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1679292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1679293   +         end;
MPRINT(EM_DIAGRAM):   end;
1679294   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1679295   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1679296   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1679297   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1679298   +            end;
MPRINT(EM_DIAGRAM):   end;
1679299   +         end;
MPRINT(EM_DIAGRAM):   end;
1679300   +      end;
MPRINT(EM_DIAGRAM):   end;
1679301   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1679302   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1679303   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1679304   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1679305   +         end;
MPRINT(EM_DIAGRAM):   end;
1679306   +      end;
MPRINT(EM_DIAGRAM):   end;
1679307   +   end;
MPRINT(EM_DIAGRAM):   end;
1679308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679309   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1679310   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1679311   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1679312   +      end;
MPRINT(EM_DIAGRAM):   end;
1679313   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1679314   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1679315   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1679316   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1679317   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1679318   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1679319   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1679320   +         end;
MPRINT(EM_DIAGRAM):   end;
1679321   +      end;
MPRINT(EM_DIAGRAM):   end;
1679322   +   end;
MPRINT(EM_DIAGRAM):   end;
1679323   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1679324   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1679325   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1679326   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1679327   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1679328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1679329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679330   +   end;
MPRINT(EM_DIAGRAM):   end;
1679331   +end;
MPRINT(EM_DIAGRAM):   end;
1679332   +
1679333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679334   +*** Checking missing input Interval
1679335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1679336   +
1679337   +IF NMISS(
1679338   +   AcceptedCmpTotal ,
1679339   +   Age ,
1679340   +   Frq ,
1679341   +   Income ,
1679342   +   Kidhome ,
1679343   +   Mnt ,
1679344   +   MntFishProducts ,
1679345   +   MntFruits ,
1679346   +   MntGoldProds ,
1679347   +   MntMeatProducts ,
1679348   +   MntSweetProducts ,
1679349   +   MntWines ,
1679350   +   MonthsAsCustomer ,
1679351   +   NumCatalogPurchases ,
1679352   +   NumDealsPurchases ,
1679353   +   NumDistPurchases ,
1679354   +   NumStorePurchases ,
1679355   +   NumWebPurchases ,
1679356   +   NumWebVisitsMonth ,
1679357   +   RFMstat ,
1679358   +   RMntFrq ,
1679359   +   Recency ,
1679360   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1679361   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1679362   +
1679363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1679364   +END;
MPRINT(EM_DIAGRAM):   END;
1679365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679366   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1679367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679368   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1679369   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1679370   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1679371   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1679372   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1679373   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1679374   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1679375   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1679376   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1679377   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1679378   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1679379   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1679380   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1679381   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1679382   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1679383   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1679384   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1679385   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1679386   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1679387   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1679388   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1679389   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1679390   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1679391   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1679392   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1679393   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1679394   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1679395   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1679396   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1679397   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1679398   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1679399   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1679400   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1679401   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1679402   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1679403   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1679404   +END;
MPRINT(EM_DIAGRAM):   END;
1679405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1679406   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1679407   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1679408   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1679409   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1679410   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1679411   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1679412   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1679413   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1679414   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1679415   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1679416   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1679417   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1679418   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1679419   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1679420   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1679421   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1679422   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1679423   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1679424   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1679425   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1679426   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1679427   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1679428   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1679429   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1679430   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1679431   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1679432   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1679433   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1679434   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1679435   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1679436   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1679437   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1679438   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1679439   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1679440   +   ELSE S_NumCatalogPurchases
1679441   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1679442   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1679443   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1679444   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1679445   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1679446   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1679447   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1679448   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1679449   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1679450   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1679451   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1679452   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1679453   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1679454   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1679455   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1679456   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1679457   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1679458   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1679459   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1679460   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1679461   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1679462   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1679463   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1679464   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1679465   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1679466   +END;
MPRINT(EM_DIAGRAM):   END;
1679467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679468   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1679469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679471   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1679472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679474   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1679475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679476   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1679477   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1679478   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1679479   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1679480   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1679481   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1679482   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1679483   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1679484   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1679485   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1679486   +          +     0.89422627895323 * S_NumDealsPurchases
1679487   +          +    -0.13304125929765 * S_NumDistPurchases
1679488   +          +    -1.04568442570811 * S_NumStorePurchases
1679489   +          +    -0.28677765126751 * S_NumWebPurchases
1679490   +          +      1.2327638737509 * S_NumWebVisitsMonth
1679491   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1679492   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1679493   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1679494   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1679495   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1679496   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1679497   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1679498   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1679499   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1679500   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1679501   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1679502   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1679503   +          +     0.04224590196535 * S_NumDealsPurchases
1679504   +          +     0.76554742700113 * S_NumDistPurchases
1679505   +          +    -0.49155496870812 * S_NumStorePurchases
1679506   +          +     0.59606812744403 * S_NumWebPurchases
1679507   +          +     1.86809286276405 * S_NumWebVisitsMonth
1679508   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1679509   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1679510   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1679511   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1679512   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1679513   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1679514   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1679515   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1679516   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1679517   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1679518   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1679519   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1679520   +          +    -0.04866536993486 * S_NumDealsPurchases
1679521   +          +    -0.53535979020214 * S_NumDistPurchases
1679522   +          +     2.20634071253676 * S_NumStorePurchases
1679523   +          +      0.6164564989007 * S_NumWebPurchases
1679524   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1679525   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1679526   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1679527   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1679528   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1679529   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1679530   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1679531   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1679532   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1679533   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1679534   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1679535   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1679536   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1679537   +          +     1.37461255707863 * S_NumDealsPurchases
1679538   +          +    -0.17684775000818 * S_NumDistPurchases
1679539   +          +    -0.62755623855535 * S_NumStorePurchases
1679540   +          +    -1.46551649022657 * S_NumWebPurchases
1679541   +          +     3.35784247878638 * S_NumWebVisitsMonth
1679542   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1679543   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1679544   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1679545   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1679546   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1679547   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1679548   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1679549   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1679550   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1679551   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1679552   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1679553   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1679554   +          +    -0.76256677907121 * S_NumDealsPurchases
1679555   +          +    -0.31591571751692 * S_NumDistPurchases
1679556   +          +      0.0506832614089 * S_NumStorePurchases
1679557   +          +      1.4636796923764 * S_NumWebPurchases
1679558   +          +     0.37743519705036 * S_NumWebVisitsMonth
1679559   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1679560   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1679561   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1679562   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1679563   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1679564   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1679565   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1679566   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1679567   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1679568   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1679569   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1679570   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1679571   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1679572   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1679573   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1679574   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1679575   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1679576   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1679577   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1679578   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1679579   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1679580   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1679581   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1679582   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1679583   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1679584   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1679585   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1679586   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1679587   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1679588   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1679589   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1679590   +          +     0.68641668264565 * Marital_StatusDivorced
1679591   +          +    -0.81586871439732 * Marital_StatusMarried
1679592   +          +     0.63758920518451 * Marital_StatusSingle
1679593   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1679594   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1679595   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1679596   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1679597   +          +     0.05137560133238 * Marital_StatusDivorced
1679598   +          +    -2.24401993266209 * Marital_StatusMarried
1679599   +          +     1.57359386216115 * Marital_StatusSingle
1679600   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1679601   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1679602   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1679603   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1679604   +          +     -1.0649987815942 * Marital_StatusDivorced
1679605   +          +     0.76065111692388 * Marital_StatusMarried
1679606   +          +    -0.21694149754801 * Marital_StatusSingle
1679607   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1679608   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1679609   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1679610   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1679611   +          +     2.02155453548328 * Marital_StatusDivorced
1679612   +          +    -2.60190649735306 * Marital_StatusMarried
1679613   +          +     1.09149388354927 * Marital_StatusSingle
1679614   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1679615   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1679616   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1679617   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1679618   +          +     0.66315970650309 * Marital_StatusDivorced
1679619   +          +    -1.20476729758152 * Marital_StatusMarried
1679620   +          +     0.56175027826397 * Marital_StatusSingle
1679621   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1679622   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1679623   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1679624   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1679625   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1679626   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1679627   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1679628   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1679629   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1679630   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1679631   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1679632   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1679633   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1679634   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1679635   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1679636   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1679637   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1679638   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1679639   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1679640   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1679641   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1679642   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1679643   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1679644   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1679645   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1679646   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1679647   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1679648   +END;
MPRINT(EM_DIAGRAM):   END;
1679649   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1679650   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1679651   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1679652   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1679653   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1679654   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1679655   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1679656   +END;
MPRINT(EM_DIAGRAM):   END;
1679657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679658   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1679659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679660   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1679661   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1679662   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1679663   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1679664   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1679665   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1679666   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1679667   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1679668   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1679669   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1679670   +          +     1.50005927423985 * S_NumDealsPurchases
1679671   +          +      0.5590536933569 * S_NumDistPurchases
1679672   +          +    -0.61757824339318 * S_NumStorePurchases
1679673   +          +     0.37259686538158 * S_NumWebPurchases
1679674   +          +     2.59725437895564 * S_NumWebVisitsMonth
1679675   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1679676   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1679677   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1679678   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1679679   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1679680   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1679681   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1679682   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1679683   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1679684   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1679685   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1679686   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1679687   +          +    -0.09282222088797 * S_NumDealsPurchases
1679688   +          +     0.10726247938321 * S_NumDistPurchases
1679689   +          +     -1.1235971458527 * S_NumStorePurchases
1679690   +          +    -0.78304387839877 * S_NumWebPurchases
1679691   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1679692   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1679693   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1679694   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1679695   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1679696   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1679697   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1679698   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1679699   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1679700   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1679701   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1679702   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1679703   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1679704   +          +     0.35349185459988 * S_NumDealsPurchases
1679705   +          +     0.06853677714859 * S_NumDistPurchases
1679706   +          +    -1.47546012999338 * S_NumStorePurchases
1679707   +          +     0.20926435398916 * S_NumWebPurchases
1679708   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1679709   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1679710   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1679711   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1679712   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1679713   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1679714   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1679715   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1679716   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1679717   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1679718   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1679719   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1679720   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1679721   +          +      0.3873586120272 * S_NumDealsPurchases
1679722   +          +     0.25911651157596 * S_NumDistPurchases
1679723   +          +     1.58922489084287 * S_NumStorePurchases
1679724   +          +     0.49041797743368 * S_NumWebPurchases
1679725   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1679726   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1679727   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1679728   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1679729   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1679730   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1679731   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1679732   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1679733   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1679734   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1679735   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1679736   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1679737   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1679738   +          +    -0.60830880287865 * S_NumDealsPurchases
1679739   +          +      0.0745331267194 * S_NumDistPurchases
1679740   +          +    -1.39472448256952 * S_NumStorePurchases
1679741   +          +     1.95372179969087 * S_NumWebPurchases
1679742   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1679743   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1679744   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1679745   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1679746   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1679747   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1679748   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1679749   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1679750   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1679751   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1679752   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1679753   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1679754   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1679755   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1679756   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1679757   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1679758   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1679759   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1679760   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1679761   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1679762   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1679763   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1679764   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1679765   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1679766   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1679767   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1679768   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1679769   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1679770   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1679771   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1679772   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1679773   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1679774   +          +    -1.33377871643323 * Marital_StatusDivorced
1679775   +          +    -0.87184228840898 * Marital_StatusMarried
1679776   +          +     1.41223186340257 * Marital_StatusSingle
1679777   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1679778   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1679779   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1679780   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1679781   +          +    -0.21479890935233 * Marital_StatusDivorced
1679782   +          +     -0.0025459519579 * Marital_StatusMarried
1679783   +          +     1.33900491702264 * Marital_StatusSingle
1679784   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1679785   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1679786   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1679787   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1679788   +          +    -0.38307267471999 * Marital_StatusDivorced
1679789   +          +     0.97088969451415 * Marital_StatusMarried
1679790   +          +    -0.28578224473381 * Marital_StatusSingle
1679791   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1679792   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1679793   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1679794   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1679795   +          +    -1.42229401093569 * Marital_StatusDivorced
1679796   +          +      0.7234508382397 * Marital_StatusMarried
1679797   +          +    -0.29062202974628 * Marital_StatusSingle
1679798   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1679799   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1679800   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1679801   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1679802   +          +    -0.99067637207205 * Marital_StatusDivorced
1679803   +          +    -0.50245902142079 * Marital_StatusMarried
1679804   +          +     0.54214494533793 * Marital_StatusSingle
1679805   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1679806   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1679807   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1679808   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1679809   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1679810   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1679811   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1679812   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1679813   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1679814   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1679815   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1679816   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1679817   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1679818   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1679819   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1679820   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1679821   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1679822   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1679823   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1679824   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1679825   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1679826   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1679827   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1679828   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1679829   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1679830   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1679831   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1679832   +END;
MPRINT(EM_DIAGRAM):   END;
1679833   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1679834   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1679835   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1679836   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1679837   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1679838   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1679839   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1679840   +END;
MPRINT(EM_DIAGRAM):   END;
1679841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679842   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1679843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679844   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1679845   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1679846   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1679847   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1679848   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1679849   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1679850   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1679851   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1679852   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1679853   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1679854   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1679855   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1679856   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1679857   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1679858   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1679859   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1679860   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1679861   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1679862   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1679863   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1679864   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1679865   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1679866   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1679867   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1679868   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1679869   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1679870   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1679871   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1679872   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1679873   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1679874   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1679875   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1679876   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1679877   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1679878   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1679879   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1679880   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1679881   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1679882   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1679883   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1679884   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1679885   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1679886   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1679887   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1679888   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1679889   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1679890   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1679891   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1679892   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1679893   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1679894   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1679895   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1679896   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1679897   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1679898   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1679899   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1679900   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1679901   +END;
MPRINT(EM_DIAGRAM):   END;
1679902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1679903   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1679904   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1679905   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1679906   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1679907   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1679908   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1679909   +END;
MPRINT(EM_DIAGRAM):   END;
1679910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679911   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1679912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679913   +
1679914   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1679915   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1679916   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1679917   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1679918   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1679919   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1679920   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1679921   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1679922   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1679923   +end;
MPRINT(EM_DIAGRAM):   end;
1679924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1679925   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1679926   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1679927   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1679928   +   end;
MPRINT(EM_DIAGRAM):   end;
1679929   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1679930   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1679931   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1679932   +   end;
MPRINT(EM_DIAGRAM):   end;
1679933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1679934   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1679935   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1679936   +   end;
MPRINT(EM_DIAGRAM):   end;
1679937   +end;
MPRINT(EM_DIAGRAM):   end;
1679938   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1679939   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1679940   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1679941   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1679942   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1679943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1679944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1679945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1679946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1679947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1679948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1679949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1679950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1679951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1679952   +END;
MPRINT(EM_DIAGRAM):   END;
1679953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1679954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1679955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1679956   +END;
MPRINT(EM_DIAGRAM):   END;
1679957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1679958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1679959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1679960   +END;
MPRINT(EM_DIAGRAM):   END;
1679961   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1679962   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1679963   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1679964   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1679965   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1679966   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1679967   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1679968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679969   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1679970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1679971   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1679972   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1679973   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1679974   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1679975   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1679976   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1679977   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1679978   +END;
MPRINT(EM_DIAGRAM):   END;
1679979   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1679980   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1679981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1679982   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1679983   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1679984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1679985   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1679986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1679987   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1679988   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1679989   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1679990   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1679991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1679992   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1679993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1679994   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1679995   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1679996   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1679997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1679998   +* Ensmbl42: Scoring Code of model 3 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 3 of 4;
1679999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680001   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1680002   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1680003   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1680004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680005   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1680006   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1680007   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1680008   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1680009   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1680010   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1680011   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1680012   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1680013   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1680014   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1680015   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1680016   +LENGTH _WARN_ $4
1680017   +      F_DepVar  $ 12
1680018   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1680019   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1680020   +
1680021   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1680022   +
1680023   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1680024   +
1680025   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1680026   +
1680027   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1680028   +
1680029   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1680030   +
1680031   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1680032   +
1680033   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1680034   +
1680035   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1680036   +
1680037   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1680038   +
1680039   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1680040   +
1680041   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1680042   +
1680043   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1680044   +
1680045   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1680046   +
1680047   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1680048   +
1680049   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1680050   +
1680051   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1680052   +
1680053   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1680054   +
1680055   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1680056   +
1680057   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1680058   +
1680059   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1680060   +
1680061   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1680062   +
1680063   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1680064   +
1680065   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1680066   +
1680067   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1680068   +
1680069   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1680070   +
1680071   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1680072   +
1680073   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1680074   +
1680075   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1680076   +
1680077   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1680078   +
1680079   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1680080   +
1680081   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1680082   +
1680083   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1680084   +
1680085   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1680086   +
1680087   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1680088   +
1680089   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1680090   +
1680091   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1680092   +
1680093   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1680094   +
1680095   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1680096   +
1680097   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1680098   +
1680099   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1680100   +
1680101   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1680102   +
1680103   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1680104   +
1680105   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1680106   +
1680107   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1680108   +
1680109   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1680110   +
1680111   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1680112   +
1680113   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1680114   +
1680115   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1680116   +
1680117   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1680118   +
1680119   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1680120   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1680121   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1680122   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1680123   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680124   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680125   +end;
MPRINT(EM_DIAGRAM):   end;
1680126   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680127   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680128   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1680129   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680130   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680131   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1680132   +   end;
MPRINT(EM_DIAGRAM):   end;
1680133   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680134   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1680135   +   end;
MPRINT(EM_DIAGRAM):   end;
1680136   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680137   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1680138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680140   +   end;
MPRINT(EM_DIAGRAM):   end;
1680141   +end;
MPRINT(EM_DIAGRAM):   end;
1680142   +
1680143   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1680144   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1680145   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1680146   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1680147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680149   +end;
MPRINT(EM_DIAGRAM):   end;
1680150   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680151   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680152   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1680153   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680154   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680155   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1680156   +   end;
MPRINT(EM_DIAGRAM):   end;
1680157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680158   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1680159   +   end;
MPRINT(EM_DIAGRAM):   end;
1680160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680161   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1680162   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680163   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680164   +   end;
MPRINT(EM_DIAGRAM):   end;
1680165   +end;
MPRINT(EM_DIAGRAM):   end;
1680166   +
1680167   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1680168   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1680169   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1680170   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1680171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680173   +end;
MPRINT(EM_DIAGRAM):   end;
1680174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680176   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1680177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680178   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680179   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1680180   +   end;
MPRINT(EM_DIAGRAM):   end;
1680181   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680182   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1680183   +   end;
MPRINT(EM_DIAGRAM):   end;
1680184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680185   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1680186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680188   +   end;
MPRINT(EM_DIAGRAM):   end;
1680189   +end;
MPRINT(EM_DIAGRAM):   end;
1680190   +
1680191   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1680192   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1680193   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1680194   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1680195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680197   +end;
MPRINT(EM_DIAGRAM):   end;
1680198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680200   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1680201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680203   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1680204   +   end;
MPRINT(EM_DIAGRAM):   end;
1680205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680206   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1680207   +   end;
MPRINT(EM_DIAGRAM):   end;
1680208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680209   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1680210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680212   +   end;
MPRINT(EM_DIAGRAM):   end;
1680213   +end;
MPRINT(EM_DIAGRAM):   end;
1680214   +
1680215   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1680216   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1680217   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1680218   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1680219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680221   +end;
MPRINT(EM_DIAGRAM):   end;
1680222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680224   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1680225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680226   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680227   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1680228   +   end;
MPRINT(EM_DIAGRAM):   end;
1680229   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680230   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1680231   +   end;
MPRINT(EM_DIAGRAM):   end;
1680232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680233   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1680234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680236   +   end;
MPRINT(EM_DIAGRAM):   end;
1680237   +end;
MPRINT(EM_DIAGRAM):   end;
1680238   +
1680239   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1680240   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1680241   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1680242   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1680243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680245   +end;
MPRINT(EM_DIAGRAM):   end;
1680246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680248   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1680249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680251   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1680252   +   end;
MPRINT(EM_DIAGRAM):   end;
1680253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680254   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1680255   +   end;
MPRINT(EM_DIAGRAM):   end;
1680256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680257   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1680258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680260   +   end;
MPRINT(EM_DIAGRAM):   end;
1680261   +end;
MPRINT(EM_DIAGRAM):   end;
1680262   +
1680263   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1680264   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1680265   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1680266   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1680267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680269   +end;
MPRINT(EM_DIAGRAM):   end;
1680270   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680272   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1680273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680274   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1680275   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1680276   +   end;
MPRINT(EM_DIAGRAM):   end;
1680277   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1680278   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1680279   +   end;
MPRINT(EM_DIAGRAM):   end;
1680280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680281   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1680282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680284   +   end;
MPRINT(EM_DIAGRAM):   end;
1680285   +end;
MPRINT(EM_DIAGRAM):   end;
1680286   +
1680287   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1680288   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1680289   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1680290   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1680291   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1680292   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1680293   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1680294   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1680295   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1680296   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1680297   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1680298   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1680299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680301   +end;
MPRINT(EM_DIAGRAM):   end;
1680302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680303   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1680304   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1680305   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680306   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1680307   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1680308   +   end;
MPRINT(EM_DIAGRAM):   end;
1680309   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1680310   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1680311   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1680312   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1680313   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1680314   +   end;
MPRINT(EM_DIAGRAM):   end;
1680315   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1680316   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1680317   +   end;
MPRINT(EM_DIAGRAM):   end;
1680318   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1680319   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1680320   +   end;
MPRINT(EM_DIAGRAM):   end;
1680321   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1680322   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1680323   +   end;
MPRINT(EM_DIAGRAM):   end;
1680324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680325   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1680326   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1680327   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1680328   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1680329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680331   +   end;
MPRINT(EM_DIAGRAM):   end;
1680332   +end;
MPRINT(EM_DIAGRAM):   end;
1680333   +
1680334   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1680335   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1680336   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1680337   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1680338   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1680339   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1680340   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1680341   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1680342   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1680343   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1680344   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1680345   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1680346   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1680347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680349   +end;
MPRINT(EM_DIAGRAM):   end;
1680350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680351   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1680352   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1680353   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680354   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1680355   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1680356   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1680357   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1680358   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1680359   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1680360   +         end;
MPRINT(EM_DIAGRAM):   end;
1680361   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1680362   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1680363   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1680364   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1680365   +            end;
MPRINT(EM_DIAGRAM):   end;
1680366   +         end;
MPRINT(EM_DIAGRAM):   end;
1680367   +      end;
MPRINT(EM_DIAGRAM):   end;
1680368   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1680369   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1680370   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1680371   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1680372   +         end;
MPRINT(EM_DIAGRAM):   end;
1680373   +      end;
MPRINT(EM_DIAGRAM):   end;
1680374   +   end;
MPRINT(EM_DIAGRAM):   end;
1680375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680376   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1680377   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1680378   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1680379   +      end;
MPRINT(EM_DIAGRAM):   end;
1680380   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1680381   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1680382   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1680383   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1680384   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1680385   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1680386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1680387   +         end;
MPRINT(EM_DIAGRAM):   end;
1680388   +      end;
MPRINT(EM_DIAGRAM):   end;
1680389   +   end;
MPRINT(EM_DIAGRAM):   end;
1680390   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1680391   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1680392   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1680393   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1680394   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1680395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
The SAS System
 
1680396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680397   +   end;
MPRINT(EM_DIAGRAM):   end;
1680398   +end;
MPRINT(EM_DIAGRAM):   end;
1680399   +
1680400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680401   +*** Checking missing input Interval
1680402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1680403   +
1680404   +IF NMISS(
1680405   +   AcceptedCmpTotal ,
1680406   +   Age ,
1680407   +   Frq ,
1680408   +   Income ,
1680409   +   Kidhome ,
1680410   +   Mnt ,
1680411   +   MntFishProducts ,
1680412   +   MntFruits ,
1680413   +   MntGoldProds ,
1680414   +   MntMeatProducts ,
1680415   +   MntSweetProducts ,
1680416   +   MntWines ,
1680417   +   MonthsAsCustomer ,
1680418   +   NumCatalogPurchases ,
1680419   +   NumDealsPurchases ,
1680420   +   NumDistPurchases ,
1680421   +   NumStorePurchases ,
1680422   +   NumWebPurchases ,
1680423   +   NumWebVisitsMonth ,
1680424   +   RFMstat ,
1680425   +   RMntFrq ,
1680426   +   Recency ,
1680427   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1680428   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1680429   +
1680430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680431   +END;
MPRINT(EM_DIAGRAM):   END;
1680432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680433   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1680434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680435   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1680436   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1680437   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1680438   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1680439   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1680440   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1680441   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1680442   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1680443   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1680444   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1680445   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1680446   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1680447   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1680448   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1680449   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1680450   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1680451   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1680452   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1680453   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1680454   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1680455   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1680456   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1680457   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1680458   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1680459   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1680460   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1680461   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1680462   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1680463   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1680464   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1680465   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1680466   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1680467   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1680468   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1680469   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1680470   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1680471   +END;
MPRINT(EM_DIAGRAM):   END;
1680472   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1680473   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1680474   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1680475   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1680476   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1680477   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1680478   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1680479   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1680480   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1680481   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1680482   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1680483   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1680484   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1680485   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1680486   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1680487   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1680488   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1680489   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1680490   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1680491   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1680492   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1680493   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1680494   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1680495   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1680496   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1680497   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1680498   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1680499   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1680500   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1680501   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1680502   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1680503   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1680504   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1680505   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1680506   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1680507   +   ELSE S_NumCatalogPurchases
1680508   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1680509   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1680510   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1680511   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1680512   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1680513   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1680514   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1680515   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1680516   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1680517   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1680518   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1680519   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1680520   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1680521   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1680522   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1680523   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1680524   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1680525   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1680526   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1680527   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1680528   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1680529   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1680530   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1680531   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1680532   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1680533   +END;
MPRINT(EM_DIAGRAM):   END;
1680534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680535   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1680536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680538   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1680539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680541   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1680542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680543   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1680544   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1680545   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1680546   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1680547   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1680548   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1680549   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1680550   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1680551   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1680552   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1680553   +          +    -1.14704878034134 * S_NumDealsPurchases
1680554   +          +    -0.17763404274659 * S_NumDistPurchases
1680555   +          +     0.08894400267969 * S_NumStorePurchases
1680556   +          +     0.59283747891957 * S_NumWebPurchases
1680557   +          +     0.85268274682505 * S_NumWebVisitsMonth
1680558   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1680559   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1680560   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1680561   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1680562   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1680563   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1680564   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1680565   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1680566   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1680567   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1680568   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1680569   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1680570   +          +    -0.80841566068716 * S_NumDealsPurchases
1680571   +          +    -0.17995640033768 * S_NumDistPurchases
1680572   +          +     0.00713417460936 * S_NumStorePurchases
1680573   +          +     0.57881024323076 * S_NumWebPurchases
1680574   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1680575   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1680576   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1680577   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1680578   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1680579   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1680580   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1680581   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1680582   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1680583   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1680584   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1680585   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1680586   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1680587   +          +     0.57891364118717 * S_NumDealsPurchases
1680588   +          +    -0.31024556838688 * S_NumDistPurchases
1680589   +          +    -1.48708542986704 * S_NumStorePurchases
1680590   +          +    -0.93009875249206 * S_NumWebPurchases
1680591   +          +     2.01900039122935 * S_NumWebVisitsMonth
1680592   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1680593   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1680594   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1680595   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1680596   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1680597   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1680598   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1680599   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1680600   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1680601   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1680602   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1680603   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1680604   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1680605   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1680606   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1680607   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1680608   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1680609   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1680610   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1680611   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1680612   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1680613   +          +     0.55883606830033 * Marital_StatusDivorced
1680614   +          +    -0.54530037567066 * Marital_StatusMarried
1680615   +          +    -0.52994736075753 * Marital_StatusSingle
1680616   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1680617   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1680618   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1680619   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1680620   +          +    -1.07368484057033 * Marital_StatusDivorced
1680621   +          +     2.73313504711262 * Marital_StatusMarried
1680622   +          +    -2.18530462876058 * Marital_StatusSingle
1680623   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1680624   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1680625   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1680626   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1680627   +          +     0.49993144243043 * Marital_StatusDivorced
1680628   +          +    -0.38953339116829 * Marital_StatusMarried
1680629   +          +    -0.10836287319942 * Marital_StatusSingle
1680630   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1680631   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1680632   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1680633   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1680634   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1680635   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1680636   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1680637   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1680638   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1680639   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1680640   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1680641   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1680642   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1680643   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1680644   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1680645   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1680646   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1680647   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1680648   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1680649   +END;
MPRINT(EM_DIAGRAM):   END;
1680650   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1680651   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1680652   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1680653   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1680654   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1680655   +END;
MPRINT(EM_DIAGRAM):   END;
1680656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680657   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1680658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680659   +
1680660   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1680661   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1680662   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1680663   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1680664   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1680665   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680666   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1680667   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1680668   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1680669   +end;
MPRINT(EM_DIAGRAM):   end;
1680670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680671   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1680672   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1680673   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1680674   +   end;
MPRINT(EM_DIAGRAM):   end;
1680675   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1680676   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1680677   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1680678   +   end;
MPRINT(EM_DIAGRAM):   end;
1680679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680680   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1680681   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1680682   +   end;
MPRINT(EM_DIAGRAM):   end;
1680683   +end;
MPRINT(EM_DIAGRAM):   end;
1680684   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1680685   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1680686   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1680687   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1680688   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1680689   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1680690   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1680691   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1680692   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1680693   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1680694   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1680695   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1680696   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1680697   +END;
MPRINT(EM_DIAGRAM):   END;
1680698   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1680699   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1680700   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1680701   +END;
MPRINT(EM_DIAGRAM):   END;
1680702   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1680703   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1680704   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1680705   +END;
MPRINT(EM_DIAGRAM):   END;
1680706   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1680707   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1680708   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1680709   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1680710   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1680711   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1680712   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1680713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680714   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1680715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1680716   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1680717   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1680718   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1680719   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1680720   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1680721   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1680722   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1680723   +END;
MPRINT(EM_DIAGRAM):   END;
1680724   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1680725   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1680726   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1680727   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1680728   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1680729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680730   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1680731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680732   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1680733   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1680734   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1680735   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1680736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680737   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1680738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680739   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1680740   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1680741   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1680742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680743   +* Ensmbl42: Scoring Code of model 4 of 4;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Scoring Code of model 4 of 4;
1680744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680746   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1680747   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1680748   +* NODE: AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL10;
1680749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1680750   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1680751   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1680752   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1680753   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1680754   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1680755   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1680756   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1680757   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1680758   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1680759   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1680760   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1680761   +LENGTH _WARN_ $4
1680762   +      F_DepVar  $ 12
1680763   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1680764   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1680765   +
1680766   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1680767   +
1680768   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1680769   +
1680770   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1680771   +
1680772   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1680773   +
1680774   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1680775   +
1680776   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1680777   +
1680778   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1680779   +
1680780   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1680781   +
1680782   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1680783   +
1680784   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1680785   +
1680786   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1680787   +
1680788   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1680789   +
1680790   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1680791   +
1680792   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1680793   +
1680794   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1680795   +
1680796   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1680797   +
1680798   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1680799   +
1680800   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1680801   +
1680802   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1680803   +
1680804   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1680805   +
1680806   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1680807   +
1680808   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1680809   +
1680810   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1680811   +
1680812   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1680813   +
1680814   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1680815   +
1680816   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1680817   +
1680818   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1680819   +
1680820   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1680821   +
1680822   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1680823   +
1680824   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1680825   +
1680826   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1680827   +
1680828   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1680829   +
1680830   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1680831   +
1680832   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1680833   +
1680834   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1680835   +
1680836   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1680837   +
1680838   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1680839   +
1680840   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1680841   +
1680842   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1680843   +
1680844   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1680845   +
1680846   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1680847   +
1680848   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1680849   +
1680850   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1680851   +
1680852   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1680853   +
1680854   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1680855   +
1680856   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1680857   +
1680858   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1680859   +
1680860   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1680861   +
1680862   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1680863   +
1680864   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1680865   +
1680866   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1680867   +
1680868   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1680869   +
1680870   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1680871   +
1680872   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1680873   +
1680874   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1680875   +
1680876   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1680877   +
1680878   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1680879   +
1680880   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1680881   +
1680882   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1680883   +
1680884   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1680885   +
1680886   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1680887   +
1680888   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1680889   +
1680890   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1680891   +
1680892   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1680893   +
1680894   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1680895   +
1680896   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1680897   +
1680898   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1680899   +
1680900   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1680901   +
1680902   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1680903   +
1680904   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1680905   +
1680906   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1680907   +
1680908   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1680909   +
1680910   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1680911   +
1680912   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1680913   +
1680914   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1680915   +
1680916   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1680917   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1680918   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1680919   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1680920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680922   +end;
MPRINT(EM_DIAGRAM):   end;
1680923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680925   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1680926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680927   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680928   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1680929   +   end;
MPRINT(EM_DIAGRAM):   end;
1680930   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680931   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1680932   +   end;
MPRINT(EM_DIAGRAM):   end;
1680933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680934   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1680935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680937   +   end;
MPRINT(EM_DIAGRAM):   end;
1680938   +end;
MPRINT(EM_DIAGRAM):   end;
1680939   +
1680940   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1680941   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1680942   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1680943   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1680944   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680946   +end;
MPRINT(EM_DIAGRAM):   end;
1680947   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680948   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680949   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1680950   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680951   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680952   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1680953   +   end;
MPRINT(EM_DIAGRAM):   end;
1680954   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680955   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1680956   +   end;
MPRINT(EM_DIAGRAM):   end;
1680957   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680958   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1680959   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680960   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680961   +   end;
MPRINT(EM_DIAGRAM):   end;
1680962   +end;
MPRINT(EM_DIAGRAM):   end;
1680963   +
1680964   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1680965   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1680966   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1680967   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1680968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680970   +end;
MPRINT(EM_DIAGRAM):   end;
1680971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680972   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680973   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1680974   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680975   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1680976   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1680977   +   end;
MPRINT(EM_DIAGRAM):   end;
1680978   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1680979   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1680980   +   end;
MPRINT(EM_DIAGRAM):   end;
1680981   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1680982   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1680983   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1680984   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680985   +   end;
MPRINT(EM_DIAGRAM):   end;
1680986   +end;
MPRINT(EM_DIAGRAM):   end;
1680987   +
1680988   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1680989   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1680990   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1680991   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1680992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1680993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1680994   +end;
MPRINT(EM_DIAGRAM):   end;
1680995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1680996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1680997   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1680998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1680999   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1681000   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1681001   +   end;
MPRINT(EM_DIAGRAM):   end;
1681002   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1681003   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1681004   +   end;
MPRINT(EM_DIAGRAM):   end;
1681005   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681006   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1681007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681009   +   end;
MPRINT(EM_DIAGRAM):   end;
1681010   +end;
MPRINT(EM_DIAGRAM):   end;
1681011   +
1681012   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1681013   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1681014   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1681015   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1681016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1681017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681018   +end;
MPRINT(EM_DIAGRAM):   end;
1681019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1681020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1681021   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1681022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1681023   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1681024   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1681025   +   end;
MPRINT(EM_DIAGRAM):   end;
1681026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1681027   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1681028   +   end;
MPRINT(EM_DIAGRAM):   end;
1681029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681030   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1681031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681033   +   end;
MPRINT(EM_DIAGRAM):   end;
1681034   +end;
MPRINT(EM_DIAGRAM):   end;
1681035   +
1681036   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1681037   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1681038   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1681039   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1681040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1681041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681042   +end;
MPRINT(EM_DIAGRAM):   end;
1681043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1681044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1681045   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1681046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1681047   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1681048   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1681049   +   end;
MPRINT(EM_DIAGRAM):   end;
1681050   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1681051   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1681052   +   end;
MPRINT(EM_DIAGRAM):   end;
1681053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681054   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1681055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681057   +   end;
MPRINT(EM_DIAGRAM):   end;
1681058   +end;
MPRINT(EM_DIAGRAM):   end;
1681059   +
1681060   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1681061   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1681062   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1681063   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1681064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1681065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681066   +end;
MPRINT(EM_DIAGRAM):   end;
1681067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1681068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1681069   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1681070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1681071   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1681072   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1681073   +   end;
MPRINT(EM_DIAGRAM):   end;
1681074   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1681075   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1681076   +   end;
MPRINT(EM_DIAGRAM):   end;
1681077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681078   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1681079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681081   +   end;
MPRINT(EM_DIAGRAM):   end;
1681082   +end;
MPRINT(EM_DIAGRAM):   end;
1681083   +
1681084   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1681085   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1681086   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1681087   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1681088   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1681089   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1681090   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1681091   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1681092   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1681093   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1681094   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1681095   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1681096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1681097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681098   +end;
MPRINT(EM_DIAGRAM):   end;
1681099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1681100   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1681101   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1681102   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1681103   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1681104   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1681105   +   end;
MPRINT(EM_DIAGRAM):   end;
1681106   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1681107   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1681108   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1681109   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1681110   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1681111   +   end;
MPRINT(EM_DIAGRAM):   end;
1681112   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1681113   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1681114   +   end;
MPRINT(EM_DIAGRAM):   end;
1681115   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1681116   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1681117   +   end;
MPRINT(EM_DIAGRAM):   end;
1681118   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1681119   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1681120   +   end;
MPRINT(EM_DIAGRAM):   end;
1681121   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681122   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1681123   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1681124   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1681125   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1681126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681128   +   end;
MPRINT(EM_DIAGRAM):   end;
1681129   +end;
MPRINT(EM_DIAGRAM):   end;
1681130   +
1681131   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1681132   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1681133   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1681134   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1681135   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1681136   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1681137   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1681138   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1681139   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1681140   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1681141   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1681142   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1681143   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1681144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1681145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681146   +end;
MPRINT(EM_DIAGRAM):   end;
1681147   +else do;
MPRINT(EM_DIAGRAM):   else do;
1681148   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1681149   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1681150   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1681151   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1681152   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1681153   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1681154   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1681155   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1681156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1681157   +         end;
MPRINT(EM_DIAGRAM):   end;
1681158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1681159   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1681160   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1681161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1681162   +            end;
MPRINT(EM_DIAGRAM):   end;
1681163   +         end;
MPRINT(EM_DIAGRAM):   end;
1681164   +      end;
MPRINT(EM_DIAGRAM):   end;
1681165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1681166   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1681167   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1681168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1681169   +         end;
MPRINT(EM_DIAGRAM):   end;
1681170   +      end;
MPRINT(EM_DIAGRAM):   end;
1681171   +   end;
MPRINT(EM_DIAGRAM):   end;
1681172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1681173   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1681174   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1681175   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1681176   +      end;
MPRINT(EM_DIAGRAM):   end;
1681177   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1681178   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1681179   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1681180   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1681181   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1681182   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1681183   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1681184   +         end;
MPRINT(EM_DIAGRAM):   end;
1681185   +      end;
MPRINT(EM_DIAGRAM):   end;
1681186   +   end;
MPRINT(EM_DIAGRAM):   end;
1681187   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1681188   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1681189   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1681190   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1681191   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1681192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1681193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681194   +   end;
MPRINT(EM_DIAGRAM):   end;
1681195   +end;
MPRINT(EM_DIAGRAM):   end;
1681196   +
1681197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681198   +*** Checking missing input Interval
1681199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1681200   +
1681201   +IF NMISS(
1681202   +   AcceptedCmpTotal ,
1681203   +   Age ,
1681204   +   Frq ,
1681205   +   Income ,
1681206   +   Kidhome ,
1681207   +   Mnt ,
1681208   +   MntFishProducts ,
1681209   +   MntFruits ,
1681210   +   MntGoldProds ,
1681211   +   MntMeatProducts ,
1681212   +   MntSweetProducts ,
1681213   +   MntWines ,
1681214   +   MonthsAsCustomer ,
1681215   +   NumCatalogPurchases ,
1681216   +   NumDealsPurchases ,
1681217   +   NumDistPurchases ,
1681218   +   NumStorePurchases ,
1681219   +   NumWebPurchases ,
1681220   +   NumWebVisitsMonth ,
1681221   +   RFMstat ,
1681222   +   RMntFrq ,
1681223   +   Recency ,
1681224   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1681225   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1681226   +
1681227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1681228   +END;
MPRINT(EM_DIAGRAM):   END;
1681229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681230   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1681231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681232   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681233   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1681234   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1681235   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1681236   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1681237   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1681238   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1681239   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1681240   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1681241   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1681242   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1681243   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1681244   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1681245   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1681246   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1681247   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1681248   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1681249   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1681250   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1681251   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1681252   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1681253   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1681254   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1681255   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1681256   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1681257   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1681258   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1681259   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1681260   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1681261   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1681262   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1681263   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1681264   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1681265   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1681266   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1681267   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1681268   +END;
MPRINT(EM_DIAGRAM):   END;
1681269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681270   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1681271   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1681272   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1681273   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1681274   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1681275   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1681276   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1681277   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1681278   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1681279   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1681280   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1681281   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1681282   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1681283   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1681284   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1681285   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1681286   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1681287   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1681288   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1681289   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1681290   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1681291   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1681292   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1681293   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1681294   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1681295   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1681296   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1681297   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1681298   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1681299   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1681300   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1681301   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1681302   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1681303   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1681304   +   ELSE S_NumCatalogPurchases
1681305   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1681306   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1681307   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1681308   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1681309   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1681310   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1681311   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1681312   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1681313   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1681314   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1681315   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1681316   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1681317   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1681318   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1681319   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1681320   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1681321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1681322   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1681323   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1681324   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1681325   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1681326   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1681327   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1681328   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1681329   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1681330   +END;
MPRINT(EM_DIAGRAM):   END;
1681331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681332   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1681333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681335   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1681336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681338   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1681339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681341   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1681342   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1681343   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1681344   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1681345   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1681346   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1681347   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1681348   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1681349   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1681350   +          +     3.45371614080196 * S_NumDealsPurchases
1681351   +          +     0.19118374544537 * S_NumDistPurchases
1681352   +          +    -2.45138001446793 * S_NumStorePurchases
1681353   +          +    -0.11424280244155 * S_NumWebPurchases
1681354   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1681355   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1681356   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1681357   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1681358   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1681359   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1681360   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1681361   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1681362   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1681363   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1681364   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1681365   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1681366   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1681367   +          +    -1.28390925647659 * S_NumDealsPurchases
1681368   +          +     0.82669177239926 * S_NumDistPurchases
1681369   +          +     1.71678585204511 * S_NumStorePurchases
1681370   +          +     1.49226295608046 * S_NumWebPurchases
1681371   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1681372   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1681373   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1681374   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1681375   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1681376   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1681377   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1681378   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1681379   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1681380   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1681381   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1681382   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1681383   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1681384   +          +     0.22958626391725 * S_NumDealsPurchases
1681385   +          +    -0.02046515813996 * S_NumDistPurchases
1681386   +          +      0.8618502050837 * S_NumStorePurchases
1681387   +          +     1.45175370326009 * S_NumWebPurchases
1681388   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1681389   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1681390   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1681391   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1681392   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1681393   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1681394   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1681395   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1681396   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1681397   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1681398   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1681399   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1681400   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1681401   +          +     1.25310034610344 * S_NumDealsPurchases
1681402   +          +     0.92141098602176 * S_NumDistPurchases
1681403   +          +    -0.08806509391473 * S_NumStorePurchases
1681404   +          +     -1.0533787624668 * S_NumWebPurchases
1681405   +          +     3.07050739830585 * S_NumWebVisitsMonth
1681406   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1681407   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1681408   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1681409   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1681410   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1681411   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1681412   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1681413   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1681414   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1681415   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1681416   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1681417   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1681418   +          +    -1.68259553608287 * S_NumDealsPurchases
1681419   +          +    -0.53835572290445 * S_NumDistPurchases
1681420   +          +     1.25833922835446 * S_NumStorePurchases
1681421   +          +     0.48300830623998 * S_NumWebPurchases
1681422   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1681423   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1681424   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1681425   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1681426   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1681427   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1681428   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1681429   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1681430   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1681431   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1681432   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1681433   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1681434   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1681435   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1681436   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1681437   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1681438   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1681439   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1681440   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1681441   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1681442   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1681443   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1681444   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1681445   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1681446   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1681447   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1681448   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1681449   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1681450   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1681451   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1681452   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1681453   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1681454   +          +     0.26230568150721 * Marital_StatusDivorced
1681455   +          +     0.27563523967756 * Marital_StatusMarried
1681456   +          +     0.54464481618478 * Marital_StatusSingle
1681457   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1681458   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1681459   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1681460   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1681461   +          +    -0.06750661313108 * Marital_StatusDivorced
1681462   +          +     1.48628445854207 * Marital_StatusMarried
1681463   +          +    -0.52197797291165 * Marital_StatusSingle
1681464   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1681465   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1681466   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1681467   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1681468   +          +     0.03219453957597 * Marital_StatusDivorced
1681469   +          +    -0.73835008216677 * Marital_StatusMarried
1681470   +          +     0.11212575818086 * Marital_StatusSingle
1681471   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1681472   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1681473   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1681474   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1681475   +          +    -0.95055539413405 * Marital_StatusDivorced
1681476   +          +    -1.65922419336067 * Marital_StatusMarried
1681477   +          +     0.78727538125107 * Marital_StatusSingle
1681478   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1681479   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1681480   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1681481   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1681482   +          +     -4.1747415035634 * Marital_StatusDivorced
1681483   +          +     3.61194282451968 * Marital_StatusMarried
1681484   +          +     -3.2800495365546 * Marital_StatusSingle
1681485   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1681486   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1681487   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1681488   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1681489   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1681490   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1681491   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1681492   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1681493   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1681494   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1681495   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1681496   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1681497   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1681498   +END;
MPRINT(EM_DIAGRAM):   END;
1681499   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681500   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1681501   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1681502   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1681503   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1681504   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1681505   +END;
MPRINT(EM_DIAGRAM):   END;
1681506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681507   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1681508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681509   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681510   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1681511   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1681512   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1681513   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1681514   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1681515   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1681516   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1681517   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1681518   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1681519   +          +     1.29727972396867 * S_NumDealsPurchases
1681520   +          +     -0.4796144286007 * S_NumDistPurchases
1681521   +          +     0.88365985808591 * S_NumStorePurchases
1681522   +          +     0.68522096892804 * S_NumWebPurchases
1681523   +          +     0.54931043107798 * S_NumWebVisitsMonth
1681524   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1681525   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1681526   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1681527   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1681528   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1681529   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1681530   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1681531   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1681532   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1681533   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1681534   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1681535   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1681536   +          +     0.26997834581422 * S_NumDealsPurchases
1681537   +          +      1.4974894627406 * S_NumDistPurchases
1681538   +          +     0.20577850505638 * S_NumStorePurchases
1681539   +          +     0.67578530037026 * S_NumWebPurchases
1681540   +          +     1.48893165613941 * S_NumWebVisitsMonth
1681541   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1681542   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1681543   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1681544   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1681545   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1681546   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1681547   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1681548   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1681549   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1681550   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1681551   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1681552   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1681553   +          +    -0.75474919633886 * S_NumDealsPurchases
1681554   +          +     2.21872386475638 * S_NumDistPurchases
1681555   +          +    -0.36191460108989 * S_NumStorePurchases
1681556   +          +     0.03160010932412 * S_NumWebPurchases
1681557   +          +     0.00984650739909 * S_NumWebVisitsMonth
1681558   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1681559   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1681560   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1681561   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1681562   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1681563   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1681564   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1681565   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1681566   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1681567   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1681568   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1681569   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1681570   +          +    -1.12057357865269 * S_NumDealsPurchases
1681571   +          +    -0.70841760614521 * S_NumDistPurchases
1681572   +          +    -1.39174816270404 * S_NumStorePurchases
1681573   +          +    -1.62343249380806 * S_NumWebPurchases
1681574   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1681575   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1681576   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1681577   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1681578   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1681579   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1681580   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1681581   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1681582   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1681583   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1681584   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1681585   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1681586   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1681587   +          +     0.66880481485557 * S_NumDealsPurchases
1681588   +          +     0.69540174544859 * S_NumDistPurchases
1681589   +          +     1.68246546921736 * S_NumStorePurchases
1681590   +          +     1.85958176898295 * S_NumWebPurchases
1681591   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1681592   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1681593   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1681594   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1681595   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1681596   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1681597   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1681598   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1681599   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1681600   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1681601   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1681602   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1681603   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1681604   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1681605   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1681606   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1681607   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1681608   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1681609   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1681610   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1681611   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1681612   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1681613   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1681614   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1681615   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1681616   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1681617   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1681618   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1681619   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1681620   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1681621   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1681622   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1681623   +          +      0.2766977476799 * Marital_StatusDivorced
1681624   +          +     0.99585126449473 * Marital_StatusMarried
1681625   +          +    -0.71244490682808 * Marital_StatusSingle
1681626   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1681627   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1681628   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1681629   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1681630   +          +     0.04724779113048 * Marital_StatusDivorced
1681631   +          +    -0.80186231440666 * Marital_StatusMarried
1681632   +          +    -0.02226793584171 * Marital_StatusSingle
1681633   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1681634   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1681635   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1681636   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1681637   +          +     0.28206835683721 * Marital_StatusDivorced
1681638   +          +     0.46500886756532 * Marital_StatusMarried
1681639   +          +     0.35327545255503 * Marital_StatusSingle
1681640   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1681641   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1681642   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1681643   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1681644   +          +     1.22291788006392 * Marital_StatusDivorced
1681645   +          +    -2.27040720272432 * Marital_StatusMarried
1681646   +          +     1.13606780043773 * Marital_StatusSingle
1681647   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1681648   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1681649   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1681650   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1681651   +          +     -0.3999800759199 * Marital_StatusDivorced
1681652   +          +    -0.40978271635345 * Marital_StatusMarried
1681653   +          +    -0.55524279444227 * Marital_StatusSingle
1681654   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1681655   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1681656   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1681657   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1681658   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1681659   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1681660   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1681661   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1681662   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1681663   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1681664   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1681665   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1681666   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1681667   +END;
MPRINT(EM_DIAGRAM):   END;
1681668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681669   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1681670   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1681671   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1681672   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1681673   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1681674   +END;
MPRINT(EM_DIAGRAM):   END;
1681675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681676   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1681677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681679   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1681680   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1681681   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1681682   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1681683   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1681684   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1681685   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1681686   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1681687   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1681688   +          +     0.15783958682465 * S_NumDealsPurchases
1681689   +          +     1.52124708558457 * S_NumDistPurchases
1681690   +          +     -1.3804418313581 * S_NumStorePurchases
1681691   +          +    -1.29570111649272 * S_NumWebPurchases
1681692   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1681693   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1681694   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1681695   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1681696   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1681697   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1681698   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1681699   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1681700   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1681701   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1681702   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1681703   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1681704   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1681705   +          +     0.12337111358286 * S_NumDealsPurchases
1681706   +          +     -2.3848926094027 * S_NumDistPurchases
1681707   +          +    -1.20666646996433 * S_NumStorePurchases
1681708   +          +     0.89549302881365 * S_NumWebPurchases
1681709   +          +     0.95359042569947 * S_NumWebVisitsMonth
1681710   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1681711   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1681712   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1681713   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1681714   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1681715   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1681716   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1681717   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1681718   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1681719   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1681720   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1681721   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1681722   +          +    -1.05383642674948 * S_NumDealsPurchases
1681723   +          +     1.71861984509369 * S_NumDistPurchases
1681724   +          +     1.47595181536047 * S_NumStorePurchases
1681725   +          +    -1.64165005491178 * S_NumWebPurchases
1681726   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1681727   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1681728   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1681729   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1681730   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1681731   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1681732   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1681733   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1681734   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1681735   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1681736   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1681737   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1681738   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1681739   +          +     0.13347794794222 * S_NumDealsPurchases
1681740   +          +     0.30533639886561 * S_NumDistPurchases
1681741   +          +     1.63892955540526 * S_NumStorePurchases
1681742   +          +     0.43734586516446 * S_NumWebPurchases
1681743   +          +     1.79260779802864 * S_NumWebVisitsMonth
1681744   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1681745   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1681746   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1681747   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1681748   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1681749   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1681750   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1681751   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1681752   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1681753   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1681754   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1681755   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1681756   +          +     1.64209094349557 * S_NumDealsPurchases
1681757   +          +    -0.38876870460627 * S_NumDistPurchases
1681758   +          +    -0.48559309584971 * S_NumStorePurchases
1681759   +          +     0.21254626353218 * S_NumWebPurchases
1681760   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1681761   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1681762   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1681763   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1681764   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1681765   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1681766   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1681767   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1681768   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1681769   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1681770   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1681771   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1681772   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1681773   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1681774   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1681775   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1681776   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1681777   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1681778   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1681779   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1681780   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1681781   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1681782   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1681783   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1681784   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1681785   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1681786   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1681787   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1681788   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1681789   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1681790   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1681791   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1681792   +          +     1.33953173091973 * Marital_StatusDivorced
1681793   +          +    -0.26253208073262 * Marital_StatusMarried
1681794   +          +    -0.00960552682431 * Marital_StatusSingle
1681795   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1681796   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1681797   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1681798   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1681799   +          +     1.43150850334311 * Marital_StatusDivorced
1681800   +          +    -0.69239127844934 * Marital_StatusMarried
1681801   +          +     2.08477562471559 * Marital_StatusSingle
1681802   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1681803   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1681804   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1681805   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1681806   +          +     1.08387556786168 * Marital_StatusDivorced
1681807   +          +      1.0283506000217 * Marital_StatusMarried
1681808   +          +    -0.87069431107983 * Marital_StatusSingle
1681809   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1681810   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1681811   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1681812   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1681813   +          +      -1.347780188307 * Marital_StatusDivorced
1681814   +          +    -0.53911983240372 * Marital_StatusMarried
1681815   +          +     0.22083074159185 * Marital_StatusSingle
1681816   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1681817   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1681818   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1681819   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1681820   +          +     1.46582538311384 * Marital_StatusDivorced
1681821   +          +     0.05256161016002 * Marital_StatusMarried
1681822   +          +    -1.21402967626877 * Marital_StatusSingle
1681823   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1681824   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1681825   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1681826   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1681827   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1681828   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1681829   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1681830   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1681831   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1681832   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1681833   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1681834   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1681835   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1681836   +END;
MPRINT(EM_DIAGRAM):   END;
1681837   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681838   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1681839   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1681840   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1681841   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1681842   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1681843   +END;
MPRINT(EM_DIAGRAM):   END;
1681844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681845   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1681846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681848   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1681849   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1681850   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1681851   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1681852   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1681853   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1681854   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1681855   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1681856   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1681857   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1681858   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1681859   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1681860   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1681861   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1681862   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1681863   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1681864   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1681865   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1681866   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1681867   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1681868   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1681869   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1681870   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1681871   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1681872   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1681873   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1681874   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1681875   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1681876   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1681877   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1681878   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1681879   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1681880   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1681881   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1681882   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1681883   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1681884   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1681885   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1681886   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1681887   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1681888   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1681889   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1681890   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1681891   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1681892   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1681893   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1681894   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1681895   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1681896   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1681897   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1681898   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1681899   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1681900   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1681901   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1681902   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1681903   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1681904   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1681905   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1681906   +END;
MPRINT(EM_DIAGRAM):   END;
1681907   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681908   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1681909   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1681910   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1681911   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1681912   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1681913   +END;
MPRINT(EM_DIAGRAM):   END;
1681914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681915   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1681916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681917   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681918   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1681919   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1681920   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1681921   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1681922   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1681923   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1681924   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1681925   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1681926   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1681927   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1681928   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1681929   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1681930   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1681931   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1681932   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1681933   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1681934   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1681935   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1681936   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1681937   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1681938   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1681939   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1681940   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1681941   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1681942   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1681943   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1681944   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1681945   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1681946   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1681947   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1681948   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1681949   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1681950   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1681951   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1681952   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1681953   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1681954   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1681955   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1681956   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1681957   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1681958   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1681959   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1681960   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1681961   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1681962   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1681963   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1681964   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1681965   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1681966   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1681967   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1681968   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1681969   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1681970   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1681971   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1681972   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1681973   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1681974   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1681975   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1681976   +END;
MPRINT(EM_DIAGRAM):   END;
1681977   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1681978   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1681979   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1681980   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1681981   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1681982   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1681983   +END;
MPRINT(EM_DIAGRAM):   END;
1681984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681985   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1681986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1681987   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1681988   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1681989   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1681990   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1681991   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1681992   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1681993   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1681994   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1681995   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1681996   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1681997   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1681998   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1681999   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1682000   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1682001   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1682002   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1682003   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1682004   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1682005   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1682006   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1682007   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1682008   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1682009   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1682010   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1682011   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1682012   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1682013   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1682014   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1682015   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1682016   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1682017   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1682018   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1682019   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1682020   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1682021   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1682022   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1682023   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1682024   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1682025   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1682026   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1682027   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1682028   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1682029   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1682030   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1682031   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1682032   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1682033   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1682034   +END;
MPRINT(EM_DIAGRAM):   END;
1682035   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682036   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1682037   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1682038   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1682039   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1682040   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1682041   +END;
MPRINT(EM_DIAGRAM):   END;
1682042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682043   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1682044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682045   +
1682046   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1682047   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1682048   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1682049   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1682050   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1682051   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682052   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1682053   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1682054   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1682055   +end;
MPRINT(EM_DIAGRAM):   end;
1682056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682057   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1682058   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1682059   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1682060   +   end;
MPRINT(EM_DIAGRAM):   end;
1682061   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1682062   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1682063   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1682064   +   end;
MPRINT(EM_DIAGRAM):   end;
1682065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682066   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1682067   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1682068   +   end;
MPRINT(EM_DIAGRAM):   end;
1682069   +end;
MPRINT(EM_DIAGRAM):   end;
1682070   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682071   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1682072   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1682073   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1682074   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1682075   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1682076   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1682077   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1682078   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1682079   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1682080   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1682081   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1682082   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1682083   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1682084   +END;
MPRINT(EM_DIAGRAM):   END;
1682085   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682086   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1682087   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1682088   +END;
MPRINT(EM_DIAGRAM):   END;
1682089   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1682090   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1682091   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1682092   +END;
MPRINT(EM_DIAGRAM):   END;
1682093   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1682094   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1682095   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1682096   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1682097   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1682098   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1682099   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1682100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682101   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1682102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682103   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1682104   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1682105   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1682106   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1682107   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1682108   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1682109   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1682110   +END;
MPRINT(EM_DIAGRAM):   END;
1682111   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1682112   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1682113   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1682114   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1682115   +* Renaming variables for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL10;
1682116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682117   +* Renaming Posterior variables for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL10;
1682118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682119   +drop AUTONEURAL10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_P_DepVar1;
1682120   +AUTONEURAL10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_P_DepVar1 = P_DepVar1;
1682121   +drop AUTONEURAL10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_P_DepVar0;
1682122   +AUTONEURAL10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_P_DepVar0 = P_DepVar0;
1682123   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682124   +* Renaming _WARN_ variable for AUTONEURAL10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL10;
1682125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682126   +length AUTONEURAL10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL10_WARN_ $4;
1682127   +drop AUTONEURAL10_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL10_WARN_;
1682128   +AUTONEURAL10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL10_WARN_ = _WARN_;
1682129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682130   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1682131   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1682132   +* NODE: AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL8;
1682133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682134   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1682135   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1682136   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1682137   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1682138   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1682139   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1682140   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1682141   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1682142   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1682143   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1682144   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1682145   +LENGTH _WARN_ $4
1682146   +      F_DepVar  $ 12
1682147   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1682148   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1682149   +
1682150   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1682151   +
1682152   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1682153   +
1682154   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1682155   +
1682156   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1682157   +
1682158   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1682159   +
1682160   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1682161   +
1682162   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1682163   +
1682164   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1682165   +
1682166   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1682167   +
1682168   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1682169   +
1682170   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1682171   +
1682172   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1682173   +
1682174   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1682175   +
1682176   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1682177   +
1682178   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1682179   +
1682180   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1682181   +
1682182   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1682183   +
1682184   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1682185   +
1682186   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1682187   +
1682188   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1682189   +
1682190   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1682191   +
1682192   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1682193   +
1682194   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1682195   +
1682196   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1682197   +
1682198   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1682199   +
1682200   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1682201   +
1682202   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1682203   +
1682204   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1682205   +
1682206   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1682207   +
1682208   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1682209   +
1682210   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1682211   +
1682212   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1682213   +
1682214   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1682215   +
1682216   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1682217   +
1682218   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1682219   +
1682220   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1682221   +
1682222   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1682223   +
1682224   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1682225   +
1682226   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1682227   +
1682228   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1682229   +
1682230   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1682231   +
1682232   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1682233   +
1682234   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1682235   +
1682236   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1682237   +
1682238   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1682239   +
1682240   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1682241   +
1682242   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1682243   +
1682244   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1682245   +
1682246   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1682247   +
1682248   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1682249   +
1682250   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1682251   +
1682252   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1682253   +
1682254   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1682255   +
1682256   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1682257   +
1682258   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1682259   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1682260   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1682261   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1682262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682264   +end;
MPRINT(EM_DIAGRAM):   end;
1682265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682267   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1682268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682270   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1682271   +   end;
MPRINT(EM_DIAGRAM):   end;
1682272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682273   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1682274   +   end;
MPRINT(EM_DIAGRAM):   end;
1682275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682276   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1682277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682279   +   end;
MPRINT(EM_DIAGRAM):   end;
1682280   +end;
MPRINT(EM_DIAGRAM):   end;
1682281   +
1682282   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1682283   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1682284   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1682285   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1682286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682288   +end;
MPRINT(EM_DIAGRAM):   end;
1682289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682291   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1682292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682293   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682294   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1682295   +   end;
MPRINT(EM_DIAGRAM):   end;
1682296   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682297   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1682298   +   end;
MPRINT(EM_DIAGRAM):   end;
1682299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682300   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1682301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682303   +   end;
MPRINT(EM_DIAGRAM):   end;
1682304   +end;
MPRINT(EM_DIAGRAM):   end;
1682305   +
1682306   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1682307   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1682308   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1682309   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1682310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682312   +end;
MPRINT(EM_DIAGRAM):   end;
1682313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682315   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1682316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682317   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682318   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1682319   +   end;
MPRINT(EM_DIAGRAM):   end;
1682320   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682321   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1682322   +   end;
MPRINT(EM_DIAGRAM):   end;
1682323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682324   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1682325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682327   +   end;
MPRINT(EM_DIAGRAM):   end;
1682328   +end;
MPRINT(EM_DIAGRAM):   end;
1682329   +
1682330   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1682331   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1682332   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1682333   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1682334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682336   +end;
MPRINT(EM_DIAGRAM):   end;
1682337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682339   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1682340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682341   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682342   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1682343   +   end;
MPRINT(EM_DIAGRAM):   end;
1682344   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682345   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1682346   +   end;
MPRINT(EM_DIAGRAM):   end;
1682347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682348   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1682349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682351   +   end;
MPRINT(EM_DIAGRAM):   end;
1682352   +end;
MPRINT(EM_DIAGRAM):   end;
1682353   +
1682354   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1682355   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1682356   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1682357   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1682358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682360   +end;
MPRINT(EM_DIAGRAM):   end;
1682361   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682363   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1682364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682365   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682366   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1682367   +   end;
MPRINT(EM_DIAGRAM):   end;
1682368   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682369   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1682370   +   end;
MPRINT(EM_DIAGRAM):   end;
1682371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682372   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1682373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682375   +   end;
MPRINT(EM_DIAGRAM):   end;
1682376   +end;
MPRINT(EM_DIAGRAM):   end;
1682377   +
1682378   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1682379   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1682380   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1682381   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1682382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682384   +end;
MPRINT(EM_DIAGRAM):   end;
1682385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682386   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682387   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1682388   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682389   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1682390   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1682391   +   end;
MPRINT(EM_DIAGRAM):   end;
1682392   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1682393   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1682394   +   end;
MPRINT(EM_DIAGRAM):   end;
1682395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682396   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1682397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682399   +   end;
MPRINT(EM_DIAGRAM):   end;
1682400   +end;
MPRINT(EM_DIAGRAM):   end;
1682401   +
1682402   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1682403   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1682404   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1682405   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1682406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682408   +end;
MPRINT(EM_DIAGRAM):   end;
1682409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1682411   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1682412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682413   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1682414   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1682415   +   end;
MPRINT(EM_DIAGRAM):   end;
1682416   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1682417   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1682418   +   end;
MPRINT(EM_DIAGRAM):   end;
1682419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682420   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1682421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682423   +   end;
MPRINT(EM_DIAGRAM):   end;
1682424   +end;
MPRINT(EM_DIAGRAM):   end;
1682425   +
1682426   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1682427   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1682428   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1682429   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1682430   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1682431   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1682432   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1682433   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1682434   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1682435   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1682436   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1682437   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1682438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682440   +end;
MPRINT(EM_DIAGRAM):   end;
1682441   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682442   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1682443   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1682444   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682445   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1682446   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1682447   +   end;
MPRINT(EM_DIAGRAM):   end;
1682448   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1682449   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1682450   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1682451   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1682452   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1682453   +   end;
MPRINT(EM_DIAGRAM):   end;
1682454   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1682455   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1682456   +   end;
MPRINT(EM_DIAGRAM):   end;
1682457   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1682458   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1682459   +   end;
MPRINT(EM_DIAGRAM):   end;
1682460   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1682461   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1682462   +   end;
MPRINT(EM_DIAGRAM):   end;
1682463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682464   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1682465   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1682466   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1682467   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1682468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682470   +   end;
MPRINT(EM_DIAGRAM):   end;
1682471   +end;
MPRINT(EM_DIAGRAM):   end;
1682472   +
1682473   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1682474   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1682475   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1682476   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1682477   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1682478   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1682479   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1682480   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1682481   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1682482   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1682483   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1682484   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1682485   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1682486   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1682487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682488   +end;
MPRINT(EM_DIAGRAM):   end;
1682489   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682490   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1682491   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1682492   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682493   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1682494   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1682495   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1682496   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1682497   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1682498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1682499   +         end;
MPRINT(EM_DIAGRAM):   end;
1682500   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1682501   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1682502   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1682503   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1682504   +            end;
MPRINT(EM_DIAGRAM):   end;
1682505   +         end;
MPRINT(EM_DIAGRAM):   end;
1682506   +      end;
MPRINT(EM_DIAGRAM):   end;
1682507   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1682508   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1682509   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1682510   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1682511   +         end;
MPRINT(EM_DIAGRAM):   end;
1682512   +      end;
MPRINT(EM_DIAGRAM):   end;
1682513   +   end;
MPRINT(EM_DIAGRAM):   end;
1682514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682515   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1682516   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1682517   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1682518   +      end;
MPRINT(EM_DIAGRAM):   end;
1682519   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1682520   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1682521   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1682522   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1682523   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1682524   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1682525   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1682526   +         end;
MPRINT(EM_DIAGRAM):   end;
1682527   +      end;
MPRINT(EM_DIAGRAM):   end;
1682528   +   end;
MPRINT(EM_DIAGRAM):   end;
1682529   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1682530   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1682531   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1682532   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1682533   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1682534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1682535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682536   +   end;
MPRINT(EM_DIAGRAM):   end;
1682537   +end;
MPRINT(EM_DIAGRAM):   end;
1682538   +
1682539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682540   +*** Checking missing input Interval
1682541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1682542   +
1682543   +IF NMISS(
1682544   +   AcceptedCmpTotal ,
1682545   +   Age ,
1682546   +   Frq ,
1682547   +   Income ,
1682548   +   Kidhome ,
1682549   +   Mnt ,
1682550   +   MntFishProducts ,
1682551   +   MntFruits ,
1682552   +   MntGoldProds ,
1682553   +   MntMeatProducts ,
1682554   +   MntSweetProducts ,
1682555   +   MntWines ,
1682556   +   MonthsAsCustomer ,
1682557   +   NumCatalogPurchases ,
1682558   +   NumDealsPurchases ,
1682559   +   NumDistPurchases ,
1682560   +   NumStorePurchases ,
1682561   +   NumWebPurchases ,
1682562   +   NumWebVisitsMonth ,
1682563   +   RFMstat ,
1682564   +   RMntFrq ,
1682565   +   Recency ,
1682566   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1682567   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1682568   +
1682569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1682570   +END;
MPRINT(EM_DIAGRAM):   END;
1682571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682572   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1682573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682574   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682575   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1682576   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1682577   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1682578   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1682579   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1682580   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1682581   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1682582   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1682583   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1682584   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1682585   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1682586   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1682587   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1682588   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1682589   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1682590   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1682591   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1682592   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1682593   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1682594   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1682595   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1682596   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1682597   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1682598   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1682599   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1682600   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1682601   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1682602   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1682603   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1682604   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1682605   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1682606   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1682607   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1682608   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1682609   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1682610   +END;
MPRINT(EM_DIAGRAM):   END;
1682611   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682612   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1682613   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1682614   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1682615   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1682616   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1682617   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1682618   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1682619   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1682620   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1682621   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1682622   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1682623   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1682624   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1682625   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1682626   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1682627   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1682628   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1682629   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1682630   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1682631   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1682632   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1682633   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1682634   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1682635   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1682636   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1682637   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1682638   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1682639   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1682640   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1682641   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1682642   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1682643   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1682644   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1682645   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1682646   +   ELSE S_NumCatalogPurchases
1682647   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1682648   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1682649   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1682650   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1682651   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1682652   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1682653   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1682654   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1682655   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1682656   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1682657   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1682658   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1682659   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1682660   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1682661   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1682662   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1682663   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1682664   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1682665   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1682666   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1682667   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1682668   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1682669   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1682670   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1682671   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1682672   +END;
MPRINT(EM_DIAGRAM):   END;
1682673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682674   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1682675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682677   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1682678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682680   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1682681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682683   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
1682684   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
1682685   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
1682686   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
1682687   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
1682688   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
1682689   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
1682690   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
1682691   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
1682692   +          +     0.76573417773216 * S_NumDealsPurchases
1682693   +          +     0.22648400529885 * S_NumDistPurchases
1682694   +          +     1.21720286527592 * S_NumStorePurchases
1682695   +          +     0.60948566229097 * S_NumWebPurchases
1682696   +          +    -2.18126452011089 * S_NumWebVisitsMonth
1682697   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
1682698   +        S_RMntFrq  +     2.00816730203973 * S_Recency
1682699   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
1682700   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
1682701   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
1682702   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
1682703   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
1682704   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
1682705   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
1682706   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
1682707   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
1682708   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
1682709   +          +    -1.52828428070828 * S_NumDealsPurchases
1682710   +          +    -0.01775178145113 * S_NumDistPurchases
1682711   +          +     1.11531198663491 * S_NumStorePurchases
1682712   +          +     1.79501098452904 * S_NumWebPurchases
1682713   +          +     -0.7392686013605 * S_NumWebVisitsMonth
1682714   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
1682715   +        S_RMntFrq  +     0.68917175969495 * S_Recency
1682716   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
1682717   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
1682718   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
1682719   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
1682720   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
1682721   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
1682722   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
1682723   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
1682724   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
1682725   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
1682726   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
1682727   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
1682728   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
1682729   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
1682730   +          +    -1.56926331102732 * Marital_StatusDivorced
1682731   +          +     2.38562782588323 * Marital_StatusMarried
1682732   +          +    -1.91012008029228 * Marital_StatusSingle
1682733   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
1682734   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
1682735   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
1682736   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
1682737   +          +     0.39329538853368 * Marital_StatusDivorced
1682738   +          +       0.055543492668 * Marital_StatusMarried
1682739   +          +    -0.36260663573441 * Marital_StatusSingle
1682740   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
1682741   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
1682742   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
1682743   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1682744   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1682745   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1682746   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1682747   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1682748   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1682749   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1682750   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1682751   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1682752   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1682753   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1682754   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1682755   +END;
MPRINT(EM_DIAGRAM):   END;
1682756   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682757   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1682758   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1682759   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1682760   +END;
MPRINT(EM_DIAGRAM):   END;
1682761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682762   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1682763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682765   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
1682766   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
1682767   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
1682768   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
1682769   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
1682770   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
1682771   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
1682772   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
1682773   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
1682774   +          +    -0.41717905931734 * S_NumDealsPurchases
1682775   +          +    -0.48750443671176 * S_NumDistPurchases
1682776   +          +      1.9775770151507 * S_NumStorePurchases
1682777   +          +    -0.43534422425416 * S_NumWebPurchases
1682778   +          +    -1.48049451059329 * S_NumWebVisitsMonth
1682779   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
1682780   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
1682781   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
1682782   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
1682783   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
1682784   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
1682785   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
1682786   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
1682787   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
1682788   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
1682789   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
1682790   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
1682791   +          +     0.76267091632012 * S_NumDealsPurchases
1682792   +          +     1.55118513069849 * S_NumDistPurchases
1682793   +          +       1.649962776028 * S_NumStorePurchases
1682794   +          +    -0.27453335733875 * S_NumWebPurchases
1682795   +          +     0.26599210649756 * S_NumWebVisitsMonth
1682796   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
1682797   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
1682798   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
1682799   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
1682800   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
1682801   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
1682802   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
1682803   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
1682804   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
1682805   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
1682806   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
1682807   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
1682808   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
1682809   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
1682810   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
1682811   +        EducationGraduation  +     0.24617525366101 * EducationMaster
1682812   +          +    -1.84502099308633 * Marital_StatusDivorced
1682813   +          +     0.16524535969204 * Marital_StatusMarried
1682814   +          +     0.01375012857393 * Marital_StatusSingle
1682815   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
1682816   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
1682817   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
1682818   +        EducationGraduation  +      0.6427794380992 * EducationMaster
1682819   +          +     0.18210930140238 * Marital_StatusDivorced
1682820   +          +    -1.49615662968181 * Marital_StatusMarried
1682821   +          +     1.61043484549536 * Marital_StatusSingle
1682822   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
1682823   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
1682824   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
1682825   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1682826   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1682827   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1682828   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1682829   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1682830   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1682831   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1682832   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1682833   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1682834   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1682835   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1682836   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1682837   +END;
MPRINT(EM_DIAGRAM):   END;
1682838   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682839   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1682840   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1682841   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1682842   +END;
MPRINT(EM_DIAGRAM):   END;
1682843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682844   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1682845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682846   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682847   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
1682848   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
1682849   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
1682850   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
1682851   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
1682852   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
1682853   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
1682854   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
1682855   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
1682856   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
1682857   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
1682858   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
1682859   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
1682860   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
1682861   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
1682862   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1682863   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1682864   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1682865   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1682866   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1682867   +END;
MPRINT(EM_DIAGRAM):   END;
1682868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682869   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1682870   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1682871   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1682872   +END;
MPRINT(EM_DIAGRAM):   END;
1682873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682874   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1682875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682876   +
1682877   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1682878   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1682879   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1682880   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1682881   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1682882   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1682883   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1682884   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1682885   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1682886   +end;
MPRINT(EM_DIAGRAM):   end;
1682887   +else do;
MPRINT(EM_DIAGRAM):   else do;
1682888   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1682889   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1682890   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1682891   +   end;
MPRINT(EM_DIAGRAM):   end;
1682892   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1682893   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1682894   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1682895   +   end;
MPRINT(EM_DIAGRAM):   end;
1682896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1682897   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1682898   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1682899   +   end;
MPRINT(EM_DIAGRAM):   end;
1682900   +end;
MPRINT(EM_DIAGRAM):   end;
1682901   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1682902   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
1682903   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
1682904   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
1682905   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1682906   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1682907   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1682908   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1682909   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1682910   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1682911   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1682912   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1682913   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1682914   +END;
MPRINT(EM_DIAGRAM):   END;
1682915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1682916   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1682917   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1682918   +END;
MPRINT(EM_DIAGRAM):   END;
1682919   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1682920   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1682921   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1682922   +END;
MPRINT(EM_DIAGRAM):   END;
1682923   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1682924   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1682925   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1682926   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1682927   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1682928   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1682929   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1682930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682931   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1682932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1682933   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1682934   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1682935   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1682936   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1682937   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1682938   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1682939   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1682940   +END;
MPRINT(EM_DIAGRAM):   END;
1682941   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1682942   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1682943   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1682944   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1682945   +* Renaming variables for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL8;
1682946   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682947   +* Renaming Posterior variables for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL8;
1682948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682949   +drop AUTONEURAL8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_P_DepVar1;
1682950   +AUTONEURAL8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_P_DepVar1 = P_DepVar1;
1682951   +drop AUTONEURAL8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_P_DepVar0;
1682952   +AUTONEURAL8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_P_DepVar0 = P_DepVar0;
1682953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682954   +* Renaming _WARN_ variable for AUTONEURAL8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL8;
1682955   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682956   +length AUTONEURAL8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL8_WARN_ $4;
1682957   +drop AUTONEURAL8_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL8_WARN_;
1682958   +AUTONEURAL8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL8_WARN_ = _WARN_;
1682959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682960   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1682961   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1682962   +* NODE: AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL7;
1682963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1682964   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1682965   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1682966   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1682967   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1682968   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1682969   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1682970   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1682971   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1682972   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1682973   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1682974   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1682975   +LENGTH _WARN_ $4
1682976   +      F_DepVar  $ 12
1682977   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1682978   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1682979   +
1682980   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1682981   +
1682982   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1682983   +
1682984   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1682985   +
1682986   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1682987   +
1682988   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1682989   +
1682990   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1682991   +
1682992   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1682993   +
1682994   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1682995   +
1682996   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1682997   +
1682998   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1682999   +
1683000   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1683001   +
1683002   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1683003   +
1683004   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1683005   +
1683006   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1683007   +
1683008   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1683009   +
1683010   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1683011   +
1683012   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1683013   +
1683014   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1683015   +
1683016   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1683017   +
1683018   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1683019   +
1683020   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1683021   +
1683022   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1683023   +
1683024   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1683025   +
1683026   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1683027   +
1683028   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1683029   +
1683030   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1683031   +
1683032   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1683033   +
1683034   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1683035   +
1683036   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1683037   +
1683038   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1683039   +
1683040   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1683041   +
1683042   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1683043   +
1683044   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1683045   +
1683046   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1683047   +
1683048   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1683049   +
1683050   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1683051   +
1683052   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1683053   +
1683054   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1683055   +
1683056   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1683057   +
1683058   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1683059   +
1683060   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1683061   +
1683062   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1683063   +
1683064   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1683065   +
1683066   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1683067   +
1683068   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1683069   +
1683070   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1683071   +
1683072   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1683073   +
1683074   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1683075   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1683076   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1683077   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1683078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683080   +end;
MPRINT(EM_DIAGRAM):   end;
1683081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683083   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1683084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683086   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1683087   +   end;
MPRINT(EM_DIAGRAM):   end;
1683088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683089   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1683090   +   end;
MPRINT(EM_DIAGRAM):   end;
1683091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683092   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1683093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683095   +   end;
MPRINT(EM_DIAGRAM):   end;
1683096   +end;
MPRINT(EM_DIAGRAM):   end;
1683097   +
1683098   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1683099   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1683100   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1683101   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1683102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683104   +end;
MPRINT(EM_DIAGRAM):   end;
1683105   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683107   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1683108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683110   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1683111   +   end;
MPRINT(EM_DIAGRAM):   end;
1683112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683113   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1683114   +   end;
MPRINT(EM_DIAGRAM):   end;
1683115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683116   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1683117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683119   +   end;
MPRINT(EM_DIAGRAM):   end;
1683120   +end;
MPRINT(EM_DIAGRAM):   end;
1683121   +
1683122   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1683123   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1683124   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1683125   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1683126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683128   +end;
MPRINT(EM_DIAGRAM):   end;
1683129   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683131   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1683132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683134   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1683135   +   end;
MPRINT(EM_DIAGRAM):   end;
1683136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683137   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1683138   +   end;
MPRINT(EM_DIAGRAM):   end;
1683139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683140   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1683141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683143   +   end;
MPRINT(EM_DIAGRAM):   end;
1683144   +end;
MPRINT(EM_DIAGRAM):   end;
1683145   +
1683146   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1683147   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1683148   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1683149   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1683150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683152   +end;
MPRINT(EM_DIAGRAM):   end;
1683153   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683155   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1683156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683158   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1683159   +   end;
MPRINT(EM_DIAGRAM):   end;
1683160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683161   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1683162   +   end;
MPRINT(EM_DIAGRAM):   end;
1683163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683164   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1683165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683167   +   end;
MPRINT(EM_DIAGRAM):   end;
1683168   +end;
MPRINT(EM_DIAGRAM):   end;
1683169   +
1683170   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1683171   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1683172   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1683173   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1683174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683176   +end;
MPRINT(EM_DIAGRAM):   end;
1683177   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683179   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1683180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683181   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683182   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1683183   +   end;
MPRINT(EM_DIAGRAM):   end;
1683184   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683185   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1683186   +   end;
MPRINT(EM_DIAGRAM):   end;
1683187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683188   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1683189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683191   +   end;
MPRINT(EM_DIAGRAM):   end;
1683192   +end;
MPRINT(EM_DIAGRAM):   end;
1683193   +
1683194   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1683195   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1683196   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1683197   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1683198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683200   +end;
MPRINT(EM_DIAGRAM):   end;
1683201   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683203   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1683204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683205   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683206   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1683207   +   end;
MPRINT(EM_DIAGRAM):   end;
1683208   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683209   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1683210   +   end;
MPRINT(EM_DIAGRAM):   end;
1683211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683212   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1683213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683215   +   end;
MPRINT(EM_DIAGRAM):   end;
1683216   +end;
MPRINT(EM_DIAGRAM):   end;
1683217   +
1683218   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1683219   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1683220   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1683221   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1683222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683224   +end;
MPRINT(EM_DIAGRAM):   end;
1683225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683226   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683227   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1683228   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683229   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1683230   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1683231   +   end;
MPRINT(EM_DIAGRAM):   end;
1683232   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1683233   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1683234   +   end;
MPRINT(EM_DIAGRAM):   end;
1683235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683236   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1683237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683239   +   end;
MPRINT(EM_DIAGRAM):   end;
1683240   +end;
MPRINT(EM_DIAGRAM):   end;
1683241   +
1683242   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1683243   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1683244   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1683245   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1683246   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1683247   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1683248   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1683249   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1683250   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1683251   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1683252   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1683253   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1683254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683256   +end;
MPRINT(EM_DIAGRAM):   end;
1683257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683258   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1683259   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1683260   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683261   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1683262   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1683263   +   end;
MPRINT(EM_DIAGRAM):   end;
1683264   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1683265   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1683266   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1683267   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1683268   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1683269   +   end;
MPRINT(EM_DIAGRAM):   end;
1683270   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1683271   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1683272   +   end;
MPRINT(EM_DIAGRAM):   end;
1683273   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1683274   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1683275   +   end;
MPRINT(EM_DIAGRAM):   end;
1683276   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1683277   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1683278   +   end;
MPRINT(EM_DIAGRAM):   end;
1683279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683280   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1683281   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1683282   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1683283   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1683284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683286   +   end;
MPRINT(EM_DIAGRAM):   end;
1683287   +end;
MPRINT(EM_DIAGRAM):   end;
1683288   +
1683289   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1683290   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1683291   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1683292   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1683293   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1683294   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1683295   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1683296   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1683297   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1683298   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1683299   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1683300   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1683301   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1683302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683304   +end;
MPRINT(EM_DIAGRAM):   end;
1683305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683306   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1683307   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1683308   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683309   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1683310   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1683311   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1683312   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1683313   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1683314   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1683315   +         end;
MPRINT(EM_DIAGRAM):   end;
1683316   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1683317   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1683318   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1683319   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1683320   +            end;
MPRINT(EM_DIAGRAM):   end;
1683321   +         end;
MPRINT(EM_DIAGRAM):   end;
1683322   +      end;
MPRINT(EM_DIAGRAM):   end;
1683323   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1683324   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1683325   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1683326   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1683327   +         end;
MPRINT(EM_DIAGRAM):   end;
1683328   +      end;
MPRINT(EM_DIAGRAM):   end;
1683329   +   end;
MPRINT(EM_DIAGRAM):   end;
1683330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683331   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1683332   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1683333   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1683334   +      end;
MPRINT(EM_DIAGRAM):   end;
1683335   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1683336   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1683337   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1683338   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1683339   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1683340   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1683341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1683342   +         end;
MPRINT(EM_DIAGRAM):   end;
1683343   +      end;
MPRINT(EM_DIAGRAM):   end;
1683344   +   end;
MPRINT(EM_DIAGRAM):   end;
1683345   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1683346   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1683347   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1683348   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1683349   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1683350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683352   +   end;
MPRINT(EM_DIAGRAM):   end;
1683353   +end;
MPRINT(EM_DIAGRAM):   end;
1683354   +
1683355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683356   +*** Checking missing input Interval
1683357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1683358   +
1683359   +IF NMISS(
1683360   +   AcceptedCmpTotal ,
1683361   +   Age ,
1683362   +   Frq ,
1683363   +   Income ,
1683364   +   Kidhome ,
1683365   +   Mnt ,
1683366   +   MntFishProducts ,
1683367   +   MntFruits ,
1683368   +   MntGoldProds ,
1683369   +   MntMeatProducts ,
1683370   +   MntSweetProducts ,
1683371   +   MntWines ,
1683372   +   MonthsAsCustomer ,
1683373   +   NumCatalogPurchases ,
1683374   +   NumDealsPurchases ,
1683375   +   NumDistPurchases ,
1683376   +   NumStorePurchases ,
1683377   +   NumWebPurchases ,
1683378   +   NumWebVisitsMonth ,
1683379   +   RFMstat ,
1683380   +   RMntFrq ,
1683381   +   Recency ,
1683382   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1683383   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1683384   +
1683385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683386   +END;
MPRINT(EM_DIAGRAM):   END;
1683387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683388   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1683389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1683391   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1683392   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1683393   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1683394   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1683395   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1683396   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1683397   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1683398   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1683399   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1683400   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1683401   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1683402   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1683403   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1683404   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1683405   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1683406   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1683407   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1683408   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1683409   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1683410   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1683411   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1683412   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1683413   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1683414   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1683415   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1683416   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1683417   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1683418   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1683419   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1683420   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1683421   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1683422   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1683423   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1683424   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1683425   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1683426   +END;
MPRINT(EM_DIAGRAM):   END;
1683427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1683428   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1683429   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1683430   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1683431   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1683432   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1683433   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1683434   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1683435   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1683436   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1683437   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1683438   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1683439   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1683440   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1683441   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1683442   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1683443   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1683444   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1683445   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1683446   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1683447   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1683448   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1683449   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1683450   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1683451   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1683452   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1683453   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1683454   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1683455   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1683456   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1683457   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1683458   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1683459   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1683460   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1683461   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1683462   +   ELSE S_NumCatalogPurchases
1683463   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1683464   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1683465   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1683466   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1683467   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1683468   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1683469   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1683470   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1683471   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1683472   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1683473   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1683474   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1683475   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1683476   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1683477   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1683478   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1683479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1683480   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1683481   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1683482   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1683483   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1683484   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1683485   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1683486   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1683487   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1683488   +END;
MPRINT(EM_DIAGRAM):   END;
1683489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683490   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1683491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683493   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1683494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683496   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1683497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1683499   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1683500   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1683501   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1683502   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1683503   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1683504   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1683505   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1683506   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1683507   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1683508   +          +     0.09708841024031 * S_NumDealsPurchases
1683509   +          +    -0.29075561032014 * S_NumDistPurchases
1683510   +          +    -0.14495394259873 * S_NumStorePurchases
1683511   +          +     0.11890705145732 * S_NumWebPurchases
1683512   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1683513   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1683514   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1683515   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1683516   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1683517   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1683518   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1683519   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1683520   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1683521   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1683522   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1683523   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1683524   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1683525   +          +     0.16274478997892 * S_NumDealsPurchases
1683526   +          +     0.03966958784582 * S_NumDistPurchases
1683527   +          +    -0.04714110726598 * S_NumStorePurchases
1683528   +          +    -0.02124229528082 * S_NumWebPurchases
1683529   +          +     0.29753299776832 * S_NumWebVisitsMonth
1683530   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1683531   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1683532   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1683533   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1683534   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1683535   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1683536   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1683537   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1683538   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1683539   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1683540   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1683541   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1683542   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1683543   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1683544   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1683545   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1683546   +          +    -0.05037639679806 * Marital_StatusDivorced
1683547   +          +     0.28781968727878 * Marital_StatusMarried
1683548   +          +    -0.20382417074384 * Marital_StatusSingle
1683549   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1683550   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1683551   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1683552   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1683553   +          +     0.06970969219123 * Marital_StatusDivorced
1683554   +          +    -0.15787475744986 * Marital_StatusMarried
1683555   +          +     0.14345344072192 * Marital_StatusSingle
1683556   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1683557   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1683558   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1683559   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1683560   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1683561   +END;
MPRINT(EM_DIAGRAM):   END;
1683562   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1683563   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1683564   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1683565   +END;
MPRINT(EM_DIAGRAM):   END;
1683566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683567   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1683568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683569   +
1683570   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1683571   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1683572   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1683573   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1683574   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1683575   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683576   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1683577   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1683578   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1683579   +end;
MPRINT(EM_DIAGRAM):   end;
1683580   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683581   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1683582   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1683583   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1683584   +   end;
MPRINT(EM_DIAGRAM):   end;
1683585   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1683586   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1683587   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1683588   +   end;
MPRINT(EM_DIAGRAM):   end;
1683589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683590   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1683591   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1683592   +   end;
MPRINT(EM_DIAGRAM):   end;
1683593   +end;
MPRINT(EM_DIAGRAM):   end;
1683594   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1683595   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1683596   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1683597   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1683598   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1683599   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1683600   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1683601   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1683602   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1683603   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1683604   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1683605   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1683606   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1683607   +END;
MPRINT(EM_DIAGRAM):   END;
1683608   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1683609   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1683610   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1683611   +END;
MPRINT(EM_DIAGRAM):   END;
1683612   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1683613   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1683614   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1683615   +END;
MPRINT(EM_DIAGRAM):   END;
1683616   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1683617   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1683618   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1683619   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1683620   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1683621   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1683622   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1683623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683624   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1683625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1683626   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1683627   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1683628   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1683629   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1683630   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1683631   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1683632   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1683633   +END;
MPRINT(EM_DIAGRAM):   END;
1683634   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1683635   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1683636   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1683637   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1683638   +* Renaming variables for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL7;
1683639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683640   +* Renaming Posterior variables for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL7;
1683641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683642   +drop AUTONEURAL7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_P_DepVar1;
1683643   +AUTONEURAL7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_P_DepVar1 = P_DepVar1;
1683644   +drop AUTONEURAL7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_P_DepVar0;
1683645   +AUTONEURAL7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_P_DepVar0 = P_DepVar0;
1683646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683647   +* Renaming _WARN_ variable for AUTONEURAL7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL7;
1683648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683649   +length AUTONEURAL7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL7_WARN_ $4;
1683650   +drop AUTONEURAL7_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL7_WARN_;
1683651   +AUTONEURAL7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL7_WARN_ = _WARN_;
1683652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683653   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1683654   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1683655   +* NODE: AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * NODE: AUTONEURAL6;
1683656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1683657   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1683658   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1683659   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1683660   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1683661   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1683662   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1683663   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1683664   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1683665   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1683666   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1683667   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1683668   +LENGTH _WARN_ $4
1683669   +      F_DepVar  $ 12
1683670   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1683671   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1683672   +
1683673   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1683674   +
1683675   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1683676   +
1683677   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1683678   +
1683679   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1683680   +
1683681   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1683682   +
1683683   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1683684   +
1683685   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1683686   +
1683687   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1683688   +
1683689   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1683690   +
1683691   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1683692   +
1683693   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1683694   +
1683695   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1683696   +
1683697   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1683698   +
1683699   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1683700   +
1683701   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1683702   +
1683703   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1683704   +
1683705   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1683706   +
1683707   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1683708   +
1683709   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1683710   +
1683711   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1683712   +
1683713   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1683714   +
1683715   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1683716   +
1683717   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1683718   +
1683719   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1683720   +
1683721   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1683722   +
1683723   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1683724   +
1683725   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1683726   +
1683727   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1683728   +
1683729   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1683730   +
1683731   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1683732   +
1683733   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1683734   +
1683735   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1683736   +
1683737   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1683738   +
1683739   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1683740   +
1683741   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1683742   +
1683743   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1683744   +
1683745   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1683746   +
1683747   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1683748   +
1683749   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1683750   +
1683751   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1683752   +
1683753   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1683754   +
1683755   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1683756   +
1683757   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1683758   +
1683759   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1683760   +
1683761   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1683762   +
1683763   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1683764   +
1683765   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1683766   +
1683767   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1683768   +
1683769   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1683770   +
1683771   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1683772   +
1683773   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1683774   +
1683775   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1683776   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1683777   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1683778   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1683779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683781   +end;
MPRINT(EM_DIAGRAM):   end;
1683782   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683784   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1683785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683786   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683787   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1683788   +   end;
MPRINT(EM_DIAGRAM):   end;
1683789   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683790   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1683791   +   end;
MPRINT(EM_DIAGRAM):   end;
1683792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683793   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1683794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683796   +   end;
MPRINT(EM_DIAGRAM):   end;
1683797   +end;
MPRINT(EM_DIAGRAM):   end;
1683798   +
1683799   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1683800   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1683801   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1683802   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1683803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683805   +end;
MPRINT(EM_DIAGRAM):   end;
1683806   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683808   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1683809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683810   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683811   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1683812   +   end;
MPRINT(EM_DIAGRAM):   end;
1683813   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683814   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1683815   +   end;
MPRINT(EM_DIAGRAM):   end;
1683816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683817   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1683818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683820   +   end;
MPRINT(EM_DIAGRAM):   end;
1683821   +end;
MPRINT(EM_DIAGRAM):   end;
1683822   +
1683823   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1683824   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1683825   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1683826   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1683827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683829   +end;
MPRINT(EM_DIAGRAM):   end;
1683830   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683831   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683832   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1683833   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683834   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683835   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1683836   +   end;
MPRINT(EM_DIAGRAM):   end;
1683837   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683838   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1683839   +   end;
MPRINT(EM_DIAGRAM):   end;
1683840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683841   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1683842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683844   +   end;
MPRINT(EM_DIAGRAM):   end;
1683845   +end;
MPRINT(EM_DIAGRAM):   end;
1683846   +
1683847   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1683848   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1683849   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1683850   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1683851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683853   +end;
MPRINT(EM_DIAGRAM):   end;
1683854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683856   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1683857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683858   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683859   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1683860   +   end;
MPRINT(EM_DIAGRAM):   end;
1683861   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683862   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1683863   +   end;
MPRINT(EM_DIAGRAM):   end;
1683864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683865   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1683866   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683867   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683868   +   end;
MPRINT(EM_DIAGRAM):   end;
1683869   +end;
MPRINT(EM_DIAGRAM):   end;
1683870   +
1683871   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1683872   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1683873   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1683874   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1683875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683877   +end;
MPRINT(EM_DIAGRAM):   end;
1683878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683879   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683880   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1683881   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683882   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683883   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1683884   +   end;
MPRINT(EM_DIAGRAM):   end;
1683885   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683886   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1683887   +   end;
MPRINT(EM_DIAGRAM):   end;
1683888   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683889   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1683890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683892   +   end;
MPRINT(EM_DIAGRAM):   end;
1683893   +end;
MPRINT(EM_DIAGRAM):   end;
1683894   +
1683895   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1683896   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1683897   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1683898   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1683899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683901   +end;
MPRINT(EM_DIAGRAM):   end;
1683902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683903   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683904   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1683905   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683906   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1683907   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1683908   +   end;
MPRINT(EM_DIAGRAM):   end;
1683909   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1683910   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1683911   +   end;
MPRINT(EM_DIAGRAM):   end;
1683912   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683913   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1683914   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683915   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683916   +   end;
MPRINT(EM_DIAGRAM):   end;
1683917   +end;
MPRINT(EM_DIAGRAM):   end;
1683918   +
1683919   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1683920   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1683921   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1683922   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1683923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683925   +end;
MPRINT(EM_DIAGRAM):   end;
1683926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683927   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1683928   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1683929   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683930   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1683931   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1683932   +   end;
MPRINT(EM_DIAGRAM):   end;
1683933   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1683934   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1683935   +   end;
MPRINT(EM_DIAGRAM):   end;
1683936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683937   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1683938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683940   +   end;
MPRINT(EM_DIAGRAM):   end;
1683941   +end;
MPRINT(EM_DIAGRAM):   end;
1683942   +
1683943   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1683944   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1683945   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1683946   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1683947   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1683948   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1683949   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1683950   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1683951   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1683952   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1683953   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1683954   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1683955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1683956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683957   +end;
MPRINT(EM_DIAGRAM):   end;
1683958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1683959   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1683960   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1683961   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1683962   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1683963   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1683964   +   end;
MPRINT(EM_DIAGRAM):   end;
1683965   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1683966   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1683967   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1683968   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1683969   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1683970   +   end;
MPRINT(EM_DIAGRAM):   end;
1683971   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1683972   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1683973   +   end;
MPRINT(EM_DIAGRAM):   end;
1683974   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1683975   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1683976   +   end;
MPRINT(EM_DIAGRAM):   end;
1683977   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1683978   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1683979   +   end;
MPRINT(EM_DIAGRAM):   end;
1683980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1683981   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1683982   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1683983   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1683984   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1683985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1683986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1683987   +   end;
MPRINT(EM_DIAGRAM):   end;
1683988   +end;
MPRINT(EM_DIAGRAM):   end;
1683989   +
1683990   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1683991   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1683992   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1683993   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1683994   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1683995   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1683996   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1683997   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1683998   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1683999   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1684000   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1684001   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1684002   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1684003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684005   +end;
MPRINT(EM_DIAGRAM):   end;
1684006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684007   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1684008   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1684009   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684010   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1684011   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1684012   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1684013   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1684014   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1684015   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1684016   +         end;
MPRINT(EM_DIAGRAM):   end;
1684017   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1684018   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1684019   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1684020   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1684021   +            end;
MPRINT(EM_DIAGRAM):   end;
1684022   +         end;
MPRINT(EM_DIAGRAM):   end;
1684023   +      end;
MPRINT(EM_DIAGRAM):   end;
1684024   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1684025   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1684026   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1684027   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1684028   +         end;
MPRINT(EM_DIAGRAM):   end;
1684029   +      end;
MPRINT(EM_DIAGRAM):   end;
1684030   +   end;
MPRINT(EM_DIAGRAM):   end;
1684031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684032   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1684033   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1684034   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1684035   +      end;
MPRINT(EM_DIAGRAM):   end;
1684036   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1684037   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1684038   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1684039   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1684040   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1684041   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1684042   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1684043   +         end;
MPRINT(EM_DIAGRAM):   end;
1684044   +      end;
MPRINT(EM_DIAGRAM):   end;
1684045   +   end;
MPRINT(EM_DIAGRAM):   end;
1684046   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1684047   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1684048   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1684049   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1684050   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1684051   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684052   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684053   +   end;
MPRINT(EM_DIAGRAM):   end;
1684054   +end;
MPRINT(EM_DIAGRAM):   end;
1684055   +
1684056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684057   +*** Checking missing input Interval
1684058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1684059   +
1684060   +IF NMISS(
1684061   +   AcceptedCmpTotal ,
1684062   +   Age ,
1684063   +   Frq ,
1684064   +   Income ,
1684065   +   Kidhome ,
1684066   +   Mnt ,
1684067   +   MntFishProducts ,
1684068   +   MntFruits ,
1684069   +   MntGoldProds ,
1684070   +   MntMeatProducts ,
1684071   +   MntSweetProducts ,
1684072   +   MntWines ,
1684073   +   MonthsAsCustomer ,
1684074   +   NumCatalogPurchases ,
1684075   +   NumDealsPurchases ,
1684076   +   NumDistPurchases ,
1684077   +   NumStorePurchases ,
1684078   +   NumWebPurchases ,
1684079   +   NumWebVisitsMonth ,
1684080   +   RFMstat ,
1684081   +   RMntFrq ,
1684082   +   Recency ,
1684083   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1684084   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1684085   +
1684086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684087   +END;
MPRINT(EM_DIAGRAM):   END;
1684088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684089   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1684090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684091   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684092   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1684093   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1684094   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1684095   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1684096   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1684097   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1684098   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1684099   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1684100   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1684101   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1684102   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1684103   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1684104   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1684105   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1684106   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1684107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1684108   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1684109   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1684110   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1684111   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1684112   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1684113   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1684114   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1684115   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1684116   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1684117   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1684118   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1684119   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1684120   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1684121   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1684122   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1684123   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1684124   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1684125   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1684126   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1684127   +END;
MPRINT(EM_DIAGRAM):   END;
1684128   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684129   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1684130   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1684131   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1684132   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1684133   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1684134   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1684135   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1684136   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1684137   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1684138   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1684139   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1684140   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1684141   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1684142   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1684143   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1684144   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1684145   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1684146   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1684147   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1684148   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1684149   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1684150   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1684151   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1684152   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1684153   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1684154   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1684155   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1684156   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1684157   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1684158   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1684159   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1684160   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1684161   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1684162   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1684163   +   ELSE S_NumCatalogPurchases
1684164   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1684165   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1684166   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1684167   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1684168   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1684169   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1684170   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1684171   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1684172   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1684173   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1684174   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1684175   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1684176   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1684177   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1684178   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1684179   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1684180   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1684181   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1684182   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1684183   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1684184   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1684185   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1684186   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1684187   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1684188   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1684189   +END;
MPRINT(EM_DIAGRAM):   END;
1684190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684191   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1684192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684194   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1684195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684197   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1684198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684199   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684200   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
1684201   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
1684202   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
1684203   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
1684204   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
1684205   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
1684206   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
1684207   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
1684208   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
1684209   +          +     -0.4295354470932 * S_NumDealsPurchases
1684210   +          +    -0.08226280459837 * S_NumDistPurchases
1684211   +          +      0.2932815275833 * S_NumStorePurchases
1684212   +          +     0.19049189042599 * S_NumWebPurchases
1684213   +          +    -0.98799339280673 * S_NumWebVisitsMonth
1684214   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
1684215   +        S_RMntFrq  +     1.04348870032296 * S_Recency
1684216   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
1684217   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
1684218   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
1684219   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
1684220   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
1684221   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
1684222   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
1684223   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
1684224   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
1684225   +          +    -0.78551174413278 * Marital_StatusDivorced
1684226   +          +     1.14162836709205 * Marital_StatusMarried
1684227   +          +    -0.85471695548675 * Marital_StatusSingle
1684228   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
1684229   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
1684230   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1684231   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1684232   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1684233   +END;
MPRINT(EM_DIAGRAM):   END;
1684234   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684235   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1684236   +END;
MPRINT(EM_DIAGRAM):   END;
1684237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684238   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1684239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684240   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684241   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
1684242   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
1684243   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
1684244   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
1684245   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
1684246   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
1684247   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
1684248   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
1684249   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
1684250   +          +      0.1710743409836 * S_NumDealsPurchases
1684251   +          +     1.10019178495427 * S_NumDistPurchases
1684252   +          +     0.06701301620472 * S_NumStorePurchases
1684253   +          +    -1.47240374003368 * S_NumWebPurchases
1684254   +          +     0.38443387640949 * S_NumWebVisitsMonth
1684255   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
1684256   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
1684257   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
1684258   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
1684259   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
1684260   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
1684261   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
1684262   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
1684263   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
1684264   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
1684265   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
1684266   +          +    -0.36835980184757 * Marital_StatusDivorced
1684267   +          +     0.71718933679692 * Marital_StatusMarried
1684268   +          +    -0.35767236657055 * Marital_StatusSingle
1684269   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
1684270   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
1684271   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1684272   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1684273   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1684274   +END;
MPRINT(EM_DIAGRAM):   END;
1684275   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684276   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1684277   +END;
MPRINT(EM_DIAGRAM):   END;
1684278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684279   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1684280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684281   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684282   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
1684283   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
1684284   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
1684285   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
1684286   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
1684287   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
1684288   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
1684289   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
1684290   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
1684291   +          +    -1.99858075809796 * S_NumDealsPurchases
1684292   +          +    -0.37353682448701 * S_NumDistPurchases
1684293   +          +     1.16275863071649 * S_NumStorePurchases
1684294   +          +       -0.75936809253 * S_NumWebPurchases
1684295   +          +     2.17936226306026 * S_NumWebVisitsMonth
1684296   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
1684297   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
1684298   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
1684299   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
1684300   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
1684301   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
1684302   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
1684303   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
1684304   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
1684305   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
1684306   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
1684307   +          +     0.60036315441483 * Marital_StatusDivorced
1684308   +          +    -0.94084946353672 * Marital_StatusMarried
1684309   +          +     0.34594388147374 * Marital_StatusSingle
1684310   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
1684311   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
1684312   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1684313   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1684314   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1684315   +END;
MPRINT(EM_DIAGRAM):   END;
1684316   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684317   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1684318   +END;
MPRINT(EM_DIAGRAM):   END;
1684319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684320   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1684321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684322   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684323   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
1684324   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
1684325   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
1684326   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
1684327   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1684328   +END;
MPRINT(EM_DIAGRAM):   END;
1684329   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684330   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1684331   +END;
MPRINT(EM_DIAGRAM):   END;
1684332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684333   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1684334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684336   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
1684337   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
1684338   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
1684339   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
1684340   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1684341   +END;
MPRINT(EM_DIAGRAM):   END;
1684342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684343   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1684344   +END;
MPRINT(EM_DIAGRAM):   END;
1684345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684346   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1684347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684348   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684349   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
1684350   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
1684351   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
1684352   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1684353   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1684354   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1684355   +END;
MPRINT(EM_DIAGRAM):   END;
1684356   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684357   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1684358   +END;
MPRINT(EM_DIAGRAM):   END;
1684359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684360   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1684361   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684362   +
1684363   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1684364   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1684365   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1684366   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1684367   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1684368   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684369   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1684370   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1684371   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1684372   +end;
MPRINT(EM_DIAGRAM):   end;
1684373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684374   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1684375   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1684376   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1684377   +   end;
MPRINT(EM_DIAGRAM):   end;
1684378   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1684379   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1684380   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1684381   +   end;
MPRINT(EM_DIAGRAM):   end;
1684382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684383   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1684384   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1684385   +   end;
MPRINT(EM_DIAGRAM):   end;
1684386   +end;
MPRINT(EM_DIAGRAM):   end;
1684387   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1684388   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
1684389   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
1684390   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1684391   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1684392   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1684393   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1684394   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1684395   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1684396   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1684397   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1684398   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1684399   +END;
MPRINT(EM_DIAGRAM):   END;
1684400   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1684401   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1684402   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1684403   +END;
MPRINT(EM_DIAGRAM):   END;
1684404   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1684405   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1684406   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1684407   +END;
MPRINT(EM_DIAGRAM):   END;
1684408   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1684409   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1684410   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1684411   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1684412   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1684413   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1684414   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1684415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684416   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1684417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1684418   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1684419   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1684420   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1684421   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1684422   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1684423   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1684424   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1684425   +END;
MPRINT(EM_DIAGRAM):   END;
1684426   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1684427   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1684428   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1684429   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1684430   +* Renaming variables for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AUTONEURAL6;
1684431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684432   +* Renaming Posterior variables for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AUTONEURAL6;
1684433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684434   +drop AUTONEURAL6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_P_DepVar1;
1684435   +AUTONEURAL6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_P_DepVar1 = P_DepVar1;
1684436   +drop AUTONEURAL6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_P_DepVar0;
1684437   +AUTONEURAL6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_P_DepVar0 = P_DepVar0;
1684438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684439   +* Renaming _WARN_ variable for AUTONEURAL6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AUTONEURAL6;
1684440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684441   +length AUTONEURAL6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AUTONEURAL6_WARN_ $4;
1684442   +drop AUTONEURAL6_WARN_;
MPRINT(EM_DIAGRAM):   drop AUTONEURAL6_WARN_;
1684443   +AUTONEURAL6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AUTONEURAL6_WARN_ = _WARN_;
1684444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684445   +* TOOL: Ensemble;
MPRINT(EM_DIAGRAM):   * TOOL: Ensemble;
1684446   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1684447   +* NODE: Ensmbl36;
MPRINT(EM_DIAGRAM):   * NODE: Ensmbl36;
1684448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684450   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
1684451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684452   +P_DepVar1 = (
1684453   +AutoNeural6_P_DepVar1 +
1684454   +AutoNeural7_P_DepVar1 +
1684455   +AutoNeural8_P_DepVar1 +
1684456   +AutoNeural10_P_DepVar1 +
1684457   +AutoNeural9_P_DepVar1 +
1684458   +AutoNeural11_P_DepVar1 +
1684459   +AutoNeural12_P_DepVar1
1684460   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
1684461   +P_DepVar0 = (
1684462   +AutoNeural6_P_DepVar0 +
1684463   +AutoNeural7_P_DepVar0 +
1684464   +AutoNeural8_P_DepVar0 +
1684465   +AutoNeural10_P_DepVar0 +
1684466   +AutoNeural9_P_DepVar0 +
1684467   +AutoNeural11_P_DepVar0 +
1684468   +AutoNeural12_P_DepVar0
1684469   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
1684470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684471   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
1684472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684473   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1684474   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1684475   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1684476   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1684477   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1684478   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1684479   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1684480   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1684481   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1684482   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1684483   +end;
MPRINT(EM_DIAGRAM):   end;
1684484   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1684485   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1684486   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1684487   +end;
MPRINT(EM_DIAGRAM):   end;
1684488   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1684489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684490   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
1684491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684492   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1684493   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1684494   +else
1684495   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1684496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684497   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
1684498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684499   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1684500   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1684501   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1684502   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684502  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684503   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684503  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684504   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684504  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684505   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684505  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684506   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684506  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684507   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684507  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684508   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684508  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684509   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684509  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684510   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684510  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684511   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684511  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684512   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684512  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684513   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684513  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684514   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684514  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684515   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684515  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684516   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684516  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684517   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684517  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684518   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684518  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684519   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684519  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684520   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684520  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684521   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684521  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684522   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684522  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684523   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684523  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684524   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684524  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684525   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684525  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684526   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684526  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684527   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684527  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684528   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684528  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684529   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684529  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684531   +* Ensmbl36: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Residual Vars;
1684532   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684533   +if
1684534   +F_DepVar NE '1'
1684535   +AND F_DepVar NE '0'
1684536   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1684537   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1684538   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1684539   +end;
MPRINT(EM_DIAGRAM):   end;
1684540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684541   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1684542   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1684543   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1684544   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1684545   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1684546   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1684547   +END;
MPRINT(EM_DIAGRAM):   END;
1684548   +END;
MPRINT(EM_DIAGRAM):   END;
1684549   +* Renaming variables for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Ensmbl36;
1684550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684551   +* Renaming Posterior variables for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Ensmbl36;
1684552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684553   +drop Ensmbl36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_P_DepVar1;
1684554   +Ensmbl36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Ensmbl36_P_DepVar1 = P_DepVar1;
1684555   +drop Ensmbl36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_P_DepVar0;
1684556   +Ensmbl36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Ensmbl36_P_DepVar0 = P_DepVar0;
1684557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684558   +* Renaming _WARN_ variable for Ensmbl36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Ensmbl36;
1684559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684560   +length Ensmbl36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Ensmbl36_WARN_ $4;
1684561   +drop Ensmbl36_WARN_;
MPRINT(EM_DIAGRAM):   drop Ensmbl36_WARN_;
1684562   +Ensmbl36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Ensmbl36_WARN_ = _WARN_;
1684563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684564   +* Ensmbl42: Average Posteriors of 4 models;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Average Posteriors of 4 models;
1684565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684566   +P_DepVar1 = (
1684567   +AutoNeural12_P_DepVar1 +
1684568   +AutoNeural11_P_DepVar1 +
1684569   +AutoNeural9_P_DepVar1 +
1684570   +Ensmbl36_P_DepVar1
1684571   +)/4;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural12_P_DepVar1 + AutoNeural11_P_DepVar1 +
AutoNeural9_P_DepVar1 + Ensmbl36_P_DepVar1 )/4;
1684572   +P_DepVar0 = (
1684573   +AutoNeural12_P_DepVar0 +
1684574   +AutoNeural11_P_DepVar0 +
1684575   +AutoNeural9_P_DepVar0 +
1684576   +Ensmbl36_P_DepVar0
1684577   +)/4;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural12_P_DepVar0 + AutoNeural11_P_DepVar0 +
AutoNeural9_P_DepVar0 + Ensmbl36_P_DepVar0 )/4;
1684578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684579   +* Ensmbl42: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Classification Vars;
1684580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684581   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1684582   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1684583   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1684584   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1684585   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1684586   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1684587   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1684588   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1684589   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1684590   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1684591   +end;
MPRINT(EM_DIAGRAM):   end;
1684592   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1684593   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1684594   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1684595   +end;
MPRINT(EM_DIAGRAM):   end;
1684596   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1684597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684598   +* Ensmbl42: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Producing Unformatted variable;
1684599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684600   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1684601   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1684602   +else
1684603   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1684604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684605   +* Ensmbl42: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing _WARN_ Variable;
1684606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684607   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1684608   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1684609   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1684610   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684610  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684611   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684611  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684612   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684612  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684613   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684613  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684614   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684614  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684615   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684615  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684616   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684616  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684617   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684617  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684618   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1684618  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684619   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1684619  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684620   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1684620  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684621   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1684621  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684622   +if index(ENSMBL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1684622  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1684623   +if index(ENSMBL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1684623  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1684624   +if index(ENSMBL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1684624  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1684625   +if index(ENSMBL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1684625  !+;
MPRINT(EM_DIAGRAM):   if index(ENSMBL36_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1684626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684627   +* Ensmbl42: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing Residual Vars;
1684628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1684629   +if
1684630   +F_DepVar NE '1'
1684631   +AND F_DepVar NE '0'
1684632   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1684633   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1684634   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1684635   +end;
MPRINT(EM_DIAGRAM):   end;
1684636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684637   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1684638   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1684639   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1684640   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1684641   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1684642   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1684643   +END;
MPRINT(EM_DIAGRAM):   END;
1684644   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1684645    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL42_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL12_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1684646    quit;
1684647    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl42_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl42_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl42_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1684707    filename _pref
1684707  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
1684708    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1684709    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
1684710   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1684711   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1684712   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1684713   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1684714   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1684715   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1684716   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1684717   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1684718   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1684719   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1684720   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1684721   +LENGTH _WARN_ $4
1684722   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1684723   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1684724   +
1684725   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1684726   +
1684727   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1684728   +
1684729   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1684730   +
1684731   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1684732   +
1684733   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1684734   +
1684735   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1684736   +
1684737   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1684738   +
1684739   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1684740   +
1684741   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1684742   +
1684743   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1684744   +
1684745   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1684746   +
1684747   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1684748   +
1684749   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1684750   +
1684751   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1684752   +
1684753   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1684754   +
1684755   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1684756   +
1684757   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1684758   +
1684759   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1684760   +
1684761   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1684762   +
1684763   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1684764   +
1684765   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1684766   +
1684767   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1684768   +
1684769   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1684770   +
1684771   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1684772   +
1684773   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1684774   +
1684775   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1684776   +
1684777   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1684778   +
1684779   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1684780   +
1684781   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1684782   +
1684783   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1684784   +
1684785   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1684786   +
1684787   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1684788   +
1684789   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1684790   +
1684791   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1684792   +
1684793   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1684794   +
1684795   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1684796   +
1684797   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1684798   +
1684799   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1684800   +
1684801   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1684802   +
1684803   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1684804   +
1684805   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1684806   +
1684807   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1684808   +
1684809   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1684810   +
1684811   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1684812   +
1684813   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1684814   +
1684815   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1684816   +
1684817   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1684818   +
1684819   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1684820   +
1684821   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1684822   +
1684823   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1684824   +
1684825   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1684826   +
1684827   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1684828   +
1684829   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1684830   +
1684831   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1684832   +
1684833   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1684834   +
1684835   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1684836   +
1684837   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1684838   +
1684839   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1684840   +
1684841   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1684842   +
1684843   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1684844   +
1684845   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1684846   +
1684847   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1684848   +
1684849   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1684850   +
1684851   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1684852   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1684853   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1684854   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1684855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684857   +end;
MPRINT(EM_DIAGRAM):   end;
1684858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684860   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1684861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684863   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1684864   +   end;
MPRINT(EM_DIAGRAM):   end;
1684865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684866   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1684867   +   end;
MPRINT(EM_DIAGRAM):   end;
1684868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684869   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1684870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684872   +   end;
MPRINT(EM_DIAGRAM):   end;
1684873   +end;
MPRINT(EM_DIAGRAM):   end;
1684874   +
1684875   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1684876   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1684877   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1684878   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1684879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684881   +end;
MPRINT(EM_DIAGRAM):   end;
1684882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684884   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1684885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684887   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1684888   +   end;
MPRINT(EM_DIAGRAM):   end;
1684889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684890   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1684891   +   end;
MPRINT(EM_DIAGRAM):   end;
1684892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684893   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1684894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684896   +   end;
MPRINT(EM_DIAGRAM):   end;
1684897   +end;
MPRINT(EM_DIAGRAM):   end;
1684898   +
1684899   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1684900   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1684901   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1684902   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1684903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684905   +end;
MPRINT(EM_DIAGRAM):   end;
1684906   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684908   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1684909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684911   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1684912   +   end;
MPRINT(EM_DIAGRAM):   end;
1684913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684914   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1684915   +   end;
MPRINT(EM_DIAGRAM):   end;
1684916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684917   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1684918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684920   +   end;
MPRINT(EM_DIAGRAM):   end;
1684921   +end;
MPRINT(EM_DIAGRAM):   end;
1684922   +
1684923   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1684924   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1684925   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1684926   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1684927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684929   +end;
MPRINT(EM_DIAGRAM):   end;
1684930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684932   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1684933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684934   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684935   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1684936   +   end;
MPRINT(EM_DIAGRAM):   end;
1684937   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684938   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1684939   +   end;
MPRINT(EM_DIAGRAM):   end;
1684940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684941   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1684942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684944   +   end;
MPRINT(EM_DIAGRAM):   end;
1684945   +end;
MPRINT(EM_DIAGRAM):   end;
1684946   +
1684947   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1684948   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1684949   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1684950   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1684951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684953   +end;
MPRINT(EM_DIAGRAM):   end;
1684954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684956   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1684957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684959   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1684960   +   end;
MPRINT(EM_DIAGRAM):   end;
1684961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684962   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1684963   +   end;
MPRINT(EM_DIAGRAM):   end;
1684964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684965   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1684966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684968   +   end;
MPRINT(EM_DIAGRAM):   end;
1684969   +end;
MPRINT(EM_DIAGRAM):   end;
1684970   +
1684971   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1684972   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1684973   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1684974   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1684975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1684976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684977   +end;
MPRINT(EM_DIAGRAM):   end;
1684978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1684979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1684980   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1684981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1684982   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1684983   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1684984   +   end;
MPRINT(EM_DIAGRAM):   end;
1684985   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1684986   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1684987   +   end;
MPRINT(EM_DIAGRAM):   end;
1684988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1684989   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1684990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1684991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1684992   +   end;
MPRINT(EM_DIAGRAM):   end;
1684993   +end;
MPRINT(EM_DIAGRAM):   end;
1684994   +
1684995   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1684996   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1684997   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1684998   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1684999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1685000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685001   +end;
MPRINT(EM_DIAGRAM):   end;
1685002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1685003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1685004   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1685005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1685006   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1685007   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1685008   +   end;
MPRINT(EM_DIAGRAM):   end;
1685009   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1685010   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1685011   +   end;
MPRINT(EM_DIAGRAM):   end;
1685012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1685013   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1685014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1685015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685016   +   end;
MPRINT(EM_DIAGRAM):   end;
1685017   +end;
MPRINT(EM_DIAGRAM):   end;
1685018   +
1685019   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1685020   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1685021   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1685022   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1685023   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1685024   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1685025   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1685026   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1685027   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1685028   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1685029   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1685030   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1685031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1685032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685033   +end;
MPRINT(EM_DIAGRAM):   end;
1685034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1685035   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1685036   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1685037   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1685038   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1685039   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1685040   +   end;
MPRINT(EM_DIAGRAM):   end;
1685041   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1685042   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1685043   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1685044   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1685045   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1685046   +   end;
MPRINT(EM_DIAGRAM):   end;
1685047   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1685048   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1685049   +   end;
MPRINT(EM_DIAGRAM):   end;
1685050   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1685051   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1685052   +   end;
MPRINT(EM_DIAGRAM):   end;
1685053   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1685054   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1685055   +   end;
MPRINT(EM_DIAGRAM):   end;
1685056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1685057   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1685058   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1685059   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1685060   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1685061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1685062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685063   +   end;
MPRINT(EM_DIAGRAM):   end;
1685064   +end;
MPRINT(EM_DIAGRAM):   end;
1685065   +
1685066   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1685067   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1685068   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1685069   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1685070   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1685071   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1685072   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1685073   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1685074   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1685075   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1685076   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1685077   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1685078   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1685079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1685080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685081   +end;
MPRINT(EM_DIAGRAM):   end;
1685082   +else do;
MPRINT(EM_DIAGRAM):   else do;
1685083   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1685084   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1685085   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1685086   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1685087   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1685088   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1685089   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1685090   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1685091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1685092   +         end;
MPRINT(EM_DIAGRAM):   end;
1685093   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1685094   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1685095   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1685096   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1685097   +            end;
MPRINT(EM_DIAGRAM):   end;
1685098   +         end;
MPRINT(EM_DIAGRAM):   end;
1685099   +      end;
MPRINT(EM_DIAGRAM):   end;
1685100   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1685101   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1685102   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1685103   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1685104   +         end;
MPRINT(EM_DIAGRAM):   end;
1685105   +      end;
MPRINT(EM_DIAGRAM):   end;
1685106   +   end;
MPRINT(EM_DIAGRAM):   end;
1685107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1685108   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1685109   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1685110   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1685111   +      end;
MPRINT(EM_DIAGRAM):   end;
1685112   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1685113   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1685114   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1685115   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1685116   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1685117   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1685118   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1685119   +         end;
MPRINT(EM_DIAGRAM):   end;
1685120   +      end;
MPRINT(EM_DIAGRAM):   end;
1685121   +   end;
MPRINT(EM_DIAGRAM):   end;
1685122   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1685123   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1685124   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1685125   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1685126   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1685127   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1685128   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685129   +   end;
MPRINT(EM_DIAGRAM):   end;
1685130   +end;
MPRINT(EM_DIAGRAM):   end;
1685131   +
1685132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685133   +*** Checking missing input Interval
1685134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1685135   +
1685136   +IF NMISS(
1685137   +   AcceptedCmpTotal ,
1685138   +   Age ,
1685139   +   Frq ,
1685140   +   Income ,
1685141   +   Kidhome ,
1685142   +   Mnt ,
1685143   +   MntFishProducts ,
1685144   +   MntFruits ,
1685145   +   MntGoldProds ,
1685146   +   MntMeatProducts ,
1685147   +   MntSweetProducts ,
1685148   +   MntWines ,
1685149   +   MonthsAsCustomer ,
1685150   +   NumCatalogPurchases ,
1685151   +   NumDealsPurchases ,
1685152   +   NumDistPurchases ,
1685153   +   NumStorePurchases ,
1685154   +   NumWebPurchases ,
1685155   +   NumWebVisitsMonth ,
1685156   +   RFMstat ,
1685157   +   RMntFrq ,
1685158   +   Recency ,
1685159   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1685160   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1685161   +
1685162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1685163   +END;
MPRINT(EM_DIAGRAM):   END;
1685164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685165   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1685166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1685168   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1685169   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1685170   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1685171   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1685172   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1685173   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1685174   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1685175   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1685176   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1685177   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1685178   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1685179   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1685180   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1685181   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1685182   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1685183   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1685184   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1685185   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1685186   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1685187   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1685188   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1685189   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1685190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1685191   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1685192   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1685193   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1685194   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1685195   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1685196   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1685197   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1685198   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1685199   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1685200   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1685201   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1685202   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1685203   +END;
MPRINT(EM_DIAGRAM):   END;
1685204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1685205   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1685206   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1685207   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1685208   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1685209   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1685210   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1685211   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1685212   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1685213   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1685214   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1685215   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1685216   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1685217   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1685218   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1685219   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1685220   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1685221   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1685222   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1685223   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1685224   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1685225   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1685226   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1685227   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1685228   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1685229   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1685230   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1685231   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1685232   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1685233   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1685234   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1685235   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1685236   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1685237   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1685238   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1685239   +   ELSE S_NumCatalogPurchases
1685240   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1685241   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1685242   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1685243   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1685244   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1685245   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1685246   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1685247   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1685248   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1685249   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1685250   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1685251   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1685252   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1685253   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1685254   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1685255   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1685256   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1685257   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1685258   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1685259   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1685260   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1685261   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1685262   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1685263   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1685264   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1685265   +END;
MPRINT(EM_DIAGRAM):   END;
1685266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685267   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1685268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685270   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1685271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685273   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1685274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1685276   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1685277   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1685278   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1685279   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1685280   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1685281   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1685282   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1685283   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1685284   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1685285   +          +     1.17276395296242 * S_NumDealsPurchases
1685286   +          +     0.26632768295477 * S_NumDistPurchases
1685287   +          +    -1.26575615903579 * S_NumStorePurchases
1685288   +          +    -0.95316107557927 * S_NumWebPurchases
1685289   +          +     1.01828574356487 * S_NumWebVisitsMonth
1685290   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1685291   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1685292   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1685293   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1685294   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1685295   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1685296   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1685297   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1685298   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1685299   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1685300   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1685301   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1685302   +          +     1.14485571201233 * S_NumDealsPurchases
1685303   +          +     0.21414266588987 * S_NumDistPurchases
1685304   +          +    -0.10530090074297 * S_NumStorePurchases
1685305   +          +    -0.41712321238458 * S_NumWebPurchases
1685306   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1685307   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1685308   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1685309   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1685310   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1685311   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1685312   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1685313   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1685314   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1685315   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1685316   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1685317   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1685318   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1685319   +          +      0.7196418967437 * S_NumDealsPurchases
1685320   +          +     0.69035286374177 * S_NumDistPurchases
1685321   +          +     0.38027656631135 * S_NumStorePurchases
1685322   +          +    -0.18878358997924 * S_NumWebPurchases
1685323   +          +     1.61962062004798 * S_NumWebVisitsMonth
1685324   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1685325   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1685326   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1685327   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1685328   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1685329   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1685330   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1685331   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1685332   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1685333   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1685334   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1685335   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1685336   +          +    -0.00642902007204 * S_NumDealsPurchases
1685337   +          +     0.29785069480367 * S_NumDistPurchases
1685338   +          +    -0.42243322063147 * S_NumStorePurchases
1685339   +          +     0.54880896338383 * S_NumWebPurchases
1685340   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1685341   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1685342   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1685343   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1685344   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1685345   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1685346   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1685347   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1685348   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1685349   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1685350   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1685351   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1685352   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1685353   +          +    -0.48404738328225 * S_NumDealsPurchases
1685354   +          +    -0.02464180457879 * S_NumDistPurchases
1685355   +          +     1.17201831082067 * S_NumStorePurchases
1685356   +          +     0.57453655167516 * S_NumWebPurchases
1685357   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1685358   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1685359   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1685360   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1685361   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1685362   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1685363   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1685364   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1685365   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1685366   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1685367   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1685368   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1685369   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1685370   +          +    -1.49850531967483 * S_NumDealsPurchases
1685371   +          +    -0.82105466264223 * S_NumDistPurchases
1685372   +          +     0.29984603642824 * S_NumStorePurchases
1685373   +          +     0.06557123721611 * S_NumWebPurchases
1685374   +          +     1.04754749365002 * S_NumWebVisitsMonth
1685375   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1685376   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1685377   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1685378   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1685379   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1685380   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1685381   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1685382   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1685383   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1685384   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1685385   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1685386   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1685387   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1685388   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1685389   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1685390   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1685391   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1685392   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1685393   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1685394   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1685395   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1685396   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1685397   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1685398   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1685399   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1685400   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1685401   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1685402   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1685403   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1685404   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1685405   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1685406   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1685407   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1685408   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1685409   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1685410   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1685411   +          +     0.24583509957712 * Marital_StatusDivorced
1685412   +          +    -0.22681931588361 * Marital_StatusMarried
1685413   +          +    -0.12924106229536 * Marital_StatusSingle
1685414   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1685415   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1685416   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1685417   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1685418   +          +    -0.12585334311068 * Marital_StatusDivorced
1685419   +          +    -0.20835502467207 * Marital_StatusMarried
1685420   +          +    -0.13839534449368 * Marital_StatusSingle
1685421   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1685422   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1685423   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1685424   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1685425   +          +     0.35106363238113 * Marital_StatusDivorced
1685426   +          +     -1.3414808583918 * Marital_StatusMarried
1685427   +          +     1.40835320798486 * Marital_StatusSingle
1685428   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1685429   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1685430   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1685431   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1685432   +          +     0.48174546958393 * Marital_StatusDivorced
1685433   +          +    -0.41416978858191 * Marital_StatusMarried
1685434   +          +    -0.23376801546265 * Marital_StatusSingle
1685435   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1685436   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1685437   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1685438   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1685439   +          +    -0.67557643774246 * Marital_StatusDivorced
1685440   +          +     1.63844045917367 * Marital_StatusMarried
1685441   +          +    -0.70320960247699 * Marital_StatusSingle
1685442   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1685443   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1685444   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1685445   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1685446   +          +    -0.11371453086883 * Marital_StatusDivorced
1685447   +          +    -0.34226997176291 * Marital_StatusMarried
1685448   +          +    -1.01568676685754 * Marital_StatusSingle
1685449   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1685450   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1685451   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1685452   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1685453   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1685454   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1685455   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1685456   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1685457   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1685458   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1685459   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1685460   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1685461   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1685462   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1685463   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1685464   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1685465   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1685466   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1685467   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1685468   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1685469   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1685470   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1685471   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1685472   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1685473   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1685474   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1685475   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1685476   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1685477   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1685478   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1685479   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1685480   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1685481   +END;
MPRINT(EM_DIAGRAM):   END;
1685482   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1685483   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1685484   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1685485   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1685486   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1685487   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1685488   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1685489   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1685490   +END;
MPRINT(EM_DIAGRAM):   END;
1685491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685492   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1685493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685494   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1685495   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1685496   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1685497   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1685498   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1685499   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1685500   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1685501   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1685502   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1685503   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1685504   +          +    -0.87259051567474 * S_NumDealsPurchases
1685505   +          +    -0.36454149529139 * S_NumDistPurchases
1685506   +          +     0.12447759925061 * S_NumStorePurchases
1685507   +          +    -1.08133487947367 * S_NumWebPurchases
1685508   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1685509   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1685510   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1685511   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1685512   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1685513   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1685514   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1685515   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1685516   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1685517   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1685518   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1685519   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1685520   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1685521   +          +     2.23121497416403 * S_NumDealsPurchases
1685522   +          +    -0.48674842191071 * S_NumDistPurchases
1685523   +          +     1.77510728607544 * S_NumStorePurchases
1685524   +          +     0.14647433155436 * S_NumWebPurchases
1685525   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1685526   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1685527   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1685528   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1685529   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1685530   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1685531   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1685532   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1685533   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1685534   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1685535   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1685536   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1685537   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1685538   +          +     0.14338855349611 * S_NumDealsPurchases
1685539   +          +    -2.21071010829235 * S_NumDistPurchases
1685540   +          +    -0.21795889348002 * S_NumStorePurchases
1685541   +          +     1.98825087883535 * S_NumWebPurchases
1685542   +          +     1.02482442531149 * S_NumWebVisitsMonth
1685543   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1685544   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1685545   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1685546   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1685547   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1685548   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1685549   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1685550   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1685551   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1685552   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1685553   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1685554   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1685555   +          +     0.30041205661012 * S_NumDealsPurchases
1685556   +          +    -0.63499849986918 * S_NumDistPurchases
1685557   +          +    -0.34155713433714 * S_NumStorePurchases
1685558   +          +    -1.14183354933936 * S_NumWebPurchases
1685559   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1685560   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1685561   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1685562   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1685563   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1685564   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1685565   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1685566   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1685567   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1685568   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1685569   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1685570   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1685571   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1685572   +          +    -0.21237915559831 * S_NumDealsPurchases
1685573   +          +     0.48256923764182 * S_NumDistPurchases
1685574   +          +    -0.45553093140641 * S_NumStorePurchases
1685575   +          +      0.5593655963659 * S_NumWebPurchases
1685576   +          +     0.27943768691188 * S_NumWebVisitsMonth
1685577   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1685578   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1685579   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1685580   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1685581   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1685582   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1685583   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1685584   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1685585   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1685586   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1685587   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1685588   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1685589   +          +     2.38967021388062 * S_NumDealsPurchases
1685590   +          +    -0.97722398866481 * S_NumDistPurchases
1685591   +          +     1.57612333191312 * S_NumStorePurchases
1685592   +          +    -0.75968679115983 * S_NumWebPurchases
1685593   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1685594   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1685595   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1685596   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1685597   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1685598   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1685599   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1685600   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1685601   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1685602   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1685603   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1685604   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1685605   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1685606   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1685607   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1685608   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1685609   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1685610   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1685611   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1685612   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1685613   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1685614   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1685615   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1685616   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1685617   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1685618   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1685619   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1685620   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1685621   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1685622   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1685623   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1685624   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1685625   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1685626   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1685627   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1685628   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1685629   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1685630   +          +     0.96470902298142 * Marital_StatusDivorced
1685631   +          +     0.94805959268314 * Marital_StatusMarried
1685632   +          +     -0.6523948769616 * Marital_StatusSingle
1685633   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1685634   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1685635   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1685636   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1685637   +          +      0.3918249505531 * Marital_StatusDivorced
1685638   +          +    -0.00968091979586 * Marital_StatusMarried
1685639   +          +     0.84615379885071 * Marital_StatusSingle
1685640   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1685641   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1685642   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1685643   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1685644   +          +     1.14335160313191 * Marital_StatusDivorced
1685645   +          +     0.50580517192175 * Marital_StatusMarried
1685646   +          +     0.17264295020921 * Marital_StatusSingle
1685647   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1685648   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1685649   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1685650   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1685651   +          +    -0.11238504444225 * Marital_StatusDivorced
1685652   +          +    -0.81348274043749 * Marital_StatusMarried
1685653   +          +     0.46075415610001 * Marital_StatusSingle
1685654   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1685655   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1685656   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1685657   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1685658   +          +    -0.46342068701431 * Marital_StatusDivorced
1685659   +          +    -0.41667845270204 * Marital_StatusMarried
1685660   +          +    -0.47166707496281 * Marital_StatusSingle
1685661   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1685662   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1685663   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1685664   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1685665   +          +    -0.45376613787812 * Marital_StatusDivorced
1685666   +          +     0.01337046049801 * Marital_StatusMarried
1685667   +          +    -0.92811489484121 * Marital_StatusSingle
1685668   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1685669   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1685670   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1685671   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1685672   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1685673   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1685674   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1685675   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1685676   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1685677   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1685678   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1685679   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1685680   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1685681   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1685682   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1685683   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1685684   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1685685   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1685686   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1685687   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1685688   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1685689   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1685690   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1685691   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1685692   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1685693   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1685694   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1685695   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1685696   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1685697   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1685698   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1685699   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1685700   +END;
MPRINT(EM_DIAGRAM):   END;
1685701   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1685702   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1685703   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1685704   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1685705   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1685706   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1685707   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1685708   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1685709   +END;
MPRINT(EM_DIAGRAM):   END;
1685710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685711   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1685712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685713   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1685714   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1685715   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1685716   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1685717   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1685718   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1685719   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1685720   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1685721   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1685722   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1685723   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1685724   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1685725   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1685726   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1685727   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1685728   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1685729   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1685730   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1685731   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1685732   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1685733   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1685734   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1685735   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1685736   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1685737   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1685738   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1685739   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1685740   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1685741   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1685742   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1685743   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1685744   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1685745   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1685746   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1685747   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1685748   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1685749   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1685750   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1685751   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
The SAS System
 
1685752   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1685753   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1685754   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1685755   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1685756   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1685757   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1685758   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1685759   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1685760   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1685761   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1685762   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1685763   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1685764   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1685765   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1685766   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1685767   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1685768   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1685769   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1685770   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1685771   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1685772   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1685773   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1685774   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1685775   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1685776   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1685777   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1685778   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1685779   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1685780   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1685781   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1685782   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1685783   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1685784   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1685785   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1685786   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1685787   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1685788   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1685789   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1685790   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1685791   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1685792   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1685793   +END;
MPRINT(EM_DIAGRAM):   END;
1685794   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1685795   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1685796   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1685797   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1685798   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1685799   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1685800   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1685801   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1685802   +END;
MPRINT(EM_DIAGRAM):   END;
1685803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685804   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1685805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1685807   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1685808   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1685809   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1685810   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1685811   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1685812   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1685813   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1685814   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1685815   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1685816   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1685817   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1685818   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1685819   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1685820   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1685821   +END;
MPRINT(EM_DIAGRAM):   END;
1685822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1685823   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1685824   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1685825   +END;
MPRINT(EM_DIAGRAM):   END;
1685826   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1685827   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1685828   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1685829   +END;
MPRINT(EM_DIAGRAM):   END;
1685830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685831   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1685832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1685833   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1685834   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1685835   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1685836   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1685837   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1685838   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1685839   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1685840   +END;
MPRINT(EM_DIAGRAM):   END;
1685841   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1685842   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1685843   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1685844   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1685845    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1685846    quit;
1685847    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1685848    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1685849    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1685850    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
1685851    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1685852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685853    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1685854    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685856    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME
CREATOR);
1685857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685858    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685859    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685860    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1685861    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1685862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685863    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
1685864    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1685865    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1685866    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685868    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685869    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1685870    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685871    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685872    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1685873    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1685873  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.
 
1685874    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685875    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1685876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685877    filename _pref
1685877  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1685878    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1685879    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1685880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1685881   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1685882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1685883   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1685884   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1685885   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1685886    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1685887    quit;
1685888    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1685889    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1685890    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1685891    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1685892    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1685893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685894    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1685895    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685896    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685897    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1685898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685900    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685901    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1685902    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1685903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685904    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1685905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685906    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1685907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685908    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685909    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685910    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1685911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685912    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685913    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1685914    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1685914  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1685915    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685916    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1685917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685918    filename _pref
1685918  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1685919    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1685920    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1685921   +
1685922   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1685923   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1685923  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1685924   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1685925   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1685926   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1685927   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1685928   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1685929    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1685930    quit;
1685931    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1685932    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1685933    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1685934    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1685935    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1685936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685937    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1685938    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685939    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685940    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1685941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685943    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685944    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1685945    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1685946    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685947    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1685948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685949    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1685950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685951    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685952    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1685953    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1685954    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1685955    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685956    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1685957    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1685957  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1685958    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1685959    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1685960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1685961    filename _pref
1685961  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1685962    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1685963    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1685964   +
1685965   +
1685966   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1685967   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1685968   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1685969   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1685970   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1685971   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1685972   +
1685973   +
1685974   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1685975   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1685976   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1685977   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1685978   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1685979   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1685980   +
1685981   +
1685982   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1685983   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1685984   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1685985   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1685986   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1685987   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1685988   +
1685989   +
1685990   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1685991   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1685992   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1685993   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1685994   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1685995   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1685996   +
1685997   +
1685998   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1685999   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1686000   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1686001   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1686002   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1686003   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1686004   +
1686005   +
1686006   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1686007   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1686008   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1686009   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1686010   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1686011   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1686012   +
1686013   +
1686014   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1686015   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1686016   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1686017   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1686018   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1686019   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1686020   +
1686021   +
1686022   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1686023   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1686024   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1686025   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1686026   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1686027   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1686028   +if
1686029   +_FILTERNORM1 not in ( '.')
1686030   + and
1686031   +_FILTERNORM2 not in ( '.')
1686032   + and
1686033   +_FILTERNORM3 not in ( '.')
1686034   + and
1686035   +_FILTERNORM4 not in ( '.')
1686036   + and
1686037   +_FILTERNORM5 not in ( '.')
1686038   + and
1686039   +_FILTERNORM6 not in ( '.')
1686040   + and
1686041   +_FILTERNORM7 not in ( ' ')
1686042   + and
1686043   +_FILTERNORM8 not in ( ' ')
1686044   +and
1686045   +( Dt_Customer ne .)
1686046   +and ( Income ne . and (Income<=107000))
1686047   +and ( Kidhome ne .)
1686048   +and ( MntFishProducts ne .)
1686049   +and ( MntFruits ne .)
1686050   +and ( MntGoldProds ne .)
1686051   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1686052   +and ( MntSweetProducts ne .)
1686053   +and ( MntWines ne .)
1686054   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1686055   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1686056   +and ( NumStorePurchases ne .)
1686057   +and ( NumWebPurchases ne .)
1686058   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1686059   +and ( Recency ne .)
1686060   +and ( Teenhome ne .)
1686061   +and ( Year_Birth ne .)
1686062   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1686063   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1686064   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1686065   +end;
MPRINT(EM_DIAGRAM):   end;
1686066   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1686067   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1686068    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1686069    quit;
1686070    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1686071    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1686072    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1686073    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1686074    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1686075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686076    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1686077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1686078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1686079    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1686080    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1686081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686082    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1686083    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1686084    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1686085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686086    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1686087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1686088    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1686089    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1686090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686091    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1686092    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1686093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1686094    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686095    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1686096    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1686096  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1686097    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686098    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1686099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686100    %macro varDept(fcmpdata=,id=);
1686101    %global nobs&id scoreFlag&id;
1686102    %let scoreFlag&id = 0;
1686103    %if &id=1 or ^&fcmpStart %then %do;
1686104    proc sort data=&fcmpdata out=_temp&id nodupkey;
1686105    by NAME;
1686106    where id=&id and LHS in( %let j=1;
1686107    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1686108    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1686109    "&var" %let j = %eval(&j+1);
1686110    %end;
1686111    );
1686112    run;
1686113    %let dsid = %sysfunc(open(_temp&id));
1686114    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1686115    %let dsid = %sysfunc(close(&dsid));
1686116    %if &&nobs&id %then %do;
1686117    %let scoreFlag&id = 1;
1686118    %let fcmpStart = 1;
1686119    %end;
1686120    %else %let fcmpStart = 0;
1686121    %end;
1686122    %else %do;
1686123    proc sort data=&fcmpdata out=_tempid;
1686124    where id=&id;
1686125    by LHS;
1686126    run;
1686127    %let dsid = %sysfunc(open(_tempid));
1686128    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1686129    %let dsid = %sysfunc(close(&dsid));
1686130    %if ^&&nobs&id %then %do;
1686131    proc datasets lib=work nolist;
1686132    delete _tempid;
1686133    run;
1686134    quit;
1686135    %end;
1686136    %else %do;
1686137    data _tempAll;
1686138    set %let j=%eval(&id-1);
1686139    %do x=1 %to &j;
1686140    %if &&nobs&x %then %do;
1686141    _temp&x %end;
1686142    %end;
1686143    ;
1686144    run;
1686145    proc sql;
1686146    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1686146  ! work._tempid p2 where p.name=p2.lhs;
1686147    quit;
1686148    data _temp&id;
1686149    set _temp&id;
1686150    where LHS ne '' and NAME ne '' and Node ne '';
1686151    run;
1686152    proc datasets lib=work nolist;
1686153    delete _tempAll;
1686154    run;
1686155    %let dsid = %sysfunc(open(_temp&id));
1686156    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1686157    %let dsid = %sysfunc(close(&dsid));
1686158    %if ^&&nobs&id %then %do;
1686159    proc datasets lib=work nolist;
1686160    delete _temp&id;
1686161    run;
1686162    quit;
1686163    %end;
1686164    %else %do;
1686165    %let scoreFlag&id = 1;
1686166    data _temp&id;
1686167    set _temp&id;
1686168    where LHS ne NAME and node ne '';
1686169    run;
1686170    %let dsid = %sysfunc(open(_temp&id));
1686171    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1686172    %let dsid = %sysfunc(close(&dsid));
1686173    %if ^&&nobs&id %then %do;
1686174    proc datasets lib=work nolist;
1686175    delete _temp&id;
1686176    run;
1686177    quit;
1686178    %end;
1686179    %else %do;
1686180    proc sort data=_temp&id nodupkey;
1686181    by LHS NAME;
1686182    run;
1686183    %end;
1686184    %end;
1686185    %end;
1686186    %end;
1686187    %mend varDept;
1686188    %macro optCode(outdata=fcmpdata);
1686189    %global fcmpStart;
1686190    %let fcmpStart = 0;
1686191    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1686192    %let NumNodes=9;
1686193    %do k=1 %to &NumNodes;
1686194    %vardept(fcmpdata=&outdata, id=&k);
1686195    %end;
1686196    %mend optCode;
1686197    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 197 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1686198    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1686199    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1686200    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1686201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1686202    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1686203    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1686204    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1686205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686206    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1686207    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1686207  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1686208    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1686209    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1686210    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1686211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1686212    filename _pref
1686212  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
1686213    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1686214    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
1686215   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1686216   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1686217   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1686218   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1686219   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1686220   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1686221   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1686222   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1686223   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1686224   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1686225   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1686226   +LENGTH _WARN_ $4
1686227   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1686228   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1686229   +
1686230   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1686231   +
1686232   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1686233   +
1686234   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1686235   +
1686236   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1686237   +
1686238   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1686239   +
1686240   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1686241   +
1686242   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1686243   +
1686244   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1686245   +
1686246   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1686247   +
1686248   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1686249   +
1686250   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1686251   +
1686252   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1686253   +
1686254   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1686255   +
1686256   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1686257   +
1686258   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1686259   +
1686260   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1686261   +
1686262   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1686263   +
1686264   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1686265   +
1686266   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1686267   +
1686268   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1686269   +
1686270   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1686271   +
1686272   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1686273   +
1686274   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1686275   +
1686276   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1686277   +
1686278   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1686279   +
1686280   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1686281   +
1686282   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1686283   +
1686284   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1686285   +
1686286   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1686287   +
1686288   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1686289   +
1686290   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1686291   +
1686292   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1686293   +
1686294   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1686295   +
1686296   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1686297   +
1686298   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1686299   +
1686300   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1686301   +
1686302   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1686303   +
1686304   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1686305   +
1686306   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1686307   +
1686308   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1686309   +
1686310   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1686311   +
1686312   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1686313   +
1686314   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1686315   +
1686316   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1686317   +
1686318   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1686319   +
1686320   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1686321   +
1686322   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1686323   +
1686324   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1686325   +
1686326   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1686327   +
1686328   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1686329   +
1686330   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1686331   +
1686332   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1686333   +
1686334   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1686335   +
1686336   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1686337   +
1686338   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1686339   +
1686340   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1686341   +
1686342   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1686343   +
1686344   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1686345   +
1686346   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1686347   +
1686348   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1686349   +
1686350   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1686351   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1686352   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1686353   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1686354   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686355   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686356   +end;
MPRINT(EM_DIAGRAM):   end;
1686357   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686358   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686359   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1686360   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686361   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686362   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1686363   +   end;
MPRINT(EM_DIAGRAM):   end;
1686364   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686365   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1686366   +   end;
MPRINT(EM_DIAGRAM):   end;
1686367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686368   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1686369   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686370   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686371   +   end;
MPRINT(EM_DIAGRAM):   end;
1686372   +end;
MPRINT(EM_DIAGRAM):   end;
1686373   +
1686374   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1686375   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1686376   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1686377   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1686378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686380   +end;
MPRINT(EM_DIAGRAM):   end;
1686381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686382   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686383   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1686384   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686385   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686386   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1686387   +   end;
MPRINT(EM_DIAGRAM):   end;
1686388   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686389   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1686390   +   end;
MPRINT(EM_DIAGRAM):   end;
1686391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686392   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1686393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686395   +   end;
MPRINT(EM_DIAGRAM):   end;
1686396   +end;
MPRINT(EM_DIAGRAM):   end;
1686397   +
1686398   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1686399   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1686400   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1686401   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1686402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686404   +end;
MPRINT(EM_DIAGRAM):   end;
1686405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686407   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1686408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686410   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1686411   +   end;
MPRINT(EM_DIAGRAM):   end;
1686412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686413   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1686414   +   end;
MPRINT(EM_DIAGRAM):   end;
1686415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686416   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1686417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686419   +   end;
MPRINT(EM_DIAGRAM):   end;
1686420   +end;
MPRINT(EM_DIAGRAM):   end;
1686421   +
1686422   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1686423   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1686424   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1686425   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1686426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686428   +end;
MPRINT(EM_DIAGRAM):   end;
1686429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686431   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1686432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686434   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1686435   +   end;
MPRINT(EM_DIAGRAM):   end;
1686436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686437   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1686438   +   end;
MPRINT(EM_DIAGRAM):   end;
1686439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686440   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1686441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686443   +   end;
MPRINT(EM_DIAGRAM):   end;
1686444   +end;
MPRINT(EM_DIAGRAM):   end;
1686445   +
1686446   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1686447   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1686448   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1686449   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1686450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686452   +end;
MPRINT(EM_DIAGRAM):   end;
1686453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686455   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1686456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686458   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1686459   +   end;
MPRINT(EM_DIAGRAM):   end;
1686460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686461   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1686462   +   end;
MPRINT(EM_DIAGRAM):   end;
1686463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686464   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1686465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686467   +   end;
MPRINT(EM_DIAGRAM):   end;
1686468   +end;
MPRINT(EM_DIAGRAM):   end;
1686469   +
1686470   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1686471   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1686472   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1686473   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1686474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686476   +end;
MPRINT(EM_DIAGRAM):   end;
1686477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686479   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1686480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1686482   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1686483   +   end;
MPRINT(EM_DIAGRAM):   end;
1686484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1686485   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1686486   +   end;
MPRINT(EM_DIAGRAM):   end;
1686487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686488   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1686489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686491   +   end;
MPRINT(EM_DIAGRAM):   end;
1686492   +end;
MPRINT(EM_DIAGRAM):   end;
1686493   +
1686494   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1686495   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1686496   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1686497   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1686498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686500   +end;
MPRINT(EM_DIAGRAM):   end;
1686501   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1686503   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1686504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686505   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1686506   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1686507   +   end;
MPRINT(EM_DIAGRAM):   end;
1686508   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1686509   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1686510   +   end;
MPRINT(EM_DIAGRAM):   end;
1686511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686512   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1686513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686515   +   end;
MPRINT(EM_DIAGRAM):   end;
1686516   +end;
MPRINT(EM_DIAGRAM):   end;
1686517   +
1686518   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1686519   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1686520   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1686521   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1686522   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1686523   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1686524   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1686525   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1686526   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1686527   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1686528   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1686529   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1686530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686532   +end;
MPRINT(EM_DIAGRAM):   end;
1686533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686534   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1686535   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1686536   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686537   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1686538   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1686539   +   end;
MPRINT(EM_DIAGRAM):   end;
1686540   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1686541   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1686542   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1686543   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1686544   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1686545   +   end;
MPRINT(EM_DIAGRAM):   end;
1686546   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1686547   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1686548   +   end;
MPRINT(EM_DIAGRAM):   end;
1686549   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1686550   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1686551   +   end;
MPRINT(EM_DIAGRAM):   end;
1686552   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1686553   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1686554   +   end;
MPRINT(EM_DIAGRAM):   end;
1686555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686556   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1686557   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1686558   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1686559   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1686560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686562   +   end;
MPRINT(EM_DIAGRAM):   end;
1686563   +end;
MPRINT(EM_DIAGRAM):   end;
1686564   +
1686565   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1686566   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1686567   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1686568   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1686569   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1686570   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1686571   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1686572   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1686573   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1686574   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1686575   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1686576   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1686577   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1686578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1686579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686580   +end;
MPRINT(EM_DIAGRAM):   end;
1686581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1686582   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1686583   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1686584   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1686585   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1686586   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1686587   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1686588   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1686589   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1686590   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1686591   +         end;
MPRINT(EM_DIAGRAM):   end;
1686592   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1686593   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1686594   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1686595   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1686596   +            end;
MPRINT(EM_DIAGRAM):   end;
1686597   +         end;
MPRINT(EM_DIAGRAM):   end;
1686598   +      end;
MPRINT(EM_DIAGRAM):   end;
1686599   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1686600   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1686601   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1686602   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1686603   +         end;
MPRINT(EM_DIAGRAM):   end;
1686604   +      end;
MPRINT(EM_DIAGRAM):   end;
1686605   +   end;
MPRINT(EM_DIAGRAM):   end;
1686606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1686607   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1686608   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1686609   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1686610   +      end;
MPRINT(EM_DIAGRAM):   end;
1686611   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1686612   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1686613   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1686614   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1686615   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1686616   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1686617   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1686618   +         end;
MPRINT(EM_DIAGRAM):   end;
1686619   +      end;
MPRINT(EM_DIAGRAM):   end;
1686620   +   end;
MPRINT(EM_DIAGRAM):   end;
1686621   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1686622   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1686623   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1686624   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1686625   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1686626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1686627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686628   +   end;
MPRINT(EM_DIAGRAM):   end;
1686629   +end;
MPRINT(EM_DIAGRAM):   end;
1686630   +
1686631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686632   +*** Checking missing input Interval
1686633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1686634   +
1686635   +IF NMISS(
1686636   +   AcceptedCmpTotal ,
1686637   +   Age ,
1686638   +   Frq ,
1686639   +   Income ,
1686640   +   Kidhome ,
1686641   +   Mnt ,
1686642   +   MntFishProducts ,
1686643   +   MntFruits ,
1686644   +   MntGoldProds ,
1686645   +   MntMeatProducts ,
1686646   +   MntSweetProducts ,
1686647   +   MntWines ,
1686648   +   MonthsAsCustomer ,
1686649   +   NumCatalogPurchases ,
1686650   +   NumDealsPurchases ,
1686651   +   NumDistPurchases ,
1686652   +   NumStorePurchases ,
1686653   +   NumWebPurchases ,
1686654   +   NumWebVisitsMonth ,
1686655   +   RFMstat ,
1686656   +   RMntFrq ,
1686657   +   Recency ,
1686658   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1686659   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1686660   +
1686661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1686662   +END;
MPRINT(EM_DIAGRAM):   END;
1686663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686664   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1686665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686666   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1686667   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1686668   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1686669   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1686670   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1686671   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1686672   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1686673   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1686674   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1686675   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1686676   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1686677   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1686678   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1686679   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1686680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1686681   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1686682   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1686683   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1686684   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1686685   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1686686   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1686687   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1686688   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1686689   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1686690   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1686691   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1686692   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1686693   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1686694   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1686695   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1686696   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1686697   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1686698   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1686699   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1686700   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1686701   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1686702   +END;
MPRINT(EM_DIAGRAM):   END;
1686703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1686704   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1686705   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1686706   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1686707   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1686708   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1686709   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1686710   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1686711   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1686712   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1686713   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1686714   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1686715   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1686716   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1686717   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1686718   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1686719   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1686720   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1686721   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1686722   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1686723   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1686724   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1686725   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1686726   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1686727   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1686728   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1686729   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1686730   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1686731   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1686732   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1686733   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1686734   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1686735   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1686736   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1686737   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1686738   +   ELSE S_NumCatalogPurchases
1686739   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1686740   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1686741   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1686742   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1686743   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1686744   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1686745   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1686746   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1686747   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1686748   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1686749   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1686750   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1686751   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1686752   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1686753   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1686754   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1686755   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1686756   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1686757   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1686758   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1686759   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1686760   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1686761   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1686762   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1686763   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1686764   +END;
MPRINT(EM_DIAGRAM):   END;
1686765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686766   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1686767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686769   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1686770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686772   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1686773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1686775   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1686776   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1686777   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1686778   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1686779   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1686780   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1686781   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1686782   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1686783   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1686784   +          +     0.89422627895323 * S_NumDealsPurchases
1686785   +          +    -0.13304125929765 * S_NumDistPurchases
1686786   +          +    -1.04568442570811 * S_NumStorePurchases
1686787   +          +    -0.28677765126751 * S_NumWebPurchases
1686788   +          +      1.2327638737509 * S_NumWebVisitsMonth
1686789   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1686790   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1686791   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1686792   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1686793   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1686794   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1686795   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1686796   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1686797   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1686798   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1686799   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1686800   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1686801   +          +     0.04224590196535 * S_NumDealsPurchases
1686802   +          +     0.76554742700113 * S_NumDistPurchases
1686803   +          +    -0.49155496870812 * S_NumStorePurchases
1686804   +          +     0.59606812744403 * S_NumWebPurchases
1686805   +          +     1.86809286276405 * S_NumWebVisitsMonth
1686806   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1686807   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1686808   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1686809   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1686810   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1686811   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1686812   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1686813   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1686814   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1686815   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1686816   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1686817   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1686818   +          +    -0.04866536993486 * S_NumDealsPurchases
1686819   +          +    -0.53535979020214 * S_NumDistPurchases
1686820   +          +     2.20634071253676 * S_NumStorePurchases
1686821   +          +      0.6164564989007 * S_NumWebPurchases
1686822   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1686823   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1686824   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1686825   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1686826   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1686827   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1686828   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1686829   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1686830   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1686831   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1686832   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1686833   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1686834   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1686835   +          +     1.37461255707863 * S_NumDealsPurchases
1686836   +          +    -0.17684775000818 * S_NumDistPurchases
1686837   +          +    -0.62755623855535 * S_NumStorePurchases
1686838   +          +    -1.46551649022657 * S_NumWebPurchases
1686839   +          +     3.35784247878638 * S_NumWebVisitsMonth
1686840   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1686841   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1686842   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1686843   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1686844   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1686845   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1686846   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1686847   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1686848   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1686849   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1686850   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1686851   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1686852   +          +    -0.76256677907121 * S_NumDealsPurchases
1686853   +          +    -0.31591571751692 * S_NumDistPurchases
1686854   +          +      0.0506832614089 * S_NumStorePurchases
1686855   +          +      1.4636796923764 * S_NumWebPurchases
1686856   +          +     0.37743519705036 * S_NumWebVisitsMonth
1686857   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1686858   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1686859   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1686860   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1686861   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1686862   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1686863   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1686864   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1686865   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1686866   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1686867   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1686868   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1686869   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1686870   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1686871   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1686872   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1686873   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1686874   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1686875   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1686876   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1686877   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1686878   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1686879   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1686880   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1686881   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1686882   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1686883   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1686884   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1686885   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1686886   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1686887   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1686888   +          +     0.68641668264565 * Marital_StatusDivorced
1686889   +          +    -0.81586871439732 * Marital_StatusMarried
1686890   +          +     0.63758920518451 * Marital_StatusSingle
1686891   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1686892   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1686893   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1686894   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1686895   +          +     0.05137560133238 * Marital_StatusDivorced
1686896   +          +    -2.24401993266209 * Marital_StatusMarried
1686897   +          +     1.57359386216115 * Marital_StatusSingle
1686898   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1686899   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1686900   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1686901   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1686902   +          +     -1.0649987815942 * Marital_StatusDivorced
1686903   +          +     0.76065111692388 * Marital_StatusMarried
1686904   +          +    -0.21694149754801 * Marital_StatusSingle
1686905   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1686906   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1686907   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1686908   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1686909   +          +     2.02155453548328 * Marital_StatusDivorced
1686910   +          +    -2.60190649735306 * Marital_StatusMarried
1686911   +          +     1.09149388354927 * Marital_StatusSingle
1686912   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1686913   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1686914   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1686915   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1686916   +          +     0.66315970650309 * Marital_StatusDivorced
1686917   +          +    -1.20476729758152 * Marital_StatusMarried
1686918   +          +     0.56175027826397 * Marital_StatusSingle
1686919   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1686920   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1686921   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1686922   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1686923   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1686924   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1686925   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1686926   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1686927   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1686928   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1686929   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1686930   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1686931   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1686932   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1686933   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1686934   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1686935   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1686936   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1686937   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1686938   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1686939   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1686940   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1686941   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1686942   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1686943   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1686944   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1686945   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1686946   +END;
MPRINT(EM_DIAGRAM):   END;
1686947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1686948   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1686949   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1686950   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1686951   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1686952   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1686953   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1686954   +END;
MPRINT(EM_DIAGRAM):   END;
1686955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686956   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1686957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1686958   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1686959   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1686960   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1686961   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1686962   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1686963   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1686964   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1686965   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1686966   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1686967   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1686968   +          +     1.50005927423985 * S_NumDealsPurchases
1686969   +          +      0.5590536933569 * S_NumDistPurchases
1686970   +          +    -0.61757824339318 * S_NumStorePurchases
1686971   +          +     0.37259686538158 * S_NumWebPurchases
1686972   +          +     2.59725437895564 * S_NumWebVisitsMonth
1686973   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1686974   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1686975   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1686976   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1686977   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1686978   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1686979   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1686980   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1686981   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1686982   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1686983   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1686984   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1686985   +          +    -0.09282222088797 * S_NumDealsPurchases
1686986   +          +     0.10726247938321 * S_NumDistPurchases
1686987   +          +     -1.1235971458527 * S_NumStorePurchases
1686988   +          +    -0.78304387839877 * S_NumWebPurchases
1686989   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1686990   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1686991   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1686992   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1686993   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1686994   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1686995   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1686996   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1686997   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1686998   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1686999   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1687000   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1687001   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1687002   +          +     0.35349185459988 * S_NumDealsPurchases
1687003   +          +     0.06853677714859 * S_NumDistPurchases
1687004   +          +    -1.47546012999338 * S_NumStorePurchases
1687005   +          +     0.20926435398916 * S_NumWebPurchases
1687006   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1687007   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1687008   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1687009   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1687010   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1687011   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1687012   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1687013   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1687014   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1687015   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1687016   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1687017   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1687018   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1687019   +          +      0.3873586120272 * S_NumDealsPurchases
1687020   +          +     0.25911651157596 * S_NumDistPurchases
1687021   +          +     1.58922489084287 * S_NumStorePurchases
1687022   +          +     0.49041797743368 * S_NumWebPurchases
1687023   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1687024   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1687025   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1687026   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1687027   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1687028   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1687029   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1687030   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1687031   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1687032   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1687033   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1687034   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1687035   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1687036   +          +    -0.60830880287865 * S_NumDealsPurchases
1687037   +          +      0.0745331267194 * S_NumDistPurchases
1687038   +          +    -1.39472448256952 * S_NumStorePurchases
1687039   +          +     1.95372179969087 * S_NumWebPurchases
1687040   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1687041   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1687042   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1687043   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1687044   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1687045   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1687046   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1687047   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1687048   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1687049   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1687050   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1687051   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1687052   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1687053   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1687054   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1687055   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1687056   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1687057   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1687058   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1687059   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1687060   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1687061   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1687062   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1687063   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1687064   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1687065   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1687066   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1687067   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1687068   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1687069   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1687070   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1687071   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1687072   +          +    -1.33377871643323 * Marital_StatusDivorced
1687073   +          +    -0.87184228840898 * Marital_StatusMarried
1687074   +          +     1.41223186340257 * Marital_StatusSingle
1687075   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1687076   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1687077   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1687078   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1687079   +          +    -0.21479890935233 * Marital_StatusDivorced
1687080   +          +     -0.0025459519579 * Marital_StatusMarried
1687081   +          +     1.33900491702264 * Marital_StatusSingle
1687082   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1687083   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1687084   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1687085   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1687086   +          +    -0.38307267471999 * Marital_StatusDivorced
1687087   +          +     0.97088969451415 * Marital_StatusMarried
1687088   +          +    -0.28578224473381 * Marital_StatusSingle
1687089   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1687090   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1687091   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1687092   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1687093   +          +    -1.42229401093569 * Marital_StatusDivorced
1687094   +          +      0.7234508382397 * Marital_StatusMarried
1687095   +          +    -0.29062202974628 * Marital_StatusSingle
1687096   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1687097   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1687098   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1687099   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1687100   +          +    -0.99067637207205 * Marital_StatusDivorced
1687101   +          +    -0.50245902142079 * Marital_StatusMarried
1687102   +          +     0.54214494533793 * Marital_StatusSingle
1687103   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1687104   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1687105   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1687106   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1687107   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1687108   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1687109   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1687110   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1687111   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1687112   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1687113   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1687114   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1687115   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1687116   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1687117   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1687118   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1687119   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1687120   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1687121   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1687122   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1687123   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1687124   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1687125   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1687126   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1687127   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1687128   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1687129   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1687130   +END;
MPRINT(EM_DIAGRAM):   END;
1687131   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1687132   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1687133   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1687134   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1687135   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1687136   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1687137   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1687138   +END;
MPRINT(EM_DIAGRAM):   END;
1687139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687140   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1687141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687142   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1687143   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1687144   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1687145   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1687146   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1687147   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1687148   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1687149   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1687150   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1687151   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1687152   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1687153   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1687154   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1687155   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1687156   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1687157   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1687158   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1687159   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1687160   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1687161   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1687162   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1687163   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1687164   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1687165   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1687166   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1687167   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1687168   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1687169   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1687170   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1687171   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1687172   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1687173   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1687174   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1687175   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1687176   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1687177   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1687178   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1687179   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1687180   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1687181   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1687182   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1687183   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1687184   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1687185   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1687186   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1687187   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1687188   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1687189   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1687190   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1687191   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1687192   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1687193   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1687194   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1687195   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1687196   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1687197   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1687198   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1687199   +END;
MPRINT(EM_DIAGRAM):   END;
1687200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1687201   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1687202   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1687203   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1687204   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1687205   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1687206   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1687207   +END;
MPRINT(EM_DIAGRAM):   END;
1687208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687209   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1687210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687211   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1687212   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1687213   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1687214   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1687215   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1687216   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1687217   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1687218   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1687219   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1687220   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1687221   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1687222   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1687223   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1687224   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1687225   +END;
MPRINT(EM_DIAGRAM):   END;
1687226   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1687227   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1687228   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1687229   +END;
MPRINT(EM_DIAGRAM):   END;
1687230   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1687231   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1687232   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1687233   +END;
MPRINT(EM_DIAGRAM):   END;
1687234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687235   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1687236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1687237   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1687238   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1687239   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1687240   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1687241   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1687242   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1687243   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1687244   +END;
MPRINT(EM_DIAGRAM):   END;
1687245   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1687246   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1687247   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1687248   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1687249    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1687250    quit;
1687251    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1687252    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1687253    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1687254    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
1687255    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1687256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687257    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1687258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687260    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME
CREATOR);
1687261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687262    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687263    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687264    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1687265    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1687266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687267    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
1687268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1687269    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1687270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687273    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1687274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687275    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687276    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1687277    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1687277  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
1687278    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687279    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1687280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687281    filename _pref
1687281  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1687282    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1687283    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1687284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1687285   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1687286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1687287   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1687288   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1687289   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1687290    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1687291    quit;
1687292    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1687293    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1687294    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1687295    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1687296    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1687297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687298    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1687299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687301    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1687302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687304    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687305    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1687306    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1687307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687308    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1687309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1687310    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1687311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687314    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1687315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687316    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1687318    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1687318  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1687319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687320    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1687321    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687322    filename _pref
1687322  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1687323    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1687324    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1687325   +
1687326   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1687327   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1687327  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1687328   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1687329   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1687330   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1687331   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1687332   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1687333    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1687334    quit;
1687335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1687336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1687337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1687338    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1687339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1687340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1687342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687344    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1687345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1687349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1687350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1687351    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1687352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1687354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1687358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687359    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1687361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1687361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1687362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687363    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1687364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687365    filename _pref
1687365  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1687366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1687367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1687368   +
1687369   +
1687370   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1687371   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1687372   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1687373   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1687374   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1687375   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687376   +
1687377   +
1687378   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1687379   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1687380   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1687381   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1687382   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1687383   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687384   +
1687385   +
1687386   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1687387   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1687388   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1687389   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1687390   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1687391   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687392   +
1687393   +
1687394   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1687395   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1687396   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1687397   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1687398   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1687399   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687400   +
1687401   +
1687402   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1687403   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1687404   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1687405   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1687406   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1687407   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687408   +
1687409   +
1687410   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1687411   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1687412   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1687413   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1687414   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1687415   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687416   +
1687417   +
1687418   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1687419   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1687420   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1687421   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1687422   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1687423   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687424   +
1687425   +
1687426   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1687427   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1687428   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1687429   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1687430   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1687431   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1687432   +if
1687433   +_FILTERNORM1 not in ( '.')
1687434   + and
1687435   +_FILTERNORM2 not in ( '.')
1687436   + and
1687437   +_FILTERNORM3 not in ( '.')
1687438   + and
1687439   +_FILTERNORM4 not in ( '.')
1687440   + and
1687441   +_FILTERNORM5 not in ( '.')
1687442   + and
1687443   +_FILTERNORM6 not in ( '.')
1687444   + and
1687445   +_FILTERNORM7 not in ( ' ')
1687446   + and
1687447   +_FILTERNORM8 not in ( ' ')
1687448   +and
1687449   +( Dt_Customer ne .)
1687450   +and ( Income ne . and (Income<=107000))
1687451   +and ( Kidhome ne .)
1687452   +and ( MntFishProducts ne .)
1687453   +and ( MntFruits ne .)
1687454   +and ( MntGoldProds ne .)
1687455   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1687456   +and ( MntSweetProducts ne .)
1687457   +and ( MntWines ne .)
1687458   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1687459   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1687460   +and ( NumStorePurchases ne .)
1687461   +and ( NumWebPurchases ne .)
1687462   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1687463   +and ( Recency ne .)
1687464   +and ( Teenhome ne .)
1687465   +and ( Year_Birth ne .)
1687466   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1687467   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1687468   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1687469   +end;
MPRINT(EM_DIAGRAM):   end;
1687470   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1687471   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1687472    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1687473    quit;
1687474    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1687475    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1687476    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1687477    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1687478    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1687479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687480    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1687481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687483    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1687484    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687486    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687487    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1687488    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1687489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687490    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1687491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1687492    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1687493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1687496    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1687497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1687498    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687499    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1687500    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1687500  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1687501    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687502    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1687503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687504    %macro varDept(fcmpdata=,id=);
1687505    %global nobs&id scoreFlag&id;
1687506    %let scoreFlag&id = 0;
1687507    %if &id=1 or ^&fcmpStart %then %do;
1687508    proc sort data=&fcmpdata out=_temp&id nodupkey;
1687509    by NAME;
1687510    where id=&id and LHS in( %let j=1;
1687511    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1687512    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1687513    "&var" %let j = %eval(&j+1);
1687514    %end;
1687515    );
1687516    run;
1687517    %let dsid = %sysfunc(open(_temp&id));
1687518    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1687519    %let dsid = %sysfunc(close(&dsid));
1687520    %if &&nobs&id %then %do;
1687521    %let scoreFlag&id = 1;
1687522    %let fcmpStart = 1;
1687523    %end;
1687524    %else %let fcmpStart = 0;
1687525    %end;
1687526    %else %do;
1687527    proc sort data=&fcmpdata out=_tempid;
1687528    where id=&id;
1687529    by LHS;
1687530    run;
1687531    %let dsid = %sysfunc(open(_tempid));
1687532    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1687533    %let dsid = %sysfunc(close(&dsid));
1687534    %if ^&&nobs&id %then %do;
1687535    proc datasets lib=work nolist;
1687536    delete _tempid;
1687537    run;
1687538    quit;
1687539    %end;
1687540    %else %do;
1687541    data _tempAll;
1687542    set %let j=%eval(&id-1);
1687543    %do x=1 %to &j;
1687544    %if &&nobs&x %then %do;
1687545    _temp&x %end;
1687546    %end;
1687547    ;
1687548    run;
1687549    proc sql;
1687550    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1687550  ! work._tempid p2 where p.name=p2.lhs;
1687551    quit;
1687552    data _temp&id;
1687553    set _temp&id;
1687554    where LHS ne '' and NAME ne '' and Node ne '';
1687555    run;
1687556    proc datasets lib=work nolist;
1687557    delete _tempAll;
1687558    run;
1687559    %let dsid = %sysfunc(open(_temp&id));
1687560    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1687561    %let dsid = %sysfunc(close(&dsid));
1687562    %if ^&&nobs&id %then %do;
1687563    proc datasets lib=work nolist;
1687564    delete _temp&id;
1687565    run;
1687566    quit;
1687567    %end;
1687568    %else %do;
1687569    %let scoreFlag&id = 1;
1687570    data _temp&id;
1687571    set _temp&id;
1687572    where LHS ne NAME and node ne '';
1687573    run;
1687574    %let dsid = %sysfunc(open(_temp&id));
1687575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1687576    %let dsid = %sysfunc(close(&dsid));
1687577    %if ^&&nobs&id %then %do;
1687578    proc datasets lib=work nolist;
1687579    delete _temp&id;
1687580    run;
1687581    quit;
1687582    %end;
1687583    %else %do;
1687584    proc sort data=_temp&id nodupkey;
1687585    by LHS NAME;
1687586    run;
1687587    %end;
1687588    %end;
1687589    %end;
1687590    %end;
1687591    %mend varDept;
1687592    %macro optCode(outdata=fcmpdata);
1687593    %global fcmpStart;
1687594    %let fcmpStart = 0;
1687595    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1687596    %let NumNodes=9;
1687597    %do k=1 %to &NumNodes;
1687598    %vardept(fcmpdata=&outdata, id=&k);
1687599    %end;
1687600    %mend optCode;
1687601    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 188 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1687602    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1687603    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1687604    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1687605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687606    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1687607    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1687608    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1687609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687610    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1687611    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1687611  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1687612    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1687613    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1687614    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1687615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1687616    filename _pref
1687616  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
1687617    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1687618    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
1687619   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1687620   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1687621   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1687622   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1687623   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1687624   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1687625   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1687626   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1687627   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1687628   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1687629   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1687630   +LENGTH _WARN_ $4
1687631   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1687632   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1687633   +
1687634   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1687635   +
1687636   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1687637   +
1687638   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1687639   +
1687640   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1687641   +
1687642   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1687643   +
1687644   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1687645   +
1687646   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1687647   +
1687648   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1687649   +
1687650   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1687651   +
1687652   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1687653   +
1687654   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1687655   +
1687656   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1687657   +
1687658   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1687659   +
1687660   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1687661   +
1687662   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1687663   +
1687664   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1687665   +
1687666   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1687667   +
1687668   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1687669   +
1687670   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1687671   +
1687672   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1687673   +
1687674   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1687675   +
1687676   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1687677   +
1687678   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1687679   +
1687680   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1687681   +
1687682   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1687683   +
1687684   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1687685   +
1687686   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1687687   +
1687688   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1687689   +
1687690   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1687691   +
1687692   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1687693   +
1687694   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1687695   +
1687696   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1687697   +
1687698   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1687699   +
1687700   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1687701   +
1687702   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1687703   +
1687704   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1687705   +
1687706   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1687707   +
1687708   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1687709   +
1687710   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1687711   +
1687712   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1687713   +
1687714   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1687715   +
1687716   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1687717   +
1687718   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1687719   +
1687720   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1687721   +
1687722   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1687723   +
1687724   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1687725   +
1687726   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1687727   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1687728   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1687729   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1687730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687732   +end;
MPRINT(EM_DIAGRAM):   end;
1687733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687735   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1687736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687738   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1687739   +   end;
MPRINT(EM_DIAGRAM):   end;
1687740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687741   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1687742   +   end;
MPRINT(EM_DIAGRAM):   end;
1687743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687744   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1687745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687747   +   end;
MPRINT(EM_DIAGRAM):   end;
1687748   +end;
MPRINT(EM_DIAGRAM):   end;
1687749   +
1687750   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1687751   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1687752   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1687753   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1687754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687756   +end;
MPRINT(EM_DIAGRAM):   end;
1687757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687759   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1687760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687762   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1687763   +   end;
MPRINT(EM_DIAGRAM):   end;
1687764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687765   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1687766   +   end;
MPRINT(EM_DIAGRAM):   end;
1687767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687768   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1687769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687771   +   end;
MPRINT(EM_DIAGRAM):   end;
1687772   +end;
MPRINT(EM_DIAGRAM):   end;
1687773   +
1687774   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1687775   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1687776   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1687777   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1687778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687780   +end;
MPRINT(EM_DIAGRAM):   end;
1687781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687783   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1687784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687785   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687786   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1687787   +   end;
MPRINT(EM_DIAGRAM):   end;
1687788   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687789   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1687790   +   end;
MPRINT(EM_DIAGRAM):   end;
1687791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687792   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1687793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687795   +   end;
MPRINT(EM_DIAGRAM):   end;
1687796   +end;
MPRINT(EM_DIAGRAM):   end;
1687797   +
1687798   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1687799   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1687800   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1687801   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1687802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687804   +end;
MPRINT(EM_DIAGRAM):   end;
1687805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687807   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1687808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687809   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687810   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1687811   +   end;
MPRINT(EM_DIAGRAM):   end;
1687812   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687813   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1687814   +   end;
MPRINT(EM_DIAGRAM):   end;
1687815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687816   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1687817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687819   +   end;
MPRINT(EM_DIAGRAM):   end;
1687820   +end;
MPRINT(EM_DIAGRAM):   end;
1687821   +
1687822   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1687823   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1687824   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1687825   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1687826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687828   +end;
MPRINT(EM_DIAGRAM):   end;
1687829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687831   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1687832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687834   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1687835   +   end;
MPRINT(EM_DIAGRAM):   end;
1687836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687837   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1687838   +   end;
MPRINT(EM_DIAGRAM):   end;
1687839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687840   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1687841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687843   +   end;
MPRINT(EM_DIAGRAM):   end;
1687844   +end;
MPRINT(EM_DIAGRAM):   end;
1687845   +
1687846   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1687847   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1687848   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1687849   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1687850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687852   +end;
MPRINT(EM_DIAGRAM):   end;
1687853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687855   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1687856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1687858   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1687859   +   end;
MPRINT(EM_DIAGRAM):   end;
1687860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1687861   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1687862   +   end;
MPRINT(EM_DIAGRAM):   end;
1687863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687864   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1687865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687867   +   end;
MPRINT(EM_DIAGRAM):   end;
1687868   +end;
MPRINT(EM_DIAGRAM):   end;
1687869   +
1687870   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1687871   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1687872   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1687873   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1687874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687876   +end;
MPRINT(EM_DIAGRAM):   end;
1687877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1687879   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1687880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687881   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1687882   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1687883   +   end;
MPRINT(EM_DIAGRAM):   end;
1687884   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1687885   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1687886   +   end;
MPRINT(EM_DIAGRAM):   end;
1687887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687888   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1687889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687891   +   end;
MPRINT(EM_DIAGRAM):   end;
1687892   +end;
MPRINT(EM_DIAGRAM):   end;
1687893   +
1687894   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1687895   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1687896   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1687897   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1687898   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1687899   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1687900   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1687901   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1687902   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1687903   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1687904   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1687905   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1687906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687908   +end;
MPRINT(EM_DIAGRAM):   end;
1687909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687910   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1687911   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1687912   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687913   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1687914   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1687915   +   end;
MPRINT(EM_DIAGRAM):   end;
1687916   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1687917   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1687918   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1687919   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1687920   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1687921   +   end;
MPRINT(EM_DIAGRAM):   end;
1687922   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1687923   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1687924   +   end;
MPRINT(EM_DIAGRAM):   end;
1687925   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1687926   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1687927   +   end;
MPRINT(EM_DIAGRAM):   end;
1687928   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1687929   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1687930   +   end;
MPRINT(EM_DIAGRAM):   end;
1687931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687932   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1687933   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1687934   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1687935   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1687936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1687937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687938   +   end;
MPRINT(EM_DIAGRAM):   end;
1687939   +end;
MPRINT(EM_DIAGRAM):   end;
1687940   +
1687941   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1687942   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1687943   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1687944   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1687945   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1687946   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1687947   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1687948   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1687949   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1687950   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1687951   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1687952   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1687953   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1687954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1687955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1687956   +end;
MPRINT(EM_DIAGRAM):   end;
1687957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1687958   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1687959   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1687960   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1687961   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1687962   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1687963   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1687964   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1687965   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1687966   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1687967   +         end;
MPRINT(EM_DIAGRAM):   end;
1687968   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1687969   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1687970   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1687971   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1687972   +            end;
MPRINT(EM_DIAGRAM):   end;
1687973   +         end;
MPRINT(EM_DIAGRAM):   end;
1687974   +      end;
MPRINT(EM_DIAGRAM):   end;
1687975   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1687976   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1687977   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1687978   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1687979   +         end;
MPRINT(EM_DIAGRAM):   end;
1687980   +      end;
MPRINT(EM_DIAGRAM):   end;
1687981   +   end;
MPRINT(EM_DIAGRAM):   end;
1687982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1687983   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1687984   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1687985   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1687986   +      end;
MPRINT(EM_DIAGRAM):   end;
1687987   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1687988   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1687989   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1687990   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1687991   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1687992   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1687993   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1687994   +         end;
MPRINT(EM_DIAGRAM):   end;
1687995   +      end;
MPRINT(EM_DIAGRAM):   end;
1687996   +   end;
MPRINT(EM_DIAGRAM):   end;
1687997   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1687998   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1687999   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1688000   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1688001   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1688002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1688003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688004   +   end;
MPRINT(EM_DIAGRAM):   end;
1688005   +end;
MPRINT(EM_DIAGRAM):   end;
1688006   +
1688007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688008   +*** Checking missing input Interval
1688009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1688010   +
1688011   +IF NMISS(
1688012   +   AcceptedCmpTotal ,
1688013   +   Age ,
1688014   +   Frq ,
1688015   +   Income ,
1688016   +   Kidhome ,
1688017   +   Mnt ,
1688018   +   MntFishProducts ,
1688019   +   MntFruits ,
1688020   +   MntGoldProds ,
1688021   +   MntMeatProducts ,
1688022   +   MntSweetProducts ,
1688023   +   MntWines ,
1688024   +   MonthsAsCustomer ,
1688025   +   NumCatalogPurchases ,
1688026   +   NumDealsPurchases ,
1688027   +   NumDistPurchases ,
1688028   +   NumStorePurchases ,
1688029   +   NumWebPurchases ,
1688030   +   NumWebVisitsMonth ,
1688031   +   RFMstat ,
1688032   +   RMntFrq ,
1688033   +   Recency ,
1688034   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1688035   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1688036   +
1688037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688038   +END;
MPRINT(EM_DIAGRAM):   END;
1688039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688040   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1688041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688042   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1688043   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1688044   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1688045   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1688046   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1688047   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1688048   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1688049   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1688050   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1688051   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1688052   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1688053   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1688054   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1688055   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1688056   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1688057   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1688058   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1688059   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1688060   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1688061   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1688062   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1688063   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1688064   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1688065   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1688066   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1688067   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1688068   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1688069   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1688070   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1688071   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1688072   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1688073   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1688074   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1688075   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1688076   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1688077   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1688078   +END;
MPRINT(EM_DIAGRAM):   END;
1688079   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1688080   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1688081   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1688082   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1688083   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1688084   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1688085   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1688086   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1688087   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1688088   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1688089   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1688090   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1688091   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1688092   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1688093   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1688094   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1688095   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1688096   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1688097   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1688098   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1688099   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1688100   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1688101   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1688102   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1688103   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1688104   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1688105   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1688106   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1688107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1688108   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1688109   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1688110   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1688111   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1688112   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1688113   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1688114   +   ELSE S_NumCatalogPurchases
1688115   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1688116   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1688117   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1688118   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1688119   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1688120   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1688121   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1688122   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1688123   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1688124   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1688125   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1688126   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1688127   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1688128   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1688129   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1688130   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1688131   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1688132   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1688133   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1688134   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1688135   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1688136   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1688137   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1688138   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1688139   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1688140   +END;
MPRINT(EM_DIAGRAM):   END;
1688141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688142   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1688143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688145   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1688146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688148   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1688149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1688151   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1688152   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1688153   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1688154   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1688155   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1688156   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1688157   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1688158   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1688159   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1688160   +          +    -1.14704878034134 * S_NumDealsPurchases
1688161   +          +    -0.17763404274659 * S_NumDistPurchases
1688162   +          +     0.08894400267969 * S_NumStorePurchases
1688163   +          +     0.59283747891957 * S_NumWebPurchases
1688164   +          +     0.85268274682505 * S_NumWebVisitsMonth
1688165   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1688166   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1688167   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1688168   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1688169   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1688170   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1688171   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1688172   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1688173   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1688174   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1688175   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1688176   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1688177   +          +    -0.80841566068716 * S_NumDealsPurchases
1688178   +          +    -0.17995640033768 * S_NumDistPurchases
1688179   +          +     0.00713417460936 * S_NumStorePurchases
1688180   +          +     0.57881024323076 * S_NumWebPurchases
1688181   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1688182   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1688183   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1688184   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1688185   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1688186   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1688187   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1688188   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1688189   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1688190   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1688191   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1688192   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1688193   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1688194   +          +     0.57891364118717 * S_NumDealsPurchases
1688195   +          +    -0.31024556838688 * S_NumDistPurchases
1688196   +          +    -1.48708542986704 * S_NumStorePurchases
1688197   +          +    -0.93009875249206 * S_NumWebPurchases
1688198   +          +     2.01900039122935 * S_NumWebVisitsMonth
1688199   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1688200   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1688201   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1688202   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1688203   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1688204   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1688205   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1688206   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1688207   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1688208   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1688209   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1688210   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1688211   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1688212   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1688213   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1688214   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1688215   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1688216   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1688217   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1688218   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1688219   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1688220   +          +     0.55883606830033 * Marital_StatusDivorced
1688221   +          +    -0.54530037567066 * Marital_StatusMarried
1688222   +          +    -0.52994736075753 * Marital_StatusSingle
1688223   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1688224   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1688225   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1688226   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1688227   +          +    -1.07368484057033 * Marital_StatusDivorced
1688228   +          +     2.73313504711262 * Marital_StatusMarried
1688229   +          +    -2.18530462876058 * Marital_StatusSingle
1688230   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1688231   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1688232   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1688233   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1688234   +          +     0.49993144243043 * Marital_StatusDivorced
1688235   +          +    -0.38953339116829 * Marital_StatusMarried
1688236   +          +    -0.10836287319942 * Marital_StatusSingle
1688237   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1688238   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1688239   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1688240   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1688241   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1688242   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1688243   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1688244   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1688245   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1688246   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1688247   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1688248   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1688249   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1688250   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1688251   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1688252   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1688253   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1688254   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1688255   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1688256   +END;
MPRINT(EM_DIAGRAM):   END;
1688257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1688258   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1688259   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1688260   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1688261   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1688262   +END;
MPRINT(EM_DIAGRAM):   END;
1688263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688264   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1688265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688266   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1688267   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1688268   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1688269   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1688270   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1688271   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1688272   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1688273   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1688274   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1688275   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1688276   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1688277   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1688278   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1688279   +END;
MPRINT(EM_DIAGRAM):   END;
1688280   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1688281   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1688282   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1688283   +END;
MPRINT(EM_DIAGRAM):   END;
1688284   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1688285   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1688286   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1688287   +END;
MPRINT(EM_DIAGRAM):   END;
1688288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688289   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1688290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1688291   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1688292   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1688293   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1688294   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1688295   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1688296   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1688297   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1688298   +END;
MPRINT(EM_DIAGRAM):   END;
1688299   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1688300   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1688301   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1688302   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1688303    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1688304    quit;
1688305    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1688306    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1688307    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1688308    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
1688309    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1688310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688311    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1688312    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688314    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME
CREATOR);
1688315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688317    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688318    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1688319    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1688320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688321    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
1688322    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688323    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1688324    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688326    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688327    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1688328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688329    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688330    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1688331    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1688331  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
1688332    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688333    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1688334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688335    filename _pref
1688335  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1688336    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1688337    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1688338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688339   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1688340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688341   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1688342   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1688343   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1688344    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1688345    quit;
1688346    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1688347    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1688348    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1688349    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1688350    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1688351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688352    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1688353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688355    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1688356    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688358    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688359    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1688360    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1688361    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688362    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1688363    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1688364    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1688365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688366    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688367    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688368    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1688369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688370    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688371    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1688372    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1688372  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1688373    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688374    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1688375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688376    filename _pref
1688376  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1688377    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1688378    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1688379   +
1688380   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1688381   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1688381  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1688382   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1688383   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1688384   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1688385   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1688386   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1688387    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1688388    quit;
1688389    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1688390    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1688391    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1688392    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1688393    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1688394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688395    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1688396    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688398    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1688399    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688401    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688402    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1688403    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1688404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688405    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1688406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688407    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1688408    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688409    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1688410    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688411    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1688412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688413    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688414    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1688415    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1688415  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1688416    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688417    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1688418    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688419    filename _pref
1688419  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1688420    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1688421    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1688422   +
1688423   +
1688424   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1688425   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1688426   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1688427   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1688428   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1688429   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688430   +
1688431   +
1688432   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1688433   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1688434   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1688435   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1688436   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1688437   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688438   +
1688439   +
1688440   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1688441   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1688442   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1688443   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1688444   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1688445   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688446   +
1688447   +
1688448   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1688449   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1688450   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1688451   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1688452   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1688453   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688454   +
1688455   +
1688456   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1688457   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1688458   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1688459   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1688460   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1688461   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688462   +
1688463   +
1688464   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1688465   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1688466   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1688467   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1688468   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1688469   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688470   +
1688471   +
1688472   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1688473   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1688474   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1688475   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1688476   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1688477   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688478   +
1688479   +
1688480   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1688481   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1688482   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1688483   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1688484   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1688485   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688486   +if
1688487   +_FILTERNORM1 not in ( '.')
1688488   + and
1688489   +_FILTERNORM2 not in ( '.')
1688490   + and
1688491   +_FILTERNORM3 not in ( '.')
1688492   + and
1688493   +_FILTERNORM4 not in ( '.')
1688494   + and
1688495   +_FILTERNORM5 not in ( '.')
1688496   + and
1688497   +_FILTERNORM6 not in ( '.')
1688498   + and
1688499   +_FILTERNORM7 not in ( ' ')
1688500   + and
1688501   +_FILTERNORM8 not in ( ' ')
1688502   +and
1688503   +( Dt_Customer ne .)
1688504   +and ( Income ne . and (Income<=107000))
1688505   +and ( Kidhome ne .)
1688506   +and ( MntFishProducts ne .)
1688507   +and ( MntFruits ne .)
1688508   +and ( MntGoldProds ne .)
1688509   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1688510   +and ( MntSweetProducts ne .)
1688511   +and ( MntWines ne .)
1688512   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1688513   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1688514   +and ( NumStorePurchases ne .)
1688515   +and ( NumWebPurchases ne .)
1688516   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1688517   +and ( Recency ne .)
1688518   +and ( Teenhome ne .)
1688519   +and ( Year_Birth ne .)
1688520   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1688521   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1688522   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1688523   +end;
MPRINT(EM_DIAGRAM):   end;
1688524   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1688525   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1688526    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1688527    quit;
1688528    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1688529    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1688530    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1688531    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1688532    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1688533    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688534    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1688535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688537    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1688538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688541    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1688542    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1688543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688544    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1688545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1688546    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1688547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1688550    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1688551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1688552    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688553    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1688554    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1688554  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1688555    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688556    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1688557    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1688558    %macro varDept(fcmpdata=,id=);
1688559    %global nobs&id scoreFlag&id;
1688560    %let scoreFlag&id = 0;
1688561    %if &id=1 or ^&fcmpStart %then %do;
1688562    proc sort data=&fcmpdata out=_temp&id nodupkey;
1688563    by NAME;
1688564    where id=&id and LHS in( %let j=1;
1688565    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1688566    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1688567    "&var" %let j = %eval(&j+1);
1688568    %end;
1688569    );
1688570    run;
1688571    %let dsid = %sysfunc(open(_temp&id));
1688572    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1688573    %let dsid = %sysfunc(close(&dsid));
1688574    %if &&nobs&id %then %do;
1688575    %let scoreFlag&id = 1;
1688576    %let fcmpStart = 1;
1688577    %end;
1688578    %else %let fcmpStart = 0;
1688579    %end;
1688580    %else %do;
1688581    proc sort data=&fcmpdata out=_tempid;
1688582    where id=&id;
1688583    by LHS;
1688584    run;
1688585    %let dsid = %sysfunc(open(_tempid));
1688586    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1688587    %let dsid = %sysfunc(close(&dsid));
1688588    %if ^&&nobs&id %then %do;
1688589    proc datasets lib=work nolist;
1688590    delete _tempid;
1688591    run;
1688592    quit;
1688593    %end;
1688594    %else %do;
1688595    data _tempAll;
1688596    set %let j=%eval(&id-1);
1688597    %do x=1 %to &j;
1688598    %if &&nobs&x %then %do;
1688599    _temp&x %end;
1688600    %end;
1688601    ;
1688602    run;
1688603    proc sql;
1688604    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1688604  ! work._tempid p2 where p.name=p2.lhs;
1688605    quit;
1688606    data _temp&id;
1688607    set _temp&id;
1688608    where LHS ne '' and NAME ne '' and Node ne '';
1688609    run;
1688610    proc datasets lib=work nolist;
1688611    delete _tempAll;
1688612    run;
1688613    %let dsid = %sysfunc(open(_temp&id));
1688614    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1688615    %let dsid = %sysfunc(close(&dsid));
1688616    %if ^&&nobs&id %then %do;
1688617    proc datasets lib=work nolist;
1688618    delete _temp&id;
1688619    run;
1688620    quit;
1688621    %end;
1688622    %else %do;
1688623    %let scoreFlag&id = 1;
1688624    data _temp&id;
1688625    set _temp&id;
1688626    where LHS ne NAME and node ne '';
1688627    run;
1688628    %let dsid = %sysfunc(open(_temp&id));
1688629    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1688630    %let dsid = %sysfunc(close(&dsid));
1688631    %if ^&&nobs&id %then %do;
1688632    proc datasets lib=work nolist;
1688633    delete _temp&id;
1688634    run;
1688635    quit;
1688636    %end;
1688637    %else %do;
1688638    proc sort data=_temp&id nodupkey;
1688639    by LHS NAME;
1688640    run;
1688641    %end;
1688642    %end;
1688643    %end;
1688644    %end;
1688645    %mend varDept;
1688646    %macro optCode(outdata=fcmpdata);
1688647    %global fcmpStart;
1688648    %let fcmpStart = 0;
1688649    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1688650    %let NumNodes=9;
1688651    %do k=1 %to &NumNodes;
1688652    %vardept(fcmpdata=&outdata, id=&k);
1688653    %end;
1688654    %mend optCode;
1688655    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1688656    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1688657    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1688658    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1688659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688660    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1688661    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1688662    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1688663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688664    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1688665    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1688665  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1688666    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1688667    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1688668    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1688669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1688670    filename _pref
1688670  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas";
1688671    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1688672    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl36\EMPUBLISHSCORE.sas.
1688673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688674   +* Ensmbl36: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Combine model for DepVar;
1688675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688676   +* Ensmbl36: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 1 of 7;
1688677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688679   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1688680   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1688681   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1688682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688684   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1688685   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1688686   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1688687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688689   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1688690   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1688691   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1688692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688693   +
1688694   +
1688695   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1688696   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1688697   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1688698   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1688699   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1688700   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688701   +
1688702   +
1688703   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1688704   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1688705   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1688706   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1688707   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1688708   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688709   +
1688710   +
1688711   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1688712   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1688713   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1688714   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1688715   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1688716   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688717   +
1688718   +
1688719   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1688720   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1688721   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1688722   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1688723   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1688724   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688725   +
1688726   +
1688727   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1688728   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1688729   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1688730   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1688731   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1688732   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688733   +
1688734   +
1688735   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1688736   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1688737   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1688738   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1688739   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1688740   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688741   +
1688742   +
1688743   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1688744   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1688745   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1688746   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1688747   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1688748   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688749   +
1688750   +
1688751   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1688752   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1688753   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1688754   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1688755   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1688756   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1688757   +if
1688758   +_FILTERNORM1 not in ( '.')
1688759   + and
1688760   +_FILTERNORM2 not in ( '.')
1688761   + and
1688762   +_FILTERNORM3 not in ( '.')
1688763   + and
1688764   +_FILTERNORM4 not in ( '.')
1688765   + and
1688766   +_FILTERNORM5 not in ( '.')
1688767   + and
1688768   +_FILTERNORM6 not in ( '.')
1688769   + and
1688770   +_FILTERNORM7 not in ( ' ')
1688771   + and
1688772   +_FILTERNORM8 not in ( ' ')
1688773   +and
1688774   +( Dt_Customer ne .)
1688775   +and ( Income ne . and (Income<=107000))
1688776   +and ( Kidhome ne .)
1688777   +and ( MntFishProducts ne .)
1688778   +and ( MntFruits ne .)
1688779   +and ( MntGoldProds ne .)
1688780   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1688781   +and ( MntSweetProducts ne .)
1688782   +and ( MntWines ne .)
1688783   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1688784   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1688785   +and ( NumStorePurchases ne .)
1688786   +and ( NumWebPurchases ne .)
1688787   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1688788   +and ( Recency ne .)
1688789   +and ( Teenhome ne .)
1688790   +and ( Year_Birth ne .)
1688791   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1688792   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1688793   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1688794   +end;
MPRINT(EM_DIAGRAM):   end;
1688795   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1688796   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
1688797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688798   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1688799   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1688800   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1688801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688802   +
1688803   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1688804   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1688804  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1688805   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1688806   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1688807   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
NOTE: Numeric value converted to character for argument 1 of 'UPCASE' operation.
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1688808   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1688809   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1688810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688811   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1688812   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1688813   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1688814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688816   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1688817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688818   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1688819   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1688820   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1688821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688822   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1688823   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1688824   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1688825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688827   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1688828   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1688829   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1688830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688832   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1688833   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1688834   +* NODE: AutoNeural6;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural6;
1688835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1688836   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1688837   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1688838   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1688839   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1688840   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1688841   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1688842   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1688843   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1688844   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1688845   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1688846   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1688847   +LENGTH _WARN_ $4
1688848   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1688849   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1688850   +
1688851   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1688852   +
1688853   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1688854   +
1688855   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1688856   +
1688857   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1688858   +
1688859   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1688860   +
1688861   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1688862   +
1688863   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1688864   +
1688865   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1688866   +
1688867   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1688868   +
1688869   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1688870   +
1688871   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1688872   +
1688873   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1688874   +
1688875   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1688876   +
1688877   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1688878   +
1688879   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1688880   +
1688881   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1688882   +
1688883   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1688884   +
1688885   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1688886   +
1688887   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1688888   +
1688889   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1688890   +
1688891   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1688892   +
1688893   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1688894   +
1688895   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1688896   +
1688897   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1688898   +
1688899   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1688900   +
1688901   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1688902   +
1688903   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1688904   +
1688905   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1688906   +
1688907   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1688908   +
1688909   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1688910   +
1688911   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1688912   +
1688913   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1688914   +
1688915   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1688916   +
1688917   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1688918   +
1688919   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1688920   +
1688921   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1688922   +
1688923   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1688924   +
1688925   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1688926   +
1688927   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1688928   +
1688929   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1688930   +
1688931   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1688932   +
1688933   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1688934   +
1688935   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1688936   +
1688937   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1688938   +
1688939   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1688940   +
1688941   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1688942   +
1688943   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1688944   +
1688945   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1688946   +
1688947   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1688948   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1688949   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1688950   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1688951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1688952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688953   +end;
MPRINT(EM_DIAGRAM):   end;
1688954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1688955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1688956   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1688957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1688958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1688959   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1688960   +   end;
MPRINT(EM_DIAGRAM):   end;
1688961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1688962   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1688963   +   end;
MPRINT(EM_DIAGRAM):   end;
1688964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1688965   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1688966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1688967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688968   +   end;
MPRINT(EM_DIAGRAM):   end;
1688969   +end;
MPRINT(EM_DIAGRAM):   end;
1688970   +
1688971   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1688972   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1688973   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1688974   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1688975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1688976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688977   +end;
MPRINT(EM_DIAGRAM):   end;
1688978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1688979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1688980   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1688981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1688982   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1688983   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1688984   +   end;
MPRINT(EM_DIAGRAM):   end;
1688985   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1688986   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1688987   +   end;
MPRINT(EM_DIAGRAM):   end;
1688988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1688989   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1688990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1688991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1688992   +   end;
MPRINT(EM_DIAGRAM):   end;
1688993   +end;
MPRINT(EM_DIAGRAM):   end;
1688994   +
1688995   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1688996   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1688997   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1688998   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1688999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689001   +end;
MPRINT(EM_DIAGRAM):   end;
1689002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689004   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1689005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689006   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689007   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1689008   +   end;
MPRINT(EM_DIAGRAM):   end;
1689009   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689010   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1689011   +   end;
MPRINT(EM_DIAGRAM):   end;
1689012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689013   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1689014   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689015   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689016   +   end;
MPRINT(EM_DIAGRAM):   end;
1689017   +end;
MPRINT(EM_DIAGRAM):   end;
1689018   +
1689019   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1689020   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1689021   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1689022   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1689023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689025   +end;
MPRINT(EM_DIAGRAM):   end;
1689026   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689027   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689028   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1689029   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689030   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689031   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1689032   +   end;
MPRINT(EM_DIAGRAM):   end;
1689033   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689034   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1689035   +   end;
MPRINT(EM_DIAGRAM):   end;
1689036   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689037   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1689038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689040   +   end;
MPRINT(EM_DIAGRAM):   end;
1689041   +end;
MPRINT(EM_DIAGRAM):   end;
1689042   +
1689043   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1689044   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1689045   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1689046   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1689047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689049   +end;
MPRINT(EM_DIAGRAM):   end;
1689050   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689051   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689052   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1689053   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689054   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689055   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1689056   +   end;
MPRINT(EM_DIAGRAM):   end;
1689057   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689058   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1689059   +   end;
MPRINT(EM_DIAGRAM):   end;
1689060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689061   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1689062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689064   +   end;
MPRINT(EM_DIAGRAM):   end;
1689065   +end;
MPRINT(EM_DIAGRAM):   end;
1689066   +
1689067   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1689068   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1689069   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1689070   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1689071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689073   +end;
MPRINT(EM_DIAGRAM):   end;
1689074   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689076   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1689077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689079   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1689080   +   end;
MPRINT(EM_DIAGRAM):   end;
1689081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689082   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1689083   +   end;
MPRINT(EM_DIAGRAM):   end;
1689084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689085   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1689086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689088   +   end;
MPRINT(EM_DIAGRAM):   end;
1689089   +end;
MPRINT(EM_DIAGRAM):   end;
1689090   +
1689091   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1689092   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1689093   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1689094   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1689095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689097   +end;
MPRINT(EM_DIAGRAM):   end;
1689098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689100   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1689101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689102   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1689103   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1689104   +   end;
MPRINT(EM_DIAGRAM):   end;
1689105   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1689106   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1689107   +   end;
MPRINT(EM_DIAGRAM):   end;
1689108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689109   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1689110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689112   +   end;
MPRINT(EM_DIAGRAM):   end;
1689113   +end;
MPRINT(EM_DIAGRAM):   end;
1689114   +
1689115   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1689116   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1689117   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1689118   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1689119   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1689120   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1689121   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1689122   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1689123   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1689124   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1689125   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1689126   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1689127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689129   +end;
MPRINT(EM_DIAGRAM):   end;
1689130   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689131   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1689132   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1689133   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689134   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1689135   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1689136   +   end;
MPRINT(EM_DIAGRAM):   end;
1689137   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1689138   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1689139   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1689140   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1689141   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1689142   +   end;
MPRINT(EM_DIAGRAM):   end;
1689143   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1689144   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1689145   +   end;
MPRINT(EM_DIAGRAM):   end;
1689146   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1689147   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1689148   +   end;
MPRINT(EM_DIAGRAM):   end;
1689149   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1689150   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1689151   +   end;
MPRINT(EM_DIAGRAM):   end;
1689152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689153   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1689154   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1689155   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1689156   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1689157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689159   +   end;
MPRINT(EM_DIAGRAM):   end;
1689160   +end;
MPRINT(EM_DIAGRAM):   end;
1689161   +
1689162   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1689163   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1689164   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1689165   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1689166   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1689167   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1689168   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1689169   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1689170   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1689171   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1689172   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1689173   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1689174   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1689175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689177   +end;
MPRINT(EM_DIAGRAM):   end;
1689178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689179   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1689180   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1689181   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689182   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1689183   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1689184   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1689185   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1689186   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1689187   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689188   +         end;
MPRINT(EM_DIAGRAM):   end;
1689189   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1689190   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1689191   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1689192   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689193   +            end;
MPRINT(EM_DIAGRAM):   end;
1689194   +         end;
MPRINT(EM_DIAGRAM):   end;
1689195   +      end;
MPRINT(EM_DIAGRAM):   end;
1689196   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1689197   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1689198   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1689199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689200   +         end;
MPRINT(EM_DIAGRAM):   end;
1689201   +      end;
MPRINT(EM_DIAGRAM):   end;
1689202   +   end;
MPRINT(EM_DIAGRAM):   end;
1689203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689204   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1689205   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1689206   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689207   +      end;
MPRINT(EM_DIAGRAM):   end;
1689208   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1689209   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1689210   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1689211   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1689212   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1689213   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1689214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689215   +         end;
MPRINT(EM_DIAGRAM):   end;
1689216   +      end;
MPRINT(EM_DIAGRAM):   end;
1689217   +   end;
MPRINT(EM_DIAGRAM):   end;
1689218   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1689219   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1689220   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1689221   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1689222   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1689223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689225   +   end;
MPRINT(EM_DIAGRAM):   end;
1689226   +end;
MPRINT(EM_DIAGRAM):   end;
1689227   +
1689228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689229   +*** Checking missing input Interval
1689230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1689231   +
1689232   +IF NMISS(
1689233   +   AcceptedCmpTotal ,
1689234   +   Age ,
1689235   +   Frq ,
1689236   +   Income ,
1689237   +   Kidhome ,
1689238   +   Mnt ,
1689239   +   MntFishProducts ,
1689240   +   MntFruits ,
1689241   +   MntGoldProds ,
1689242   +   MntMeatProducts ,
1689243   +   MntSweetProducts ,
1689244   +   MntWines ,
1689245   +   MonthsAsCustomer ,
1689246   +   NumCatalogPurchases ,
1689247   +   NumDealsPurchases ,
1689248   +   NumDistPurchases ,
1689249   +   NumStorePurchases ,
1689250   +   NumWebPurchases ,
1689251   +   NumWebVisitsMonth ,
1689252   +   RFMstat ,
1689253   +   RMntFrq ,
1689254   +   Recency ,
1689255   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1689256   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1689257   +
1689258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689259   +END;
MPRINT(EM_DIAGRAM):   END;
1689260   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689261   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1689262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689263   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689264   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1689265   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1689266   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1689267   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1689268   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1689269   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1689270   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1689271   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1689272   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1689273   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1689274   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1689275   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1689276   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1689277   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1689278   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1689279   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1689280   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1689281   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1689282   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1689283   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1689284   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1689285   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1689286   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1689287   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1689288   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1689289   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1689290   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1689291   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1689292   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1689293   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1689294   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1689295   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1689296   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1689297   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1689298   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1689299   +END;
MPRINT(EM_DIAGRAM):   END;
1689300   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689301   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1689302   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1689303   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1689304   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1689305   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1689306   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1689307   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1689308   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1689309   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1689310   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1689311   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1689312   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1689313   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1689314   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1689315   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1689316   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1689317   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1689318   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1689319   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1689320   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1689321   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1689322   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1689323   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1689324   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1689325   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1689326   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1689327   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1689328   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1689329   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1689330   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1689331   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1689332   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1689333   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1689334   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1689335   +   ELSE S_NumCatalogPurchases
1689336   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1689337   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1689338   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1689339   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1689340   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1689341   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1689342   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1689343   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1689344   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1689345   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1689346   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1689347   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1689348   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1689349   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1689350   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1689351   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1689352   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1689353   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1689354   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1689355   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1689356   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1689357   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1689358   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1689359   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1689360   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1689361   +END;
MPRINT(EM_DIAGRAM):   END;
1689362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689363   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1689364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689366   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1689367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689369   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1689370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689371   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689372   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
1689373   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
1689374   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
1689375   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
1689376   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
1689377   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
1689378   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
1689379   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
1689380   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
1689381   +          +     -0.4295354470932 * S_NumDealsPurchases
1689382   +          +    -0.08226280459837 * S_NumDistPurchases
1689383   +          +      0.2932815275833 * S_NumStorePurchases
1689384   +          +     0.19049189042599 * S_NumWebPurchases
1689385   +          +    -0.98799339280673 * S_NumWebVisitsMonth
1689386   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
1689387   +        S_RMntFrq  +     1.04348870032296 * S_Recency
1689388   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
1689389   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
1689390   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
1689391   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
1689392   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
1689393   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
1689394   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
1689395   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
1689396   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
1689397   +          +    -0.78551174413278 * Marital_StatusDivorced
1689398   +          +     1.14162836709205 * Marital_StatusMarried
1689399   +          +    -0.85471695548675 * Marital_StatusSingle
1689400   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
1689401   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
1689402   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1689403   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1689404   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1689405   +END;
MPRINT(EM_DIAGRAM):   END;
1689406   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689407   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1689408   +END;
MPRINT(EM_DIAGRAM):   END;
1689409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689410   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1689411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689412   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689413   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
1689414   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
1689415   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
1689416   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
1689417   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
1689418   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
1689419   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
1689420   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
1689421   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
1689422   +          +      0.1710743409836 * S_NumDealsPurchases
1689423   +          +     1.10019178495427 * S_NumDistPurchases
1689424   +          +     0.06701301620472 * S_NumStorePurchases
1689425   +          +    -1.47240374003368 * S_NumWebPurchases
1689426   +          +     0.38443387640949 * S_NumWebVisitsMonth
1689427   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
1689428   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
1689429   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
1689430   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
1689431   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
1689432   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
1689433   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
1689434   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
1689435   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
1689436   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
1689437   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
1689438   +          +    -0.36835980184757 * Marital_StatusDivorced
1689439   +          +     0.71718933679692 * Marital_StatusMarried
1689440   +          +    -0.35767236657055 * Marital_StatusSingle
1689441   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
1689442   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
1689443   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1689444   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1689445   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1689446   +END;
MPRINT(EM_DIAGRAM):   END;
1689447   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689448   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1689449   +END;
MPRINT(EM_DIAGRAM):   END;
1689450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689451   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1689452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689453   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689454   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
1689455   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
1689456   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
1689457   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
1689458   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
1689459   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
1689460   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
1689461   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
1689462   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
1689463   +          +    -1.99858075809796 * S_NumDealsPurchases
1689464   +          +    -0.37353682448701 * S_NumDistPurchases
1689465   +          +     1.16275863071649 * S_NumStorePurchases
1689466   +          +       -0.75936809253 * S_NumWebPurchases
1689467   +          +     2.17936226306026 * S_NumWebVisitsMonth
1689468   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
1689469   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
1689470   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
1689471   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
1689472   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
1689473   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
1689474   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
1689475   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
1689476   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
1689477   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
1689478   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
1689479   +          +     0.60036315441483 * Marital_StatusDivorced
1689480   +          +    -0.94084946353672 * Marital_StatusMarried
1689481   +          +     0.34594388147374 * Marital_StatusSingle
1689482   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
1689483   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
1689484   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1689485   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1689486   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1689487   +END;
MPRINT(EM_DIAGRAM):   END;
1689488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689489   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1689490   +END;
MPRINT(EM_DIAGRAM):   END;
1689491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689492   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1689493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689494   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689495   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
1689496   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
1689497   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
1689498   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
1689499   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1689500   +END;
MPRINT(EM_DIAGRAM):   END;
1689501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689502   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1689503   +END;
MPRINT(EM_DIAGRAM):   END;
1689504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689505   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1689506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689507   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689508   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
1689509   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
1689510   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
1689511   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
1689512   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1689513   +END;
MPRINT(EM_DIAGRAM):   END;
1689514   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689515   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1689516   +END;
MPRINT(EM_DIAGRAM):   END;
1689517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689518   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1689519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689520   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689521   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
1689522   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
1689523   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
1689524   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1689525   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1689526   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1689527   +END;
MPRINT(EM_DIAGRAM):   END;
1689528   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689529   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1689530   +END;
MPRINT(EM_DIAGRAM):   END;
1689531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689532   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1689533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689534   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1689535   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
1689536   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
1689537   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1689538   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1689539   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1689540   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1689541   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1689542   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1689543   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1689544   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1689545   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1689546   +END;
MPRINT(EM_DIAGRAM):   END;
1689547   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1689548   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1689549   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1689550   +END;
MPRINT(EM_DIAGRAM):   END;
1689551   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1689552   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1689553   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1689554   +END;
MPRINT(EM_DIAGRAM):   END;
1689555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689556   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1689557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689558   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1689559   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1689560   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1689561   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1689562   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1689563   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1689564   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1689565   +END;
MPRINT(EM_DIAGRAM):   END;
1689566   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1689567   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1689568   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1689569   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1689570   +* Renaming variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural6;
1689571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689572   +* Renaming Posterior variables for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural6;
1689573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689574   +drop AutoNeural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar1;
1689575   +AutoNeural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar1 = P_DepVar1;
1689576   +drop AutoNeural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_P_DepVar0;
1689577   +AutoNeural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural6_P_DepVar0 = P_DepVar0;
1689578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689579   +* Renaming _WARN_ variable for AutoNeural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural6;
1689580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689581   +length AutoNeural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural6_WARN_ $4;
1689582   +drop AutoNeural6_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural6_WARN_;
1689583   +AutoNeural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural6_WARN_ = _WARN_;
1689584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689585   +* Ensmbl36: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 2 of 7;
1689586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689588   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1689589   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1689590   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1689591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1689592   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1689593   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1689594   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1689595   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1689596   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1689597   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1689598   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1689599   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1689600   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1689601   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1689602   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1689603   +LENGTH _WARN_ $4
1689604   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1689605   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1689606   +
1689607   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1689608   +
1689609   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1689610   +
1689611   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1689612   +
1689613   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1689614   +
1689615   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1689616   +
1689617   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1689618   +
1689619   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1689620   +
1689621   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1689622   +
1689623   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1689624   +
1689625   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1689626   +
1689627   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1689628   +
1689629   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1689630   +
1689631   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1689632   +
1689633   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1689634   +
1689635   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1689636   +
1689637   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1689638   +
1689639   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1689640   +
1689641   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1689642   +
1689643   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1689644   +
1689645   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1689646   +
1689647   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1689648   +
1689649   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1689650   +
1689651   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1689652   +
1689653   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1689654   +
1689655   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1689656   +
1689657   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1689658   +
1689659   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1689660   +
1689661   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1689662   +
1689663   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1689664   +
1689665   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1689666   +
1689667   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1689668   +
1689669   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1689670   +
1689671   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1689672   +
1689673   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1689674   +
1689675   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1689676   +
1689677   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1689678   +
1689679   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1689680   +
1689681   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1689682   +
1689683   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1689684   +
1689685   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1689686   +
1689687   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1689688   +
1689689   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1689690   +
1689691   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1689692   +
1689693   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1689694   +
1689695   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1689696   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1689697   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1689698   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1689699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689701   +end;
MPRINT(EM_DIAGRAM):   end;
1689702   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689703   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689704   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1689705   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689706   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689707   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1689708   +   end;
MPRINT(EM_DIAGRAM):   end;
1689709   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689710   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1689711   +   end;
MPRINT(EM_DIAGRAM):   end;
1689712   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689713   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1689714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689716   +   end;
MPRINT(EM_DIAGRAM):   end;
1689717   +end;
MPRINT(EM_DIAGRAM):   end;
1689718   +
1689719   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1689720   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1689721   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1689722   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1689723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689725   +end;
MPRINT(EM_DIAGRAM):   end;
1689726   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689727   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689728   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1689729   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689730   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689731   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1689732   +   end;
MPRINT(EM_DIAGRAM):   end;
1689733   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689734   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1689735   +   end;
MPRINT(EM_DIAGRAM):   end;
1689736   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689737   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1689738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689740   +   end;
MPRINT(EM_DIAGRAM):   end;
1689741   +end;
MPRINT(EM_DIAGRAM):   end;
1689742   +
1689743   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1689744   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1689745   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1689746   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1689747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689749   +end;
MPRINT(EM_DIAGRAM):   end;
1689750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689752   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1689753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689754   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689755   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1689756   +   end;
MPRINT(EM_DIAGRAM):   end;
1689757   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689758   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1689759   +   end;
MPRINT(EM_DIAGRAM):   end;
1689760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689761   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1689762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689764   +   end;
MPRINT(EM_DIAGRAM):   end;
1689765   +end;
MPRINT(EM_DIAGRAM):   end;
1689766   +
1689767   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1689768   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1689769   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1689770   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1689771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689773   +end;
MPRINT(EM_DIAGRAM):   end;
1689774   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689775   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689776   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1689777   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689778   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689779   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1689780   +   end;
MPRINT(EM_DIAGRAM):   end;
1689781   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689782   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1689783   +   end;
MPRINT(EM_DIAGRAM):   end;
1689784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689785   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1689786   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689787   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689788   +   end;
MPRINT(EM_DIAGRAM):   end;
1689789   +end;
MPRINT(EM_DIAGRAM):   end;
1689790   +
1689791   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1689792   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1689793   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1689794   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1689795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689797   +end;
MPRINT(EM_DIAGRAM):   end;
1689798   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689799   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689800   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1689801   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689802   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689803   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1689804   +   end;
MPRINT(EM_DIAGRAM):   end;
1689805   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689806   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1689807   +   end;
MPRINT(EM_DIAGRAM):   end;
1689808   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689809   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1689810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689812   +   end;
MPRINT(EM_DIAGRAM):   end;
1689813   +end;
MPRINT(EM_DIAGRAM):   end;
1689814   +
1689815   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1689816   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1689817   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1689818   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1689819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689821   +end;
MPRINT(EM_DIAGRAM):   end;
1689822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689823   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689824   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1689825   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689826   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1689827   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1689828   +   end;
MPRINT(EM_DIAGRAM):   end;
1689829   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1689830   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1689831   +   end;
MPRINT(EM_DIAGRAM):   end;
1689832   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689833   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1689834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689836   +   end;
MPRINT(EM_DIAGRAM):   end;
1689837   +end;
MPRINT(EM_DIAGRAM):   end;
1689838   +
1689839   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1689840   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1689841   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1689842   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1689843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689845   +end;
MPRINT(EM_DIAGRAM):   end;
1689846   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689847   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1689848   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1689849   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689850   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1689851   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1689852   +   end;
MPRINT(EM_DIAGRAM):   end;
1689853   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1689854   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1689855   +   end;
MPRINT(EM_DIAGRAM):   end;
1689856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689857   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1689858   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689859   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689860   +   end;
MPRINT(EM_DIAGRAM):   end;
1689861   +end;
MPRINT(EM_DIAGRAM):   end;
1689862   +
1689863   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1689864   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1689865   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1689866   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1689867   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1689868   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1689869   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1689870   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1689871   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1689872   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1689873   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1689874   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1689875   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689876   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689877   +end;
MPRINT(EM_DIAGRAM):   end;
1689878   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689879   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1689880   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1689881   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689882   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1689883   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1689884   +   end;
MPRINT(EM_DIAGRAM):   end;
1689885   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1689886   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1689887   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1689888   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1689889   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1689890   +   end;
MPRINT(EM_DIAGRAM):   end;
1689891   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1689892   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1689893   +   end;
MPRINT(EM_DIAGRAM):   end;
1689894   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1689895   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1689896   +   end;
MPRINT(EM_DIAGRAM):   end;
1689897   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1689898   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1689899   +   end;
MPRINT(EM_DIAGRAM):   end;
1689900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689901   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1689902   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1689903   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1689904   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1689905   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689906   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689907   +   end;
MPRINT(EM_DIAGRAM):   end;
1689908   +end;
MPRINT(EM_DIAGRAM):   end;
1689909   +
1689910   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1689911   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1689912   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1689913   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1689914   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1689915   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1689916   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1689917   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1689918   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1689919   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1689920   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1689921   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1689922   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1689923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1689924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689925   +end;
MPRINT(EM_DIAGRAM):   end;
1689926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1689927   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1689928   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1689929   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1689930   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1689931   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1689932   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1689933   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1689934   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1689935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689936   +         end;
MPRINT(EM_DIAGRAM):   end;
1689937   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1689938   +            if _dm8 = 'MARRIED'  then do;
The SAS System
 
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1689939   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1689940   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689941   +            end;
MPRINT(EM_DIAGRAM):   end;
1689942   +         end;
MPRINT(EM_DIAGRAM):   end;
1689943   +      end;
MPRINT(EM_DIAGRAM):   end;
1689944   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1689945   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1689946   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1689947   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689948   +         end;
MPRINT(EM_DIAGRAM):   end;
1689949   +      end;
MPRINT(EM_DIAGRAM):   end;
1689950   +   end;
MPRINT(EM_DIAGRAM):   end;
1689951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1689952   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1689953   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1689954   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689955   +      end;
MPRINT(EM_DIAGRAM):   end;
1689956   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1689957   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1689958   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1689959   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1689960   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1689961   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1689962   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1689963   +         end;
MPRINT(EM_DIAGRAM):   end;
1689964   +      end;
MPRINT(EM_DIAGRAM):   end;
1689965   +   end;
MPRINT(EM_DIAGRAM):   end;
1689966   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1689967   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1689968   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1689969   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1689970   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1689971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1689972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1689973   +   end;
MPRINT(EM_DIAGRAM):   end;
1689974   +end;
MPRINT(EM_DIAGRAM):   end;
1689975   +
1689976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1689977   +*** Checking missing input Interval
1689978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1689979   +
1689980   +IF NMISS(
1689981   +   AcceptedCmpTotal ,
1689982   +   Age ,
1689983   +   Frq ,
1689984   +   Income ,
1689985   +   Kidhome ,
1689986   +   Mnt ,
1689987   +   MntFishProducts ,
1689988   +   MntFruits ,
1689989   +   MntGoldProds ,
1689990   +   MntMeatProducts ,
1689991   +   MntSweetProducts ,
1689992   +   MntWines ,
1689993   +   MonthsAsCustomer ,
1689994   +   NumCatalogPurchases ,
1689995   +   NumDealsPurchases ,
1689996   +   NumDistPurchases ,
1689997   +   NumStorePurchases ,
1689998   +   NumWebPurchases ,
1689999   +   NumWebVisitsMonth ,
1690000   +   RFMstat ,
1690001   +   RMntFrq ,
1690002   +   Recency ,
1690003   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1690004   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1690005   +
1690006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690007   +END;
MPRINT(EM_DIAGRAM):   END;
1690008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690009   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1690010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690012   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1690013   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1690014   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1690015   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1690016   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1690017   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1690018   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1690019   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1690020   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1690021   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1690022   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1690023   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1690024   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1690025   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1690026   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1690027   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1690028   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1690029   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1690030   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1690031   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1690032   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1690033   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1690034   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1690035   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1690036   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1690037   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1690038   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1690039   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1690040   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1690041   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1690042   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1690043   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1690044   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1690045   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1690046   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1690047   +END;
MPRINT(EM_DIAGRAM):   END;
1690048   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690049   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1690050   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1690051   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1690052   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1690053   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1690054   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1690055   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1690056   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1690057   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1690058   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1690059   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1690060   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1690061   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1690062   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1690063   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1690064   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1690065   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1690066   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1690067   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1690068   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1690069   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1690070   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1690071   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1690072   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1690073   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1690074   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1690075   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1690076   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1690077   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1690078   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1690079   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1690080   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1690081   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1690082   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1690083   +   ELSE S_NumCatalogPurchases
1690084   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1690085   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1690086   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1690087   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1690088   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1690089   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1690090   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1690091   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1690092   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1690093   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1690094   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1690095   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1690096   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1690097   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1690098   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1690099   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1690100   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1690101   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1690102   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1690103   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1690104   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1690105   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1690106   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1690107   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1690108   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1690109   +END;
MPRINT(EM_DIAGRAM):   END;
1690110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690111   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1690112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690114   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1690115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690117   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1690118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690119   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690120   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1690121   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1690122   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1690123   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1690124   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1690125   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1690126   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1690127   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1690128   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1690129   +          +     0.09708841024031 * S_NumDealsPurchases
1690130   +          +    -0.29075561032014 * S_NumDistPurchases
1690131   +          +    -0.14495394259873 * S_NumStorePurchases
1690132   +          +     0.11890705145732 * S_NumWebPurchases
1690133   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1690134   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1690135   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1690136   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1690137   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1690138   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1690139   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1690140   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1690141   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1690142   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1690143   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1690144   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1690145   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1690146   +          +     0.16274478997892 * S_NumDealsPurchases
1690147   +          +     0.03966958784582 * S_NumDistPurchases
1690148   +          +    -0.04714110726598 * S_NumStorePurchases
1690149   +          +    -0.02124229528082 * S_NumWebPurchases
1690150   +          +     0.29753299776832 * S_NumWebVisitsMonth
1690151   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1690152   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1690153   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1690154   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1690155   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1690156   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1690157   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1690158   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1690159   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1690160   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1690161   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1690162   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1690163   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1690164   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1690165   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1690166   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1690167   +          +    -0.05037639679806 * Marital_StatusDivorced
1690168   +          +     0.28781968727878 * Marital_StatusMarried
1690169   +          +    -0.20382417074384 * Marital_StatusSingle
1690170   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1690171   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1690172   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1690173   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1690174   +          +     0.06970969219123 * Marital_StatusDivorced
1690175   +          +    -0.15787475744986 * Marital_StatusMarried
1690176   +          +     0.14345344072192 * Marital_StatusSingle
1690177   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1690178   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1690179   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1690180   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1690181   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1690182   +END;
MPRINT(EM_DIAGRAM):   END;
1690183   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690184   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1690185   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1690186   +END;
MPRINT(EM_DIAGRAM):   END;
1690187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690188   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1690189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690190   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690191   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1690192   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1690193   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1690194   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1690195   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1690196   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1690197   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1690198   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1690199   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1690200   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1690201   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1690202   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1690203   +END;
MPRINT(EM_DIAGRAM):   END;
1690204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690205   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1690206   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1690207   +END;
MPRINT(EM_DIAGRAM):   END;
1690208   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1690209   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1690210   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1690211   +END;
MPRINT(EM_DIAGRAM):   END;
1690212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690213   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1690214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690215   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1690216   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1690217   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1690218   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1690219   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1690220   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1690221   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1690222   +END;
MPRINT(EM_DIAGRAM):   END;
1690223   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1690224   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1690225   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1690226   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1690227   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1690228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690229   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1690230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690231   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1690232   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1690233   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1690234   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1690235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690236   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1690237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690238   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1690239   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1690240   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1690241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690242   +* Ensmbl36: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 3 of 7;
1690243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690245   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1690246   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1690247   +* NODE: AutoNeural8;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural8;
1690248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1690249   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1690250   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1690251   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1690252   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1690253   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1690254   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1690255   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1690256   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1690257   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1690258   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1690259   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1690260   +LENGTH _WARN_ $4
1690261   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1690262   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1690263   +
1690264   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1690265   +
1690266   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1690267   +
1690268   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1690269   +
1690270   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1690271   +
1690272   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1690273   +
1690274   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1690275   +
1690276   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1690277   +
1690278   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1690279   +
1690280   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1690281   +
1690282   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1690283   +
1690284   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1690285   +
1690286   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1690287   +
1690288   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1690289   +
1690290   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1690291   +
1690292   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1690293   +
1690294   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1690295   +
1690296   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1690297   +
1690298   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1690299   +
1690300   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1690301   +
1690302   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1690303   +
1690304   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1690305   +
1690306   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1690307   +
1690308   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1690309   +
1690310   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1690311   +
1690312   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1690313   +
1690314   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1690315   +
1690316   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1690317   +
1690318   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1690319   +
1690320   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1690321   +
1690322   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1690323   +
1690324   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1690325   +
1690326   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1690327   +
1690328   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1690329   +
1690330   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1690331   +
1690332   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1690333   +
1690334   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1690335   +
1690336   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1690337   +
1690338   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1690339   +
1690340   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1690341   +
1690342   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1690343   +
1690344   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1690345   +
1690346   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1690347   +
1690348   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1690349   +
1690350   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1690351   +
1690352   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1690353   +
1690354   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1690355   +
1690356   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1690357   +
1690358   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1690359   +
1690360   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1690361   +
1690362   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1690363   +
1690364   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1690365   +
1690366   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1690367   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1690368   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1690369   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1690370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690372   +end;
MPRINT(EM_DIAGRAM):   end;
1690373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690375   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1690376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690378   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1690379   +   end;
MPRINT(EM_DIAGRAM):   end;
1690380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690381   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1690382   +   end;
MPRINT(EM_DIAGRAM):   end;
1690383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690384   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1690385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690387   +   end;
MPRINT(EM_DIAGRAM):   end;
1690388   +end;
MPRINT(EM_DIAGRAM):   end;
1690389   +
1690390   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1690391   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1690392   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1690393   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1690394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690396   +end;
MPRINT(EM_DIAGRAM):   end;
1690397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690399   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1690400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690402   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1690403   +   end;
MPRINT(EM_DIAGRAM):   end;
1690404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690405   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1690406   +   end;
MPRINT(EM_DIAGRAM):   end;
1690407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690408   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1690409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690411   +   end;
MPRINT(EM_DIAGRAM):   end;
1690412   +end;
MPRINT(EM_DIAGRAM):   end;
1690413   +
1690414   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1690415   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1690416   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1690417   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1690418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690420   +end;
MPRINT(EM_DIAGRAM):   end;
1690421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690423   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1690424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690426   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1690427   +   end;
MPRINT(EM_DIAGRAM):   end;
1690428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690429   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1690430   +   end;
MPRINT(EM_DIAGRAM):   end;
1690431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690432   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1690433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690435   +   end;
MPRINT(EM_DIAGRAM):   end;
1690436   +end;
MPRINT(EM_DIAGRAM):   end;
1690437   +
1690438   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1690439   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1690440   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1690441   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1690442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690444   +end;
MPRINT(EM_DIAGRAM):   end;
1690445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690447   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1690448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690449   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690450   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1690451   +   end;
MPRINT(EM_DIAGRAM):   end;
1690452   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690453   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1690454   +   end;
MPRINT(EM_DIAGRAM):   end;
1690455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690456   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1690457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690459   +   end;
MPRINT(EM_DIAGRAM):   end;
1690460   +end;
MPRINT(EM_DIAGRAM):   end;
1690461   +
1690462   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1690463   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1690464   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1690465   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1690466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690468   +end;
MPRINT(EM_DIAGRAM):   end;
1690469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690471   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1690472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690474   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1690475   +   end;
MPRINT(EM_DIAGRAM):   end;
1690476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690477   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1690478   +   end;
MPRINT(EM_DIAGRAM):   end;
1690479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690480   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1690481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690483   +   end;
MPRINT(EM_DIAGRAM):   end;
1690484   +end;
MPRINT(EM_DIAGRAM):   end;
1690485   +
1690486   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1690487   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1690488   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1690489   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1690490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690492   +end;
MPRINT(EM_DIAGRAM):   end;
1690493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690495   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1690496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1690498   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1690499   +   end;
MPRINT(EM_DIAGRAM):   end;
1690500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1690501   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1690502   +   end;
MPRINT(EM_DIAGRAM):   end;
1690503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690504   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1690505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690507   +   end;
MPRINT(EM_DIAGRAM):   end;
1690508   +end;
MPRINT(EM_DIAGRAM):   end;
1690509   +
1690510   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1690511   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1690512   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1690513   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1690514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690515   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690516   +end;
MPRINT(EM_DIAGRAM):   end;
1690517   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1690519   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1690520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690521   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1690522   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1690523   +   end;
MPRINT(EM_DIAGRAM):   end;
1690524   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1690525   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1690526   +   end;
MPRINT(EM_DIAGRAM):   end;
1690527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690528   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1690529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690531   +   end;
MPRINT(EM_DIAGRAM):   end;
1690532   +end;
MPRINT(EM_DIAGRAM):   end;
1690533   +
1690534   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1690535   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1690536   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1690537   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1690538   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1690539   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1690540   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1690541   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1690542   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1690543   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1690544   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1690545   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1690546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690548   +end;
MPRINT(EM_DIAGRAM):   end;
1690549   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690550   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1690551   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1690552   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690553   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1690554   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1690555   +   end;
MPRINT(EM_DIAGRAM):   end;
1690556   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1690557   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1690558   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1690559   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1690560   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1690561   +   end;
MPRINT(EM_DIAGRAM):   end;
1690562   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1690563   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1690564   +   end;
MPRINT(EM_DIAGRAM):   end;
1690565   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1690566   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1690567   +   end;
MPRINT(EM_DIAGRAM):   end;
1690568   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1690569   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1690570   +   end;
MPRINT(EM_DIAGRAM):   end;
1690571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690572   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1690573   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1690574   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1690575   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1690576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690578   +   end;
MPRINT(EM_DIAGRAM):   end;
1690579   +end;
MPRINT(EM_DIAGRAM):   end;
1690580   +
1690581   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1690582   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1690583   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1690584   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1690585   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1690586   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1690587   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1690588   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1690589   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1690590   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1690591   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1690592   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1690593   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1690594   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1690595   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690596   +end;
MPRINT(EM_DIAGRAM):   end;
1690597   +else do;
MPRINT(EM_DIAGRAM):   else do;
1690598   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1690599   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1690600   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1690601   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1690602   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1690603   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1690604   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1690605   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1690606   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1690607   +         end;
MPRINT(EM_DIAGRAM):   end;
1690608   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1690609   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1690610   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1690611   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1690612   +            end;
MPRINT(EM_DIAGRAM):   end;
1690613   +         end;
MPRINT(EM_DIAGRAM):   end;
1690614   +      end;
MPRINT(EM_DIAGRAM):   end;
1690615   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1690616   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1690617   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1690618   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1690619   +         end;
MPRINT(EM_DIAGRAM):   end;
1690620   +      end;
MPRINT(EM_DIAGRAM):   end;
1690621   +   end;
MPRINT(EM_DIAGRAM):   end;
1690622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1690623   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1690624   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1690625   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1690626   +      end;
MPRINT(EM_DIAGRAM):   end;
1690627   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1690628   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1690629   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1690630   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1690631   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1690632   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1690633   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1690634   +         end;
MPRINT(EM_DIAGRAM):   end;
1690635   +      end;
MPRINT(EM_DIAGRAM):   end;
1690636   +   end;
MPRINT(EM_DIAGRAM):   end;
1690637   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1690638   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1690639   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1690640   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1690641   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1690642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1690643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690644   +   end;
MPRINT(EM_DIAGRAM):   end;
1690645   +end;
MPRINT(EM_DIAGRAM):   end;
1690646   +
1690647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690648   +*** Checking missing input Interval
1690649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1690650   +
1690651   +IF NMISS(
1690652   +   AcceptedCmpTotal ,
1690653   +   Age ,
1690654   +   Frq ,
1690655   +   Income ,
1690656   +   Kidhome ,
1690657   +   Mnt ,
1690658   +   MntFishProducts ,
1690659   +   MntFruits ,
1690660   +   MntGoldProds ,
1690661   +   MntMeatProducts ,
1690662   +   MntSweetProducts ,
1690663   +   MntWines ,
1690664   +   MonthsAsCustomer ,
1690665   +   NumCatalogPurchases ,
1690666   +   NumDealsPurchases ,
1690667   +   NumDistPurchases ,
1690668   +   NumStorePurchases ,
1690669   +   NumWebPurchases ,
1690670   +   NumWebVisitsMonth ,
1690671   +   RFMstat ,
1690672   +   RMntFrq ,
1690673   +   Recency ,
1690674   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1690675   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1690676   +
1690677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1690678   +END;
MPRINT(EM_DIAGRAM):   END;
1690679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690680   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1690681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690682   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690683   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1690684   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1690685   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1690686   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1690687   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1690688   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1690689   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1690690   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1690691   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1690692   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1690693   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1690694   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1690695   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1690696   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1690697   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1690698   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1690699   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1690700   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1690701   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1690702   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1690703   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1690704   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1690705   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1690706   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1690707   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1690708   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1690709   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1690710   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1690711   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1690712   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1690713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1690714   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1690715   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1690716   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1690717   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1690718   +END;
MPRINT(EM_DIAGRAM):   END;
1690719   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690720   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1690721   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1690722   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1690723   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1690724   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1690725   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1690726   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1690727   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1690728   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1690729   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1690730   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1690731   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1690732   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1690733   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1690734   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1690735   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1690736   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1690737   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1690738   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1690739   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1690740   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1690741   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1690742   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1690743   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1690744   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1690745   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1690746   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1690747   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1690748   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1690749   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1690750   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1690751   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1690752   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1690753   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1690754   +   ELSE S_NumCatalogPurchases
1690755   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1690756   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1690757   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1690758   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1690759   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1690760   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1690761   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1690762   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1690763   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1690764   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1690765   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1690766   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1690767   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1690768   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1690769   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1690770   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1690771   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1690772   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1690773   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1690774   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1690775   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1690776   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1690777   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1690778   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1690779   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1690780   +END;
MPRINT(EM_DIAGRAM):   END;
1690781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690782   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1690783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690785   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1690786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690788   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1690789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690791   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
1690792   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
1690793   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
1690794   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
1690795   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
1690796   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
1690797   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
1690798   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
1690799   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
1690800   +          +     0.76573417773216 * S_NumDealsPurchases
1690801   +          +     0.22648400529885 * S_NumDistPurchases
1690802   +          +     1.21720286527592 * S_NumStorePurchases
1690803   +          +     0.60948566229097 * S_NumWebPurchases
1690804   +          +    -2.18126452011089 * S_NumWebVisitsMonth
1690805   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
1690806   +        S_RMntFrq  +     2.00816730203973 * S_Recency
1690807   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
1690808   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
1690809   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
1690810   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
1690811   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
1690812   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
1690813   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
1690814   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
1690815   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
1690816   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
1690817   +          +    -1.52828428070828 * S_NumDealsPurchases
1690818   +          +    -0.01775178145113 * S_NumDistPurchases
1690819   +          +     1.11531198663491 * S_NumStorePurchases
1690820   +          +     1.79501098452904 * S_NumWebPurchases
1690821   +          +     -0.7392686013605 * S_NumWebVisitsMonth
1690822   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
1690823   +        S_RMntFrq  +     0.68917175969495 * S_Recency
1690824   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
1690825   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
1690826   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
1690827   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
1690828   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
1690829   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
1690830   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
1690831   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
1690832   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
1690833   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
1690834   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
1690835   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
1690836   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
1690837   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
1690838   +          +    -1.56926331102732 * Marital_StatusDivorced
1690839   +          +     2.38562782588323 * Marital_StatusMarried
1690840   +          +    -1.91012008029228 * Marital_StatusSingle
1690841   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
1690842   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
1690843   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
1690844   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
1690845   +          +     0.39329538853368 * Marital_StatusDivorced
1690846   +          +       0.055543492668 * Marital_StatusMarried
1690847   +          +    -0.36260663573441 * Marital_StatusSingle
1690848   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
1690849   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
1690850   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
1690851   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1690852   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1690853   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1690854   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1690855   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1690856   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1690857   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1690858   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1690859   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1690860   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1690861   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1690862   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1690863   +END;
MPRINT(EM_DIAGRAM):   END;
1690864   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690865   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1690866   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1690867   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1690868   +END;
MPRINT(EM_DIAGRAM):   END;
1690869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690870   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1690871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690872   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690873   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
1690874   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
1690875   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
1690876   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
1690877   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
1690878   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
1690879   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
1690880   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
1690881   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
1690882   +          +    -0.41717905931734 * S_NumDealsPurchases
1690883   +          +    -0.48750443671176 * S_NumDistPurchases
1690884   +          +      1.9775770151507 * S_NumStorePurchases
1690885   +          +    -0.43534422425416 * S_NumWebPurchases
1690886   +          +    -1.48049451059329 * S_NumWebVisitsMonth
1690887   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
1690888   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
1690889   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
1690890   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
1690891   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
1690892   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
1690893   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
1690894   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
1690895   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
1690896   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
1690897   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
1690898   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
1690899   +          +     0.76267091632012 * S_NumDealsPurchases
1690900   +          +     1.55118513069849 * S_NumDistPurchases
1690901   +          +       1.649962776028 * S_NumStorePurchases
1690902   +          +    -0.27453335733875 * S_NumWebPurchases
1690903   +          +     0.26599210649756 * S_NumWebVisitsMonth
1690904   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
1690905   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
1690906   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
1690907   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
1690908   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
1690909   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
1690910   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
1690911   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
1690912   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
1690913   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
1690914   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
1690915   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
1690916   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
1690917   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
1690918   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
1690919   +        EducationGraduation  +     0.24617525366101 * EducationMaster
1690920   +          +    -1.84502099308633 * Marital_StatusDivorced
1690921   +          +     0.16524535969204 * Marital_StatusMarried
1690922   +          +     0.01375012857393 * Marital_StatusSingle
1690923   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
1690924   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
1690925   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
1690926   +        EducationGraduation  +      0.6427794380992 * EducationMaster
1690927   +          +     0.18210930140238 * Marital_StatusDivorced
1690928   +          +    -1.49615662968181 * Marital_StatusMarried
1690929   +          +     1.61043484549536 * Marital_StatusSingle
1690930   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
1690931   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
1690932   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
1690933   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1690934   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1690935   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1690936   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1690937   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1690938   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1690939   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1690940   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1690941   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1690942   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1690943   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1690944   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1690945   +END;
MPRINT(EM_DIAGRAM):   END;
1690946   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690947   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1690948   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1690949   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1690950   +END;
MPRINT(EM_DIAGRAM):   END;
1690951   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690952   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1690953   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690954   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690955   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
1690956   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
1690957   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
1690958   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
1690959   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
1690960   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
1690961   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
1690962   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
1690963   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
1690964   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
1690965   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
1690966   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
1690967   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
1690968   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
1690969   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
1690970   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1690971   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1690972   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1690973   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1690974   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1690975   +END;
MPRINT(EM_DIAGRAM):   END;
1690976   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690977   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1690978   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1690979   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1690980   +END;
MPRINT(EM_DIAGRAM):   END;
1690981   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690982   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1690983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1690984   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1690985   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
1690986   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
1690987   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
1690988   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1690989   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1690990   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1690991   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1690992   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1690993   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1690994   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1690995   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1690996   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1690997   +END;
MPRINT(EM_DIAGRAM):   END;
1690998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1690999   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1691000   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1691001   +END;
MPRINT(EM_DIAGRAM):   END;
1691002   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1691003   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1691004   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1691005   +END;
MPRINT(EM_DIAGRAM):   END;
1691006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691007   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1691008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691009   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1691010   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1691011   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1691012   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1691013   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1691014   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1691015   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1691016   +END;
MPRINT(EM_DIAGRAM):   END;
1691017   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1691018   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1691019   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1691020   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1691021   +* Renaming variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural8;
1691022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691023   +* Renaming Posterior variables for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural8;
1691024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691025   +drop AutoNeural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar1;
1691026   +AutoNeural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar1 = P_DepVar1;
1691027   +drop AutoNeural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_P_DepVar0;
1691028   +AutoNeural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural8_P_DepVar0 = P_DepVar0;
1691029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691030   +* Renaming _WARN_ variable for AutoNeural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural8;
1691031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691032   +length AutoNeural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural8_WARN_ $4;
1691033   +drop AutoNeural8_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural8_WARN_;
1691034   +AutoNeural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural8_WARN_ = _WARN_;
1691035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691036   +* Ensmbl36: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 4 of 7;
1691037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691039   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1691040   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1691041   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1691042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1691043   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1691044   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1691045   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1691046   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1691047   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1691048   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1691049   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1691050   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1691051   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1691052   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1691053   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1691054   +LENGTH _WARN_ $4
1691055   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1691056   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1691057   +
1691058   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1691059   +
1691060   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1691061   +
1691062   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1691063   +
1691064   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1691065   +
1691066   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1691067   +
1691068   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1691069   +
1691070   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1691071   +
1691072   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1691073   +
1691074   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1691075   +
1691076   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1691077   +
1691078   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1691079   +
1691080   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1691081   +
1691082   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1691083   +
1691084   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1691085   +
1691086   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1691087   +
1691088   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1691089   +
1691090   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1691091   +
1691092   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1691093   +
1691094   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1691095   +
1691096   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1691097   +
1691098   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1691099   +
1691100   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1691101   +
1691102   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1691103   +
1691104   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1691105   +
1691106   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1691107   +
1691108   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1691109   +
1691110   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1691111   +
1691112   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1691113   +
1691114   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1691115   +
1691116   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1691117   +
1691118   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1691119   +
1691120   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1691121   +
1691122   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1691123   +
1691124   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1691125   +
1691126   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1691127   +
1691128   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1691129   +
1691130   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1691131   +
1691132   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1691133   +
1691134   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1691135   +
1691136   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1691137   +
1691138   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1691139   +
1691140   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1691141   +
1691142   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1691143   +
1691144   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1691145   +
1691146   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1691147   +
1691148   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1691149   +
1691150   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1691151   +
1691152   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1691153   +
1691154   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1691155   +
1691156   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1691157   +
1691158   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1691159   +
1691160   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1691161   +
1691162   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1691163   +
1691164   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1691165   +
1691166   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1691167   +
1691168   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1691169   +
1691170   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1691171   +
1691172   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1691173   +
1691174   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1691175   +
1691176   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1691177   +
1691178   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1691179   +
1691180   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1691181   +
1691182   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1691183   +
1691184   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1691185   +
1691186   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1691187   +
1691188   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1691189   +
1691190   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1691191   +
1691192   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1691193   +
1691194   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1691195   +
1691196   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1691197   +
1691198   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1691199   +
1691200   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1691201   +
1691202   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1691203   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1691204   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1691205   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1691206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691208   +end;
MPRINT(EM_DIAGRAM):   end;
1691209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691211   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1691212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691213   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691214   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1691215   +   end;
MPRINT(EM_DIAGRAM):   end;
1691216   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691217   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1691218   +   end;
MPRINT(EM_DIAGRAM):   end;
1691219   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691220   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1691221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691223   +   end;
MPRINT(EM_DIAGRAM):   end;
1691224   +end;
MPRINT(EM_DIAGRAM):   end;
1691225   +
1691226   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1691227   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1691228   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1691229   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1691230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691232   +end;
MPRINT(EM_DIAGRAM):   end;
1691233   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691235   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1691236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691237   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691238   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1691239   +   end;
MPRINT(EM_DIAGRAM):   end;
1691240   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691241   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1691242   +   end;
MPRINT(EM_DIAGRAM):   end;
1691243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691244   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1691245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691247   +   end;
MPRINT(EM_DIAGRAM):   end;
1691248   +end;
MPRINT(EM_DIAGRAM):   end;
1691249   +
1691250   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1691251   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1691252   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1691253   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1691254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691256   +end;
MPRINT(EM_DIAGRAM):   end;
1691257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691259   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1691260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691261   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691262   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1691263   +   end;
MPRINT(EM_DIAGRAM):   end;
1691264   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691265   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1691266   +   end;
MPRINT(EM_DIAGRAM):   end;
1691267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691268   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1691269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691271   +   end;
MPRINT(EM_DIAGRAM):   end;
1691272   +end;
MPRINT(EM_DIAGRAM):   end;
1691273   +
1691274   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1691275   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1691276   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1691277   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1691278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691280   +end;
MPRINT(EM_DIAGRAM):   end;
1691281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691283   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1691284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691285   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691286   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1691287   +   end;
MPRINT(EM_DIAGRAM):   end;
1691288   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691289   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1691290   +   end;
MPRINT(EM_DIAGRAM):   end;
1691291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691292   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1691293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691295   +   end;
MPRINT(EM_DIAGRAM):   end;
1691296   +end;
MPRINT(EM_DIAGRAM):   end;
1691297   +
1691298   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1691299   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1691300   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1691301   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1691302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691304   +end;
MPRINT(EM_DIAGRAM):   end;
1691305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691307   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1691308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691309   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691310   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1691311   +   end;
MPRINT(EM_DIAGRAM):   end;
1691312   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691313   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1691314   +   end;
MPRINT(EM_DIAGRAM):   end;
1691315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691316   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1691317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691319   +   end;
MPRINT(EM_DIAGRAM):   end;
1691320   +end;
MPRINT(EM_DIAGRAM):   end;
1691321   +
1691322   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1691323   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1691324   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1691325   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1691326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691328   +end;
MPRINT(EM_DIAGRAM):   end;
1691329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691331   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1691332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1691334   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1691335   +   end;
MPRINT(EM_DIAGRAM):   end;
1691336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1691337   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1691338   +   end;
MPRINT(EM_DIAGRAM):   end;
1691339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691340   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1691341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691343   +   end;
MPRINT(EM_DIAGRAM):   end;
1691344   +end;
MPRINT(EM_DIAGRAM):   end;
1691345   +
1691346   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1691347   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1691348   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1691349   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1691350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691352   +end;
MPRINT(EM_DIAGRAM):   end;
1691353   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1691355   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1691356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691357   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1691358   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1691359   +   end;
MPRINT(EM_DIAGRAM):   end;
1691360   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1691361   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1691362   +   end;
MPRINT(EM_DIAGRAM):   end;
1691363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691364   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1691365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691367   +   end;
MPRINT(EM_DIAGRAM):   end;
1691368   +end;
MPRINT(EM_DIAGRAM):   end;
1691369   +
1691370   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1691371   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1691372   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1691373   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1691374   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1691375   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1691376   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1691377   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1691378   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1691379   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1691380   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1691381   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1691382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691384   +end;
MPRINT(EM_DIAGRAM):   end;
1691385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691386   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1691387   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1691388   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691389   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1691390   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1691391   +   end;
MPRINT(EM_DIAGRAM):   end;
1691392   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1691393   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1691394   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1691395   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1691396   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1691397   +   end;
MPRINT(EM_DIAGRAM):   end;
1691398   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1691399   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1691400   +   end;
MPRINT(EM_DIAGRAM):   end;
1691401   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1691402   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1691403   +   end;
MPRINT(EM_DIAGRAM):   end;
1691404   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1691405   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1691406   +   end;
MPRINT(EM_DIAGRAM):   end;
1691407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691408   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1691409   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1691410   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1691411   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1691412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691414   +   end;
MPRINT(EM_DIAGRAM):   end;
1691415   +end;
MPRINT(EM_DIAGRAM):   end;
1691416   +
1691417   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1691418   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1691419   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1691420   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1691421   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1691422   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1691423   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1691424   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1691425   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1691426   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1691427   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1691428   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1691429   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1691430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1691431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691432   +end;
MPRINT(EM_DIAGRAM):   end;
1691433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1691434   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1691435   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1691436   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1691437   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1691438   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1691439   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1691440   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1691441   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1691442   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1691443   +         end;
MPRINT(EM_DIAGRAM):   end;
1691444   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1691445   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1691446   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1691447   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1691448   +            end;
MPRINT(EM_DIAGRAM):   end;
1691449   +         end;
MPRINT(EM_DIAGRAM):   end;
1691450   +      end;
MPRINT(EM_DIAGRAM):   end;
1691451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1691452   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1691453   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1691454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1691455   +         end;
MPRINT(EM_DIAGRAM):   end;
1691456   +      end;
MPRINT(EM_DIAGRAM):   end;
1691457   +   end;
MPRINT(EM_DIAGRAM):   end;
1691458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1691459   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1691460   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1691461   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1691462   +      end;
MPRINT(EM_DIAGRAM):   end;
1691463   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1691464   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1691465   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1691466   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1691467   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1691468   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1691469   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1691470   +         end;
MPRINT(EM_DIAGRAM):   end;
1691471   +      end;
MPRINT(EM_DIAGRAM):   end;
1691472   +   end;
MPRINT(EM_DIAGRAM):   end;
1691473   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1691474   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1691475   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1691476   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1691477   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1691478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1691479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691480   +   end;
MPRINT(EM_DIAGRAM):   end;
1691481   +end;
MPRINT(EM_DIAGRAM):   end;
1691482   +
1691483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691484   +*** Checking missing input Interval
1691485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1691486   +
1691487   +IF NMISS(
1691488   +   AcceptedCmpTotal ,
1691489   +   Age ,
1691490   +   Frq ,
1691491   +   Income ,
1691492   +   Kidhome ,
1691493   +   Mnt ,
1691494   +   MntFishProducts ,
1691495   +   MntFruits ,
1691496   +   MntGoldProds ,
1691497   +   MntMeatProducts ,
1691498   +   MntSweetProducts ,
1691499   +   MntWines ,
1691500   +   MonthsAsCustomer ,
1691501   +   NumCatalogPurchases ,
1691502   +   NumDealsPurchases ,
1691503   +   NumDistPurchases ,
1691504   +   NumStorePurchases ,
1691505   +   NumWebPurchases ,
1691506   +   NumWebVisitsMonth ,
1691507   +   RFMstat ,
1691508   +   RMntFrq ,
1691509   +   Recency ,
1691510   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1691511   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1691512   +
1691513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1691514   +END;
MPRINT(EM_DIAGRAM):   END;
1691515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691516   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1691517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691518   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1691519   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1691520   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1691521   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1691522   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1691523   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1691524   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1691525   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1691526   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1691527   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1691528   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1691529   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1691530   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1691531   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1691532   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1691533   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1691534   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1691535   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1691536   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1691537   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1691538   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1691539   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1691540   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1691541   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1691542   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1691543   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1691544   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1691545   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1691546   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1691547   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1691548   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1691549   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1691550   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1691551   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1691552   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1691553   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1691554   +END;
MPRINT(EM_DIAGRAM):   END;
1691555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1691556   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1691557   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1691558   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1691559   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1691560   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1691561   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1691562   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1691563   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1691564   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1691565   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1691566   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1691567   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1691568   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1691569   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1691570   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1691571   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1691572   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1691573   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1691574   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1691575   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1691576   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1691577   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1691578   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1691579   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1691580   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1691581   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1691582   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1691583   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1691584   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1691585   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1691586   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1691587   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1691588   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1691589   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1691590   +   ELSE S_NumCatalogPurchases
1691591   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1691592   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1691593   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1691594   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1691595   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1691596   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1691597   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1691598   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1691599   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1691600   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1691601   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1691602   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1691603   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1691604   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1691605   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1691606   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1691607   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1691608   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1691609   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1691610   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1691611   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1691612   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1691613   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1691614   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1691615   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1691616   +END;
MPRINT(EM_DIAGRAM):   END;
1691617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691618   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1691619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691621   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1691622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691624   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1691625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691626   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1691627   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1691628   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1691629   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1691630   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1691631   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1691632   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1691633   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1691634   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1691635   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1691636   +          +     3.45371614080196 * S_NumDealsPurchases
1691637   +          +     0.19118374544537 * S_NumDistPurchases
1691638   +          +    -2.45138001446793 * S_NumStorePurchases
1691639   +          +    -0.11424280244155 * S_NumWebPurchases
1691640   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1691641   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1691642   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1691643   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1691644   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1691645   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1691646   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1691647   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1691648   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1691649   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1691650   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1691651   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1691652   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1691653   +          +    -1.28390925647659 * S_NumDealsPurchases
1691654   +          +     0.82669177239926 * S_NumDistPurchases
1691655   +          +     1.71678585204511 * S_NumStorePurchases
1691656   +          +     1.49226295608046 * S_NumWebPurchases
1691657   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1691658   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1691659   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1691660   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1691661   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1691662   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1691663   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1691664   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1691665   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1691666   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1691667   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1691668   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1691669   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1691670   +          +     0.22958626391725 * S_NumDealsPurchases
1691671   +          +    -0.02046515813996 * S_NumDistPurchases
1691672   +          +      0.8618502050837 * S_NumStorePurchases
1691673   +          +     1.45175370326009 * S_NumWebPurchases
1691674   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1691675   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1691676   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1691677   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1691678   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1691679   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1691680   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1691681   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1691682   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1691683   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1691684   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1691685   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1691686   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1691687   +          +     1.25310034610344 * S_NumDealsPurchases
1691688   +          +     0.92141098602176 * S_NumDistPurchases
1691689   +          +    -0.08806509391473 * S_NumStorePurchases
1691690   +          +     -1.0533787624668 * S_NumWebPurchases
1691691   +          +     3.07050739830585 * S_NumWebVisitsMonth
1691692   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1691693   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1691694   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1691695   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1691696   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1691697   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1691698   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1691699   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1691700   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1691701   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1691702   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1691703   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1691704   +          +    -1.68259553608287 * S_NumDealsPurchases
1691705   +          +    -0.53835572290445 * S_NumDistPurchases
1691706   +          +     1.25833922835446 * S_NumStorePurchases
1691707   +          +     0.48300830623998 * S_NumWebPurchases
1691708   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1691709   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1691710   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1691711   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1691712   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1691713   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1691714   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1691715   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1691716   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1691717   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1691718   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1691719   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1691720   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1691721   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1691722   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1691723   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1691724   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1691725   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1691726   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1691727   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1691728   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1691729   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1691730   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1691731   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1691732   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1691733   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1691734   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1691735   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1691736   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1691737   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1691738   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1691739   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1691740   +          +     0.26230568150721 * Marital_StatusDivorced
1691741   +          +     0.27563523967756 * Marital_StatusMarried
1691742   +          +     0.54464481618478 * Marital_StatusSingle
1691743   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1691744   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1691745   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1691746   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1691747   +          +    -0.06750661313108 * Marital_StatusDivorced
1691748   +          +     1.48628445854207 * Marital_StatusMarried
1691749   +          +    -0.52197797291165 * Marital_StatusSingle
1691750   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1691751   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1691752   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1691753   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1691754   +          +     0.03219453957597 * Marital_StatusDivorced
1691755   +          +    -0.73835008216677 * Marital_StatusMarried
1691756   +          +     0.11212575818086 * Marital_StatusSingle
1691757   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1691758   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1691759   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1691760   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1691761   +          +    -0.95055539413405 * Marital_StatusDivorced
1691762   +          +    -1.65922419336067 * Marital_StatusMarried
1691763   +          +     0.78727538125107 * Marital_StatusSingle
1691764   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1691765   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1691766   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1691767   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1691768   +          +     -4.1747415035634 * Marital_StatusDivorced
1691769   +          +     3.61194282451968 * Marital_StatusMarried
1691770   +          +     -3.2800495365546 * Marital_StatusSingle
1691771   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1691772   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1691773   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1691774   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1691775   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1691776   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1691777   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1691778   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1691779   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1691780   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1691781   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1691782   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1691783   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1691784   +END;
MPRINT(EM_DIAGRAM):   END;
1691785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1691786   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1691787   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1691788   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1691789   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1691790   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1691791   +END;
MPRINT(EM_DIAGRAM):   END;
1691792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691793   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1691794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691795   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1691796   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1691797   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1691798   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1691799   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1691800   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1691801   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1691802   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1691803   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1691804   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1691805   +          +     1.29727972396867 * S_NumDealsPurchases
1691806   +          +     -0.4796144286007 * S_NumDistPurchases
1691807   +          +     0.88365985808591 * S_NumStorePurchases
1691808   +          +     0.68522096892804 * S_NumWebPurchases
1691809   +          +     0.54931043107798 * S_NumWebVisitsMonth
1691810   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1691811   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1691812   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1691813   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1691814   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1691815   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1691816   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1691817   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1691818   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1691819   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1691820   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1691821   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1691822   +          +     0.26997834581422 * S_NumDealsPurchases
1691823   +          +      1.4974894627406 * S_NumDistPurchases
1691824   +          +     0.20577850505638 * S_NumStorePurchases
1691825   +          +     0.67578530037026 * S_NumWebPurchases
1691826   +          +     1.48893165613941 * S_NumWebVisitsMonth
1691827   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1691828   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1691829   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1691830   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1691831   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1691832   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1691833   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1691834   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1691835   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1691836   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1691837   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1691838   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1691839   +          +    -0.75474919633886 * S_NumDealsPurchases
1691840   +          +     2.21872386475638 * S_NumDistPurchases
1691841   +          +    -0.36191460108989 * S_NumStorePurchases
1691842   +          +     0.03160010932412 * S_NumWebPurchases
1691843   +          +     0.00984650739909 * S_NumWebVisitsMonth
1691844   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1691845   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1691846   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1691847   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1691848   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1691849   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1691850   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1691851   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1691852   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1691853   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1691854   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1691855   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1691856   +          +    -1.12057357865269 * S_NumDealsPurchases
1691857   +          +    -0.70841760614521 * S_NumDistPurchases
1691858   +          +    -1.39174816270404 * S_NumStorePurchases
1691859   +          +    -1.62343249380806 * S_NumWebPurchases
1691860   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1691861   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1691862   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1691863   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1691864   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1691865   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1691866   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1691867   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1691868   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1691869   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1691870   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1691871   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1691872   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1691873   +          +     0.66880481485557 * S_NumDealsPurchases
1691874   +          +     0.69540174544859 * S_NumDistPurchases
1691875   +          +     1.68246546921736 * S_NumStorePurchases
1691876   +          +     1.85958176898295 * S_NumWebPurchases
1691877   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1691878   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1691879   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1691880   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1691881   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1691882   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1691883   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1691884   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1691885   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1691886   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1691887   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1691888   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1691889   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1691890   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1691891   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1691892   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1691893   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1691894   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1691895   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1691896   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1691897   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1691898   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1691899   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1691900   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1691901   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1691902   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1691903   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1691904   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1691905   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1691906   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1691907   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1691908   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1691909   +          +      0.2766977476799 * Marital_StatusDivorced
1691910   +          +     0.99585126449473 * Marital_StatusMarried
1691911   +          +    -0.71244490682808 * Marital_StatusSingle
1691912   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1691913   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1691914   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1691915   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1691916   +          +     0.04724779113048 * Marital_StatusDivorced
1691917   +          +    -0.80186231440666 * Marital_StatusMarried
1691918   +          +    -0.02226793584171 * Marital_StatusSingle
1691919   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1691920   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1691921   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1691922   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1691923   +          +     0.28206835683721 * Marital_StatusDivorced
1691924   +          +     0.46500886756532 * Marital_StatusMarried
1691925   +          +     0.35327545255503 * Marital_StatusSingle
1691926   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1691927   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1691928   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1691929   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1691930   +          +     1.22291788006392 * Marital_StatusDivorced
1691931   +          +    -2.27040720272432 * Marital_StatusMarried
1691932   +          +     1.13606780043773 * Marital_StatusSingle
1691933   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1691934   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1691935   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1691936   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1691937   +          +     -0.3999800759199 * Marital_StatusDivorced
1691938   +          +    -0.40978271635345 * Marital_StatusMarried
1691939   +          +    -0.55524279444227 * Marital_StatusSingle
1691940   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1691941   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1691942   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1691943   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1691944   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1691945   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1691946   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1691947   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1691948   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1691949   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1691950   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1691951   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1691952   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1691953   +END;
MPRINT(EM_DIAGRAM):   END;
1691954   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1691955   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1691956   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1691957   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1691958   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1691959   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1691960   +END;
MPRINT(EM_DIAGRAM):   END;
1691961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691962   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1691963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1691964   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1691965   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1691966   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1691967   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1691968   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1691969   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1691970   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1691971   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1691972   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1691973   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1691974   +          +     0.15783958682465 * S_NumDealsPurchases
1691975   +          +     1.52124708558457 * S_NumDistPurchases
1691976   +          +     -1.3804418313581 * S_NumStorePurchases
1691977   +          +    -1.29570111649272 * S_NumWebPurchases
1691978   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1691979   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1691980   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1691981   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1691982   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1691983   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1691984   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1691985   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1691986   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1691987   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1691988   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1691989   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1691990   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1691991   +          +     0.12337111358286 * S_NumDealsPurchases
1691992   +          +     -2.3848926094027 * S_NumDistPurchases
1691993   +          +    -1.20666646996433 * S_NumStorePurchases
1691994   +          +     0.89549302881365 * S_NumWebPurchases
1691995   +          +     0.95359042569947 * S_NumWebVisitsMonth
1691996   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1691997   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1691998   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1691999   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1692000   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1692001   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1692002   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1692003   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1692004   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1692005   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1692006   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1692007   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1692008   +          +    -1.05383642674948 * S_NumDealsPurchases
1692009   +          +     1.71861984509369 * S_NumDistPurchases
1692010   +          +     1.47595181536047 * S_NumStorePurchases
1692011   +          +    -1.64165005491178 * S_NumWebPurchases
1692012   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1692013   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1692014   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1692015   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1692016   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1692017   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1692018   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1692019   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1692020   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1692021   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1692022   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1692023   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1692024   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1692025   +          +     0.13347794794222 * S_NumDealsPurchases
1692026   +          +     0.30533639886561 * S_NumDistPurchases
1692027   +          +     1.63892955540526 * S_NumStorePurchases
1692028   +          +     0.43734586516446 * S_NumWebPurchases
1692029   +          +     1.79260779802864 * S_NumWebVisitsMonth
1692030   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1692031   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1692032   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1692033   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1692034   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1692035   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1692036   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1692037   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1692038   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1692039   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1692040   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1692041   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1692042   +          +     1.64209094349557 * S_NumDealsPurchases
1692043   +          +    -0.38876870460627 * S_NumDistPurchases
1692044   +          +    -0.48559309584971 * S_NumStorePurchases
1692045   +          +     0.21254626353218 * S_NumWebPurchases
1692046   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1692047   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1692048   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1692049   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1692050   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1692051   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1692052   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1692053   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1692054   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1692055   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1692056   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1692057   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1692058   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1692059   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1692060   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1692061   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1692062   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1692063   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1692064   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1692065   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1692066   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1692067   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1692068   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1692069   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1692070   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1692071   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1692072   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1692073   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1692074   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1692075   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1692076   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1692077   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1692078   +          +     1.33953173091973 * Marital_StatusDivorced
1692079   +          +    -0.26253208073262 * Marital_StatusMarried
1692080   +          +    -0.00960552682431 * Marital_StatusSingle
1692081   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1692082   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1692083   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1692084   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1692085   +          +     1.43150850334311 * Marital_StatusDivorced
1692086   +          +    -0.69239127844934 * Marital_StatusMarried
1692087   +          +     2.08477562471559 * Marital_StatusSingle
1692088   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1692089   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1692090   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1692091   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1692092   +          +     1.08387556786168 * Marital_StatusDivorced
1692093   +          +      1.0283506000217 * Marital_StatusMarried
1692094   +          +    -0.87069431107983 * Marital_StatusSingle
1692095   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1692096   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1692097   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1692098   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1692099   +          +      -1.347780188307 * Marital_StatusDivorced
1692100   +          +    -0.53911983240372 * Marital_StatusMarried
1692101   +          +     0.22083074159185 * Marital_StatusSingle
1692102   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1692103   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1692104   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1692105   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1692106   +          +     1.46582538311384 * Marital_StatusDivorced
1692107   +          +     0.05256161016002 * Marital_StatusMarried
1692108   +          +    -1.21402967626877 * Marital_StatusSingle
1692109   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1692110   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1692111   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1692112   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1692113   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1692114   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1692115   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1692116   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1692117   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1692118   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1692119   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1692120   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1692121   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1692122   +END;
MPRINT(EM_DIAGRAM):   END;
1692123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692124   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1692125   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1692126   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1692127   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1692128   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1692129   +END;
MPRINT(EM_DIAGRAM):   END;
1692130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692131   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1692132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692133   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692134   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1692135   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1692136   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1692137   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1692138   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1692139   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1692140   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1692141   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1692142   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1692143   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1692144   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1692145   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1692146   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1692147   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1692148   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1692149   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1692150   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1692151   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1692152   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1692153   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1692154   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1692155   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1692156   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1692157   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1692158   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1692159   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1692160   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1692161   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1692162   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1692163   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1692164   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1692165   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1692166   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1692167   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1692168   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1692169   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1692170   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1692171   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1692172   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1692173   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1692174   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1692175   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1692176   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1692177   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1692178   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1692179   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1692180   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1692181   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1692182   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1692183   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1692184   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1692185   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1692186   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1692187   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1692188   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1692189   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1692190   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1692191   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1692192   +END;
MPRINT(EM_DIAGRAM):   END;
1692193   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692194   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1692195   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1692196   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1692197   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1692198   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1692199   +END;
MPRINT(EM_DIAGRAM):   END;
1692200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692201   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1692202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692204   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1692205   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1692206   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1692207   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1692208   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1692209   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1692210   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1692211   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1692212   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1692213   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1692214   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1692215   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1692216   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1692217   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1692218   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1692219   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1692220   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1692221   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1692222   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1692223   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1692224   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1692225   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1692226   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1692227   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1692228   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1692229   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1692230   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1692231   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1692232   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1692233   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1692234   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1692235   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1692236   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1692237   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1692238   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1692239   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1692240   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1692241   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1692242   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1692243   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1692244   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1692245   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1692246   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1692247   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1692248   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1692249   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1692250   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1692251   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1692252   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1692253   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1692254   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1692255   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1692256   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1692257   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1692258   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1692259   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1692260   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1692261   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1692262   +END;
MPRINT(EM_DIAGRAM):   END;
1692263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692264   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1692265   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1692266   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1692267   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1692268   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1692269   +END;
MPRINT(EM_DIAGRAM):   END;
1692270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692271   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1692272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692273   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692274   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1692275   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1692276   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1692277   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1692278   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1692279   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1692280   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1692281   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1692282   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1692283   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1692284   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1692285   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1692286   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1692287   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1692288   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1692289   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1692290   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1692291   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1692292   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1692293   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1692294   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1692295   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1692296   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1692297   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1692298   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1692299   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1692300   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1692301   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1692302   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1692303   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1692304   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1692305   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1692306   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1692307   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1692308   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1692309   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1692310   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1692311   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1692312   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1692313   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1692314   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1692315   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1692316   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1692317   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1692318   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1692319   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1692320   +END;
MPRINT(EM_DIAGRAM):   END;
1692321   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692322   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1692323   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1692324   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1692325   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1692326   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1692327   +END;
MPRINT(EM_DIAGRAM):   END;
1692328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692329   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1692330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692331   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692332   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1692333   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1692334   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1692335   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1692336   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1692337   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1692338   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1692339   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1692340   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1692341   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1692342   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1692343   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1692344   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1692345   +END;
MPRINT(EM_DIAGRAM):   END;
1692346   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692347   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1692348   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1692349   +END;
MPRINT(EM_DIAGRAM):   END;
1692350   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1692351   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1692352   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1692353   +END;
MPRINT(EM_DIAGRAM):   END;
1692354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692355   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1692356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692357   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1692358   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1692359   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1692360   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1692361   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1692362   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1692363   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1692364   +END;
MPRINT(EM_DIAGRAM):   END;
1692365   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1692366   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1692367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1692368   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1692369   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1692370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692371   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1692372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692373   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1692374   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1692375   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1692376   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1692377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692378   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1692379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692380   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1692381   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1692382   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1692383   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692384   +* Ensmbl36: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 5 of 7;
1692385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692387   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1692388   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1692389   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1692390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1692391   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1692392   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1692393   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1692394   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1692395   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1692396   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1692397   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1692398   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1692399   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1692400   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1692401   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1692402   +LENGTH _WARN_ $4
1692403   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1692404   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1692405   +
1692406   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1692407   +
1692408   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1692409   +
1692410   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1692411   +
1692412   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1692413   +
1692414   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1692415   +
1692416   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1692417   +
1692418   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1692419   +
1692420   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1692421   +
1692422   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1692423   +
1692424   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1692425   +
1692426   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1692427   +
1692428   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1692429   +
1692430   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1692431   +
1692432   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1692433   +
1692434   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1692435   +
1692436   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1692437   +
1692438   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1692439   +
1692440   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1692441   +
1692442   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1692443   +
1692444   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1692445   +
1692446   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1692447   +
1692448   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1692449   +
1692450   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1692451   +
1692452   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1692453   +
1692454   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1692455   +
1692456   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1692457   +
1692458   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1692459   +
1692460   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1692461   +
1692462   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1692463   +
1692464   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1692465   +
1692466   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1692467   +
1692468   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1692469   +
1692470   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1692471   +
1692472   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1692473   +
1692474   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1692475   +
1692476   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1692477   +
1692478   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1692479   +
1692480   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1692481   +
1692482   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1692483   +
1692484   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1692485   +
1692486   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1692487   +
1692488   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1692489   +
1692490   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1692491   +
1692492   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1692493   +
1692494   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1692495   +
1692496   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1692497   +
1692498   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1692499   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1692500   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1692501   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1692502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692504   +end;
MPRINT(EM_DIAGRAM):   end;
1692505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692507   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1692508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692510   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1692511   +   end;
MPRINT(EM_DIAGRAM):   end;
1692512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692513   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1692514   +   end;
MPRINT(EM_DIAGRAM):   end;
1692515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692516   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1692517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692519   +   end;
MPRINT(EM_DIAGRAM):   end;
1692520   +end;
MPRINT(EM_DIAGRAM):   end;
1692521   +
1692522   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1692523   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1692524   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1692525   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1692526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692528   +end;
MPRINT(EM_DIAGRAM):   end;
1692529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692531   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1692532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692534   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1692535   +   end;
MPRINT(EM_DIAGRAM):   end;
1692536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692537   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1692538   +   end;
MPRINT(EM_DIAGRAM):   end;
1692539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692540   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1692541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692543   +   end;
MPRINT(EM_DIAGRAM):   end;
1692544   +end;
MPRINT(EM_DIAGRAM):   end;
1692545   +
1692546   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1692547   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1692548   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1692549   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1692550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692552   +end;
MPRINT(EM_DIAGRAM):   end;
1692553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692555   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1692556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692558   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1692559   +   end;
MPRINT(EM_DIAGRAM):   end;
1692560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692561   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1692562   +   end;
MPRINT(EM_DIAGRAM):   end;
1692563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692564   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1692565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692567   +   end;
MPRINT(EM_DIAGRAM):   end;
1692568   +end;
MPRINT(EM_DIAGRAM):   end;
1692569   +
1692570   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1692571   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1692572   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1692573   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1692574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692576   +end;
MPRINT(EM_DIAGRAM):   end;
1692577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692579   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1692580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692582   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1692583   +   end;
MPRINT(EM_DIAGRAM):   end;
1692584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692585   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1692586   +   end;
MPRINT(EM_DIAGRAM):   end;
1692587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692588   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1692589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692591   +   end;
MPRINT(EM_DIAGRAM):   end;
1692592   +end;
MPRINT(EM_DIAGRAM):   end;
1692593   +
1692594   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1692595   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1692596   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1692597   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1692598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692600   +end;
MPRINT(EM_DIAGRAM):   end;
1692601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692603   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1692604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692606   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1692607   +   end;
MPRINT(EM_DIAGRAM):   end;
1692608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692609   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1692610   +   end;
MPRINT(EM_DIAGRAM):   end;
1692611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692612   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1692613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692615   +   end;
MPRINT(EM_DIAGRAM):   end;
1692616   +end;
MPRINT(EM_DIAGRAM):   end;
1692617   +
1692618   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1692619   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1692620   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1692621   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1692622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692624   +end;
MPRINT(EM_DIAGRAM):   end;
1692625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692627   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1692628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1692630   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1692631   +   end;
MPRINT(EM_DIAGRAM):   end;
1692632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1692633   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1692634   +   end;
MPRINT(EM_DIAGRAM):   end;
1692635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692636   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1692637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692639   +   end;
MPRINT(EM_DIAGRAM):   end;
1692640   +end;
MPRINT(EM_DIAGRAM):   end;
1692641   +
1692642   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1692643   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1692644   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1692645   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1692646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692648   +end;
MPRINT(EM_DIAGRAM):   end;
1692649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1692651   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1692652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692653   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1692654   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1692655   +   end;
MPRINT(EM_DIAGRAM):   end;
1692656   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1692657   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1692658   +   end;
MPRINT(EM_DIAGRAM):   end;
1692659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692660   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1692661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692663   +   end;
MPRINT(EM_DIAGRAM):   end;
1692664   +end;
MPRINT(EM_DIAGRAM):   end;
1692665   +
1692666   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1692667   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1692668   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1692669   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1692670   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1692671   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1692672   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1692673   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1692674   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1692675   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1692676   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1692677   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1692678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692680   +end;
MPRINT(EM_DIAGRAM):   end;
1692681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692682   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1692683   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1692684   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692685   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1692686   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1692687   +   end;
MPRINT(EM_DIAGRAM):   end;
1692688   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1692689   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1692690   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1692691   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1692692   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1692693   +   end;
MPRINT(EM_DIAGRAM):   end;
1692694   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1692695   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1692696   +   end;
MPRINT(EM_DIAGRAM):   end;
1692697   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1692698   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1692699   +   end;
MPRINT(EM_DIAGRAM):   end;
1692700   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1692701   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1692702   +   end;
MPRINT(EM_DIAGRAM):   end;
1692703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692704   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1692705   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1692706   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1692707   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1692708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692710   +   end;
MPRINT(EM_DIAGRAM):   end;
1692711   +end;
MPRINT(EM_DIAGRAM):   end;
1692712   +
1692713   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1692714   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1692715   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1692716   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1692717   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1692718   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1692719   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1692720   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1692721   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1692722   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1692723   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1692724   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1692725   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1692726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1692727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692728   +end;
MPRINT(EM_DIAGRAM):   end;
1692729   +else do;
MPRINT(EM_DIAGRAM):   else do;
1692730   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1692731   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1692732   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1692733   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1692734   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1692735   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1692736   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1692737   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1692738   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1692739   +         end;
MPRINT(EM_DIAGRAM):   end;
1692740   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1692741   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1692742   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1692743   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1692744   +            end;
MPRINT(EM_DIAGRAM):   end;
1692745   +         end;
MPRINT(EM_DIAGRAM):   end;
1692746   +      end;
MPRINT(EM_DIAGRAM):   end;
1692747   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1692748   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1692749   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1692750   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1692751   +         end;
MPRINT(EM_DIAGRAM):   end;
1692752   +      end;
MPRINT(EM_DIAGRAM):   end;
1692753   +   end;
MPRINT(EM_DIAGRAM):   end;
1692754   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1692755   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1692756   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1692757   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1692758   +      end;
MPRINT(EM_DIAGRAM):   end;
1692759   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1692760   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1692761   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1692762   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1692763   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1692764   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1692765   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1692766   +         end;
MPRINT(EM_DIAGRAM):   end;
1692767   +      end;
MPRINT(EM_DIAGRAM):   end;
1692768   +   end;
MPRINT(EM_DIAGRAM):   end;
1692769   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1692770   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1692771   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1692772   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1692773   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1692774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1692775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692776   +   end;
MPRINT(EM_DIAGRAM):   end;
1692777   +end;
MPRINT(EM_DIAGRAM):   end;
1692778   +
1692779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692780   +*** Checking missing input Interval
1692781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1692782   +
1692783   +IF NMISS(
1692784   +   AcceptedCmpTotal ,
1692785   +   Age ,
1692786   +   Frq ,
1692787   +   Income ,
1692788   +   Kidhome ,
1692789   +   Mnt ,
1692790   +   MntFishProducts ,
1692791   +   MntFruits ,
1692792   +   MntGoldProds ,
1692793   +   MntMeatProducts ,
1692794   +   MntSweetProducts ,
1692795   +   MntWines ,
1692796   +   MonthsAsCustomer ,
1692797   +   NumCatalogPurchases ,
1692798   +   NumDealsPurchases ,
1692799   +   NumDistPurchases ,
1692800   +   NumStorePurchases ,
1692801   +   NumWebPurchases ,
1692802   +   NumWebVisitsMonth ,
1692803   +   RFMstat ,
1692804   +   RMntFrq ,
1692805   +   Recency ,
1692806   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1692807   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1692808   +
1692809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1692810   +END;
MPRINT(EM_DIAGRAM):   END;
1692811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692812   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1692813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692814   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692815   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1692816   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1692817   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1692818   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1692819   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1692820   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1692821   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1692822   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1692823   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1692824   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1692825   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1692826   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1692827   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1692828   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1692829   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1692830   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1692831   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1692832   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1692833   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1692834   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1692835   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1692836   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1692837   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1692838   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1692839   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1692840   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1692841   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1692842   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1692843   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1692844   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1692845   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1692846   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1692847   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1692848   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1692849   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1692850   +END;
MPRINT(EM_DIAGRAM):   END;
1692851   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1692852   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1692853   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1692854   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1692855   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1692856   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1692857   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1692858   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1692859   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1692860   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1692861   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1692862   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1692863   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1692864   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1692865   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1692866   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1692867   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1692868   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1692869   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1692870   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1692871   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1692872   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1692873   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1692874   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1692875   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1692876   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1692877   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1692878   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1692879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1692880   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1692881   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1692882   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1692883   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1692884   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1692885   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1692886   +   ELSE S_NumCatalogPurchases
1692887   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1692888   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1692889   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1692890   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1692891   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1692892   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1692893   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1692894   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1692895   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1692896   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1692897   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1692898   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1692899   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1692900   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1692901   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1692902   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1692903   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1692904   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1692905   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1692906   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1692907   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1692908   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1692909   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1692910   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1692911   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1692912   +END;
MPRINT(EM_DIAGRAM):   END;
1692913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692914   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1692915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692917   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1692918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692920   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1692921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1692922   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1692923   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1692924   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1692925   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1692926   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1692927   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1692928   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1692929   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1692930   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1692931   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1692932   +          +    -1.14704878034134 * S_NumDealsPurchases
1692933   +          +    -0.17763404274659 * S_NumDistPurchases
1692934   +          +     0.08894400267969 * S_NumStorePurchases
1692935   +          +     0.59283747891957 * S_NumWebPurchases
1692936   +          +     0.85268274682505 * S_NumWebVisitsMonth
1692937   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1692938   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1692939   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1692940   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1692941   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1692942   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1692943   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1692944   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1692945   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1692946   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1692947   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1692948   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1692949   +          +    -0.80841566068716 * S_NumDealsPurchases
1692950   +          +    -0.17995640033768 * S_NumDistPurchases
1692951   +          +     0.00713417460936 * S_NumStorePurchases
1692952   +          +     0.57881024323076 * S_NumWebPurchases
1692953   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1692954   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1692955   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1692956   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1692957   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1692958   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1692959   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1692960   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1692961   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1692962   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1692963   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1692964   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1692965   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1692966   +          +     0.57891364118717 * S_NumDealsPurchases
1692967   +          +    -0.31024556838688 * S_NumDistPurchases
1692968   +          +    -1.48708542986704 * S_NumStorePurchases
1692969   +          +    -0.93009875249206 * S_NumWebPurchases
1692970   +          +     2.01900039122935 * S_NumWebVisitsMonth
1692971   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1692972   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1692973   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1692974   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1692975   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1692976   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1692977   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1692978   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1692979   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1692980   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1692981   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1692982   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1692983   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1692984   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1692985   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1692986   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1692987   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1692988   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1692989   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1692990   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1692991   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1692992   +          +     0.55883606830033 * Marital_StatusDivorced
1692993   +          +    -0.54530037567066 * Marital_StatusMarried
1692994   +          +    -0.52994736075753 * Marital_StatusSingle
1692995   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1692996   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1692997   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1692998   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1692999   +          +    -1.07368484057033 * Marital_StatusDivorced
1693000   +          +     2.73313504711262 * Marital_StatusMarried
1693001   +          +    -2.18530462876058 * Marital_StatusSingle
1693002   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1693003   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1693004   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1693005   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1693006   +          +     0.49993144243043 * Marital_StatusDivorced
1693007   +          +    -0.38953339116829 * Marital_StatusMarried
1693008   +          +    -0.10836287319942 * Marital_StatusSingle
1693009   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1693010   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1693011   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1693012   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1693013   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1693014   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1693015   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1693016   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1693017   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1693018   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1693019   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1693020   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1693021   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1693022   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1693023   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1693024   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1693025   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1693026   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1693027   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1693028   +END;
MPRINT(EM_DIAGRAM):   END;
1693029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1693030   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1693031   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1693032   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1693033   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1693034   +END;
MPRINT(EM_DIAGRAM):   END;
1693035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693036   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1693037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693038   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1693039   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1693040   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1693041   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1693042   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1693043   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1693044   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1693045   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1693046   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1693047   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1693048   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1693049   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1693050   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1693051   +END;
MPRINT(EM_DIAGRAM):   END;
1693052   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1693053   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1693054   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1693055   +END;
MPRINT(EM_DIAGRAM):   END;
1693056   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1693057   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1693058   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1693059   +END;
MPRINT(EM_DIAGRAM):   END;
1693060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693061   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1693062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693063   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1693064   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1693065   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1693066   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1693067   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1693068   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1693069   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1693070   +END;
MPRINT(EM_DIAGRAM):   END;
1693071   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1693072   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1693073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1693074   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1693075   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1693076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693077   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1693078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693079   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1693080   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1693081   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1693082   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1693083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693084   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1693085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693086   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1693087   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1693088   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1693089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693090   +* Ensmbl36: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 6 of 7;
1693091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693093   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1693094   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1693095   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1693096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1693097   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1693098   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1693099   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1693100   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1693101   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1693102   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1693103   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1693104   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1693105   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1693106   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1693107   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1693108   +LENGTH _WARN_ $4
1693109   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1693110   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1693111   +
1693112   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1693113   +
1693114   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1693115   +
1693116   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1693117   +
1693118   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1693119   +
1693120   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1693121   +
1693122   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1693123   +
1693124   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1693125   +
1693126   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1693127   +
1693128   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1693129   +
1693130   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1693131   +
1693132   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1693133   +
1693134   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1693135   +
1693136   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1693137   +
1693138   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1693139   +
1693140   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1693141   +
1693142   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1693143   +
1693144   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1693145   +
1693146   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1693147   +
1693148   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1693149   +
1693150   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1693151   +
1693152   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1693153   +
1693154   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1693155   +
1693156   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1693157   +
1693158   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1693159   +
1693160   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1693161   +
1693162   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1693163   +
1693164   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1693165   +
1693166   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1693167   +
1693168   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1693169   +
1693170   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1693171   +
1693172   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1693173   +
1693174   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1693175   +
1693176   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1693177   +
1693178   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1693179   +
1693180   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1693181   +
1693182   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1693183   +
1693184   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1693185   +
1693186   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1693187   +
1693188   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1693189   +
1693190   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1693191   +
1693192   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1693193   +
1693194   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1693195   +
1693196   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1693197   +
1693198   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1693199   +
1693200   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1693201   +
1693202   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1693203   +
1693204   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1693205   +
1693206   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1693207   +
1693208   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1693209   +
1693210   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1693211   +
1693212   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1693213   +
1693214   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1693215   +
1693216   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1693217   +
1693218   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1693219   +
1693220   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1693221   +
1693222   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1693223   +
1693224   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1693225   +
1693226   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1693227   +
1693228   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1693229   +
1693230   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1693231   +
1693232   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1693233   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1693234   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1693235   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1693236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693238   +end;
MPRINT(EM_DIAGRAM):   end;
1693239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693241   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1693242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693244   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1693245   +   end;
MPRINT(EM_DIAGRAM):   end;
1693246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693247   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1693248   +   end;
MPRINT(EM_DIAGRAM):   end;
1693249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693250   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1693251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693253   +   end;
MPRINT(EM_DIAGRAM):   end;
1693254   +end;
MPRINT(EM_DIAGRAM):   end;
1693255   +
1693256   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1693257   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1693258   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1693259   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1693260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693262   +end;
MPRINT(EM_DIAGRAM):   end;
1693263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693265   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1693266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693268   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1693269   +   end;
MPRINT(EM_DIAGRAM):   end;
1693270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693271   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1693272   +   end;
MPRINT(EM_DIAGRAM):   end;
1693273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693274   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1693275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693277   +   end;
MPRINT(EM_DIAGRAM):   end;
1693278   +end;
MPRINT(EM_DIAGRAM):   end;
1693279   +
1693280   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1693281   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1693282   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1693283   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1693284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693286   +end;
MPRINT(EM_DIAGRAM):   end;
1693287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693289   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1693290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693291   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693292   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1693293   +   end;
MPRINT(EM_DIAGRAM):   end;
1693294   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693295   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1693296   +   end;
MPRINT(EM_DIAGRAM):   end;
1693297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693298   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1693299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693301   +   end;
MPRINT(EM_DIAGRAM):   end;
1693302   +end;
MPRINT(EM_DIAGRAM):   end;
1693303   +
1693304   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1693305   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1693306   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1693307   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1693308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693310   +end;
MPRINT(EM_DIAGRAM):   end;
1693311   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693313   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1693314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693315   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693316   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1693317   +   end;
MPRINT(EM_DIAGRAM):   end;
1693318   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693319   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1693320   +   end;
MPRINT(EM_DIAGRAM):   end;
1693321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693322   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1693323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693325   +   end;
MPRINT(EM_DIAGRAM):   end;
1693326   +end;
MPRINT(EM_DIAGRAM):   end;
1693327   +
1693328   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1693329   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1693330   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1693331   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1693332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693334   +end;
MPRINT(EM_DIAGRAM):   end;
1693335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693336   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693337   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1693338   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693339   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693340   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1693341   +   end;
MPRINT(EM_DIAGRAM):   end;
1693342   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693343   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1693344   +   end;
MPRINT(EM_DIAGRAM):   end;
1693345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693346   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1693347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693349   +   end;
MPRINT(EM_DIAGRAM):   end;
1693350   +end;
MPRINT(EM_DIAGRAM):   end;
1693351   +
1693352   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1693353   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1693354   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1693355   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1693356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693358   +end;
MPRINT(EM_DIAGRAM):   end;
1693359   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693360   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693361   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1693362   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693363   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1693364   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1693365   +   end;
MPRINT(EM_DIAGRAM):   end;
1693366   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1693367   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1693368   +   end;
MPRINT(EM_DIAGRAM):   end;
1693369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693370   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1693371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693373   +   end;
MPRINT(EM_DIAGRAM):   end;
1693374   +end;
MPRINT(EM_DIAGRAM):   end;
1693375   +
1693376   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1693377   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1693378   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1693379   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1693380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693382   +end;
MPRINT(EM_DIAGRAM):   end;
1693383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1693385   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1693386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693387   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1693388   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1693389   +   end;
MPRINT(EM_DIAGRAM):   end;
1693390   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1693391   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1693392   +   end;
MPRINT(EM_DIAGRAM):   end;
1693393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693394   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1693395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693397   +   end;
MPRINT(EM_DIAGRAM):   end;
1693398   +end;
MPRINT(EM_DIAGRAM):   end;
1693399   +
1693400   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1693401   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1693402   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1693403   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1693404   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1693405   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1693406   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1693407   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1693408   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1693409   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1693410   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1693411   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1693412   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693414   +end;
MPRINT(EM_DIAGRAM):   end;
1693415   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693416   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1693417   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1693418   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693419   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1693420   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1693421   +   end;
MPRINT(EM_DIAGRAM):   end;
1693422   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1693423   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1693424   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1693425   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1693426   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1693427   +   end;
MPRINT(EM_DIAGRAM):   end;
1693428   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1693429   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1693430   +   end;
MPRINT(EM_DIAGRAM):   end;
1693431   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1693432   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1693433   +   end;
MPRINT(EM_DIAGRAM):   end;
1693434   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1693435   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1693436   +   end;
MPRINT(EM_DIAGRAM):   end;
1693437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693438   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1693439   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1693440   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1693441   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1693442   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693443   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693444   +   end;
MPRINT(EM_DIAGRAM):   end;
1693445   +end;
MPRINT(EM_DIAGRAM):   end;
1693446   +
1693447   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1693448   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1693449   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1693450   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1693451   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1693452   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1693453   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1693454   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1693455   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1693456   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1693457   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1693458   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1693459   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1693460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1693461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693462   +end;
MPRINT(EM_DIAGRAM):   end;
1693463   +else do;
MPRINT(EM_DIAGRAM):   else do;
1693464   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1693465   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1693466   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1693467   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1693468   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1693469   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1693470   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1693471   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1693472   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1693473   +         end;
MPRINT(EM_DIAGRAM):   end;
1693474   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1693475   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1693476   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1693477   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1693478   +            end;
MPRINT(EM_DIAGRAM):   end;
1693479   +         end;
MPRINT(EM_DIAGRAM):   end;
1693480   +      end;
MPRINT(EM_DIAGRAM):   end;
1693481   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1693482   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1693483   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1693484   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1693485   +         end;
MPRINT(EM_DIAGRAM):   end;
1693486   +      end;
MPRINT(EM_DIAGRAM):   end;
1693487   +   end;
MPRINT(EM_DIAGRAM):   end;
1693488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1693489   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1693490   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1693491   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1693492   +      end;
MPRINT(EM_DIAGRAM):   end;
1693493   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1693494   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1693495   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1693496   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1693497   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1693498   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1693499   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1693500   +         end;
MPRINT(EM_DIAGRAM):   end;
1693501   +      end;
MPRINT(EM_DIAGRAM):   end;
1693502   +   end;
MPRINT(EM_DIAGRAM):   end;
1693503   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1693504   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1693505   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1693506   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1693507   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1693508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1693509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693510   +   end;
MPRINT(EM_DIAGRAM):   end;
1693511   +end;
MPRINT(EM_DIAGRAM):   end;
1693512   +
1693513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693514   +*** Checking missing input Interval
1693515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1693516   +
1693517   +IF NMISS(
1693518   +   AcceptedCmpTotal ,
1693519   +   Age ,
1693520   +   Frq ,
1693521   +   Income ,
1693522   +   Kidhome ,
1693523   +   Mnt ,
1693524   +   MntFishProducts ,
1693525   +   MntFruits ,
1693526   +   MntGoldProds ,
1693527   +   MntMeatProducts ,
1693528   +   MntSweetProducts ,
1693529   +   MntWines ,
1693530   +   MonthsAsCustomer ,
1693531   +   NumCatalogPurchases ,
1693532   +   NumDealsPurchases ,
1693533   +   NumDistPurchases ,
1693534   +   NumStorePurchases ,
1693535   +   NumWebPurchases ,
1693536   +   NumWebVisitsMonth ,
1693537   +   RFMstat ,
1693538   +   RMntFrq ,
1693539   +   Recency ,
1693540   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1693541   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1693542   +
1693543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1693544   +END;
MPRINT(EM_DIAGRAM):   END;
1693545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693546   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1693547   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693548   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1693549   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1693550   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1693551   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1693552   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1693553   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1693554   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1693555   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1693556   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1693557   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1693558   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1693559   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1693560   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1693561   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1693562   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1693563   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1693564   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1693565   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1693566   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1693567   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1693568   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1693569   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1693570   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1693571   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1693572   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1693573   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1693574   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1693575   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1693576   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1693577   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1693578   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1693579   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1693580   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1693581   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1693582   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1693583   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1693584   +END;
MPRINT(EM_DIAGRAM):   END;
1693585   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1693586   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1693587   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1693588   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1693589   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1693590   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1693591   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1693592   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1693593   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1693594   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1693595   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1693596   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1693597   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1693598   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1693599   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1693600   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1693601   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1693602   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1693603   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1693604   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1693605   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1693606   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1693607   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1693608   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1693609   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1693610   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1693611   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1693612   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1693613   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1693614   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1693615   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1693616   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1693617   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1693618   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1693619   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1693620   +   ELSE S_NumCatalogPurchases
1693621   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1693622   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1693623   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1693624   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1693625   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1693626   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1693627   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1693628   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1693629   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1693630   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1693631   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1693632   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1693633   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1693634   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1693635   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1693636   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1693637   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1693638   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1693639   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1693640   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1693641   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1693642   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1693643   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1693644   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1693645   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1693646   +END;
MPRINT(EM_DIAGRAM):   END;
1693647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693648   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1693649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693651   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1693652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693654   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1693655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693656   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1693657   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1693658   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1693659   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1693660   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1693661   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1693662   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1693663   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1693664   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1693665   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1693666   +          +     0.89422627895323 * S_NumDealsPurchases
1693667   +          +    -0.13304125929765 * S_NumDistPurchases
1693668   +          +    -1.04568442570811 * S_NumStorePurchases
1693669   +          +    -0.28677765126751 * S_NumWebPurchases
1693670   +          +      1.2327638737509 * S_NumWebVisitsMonth
1693671   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1693672   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1693673   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1693674   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1693675   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1693676   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1693677   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1693678   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1693679   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1693680   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1693681   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1693682   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1693683   +          +     0.04224590196535 * S_NumDealsPurchases
1693684   +          +     0.76554742700113 * S_NumDistPurchases
1693685   +          +    -0.49155496870812 * S_NumStorePurchases
1693686   +          +     0.59606812744403 * S_NumWebPurchases
1693687   +          +     1.86809286276405 * S_NumWebVisitsMonth
1693688   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1693689   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1693690   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1693691   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1693692   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1693693   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1693694   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1693695   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1693696   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1693697   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1693698   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1693699   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1693700   +          +    -0.04866536993486 * S_NumDealsPurchases
1693701   +          +    -0.53535979020214 * S_NumDistPurchases
1693702   +          +     2.20634071253676 * S_NumStorePurchases
1693703   +          +      0.6164564989007 * S_NumWebPurchases
1693704   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1693705   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1693706   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1693707   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1693708   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1693709   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1693710   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1693711   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1693712   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1693713   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1693714   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1693715   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1693716   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1693717   +          +     1.37461255707863 * S_NumDealsPurchases
1693718   +          +    -0.17684775000818 * S_NumDistPurchases
1693719   +          +    -0.62755623855535 * S_NumStorePurchases
1693720   +          +    -1.46551649022657 * S_NumWebPurchases
1693721   +          +     3.35784247878638 * S_NumWebVisitsMonth
1693722   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1693723   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1693724   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1693725   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1693726   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1693727   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1693728   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1693729   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1693730   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1693731   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1693732   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1693733   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1693734   +          +    -0.76256677907121 * S_NumDealsPurchases
1693735   +          +    -0.31591571751692 * S_NumDistPurchases
1693736   +          +      0.0506832614089 * S_NumStorePurchases
1693737   +          +      1.4636796923764 * S_NumWebPurchases
1693738   +          +     0.37743519705036 * S_NumWebVisitsMonth
1693739   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1693740   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1693741   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1693742   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1693743   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1693744   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1693745   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1693746   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1693747   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1693748   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1693749   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1693750   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1693751   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1693752   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1693753   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1693754   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1693755   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1693756   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1693757   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1693758   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1693759   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1693760   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1693761   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1693762   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1693763   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1693764   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1693765   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1693766   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1693767   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1693768   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1693769   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1693770   +          +     0.68641668264565 * Marital_StatusDivorced
1693771   +          +    -0.81586871439732 * Marital_StatusMarried
1693772   +          +     0.63758920518451 * Marital_StatusSingle
1693773   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1693774   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1693775   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1693776   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1693777   +          +     0.05137560133238 * Marital_StatusDivorced
1693778   +          +    -2.24401993266209 * Marital_StatusMarried
1693779   +          +     1.57359386216115 * Marital_StatusSingle
1693780   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1693781   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1693782   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1693783   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1693784   +          +     -1.0649987815942 * Marital_StatusDivorced
1693785   +          +     0.76065111692388 * Marital_StatusMarried
1693786   +          +    -0.21694149754801 * Marital_StatusSingle
1693787   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1693788   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1693789   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1693790   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1693791   +          +     2.02155453548328 * Marital_StatusDivorced
1693792   +          +    -2.60190649735306 * Marital_StatusMarried
1693793   +          +     1.09149388354927 * Marital_StatusSingle
1693794   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1693795   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1693796   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1693797   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1693798   +          +     0.66315970650309 * Marital_StatusDivorced
1693799   +          +    -1.20476729758152 * Marital_StatusMarried
1693800   +          +     0.56175027826397 * Marital_StatusSingle
1693801   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1693802   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1693803   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1693804   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1693805   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1693806   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1693807   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1693808   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1693809   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1693810   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1693811   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1693812   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1693813   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1693814   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1693815   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1693816   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1693817   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1693818   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1693819   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1693820   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1693821   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1693822   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1693823   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1693824   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1693825   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1693826   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1693827   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1693828   +END;
MPRINT(EM_DIAGRAM):   END;
1693829   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1693830   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1693831   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1693832   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1693833   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1693834   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1693835   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1693836   +END;
MPRINT(EM_DIAGRAM):   END;
1693837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693838   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1693839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1693840   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1693841   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1693842   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1693843   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1693844   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1693845   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1693846   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1693847   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1693848   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1693849   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1693850   +          +     1.50005927423985 * S_NumDealsPurchases
1693851   +          +      0.5590536933569 * S_NumDistPurchases
1693852   +          +    -0.61757824339318 * S_NumStorePurchases
1693853   +          +     0.37259686538158 * S_NumWebPurchases
1693854   +          +     2.59725437895564 * S_NumWebVisitsMonth
1693855   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1693856   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1693857   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1693858   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1693859   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1693860   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1693861   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1693862   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1693863   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1693864   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1693865   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1693866   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1693867   +          +    -0.09282222088797 * S_NumDealsPurchases
1693868   +          +     0.10726247938321 * S_NumDistPurchases
1693869   +          +     -1.1235971458527 * S_NumStorePurchases
1693870   +          +    -0.78304387839877 * S_NumWebPurchases
1693871   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1693872   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1693873   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1693874   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1693875   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1693876   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1693877   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1693878   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1693879   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1693880   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1693881   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1693882   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1693883   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1693884   +          +     0.35349185459988 * S_NumDealsPurchases
1693885   +          +     0.06853677714859 * S_NumDistPurchases
1693886   +          +    -1.47546012999338 * S_NumStorePurchases
1693887   +          +     0.20926435398916 * S_NumWebPurchases
1693888   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1693889   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1693890   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1693891   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1693892   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1693893   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1693894   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1693895   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1693896   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1693897   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1693898   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1693899   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1693900   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1693901   +          +      0.3873586120272 * S_NumDealsPurchases
1693902   +          +     0.25911651157596 * S_NumDistPurchases
1693903   +          +     1.58922489084287 * S_NumStorePurchases
1693904   +          +     0.49041797743368 * S_NumWebPurchases
1693905   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1693906   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1693907   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1693908   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1693909   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1693910   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1693911   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1693912   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1693913   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1693914   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1693915   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1693916   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1693917   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1693918   +          +    -0.60830880287865 * S_NumDealsPurchases
1693919   +          +      0.0745331267194 * S_NumDistPurchases
1693920   +          +    -1.39472448256952 * S_NumStorePurchases
1693921   +          +     1.95372179969087 * S_NumWebPurchases
1693922   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1693923   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1693924   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1693925   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1693926   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1693927   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1693928   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1693929   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1693930   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1693931   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1693932   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1693933   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1693934   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1693935   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1693936   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1693937   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1693938   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1693939   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1693940   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1693941   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1693942   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1693943   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1693944   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1693945   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1693946   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1693947   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1693948   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1693949   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1693950   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1693951   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1693952   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1693953   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1693954   +          +    -1.33377871643323 * Marital_StatusDivorced
1693955   +          +    -0.87184228840898 * Marital_StatusMarried
1693956   +          +     1.41223186340257 * Marital_StatusSingle
1693957   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1693958   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1693959   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1693960   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1693961   +          +    -0.21479890935233 * Marital_StatusDivorced
1693962   +          +     -0.0025459519579 * Marital_StatusMarried
1693963   +          +     1.33900491702264 * Marital_StatusSingle
1693964   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1693965   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1693966   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1693967   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1693968   +          +    -0.38307267471999 * Marital_StatusDivorced
1693969   +          +     0.97088969451415 * Marital_StatusMarried
1693970   +          +    -0.28578224473381 * Marital_StatusSingle
1693971   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1693972   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1693973   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1693974   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1693975   +          +    -1.42229401093569 * Marital_StatusDivorced
1693976   +          +      0.7234508382397 * Marital_StatusMarried
1693977   +          +    -0.29062202974628 * Marital_StatusSingle
1693978   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1693979   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1693980   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1693981   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1693982   +          +    -0.99067637207205 * Marital_StatusDivorced
1693983   +          +    -0.50245902142079 * Marital_StatusMarried
1693984   +          +     0.54214494533793 * Marital_StatusSingle
1693985   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1693986   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1693987   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1693988   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1693989   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1693990   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1693991   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1693992   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1693993   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1693994   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1693995   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1693996   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1693997   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1693998   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1693999   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1694000   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1694001   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1694002   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1694003   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1694004   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1694005   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1694006   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1694007   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1694008   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1694009   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1694010   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1694011   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1694012   +END;
MPRINT(EM_DIAGRAM):   END;
1694013   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1694014   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1694015   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1694016   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1694017   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1694018   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1694019   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1694020   +END;
MPRINT(EM_DIAGRAM):   END;
1694021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694022   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1694023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1694025   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1694026   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1694027   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1694028   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1694029   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1694030   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1694031   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1694032   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1694033   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1694034   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1694035   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1694036   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1694037   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1694038   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1694039   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1694040   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1694041   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1694042   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1694043   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1694044   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1694045   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1694046   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1694047   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1694048   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1694049   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1694050   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1694051   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1694052   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1694053   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1694054   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1694055   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1694056   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1694057   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1694058   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1694059   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1694060   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1694061   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1694062   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1694063   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1694064   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1694065   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1694066   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1694067   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1694068   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1694069   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1694070   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1694071   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1694072   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1694073   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1694074   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1694075   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1694076   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1694077   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1694078   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1694079   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1694080   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1694081   +END;
MPRINT(EM_DIAGRAM):   END;
1694082   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1694083   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1694084   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1694085   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1694086   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1694087   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1694088   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1694089   +END;
MPRINT(EM_DIAGRAM):   END;
1694090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694091   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1694092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1694094   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1694095   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1694096   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1694097   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1694098   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1694099   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1694100   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1694101   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1694102   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1694103   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1694104   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1694105   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1694106   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1694107   +END;
MPRINT(EM_DIAGRAM):   END;
1694108   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1694109   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1694110   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1694111   +END;
MPRINT(EM_DIAGRAM):   END;
1694112   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1694113   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1694114   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1694115   +END;
MPRINT(EM_DIAGRAM):   END;
1694116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694117   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1694118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694119   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1694120   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1694121   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1694122   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1694123   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1694124   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1694125   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1694126   +END;
MPRINT(EM_DIAGRAM):   END;
1694127   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1694128   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1694129   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1694130   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1694131   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1694132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694133   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1694134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694135   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1694136   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1694137   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1694138   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1694139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694140   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1694141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694142   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1694143   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1694144   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1694145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694146   +* Ensmbl36: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Scoring Code of model 7 of 7;
1694147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694149   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1694150   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1694151   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1694152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1694153   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1694154   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1694155   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1694156   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1694157   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1694158   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1694159   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1694160   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1694161   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1694162   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1694163   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1694164   +LENGTH _WARN_ $4
1694165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1694166   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1694167   +
1694168   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1694169   +
1694170   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1694171   +
1694172   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1694173   +
1694174   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1694175   +
1694176   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1694177   +
1694178   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1694179   +
1694180   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1694181   +
1694182   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1694183   +
1694184   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1694185   +
1694186   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1694187   +
1694188   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1694189   +
1694190   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1694191   +
1694192   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1694193   +
1694194   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1694195   +
1694196   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1694197   +
1694198   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1694199   +
1694200   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1694201   +
1694202   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1694203   +
1694204   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1694205   +
1694206   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1694207   +
1694208   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1694209   +
1694210   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1694211   +
1694212   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1694213   +
1694214   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1694215   +
1694216   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1694217   +
1694218   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1694219   +
1694220   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1694221   +
1694222   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1694223   +
1694224   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1694225   +
1694226   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1694227   +
1694228   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1694229   +
1694230   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1694231   +
1694232   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1694233   +
1694234   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1694235   +
1694236   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1694237   +
1694238   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1694239   +
1694240   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1694241   +
1694242   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1694243   +
1694244   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1694245   +
1694246   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1694247   +
1694248   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1694249   +
1694250   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1694251   +
1694252   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1694253   +
1694254   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1694255   +
1694256   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1694257   +
1694258   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1694259   +
1694260   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1694261   +
1694262   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1694263   +
1694264   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1694265   +
1694266   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1694267   +
1694268   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1694269   +
1694270   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1694271   +
1694272   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1694273   +
1694274   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1694275   +
1694276   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1694277   +
1694278   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1694279   +
1694280   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1694281   +
1694282   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1694283   +
1694284   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1694285   +
1694286   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1694287   +
1694288   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1694289   +
1694290   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1694291   +
1694292   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1694293   +
1694294   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1694295   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1694296   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1694297   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1694298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694300   +end;
MPRINT(EM_DIAGRAM):   end;
1694301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694303   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1694304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694306   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1694307   +   end;
MPRINT(EM_DIAGRAM):   end;
1694308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694309   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1694310   +   end;
MPRINT(EM_DIAGRAM):   end;
1694311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694312   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1694313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694315   +   end;
MPRINT(EM_DIAGRAM):   end;
1694316   +end;
MPRINT(EM_DIAGRAM):   end;
1694317   +
1694318   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1694319   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1694320   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1694321   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1694322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694324   +end;
MPRINT(EM_DIAGRAM):   end;
1694325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694327   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1694328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694329   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694330   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1694331   +   end;
MPRINT(EM_DIAGRAM):   end;
1694332   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694333   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1694334   +   end;
MPRINT(EM_DIAGRAM):   end;
1694335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694336   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1694337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694339   +   end;
MPRINT(EM_DIAGRAM):   end;
1694340   +end;
MPRINT(EM_DIAGRAM):   end;
1694341   +
1694342   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1694343   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1694344   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1694345   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1694346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694348   +end;
MPRINT(EM_DIAGRAM):   end;
1694349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694351   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1694352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694353   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694354   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1694355   +   end;
MPRINT(EM_DIAGRAM):   end;
1694356   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694357   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1694358   +   end;
MPRINT(EM_DIAGRAM):   end;
1694359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694360   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1694361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694363   +   end;
MPRINT(EM_DIAGRAM):   end;
1694364   +end;
MPRINT(EM_DIAGRAM):   end;
1694365   +
1694366   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1694367   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1694368   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1694369   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1694370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694372   +end;
MPRINT(EM_DIAGRAM):   end;
1694373   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694374   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694375   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1694376   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694377   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694378   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1694379   +   end;
MPRINT(EM_DIAGRAM):   end;
1694380   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694381   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1694382   +   end;
MPRINT(EM_DIAGRAM):   end;
1694383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694384   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1694385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694387   +   end;
MPRINT(EM_DIAGRAM):   end;
1694388   +end;
MPRINT(EM_DIAGRAM):   end;
1694389   +
1694390   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1694391   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1694392   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1694393   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1694394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694396   +end;
MPRINT(EM_DIAGRAM):   end;
1694397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694398   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694399   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1694400   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694401   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694402   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1694403   +   end;
MPRINT(EM_DIAGRAM):   end;
1694404   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694405   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1694406   +   end;
MPRINT(EM_DIAGRAM):   end;
1694407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694408   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1694409   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694410   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694411   +   end;
MPRINT(EM_DIAGRAM):   end;
1694412   +end;
MPRINT(EM_DIAGRAM):   end;
1694413   +
1694414   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1694415   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1694416   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1694417   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1694418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694420   +end;
MPRINT(EM_DIAGRAM):   end;
1694421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694423   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1694424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694425   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1694426   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1694427   +   end;
MPRINT(EM_DIAGRAM):   end;
1694428   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1694429   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1694430   +   end;
MPRINT(EM_DIAGRAM):   end;
1694431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694432   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1694433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694435   +   end;
MPRINT(EM_DIAGRAM):   end;
1694436   +end;
MPRINT(EM_DIAGRAM):   end;
1694437   +
1694438   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1694439   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1694440   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1694441   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1694442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694444   +end;
MPRINT(EM_DIAGRAM):   end;
1694445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694446   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1694447   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1694448   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694449   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1694450   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1694451   +   end;
MPRINT(EM_DIAGRAM):   end;
1694452   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1694453   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1694454   +   end;
MPRINT(EM_DIAGRAM):   end;
1694455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694456   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1694457   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694458   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694459   +   end;
MPRINT(EM_DIAGRAM):   end;
1694460   +end;
MPRINT(EM_DIAGRAM):   end;
1694461   +
1694462   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1694463   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1694464   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1694465   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1694466   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1694467   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1694468   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1694469   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1694470   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1694471   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1694472   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1694473   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1694474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694476   +end;
MPRINT(EM_DIAGRAM):   end;
1694477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694478   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1694479   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1694480   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694481   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1694482   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1694483   +   end;
MPRINT(EM_DIAGRAM):   end;
1694484   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1694485   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1694486   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1694487   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1694488   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1694489   +   end;
MPRINT(EM_DIAGRAM):   end;
1694490   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1694491   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1694492   +   end;
MPRINT(EM_DIAGRAM):   end;
1694493   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1694494   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1694495   +   end;
MPRINT(EM_DIAGRAM):   end;
1694496   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1694497   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1694498   +   end;
MPRINT(EM_DIAGRAM):   end;
1694499   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694500   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1694501   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1694502   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1694503   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1694504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694506   +   end;
MPRINT(EM_DIAGRAM):   end;
1694507   +end;
MPRINT(EM_DIAGRAM):   end;
1694508   +
1694509   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1694510   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1694511   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1694512   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1694513   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1694514   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1694515   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1694516   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1694517   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1694518   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1694519   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1694520   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1694521   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1694522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1694523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694524   +end;
MPRINT(EM_DIAGRAM):   end;
1694525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1694526   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1694527   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1694528   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1694529   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1694530   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1694531   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1694532   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1694533   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1694534   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1694535   +         end;
MPRINT(EM_DIAGRAM):   end;
1694536   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1694537   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1694538   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1694539   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1694540   +            end;
MPRINT(EM_DIAGRAM):   end;
1694541   +         end;
MPRINT(EM_DIAGRAM):   end;
1694542   +      end;
MPRINT(EM_DIAGRAM):   end;
1694543   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1694544   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1694545   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1694546   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1694547   +         end;
MPRINT(EM_DIAGRAM):   end;
1694548   +      end;
MPRINT(EM_DIAGRAM):   end;
1694549   +   end;
MPRINT(EM_DIAGRAM):   end;
1694550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1694551   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1694552   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1694553   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1694554   +      end;
MPRINT(EM_DIAGRAM):   end;
1694555   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1694556   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1694557   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1694558   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1694559   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1694560   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1694561   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1694562   +         end;
MPRINT(EM_DIAGRAM):   end;
1694563   +      end;
MPRINT(EM_DIAGRAM):   end;
1694564   +   end;
MPRINT(EM_DIAGRAM):   end;
1694565   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1694566   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1694567   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1694568   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1694569   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1694570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1694571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694572   +   end;
MPRINT(EM_DIAGRAM):   end;
1694573   +end;
MPRINT(EM_DIAGRAM):   end;
1694574   +
1694575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694576   +*** Checking missing input Interval
1694577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1694578   +
1694579   +IF NMISS(
1694580   +   AcceptedCmpTotal ,
1694581   +   Age ,
1694582   +   Frq ,
1694583   +   Income ,
1694584   +   Kidhome ,
1694585   +   Mnt ,
1694586   +   MntFishProducts ,
1694587   +   MntFruits ,
1694588   +   MntGoldProds ,
1694589   +   MntMeatProducts ,
1694590   +   MntSweetProducts ,
1694591   +   MntWines ,
1694592   +   MonthsAsCustomer ,
1694593   +   NumCatalogPurchases ,
1694594   +   NumDealsPurchases ,
1694595   +   NumDistPurchases ,
1694596   +   NumStorePurchases ,
1694597   +   NumWebPurchases ,
1694598   +   NumWebVisitsMonth ,
1694599   +   RFMstat ,
1694600   +   RMntFrq ,
1694601   +   Recency ,
1694602   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1694603   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1694604   +
1694605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1694606   +END;
MPRINT(EM_DIAGRAM):   END;
1694607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694608   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1694609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1694611   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1694612   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1694613   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1694614   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1694615   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1694616   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1694617   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1694618   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1694619   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1694620   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1694621   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1694622   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1694623   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1694624   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1694625   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1694626   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1694627   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1694628   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1694629   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1694630   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1694631   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1694632   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1694633   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1694634   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1694635   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1694636   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1694637   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1694638   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1694639   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1694640   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1694641   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1694642   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1694643   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1694644   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1694645   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1694646   +END;
MPRINT(EM_DIAGRAM):   END;
1694647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1694648   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1694649   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1694650   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1694651   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1694652   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1694653   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1694654   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1694655   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1694656   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1694657   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1694658   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1694659   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1694660   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1694661   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1694662   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1694663   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1694664   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1694665   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1694666   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1694667   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1694668   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1694669   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1694670   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1694671   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1694672   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1694673   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1694674   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1694675   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1694676   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1694677   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1694678   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1694679   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1694680   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1694681   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1694682   +   ELSE S_NumCatalogPurchases
1694683   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1694684   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1694685   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1694686   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1694687   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1694688   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1694689   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1694690   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1694691   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1694692   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1694693   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1694694   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1694695   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1694696   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1694697   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1694698   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1694699   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1694700   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1694701   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1694702   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1694703   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1694704   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1694705   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1694706   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1694707   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1694708   +END;
MPRINT(EM_DIAGRAM):   END;
1694709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694710   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1694711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694713   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1694714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694716   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1694717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694718   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1694719   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1694720   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1694721   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1694722   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1694723   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1694724   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1694725   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1694726   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1694727   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1694728   +          +     1.17276395296242 * S_NumDealsPurchases
1694729   +          +     0.26632768295477 * S_NumDistPurchases
1694730   +          +    -1.26575615903579 * S_NumStorePurchases
1694731   +          +    -0.95316107557927 * S_NumWebPurchases
1694732   +          +     1.01828574356487 * S_NumWebVisitsMonth
1694733   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1694734   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1694735   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1694736   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1694737   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1694738   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1694739   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1694740   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1694741   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1694742   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1694743   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1694744   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1694745   +          +     1.14485571201233 * S_NumDealsPurchases
1694746   +          +     0.21414266588987 * S_NumDistPurchases
1694747   +          +    -0.10530090074297 * S_NumStorePurchases
1694748   +          +    -0.41712321238458 * S_NumWebPurchases
1694749   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1694750   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1694751   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1694752   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1694753   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1694754   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1694755   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1694756   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1694757   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1694758   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1694759   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1694760   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1694761   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1694762   +          +      0.7196418967437 * S_NumDealsPurchases
1694763   +          +     0.69035286374177 * S_NumDistPurchases
1694764   +          +     0.38027656631135 * S_NumStorePurchases
1694765   +          +    -0.18878358997924 * S_NumWebPurchases
1694766   +          +     1.61962062004798 * S_NumWebVisitsMonth
1694767   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1694768   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1694769   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1694770   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1694771   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1694772   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1694773   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1694774   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1694775   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1694776   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1694777   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1694778   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1694779   +          +    -0.00642902007204 * S_NumDealsPurchases
1694780   +          +     0.29785069480367 * S_NumDistPurchases
1694781   +          +    -0.42243322063147 * S_NumStorePurchases
1694782   +          +     0.54880896338383 * S_NumWebPurchases
1694783   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1694784   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1694785   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1694786   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1694787   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1694788   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1694789   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1694790   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1694791   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1694792   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1694793   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1694794   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1694795   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1694796   +          +    -0.48404738328225 * S_NumDealsPurchases
1694797   +          +    -0.02464180457879 * S_NumDistPurchases
1694798   +          +     1.17201831082067 * S_NumStorePurchases
1694799   +          +     0.57453655167516 * S_NumWebPurchases
1694800   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1694801   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1694802   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1694803   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1694804   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1694805   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1694806   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1694807   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1694808   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1694809   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1694810   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1694811   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1694812   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1694813   +          +    -1.49850531967483 * S_NumDealsPurchases
1694814   +          +    -0.82105466264223 * S_NumDistPurchases
1694815   +          +     0.29984603642824 * S_NumStorePurchases
1694816   +          +     0.06557123721611 * S_NumWebPurchases
1694817   +          +     1.04754749365002 * S_NumWebVisitsMonth
1694818   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1694819   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1694820   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1694821   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1694822   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1694823   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1694824   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1694825   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1694826   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1694827   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1694828   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1694829   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1694830   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1694831   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1694832   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1694833   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1694834   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1694835   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1694836   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1694837   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1694838   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1694839   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1694840   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1694841   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1694842   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1694843   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1694844   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1694845   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1694846   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1694847   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1694848   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1694849   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1694850   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1694851   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1694852   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1694853   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1694854   +          +     0.24583509957712 * Marital_StatusDivorced
1694855   +          +    -0.22681931588361 * Marital_StatusMarried
1694856   +          +    -0.12924106229536 * Marital_StatusSingle
1694857   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1694858   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1694859   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1694860   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1694861   +          +    -0.12585334311068 * Marital_StatusDivorced
1694862   +          +    -0.20835502467207 * Marital_StatusMarried
1694863   +          +    -0.13839534449368 * Marital_StatusSingle
1694864   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1694865   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1694866   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1694867   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1694868   +          +     0.35106363238113 * Marital_StatusDivorced
1694869   +          +     -1.3414808583918 * Marital_StatusMarried
1694870   +          +     1.40835320798486 * Marital_StatusSingle
1694871   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1694872   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1694873   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1694874   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1694875   +          +     0.48174546958393 * Marital_StatusDivorced
1694876   +          +    -0.41416978858191 * Marital_StatusMarried
1694877   +          +    -0.23376801546265 * Marital_StatusSingle
1694878   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1694879   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1694880   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1694881   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1694882   +          +    -0.67557643774246 * Marital_StatusDivorced
1694883   +          +     1.63844045917367 * Marital_StatusMarried
1694884   +          +    -0.70320960247699 * Marital_StatusSingle
1694885   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1694886   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1694887   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1694888   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1694889   +          +    -0.11371453086883 * Marital_StatusDivorced
1694890   +          +    -0.34226997176291 * Marital_StatusMarried
1694891   +          +    -1.01568676685754 * Marital_StatusSingle
1694892   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1694893   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1694894   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1694895   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1694896   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1694897   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1694898   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1694899   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1694900   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1694901   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1694902   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1694903   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1694904   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1694905   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1694906   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1694907   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1694908   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1694909   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1694910   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1694911   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1694912   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1694913   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1694914   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1694915   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1694916   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1694917   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1694918   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1694919   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1694920   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1694921   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1694922   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1694923   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1694924   +END;
MPRINT(EM_DIAGRAM):   END;
1694925   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1694926   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1694927   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1694928   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1694929   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1694930   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1694931   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1694932   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1694933   +END;
MPRINT(EM_DIAGRAM):   END;
1694934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694935   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1694936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1694937   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1694938   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1694939   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1694940   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1694941   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1694942   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1694943   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1694944   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1694945   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1694946   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1694947   +          +    -0.87259051567474 * S_NumDealsPurchases
1694948   +          +    -0.36454149529139 * S_NumDistPurchases
1694949   +          +     0.12447759925061 * S_NumStorePurchases
1694950   +          +    -1.08133487947367 * S_NumWebPurchases
1694951   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1694952   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1694953   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1694954   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1694955   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1694956   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1694957   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1694958   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1694959   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1694960   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1694961   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1694962   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1694963   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1694964   +          +     2.23121497416403 * S_NumDealsPurchases
1694965   +          +    -0.48674842191071 * S_NumDistPurchases
1694966   +          +     1.77510728607544 * S_NumStorePurchases
1694967   +          +     0.14647433155436 * S_NumWebPurchases
1694968   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1694969   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1694970   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1694971   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1694972   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1694973   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1694974   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1694975   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1694976   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1694977   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1694978   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1694979   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1694980   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1694981   +          +     0.14338855349611 * S_NumDealsPurchases
1694982   +          +    -2.21071010829235 * S_NumDistPurchases
1694983   +          +    -0.21795889348002 * S_NumStorePurchases
1694984   +          +     1.98825087883535 * S_NumWebPurchases
1694985   +          +     1.02482442531149 * S_NumWebVisitsMonth
1694986   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1694987   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1694988   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1694989   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1694990   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1694991   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1694992   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1694993   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1694994   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1694995   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1694996   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1694997   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1694998   +          +     0.30041205661012 * S_NumDealsPurchases
1694999   +          +    -0.63499849986918 * S_NumDistPurchases
1695000   +          +    -0.34155713433714 * S_NumStorePurchases
1695001   +          +    -1.14183354933936 * S_NumWebPurchases
1695002   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1695003   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1695004   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1695005   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1695006   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1695007   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1695008   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1695009   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1695010   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1695011   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1695012   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1695013   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1695014   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1695015   +          +    -0.21237915559831 * S_NumDealsPurchases
1695016   +          +     0.48256923764182 * S_NumDistPurchases
1695017   +          +    -0.45553093140641 * S_NumStorePurchases
1695018   +          +      0.5593655963659 * S_NumWebPurchases
1695019   +          +     0.27943768691188 * S_NumWebVisitsMonth
1695020   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1695021   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1695022   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1695023   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1695024   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1695025   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1695026   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1695027   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1695028   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1695029   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1695030   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1695031   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1695032   +          +     2.38967021388062 * S_NumDealsPurchases
1695033   +          +    -0.97722398866481 * S_NumDistPurchases
1695034   +          +     1.57612333191312 * S_NumStorePurchases
1695035   +          +    -0.75968679115983 * S_NumWebPurchases
1695036   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1695037   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1695038   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1695039   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1695040   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1695041   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1695042   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1695043   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1695044   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1695045   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1695046   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1695047   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1695048   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1695049   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1695050   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1695051   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1695052   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1695053   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1695054   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1695055   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1695056   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1695057   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1695058   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1695059   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1695060   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1695061   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1695062   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1695063   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1695064   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1695065   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1695066   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1695067   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1695068   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1695069   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1695070   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1695071   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1695072   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1695073   +          +     0.96470902298142 * Marital_StatusDivorced
1695074   +          +     0.94805959268314 * Marital_StatusMarried
1695075   +          +     -0.6523948769616 * Marital_StatusSingle
1695076   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1695077   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1695078   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1695079   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1695080   +          +      0.3918249505531 * Marital_StatusDivorced
1695081   +          +    -0.00968091979586 * Marital_StatusMarried
1695082   +          +     0.84615379885071 * Marital_StatusSingle
1695083   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1695084   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1695085   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1695086   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1695087   +          +     1.14335160313191 * Marital_StatusDivorced
1695088   +          +     0.50580517192175 * Marital_StatusMarried
1695089   +          +     0.17264295020921 * Marital_StatusSingle
1695090   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1695091   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1695092   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1695093   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1695094   +          +    -0.11238504444225 * Marital_StatusDivorced
1695095   +          +    -0.81348274043749 * Marital_StatusMarried
1695096   +          +     0.46075415610001 * Marital_StatusSingle
1695097   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1695098   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1695099   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1695100   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1695101   +          +    -0.46342068701431 * Marital_StatusDivorced
1695102   +          +    -0.41667845270204 * Marital_StatusMarried
1695103   +          +    -0.47166707496281 * Marital_StatusSingle
1695104   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1695105   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1695106   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1695107   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1695108   +          +    -0.45376613787812 * Marital_StatusDivorced
1695109   +          +     0.01337046049801 * Marital_StatusMarried
1695110   +          +    -0.92811489484121 * Marital_StatusSingle
1695111   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1695112   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1695113   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1695114   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1695115   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1695116   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1695117   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1695118   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1695119   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1695120   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1695121   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1695122   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1695123   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1695124   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1695125   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1695126   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1695127   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1695128   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1695129   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1695130   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1695131   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1695132   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1695133   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1695134   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1695135   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1695136   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1695137   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1695138   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1695139   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1695140   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1695141   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1695142   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1695143   +END;
MPRINT(EM_DIAGRAM):   END;
1695144   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1695145   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1695146   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1695147   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1695148   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1695149   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1695150   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1695151   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1695152   +END;
MPRINT(EM_DIAGRAM):   END;
1695153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695154   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1695155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1695157   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1695158   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1695159   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1695160   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1695161   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1695162   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1695163   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1695164   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1695165   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1695166   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1695167   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1695168   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1695169   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1695170   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1695171   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1695172   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1695173   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1695174   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1695175   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1695176   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1695177   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1695178   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1695179   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1695180   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1695181   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1695182   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1695183   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1695184   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1695185   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1695186   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1695187   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1695188   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1695189   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1695190   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1695191   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1695192   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1695193   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1695194   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1695195   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1695196   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1695197   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1695198   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1695199   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1695200   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1695201   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1695202   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1695203   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1695204   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1695205   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1695206   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1695207   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1695208   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1695209   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1695210   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1695211   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1695212   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1695213   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1695214   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1695215   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1695216   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1695217   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1695218   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1695219   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1695220   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1695221   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1695222   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1695223   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1695224   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1695225   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1695226   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1695227   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1695228   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1695229   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1695230   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1695231   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1695232   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1695233   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1695234   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1695235   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1695236   +END;
MPRINT(EM_DIAGRAM):   END;
1695237   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1695238   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1695239   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1695240   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1695241   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1695242   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1695243   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1695244   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1695245   +END;
MPRINT(EM_DIAGRAM):   END;
1695246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695247   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1695248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1695250   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1695251   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1695252   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1695253   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1695254   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1695255   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1695256   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1695257   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1695258   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1695259   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1695260   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1695261   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1695262   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1695263   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1695264   +END;
MPRINT(EM_DIAGRAM):   END;
1695265   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1695266   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1695267   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1695268   +END;
MPRINT(EM_DIAGRAM):   END;
1695269   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1695270   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1695271   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1695272   +END;
MPRINT(EM_DIAGRAM):   END;
1695273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695274   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1695275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695276   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1695277   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1695278   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1695279   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1695280   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1695281   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1695282   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1695283   +END;
MPRINT(EM_DIAGRAM):   END;
1695284   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1695285   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1695286   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1695287   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1695288   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1695289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695290   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1695291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695292   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1695293   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1695294   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1695295   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1695296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695297   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1695298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695299   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1695300   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1695301   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1695302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695303   +* Ensmbl36: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Average Posteriors of 7 models;
1695304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695305   +P_DepVar1 = (
1695306   +AutoNeural6_P_DepVar1 +
1695307   +AutoNeural7_P_DepVar1 +
1695308   +AutoNeural8_P_DepVar1 +
1695309   +AutoNeural10_P_DepVar1 +
1695310   +AutoNeural9_P_DepVar1 +
1695311   +AutoNeural11_P_DepVar1 +
1695312   +AutoNeural12_P_DepVar1
1695313   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural6_P_DepVar1 + AutoNeural7_P_DepVar1 +
AutoNeural8_P_DepVar1 + AutoNeural10_P_DepVar1 + AutoNeural9_P_DepVar1 +
AutoNeural11_P_DepVar1 + AutoNeural12_P_DepVar1 )/7;
1695314   +P_DepVar0 = (
1695315   +AutoNeural6_P_DepVar0 +
1695316   +AutoNeural7_P_DepVar0 +
1695317   +AutoNeural8_P_DepVar0 +
1695318   +AutoNeural10_P_DepVar0 +
1695319   +AutoNeural9_P_DepVar0 +
1695320   +AutoNeural11_P_DepVar0 +
1695321   +AutoNeural12_P_DepVar0
1695322   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural6_P_DepVar0 + AutoNeural7_P_DepVar0 +
AutoNeural8_P_DepVar0 + AutoNeural10_P_DepVar0 + AutoNeural9_P_DepVar0 +
AutoNeural11_P_DepVar0 + AutoNeural12_P_DepVar0 )/7;
1695323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695324   +* Ensmbl36: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing Classification Vars;
1695325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695326   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
1695327   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1695328   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1695329   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1695330   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1695331   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1695332   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1695333   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1695334   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1695335   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1695336   +end;
MPRINT(EM_DIAGRAM):   end;
1695337   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1695338   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1695339   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1695340   +end;
MPRINT(EM_DIAGRAM):   end;
1695341   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1695342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695343   +* Ensmbl36: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Producing Unformatted variable;
1695344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695345   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1695346   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1695347   +else
1695348   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1695349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695350   +* Ensmbl36: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl36: Computing _WARN_ Variable;
1695351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695352   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1695353   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1695354   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1695355   +if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695355  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695356   +if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695356  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695357   +if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695357  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695358   +if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695358  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695359   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695359  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695360   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695360  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695361   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695361  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695362   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695362  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695363   +if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695363  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695364   +if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695364  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695365   +if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695365  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then
The SAS System
 
substr(_WARN_, 3, 1) ='P';
1695366   +if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695366  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695367   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695367  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695368   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695368  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695369   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695369  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695370   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695370  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695371   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695371  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695372   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695372  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695373   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695373  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695374   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695374  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695375   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695375  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695376   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695376  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695377   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695377  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695378   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695378  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1695379   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1695379  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1695380   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1695380  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1695381   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1695381  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1695382   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1695382  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1695383    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1695384    quit;
1695385    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1695386    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1695387    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1695388    retain ID 2 Node "Ensmbl36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Ensmbl36";
1695389    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1695390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17586 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 17586 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1695391    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1695392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1695393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17586 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 17586 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1695394    proc sort data=EMWS8.Ensmbl36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl36_variableset out=_temp2(keep=NAME CREATOR);
1695395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1695396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695397    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1695398    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1695399    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1695400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695401    proc contents data=EMWS8.Ensmbl36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Ensmbl36_train out=_meta(keep=NAME) noprint;
1695402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1695403    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1695404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1695405    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 89 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1695407    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1695408    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1695409    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 89 observations read from the data set WORK._META.
NOTE: There were 40 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 89 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1695410    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1695411    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1695411  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8141 rows and 5 columns.
 
1695412    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1695413    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1695414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8141 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 8141 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695415    filename _pref
1695415  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL6\EMPUBLISHSCORE.sas";
1695416    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1695417    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL6\EMPUBLISHSCORE.sas.
1695418   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1695419   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1695420   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1695421   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1695422   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1695423   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1695424   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1695425   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1695426   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1695427   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1695428   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1695429   +LENGTH _WARN_ $4
1695430   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1695431   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1695432   +
1695433   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1695434   +
1695435   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1695436   +
1695437   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1695438   +
1695439   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1695440   +
1695441   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1695442   +
1695443   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1695444   +
1695445   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1695446   +
1695447   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1695448   +
1695449   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1695450   +
1695451   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1695452   +
1695453   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1695454   +
1695455   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1695456   +
1695457   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1695458   +
1695459   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1695460   +
1695461   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1695462   +
1695463   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1695464   +
1695465   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1695466   +
1695467   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1695468   +
1695469   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1695470   +
1695471   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1695472   +
1695473   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1695474   +
1695475   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1695476   +
1695477   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1695478   +
1695479   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1695480   +
1695481   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1695482   +
1695483   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1695484   +
1695485   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1695486   +
1695487   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1695488   +
1695489   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1695490   +
1695491   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1695492   +
1695493   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1695494   +
1695495   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1695496   +
1695497   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1695498   +
1695499   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1695500   +
1695501   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1695502   +
1695503   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1695504   +
1695505   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1695506   +
1695507   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1695508   +
1695509   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1695510   +
1695511   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1695512   +
1695513   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1695514   +
1695515   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1695516   +
1695517   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1695518   +
1695519   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1695520   +
1695521   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1695522   +
1695523   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1695524   +
1695525   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1695526   +
1695527   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1695528   +
1695529   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1695530   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1695531   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1695532   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1695533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695535   +end;
MPRINT(EM_DIAGRAM):   end;
1695536   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695538   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1695539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695540   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695541   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1695542   +   end;
MPRINT(EM_DIAGRAM):   end;
1695543   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695544   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1695545   +   end;
MPRINT(EM_DIAGRAM):   end;
1695546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695547   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1695548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695550   +   end;
MPRINT(EM_DIAGRAM):   end;
1695551   +end;
MPRINT(EM_DIAGRAM):   end;
1695552   +
1695553   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1695554   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1695555   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1695556   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1695557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695559   +end;
MPRINT(EM_DIAGRAM):   end;
1695560   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695561   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695562   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1695563   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695564   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695565   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1695566   +   end;
MPRINT(EM_DIAGRAM):   end;
1695567   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695568   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1695569   +   end;
MPRINT(EM_DIAGRAM):   end;
1695570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695571   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1695572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695574   +   end;
MPRINT(EM_DIAGRAM):   end;
1695575   +end;
MPRINT(EM_DIAGRAM):   end;
1695576   +
1695577   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1695578   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1695579   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1695580   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1695581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695583   +end;
MPRINT(EM_DIAGRAM):   end;
1695584   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695586   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1695587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695588   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695589   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1695590   +   end;
MPRINT(EM_DIAGRAM):   end;
1695591   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695592   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1695593   +   end;
MPRINT(EM_DIAGRAM):   end;
1695594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695595   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1695596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695598   +   end;
MPRINT(EM_DIAGRAM):   end;
1695599   +end;
MPRINT(EM_DIAGRAM):   end;
1695600   +
1695601   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1695602   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1695603   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1695604   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1695605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695607   +end;
MPRINT(EM_DIAGRAM):   end;
1695608   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695609   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695610   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1695611   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695612   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695613   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1695614   +   end;
MPRINT(EM_DIAGRAM):   end;
1695615   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695616   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1695617   +   end;
MPRINT(EM_DIAGRAM):   end;
1695618   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695619   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1695620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695622   +   end;
MPRINT(EM_DIAGRAM):   end;
1695623   +end;
MPRINT(EM_DIAGRAM):   end;
1695624   +
1695625   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1695626   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1695627   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1695628   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1695629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695631   +end;
MPRINT(EM_DIAGRAM):   end;
1695632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695634   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1695635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695636   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695637   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1695638   +   end;
MPRINT(EM_DIAGRAM):   end;
1695639   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695640   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1695641   +   end;
MPRINT(EM_DIAGRAM):   end;
1695642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695643   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1695644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695646   +   end;
MPRINT(EM_DIAGRAM):   end;
1695647   +end;
MPRINT(EM_DIAGRAM):   end;
1695648   +
1695649   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1695650   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1695651   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1695652   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1695653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695655   +end;
MPRINT(EM_DIAGRAM):   end;
1695656   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695657   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695658   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1695659   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695660   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1695661   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1695662   +   end;
MPRINT(EM_DIAGRAM):   end;
1695663   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1695664   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1695665   +   end;
MPRINT(EM_DIAGRAM):   end;
1695666   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695667   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1695668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695670   +   end;
MPRINT(EM_DIAGRAM):   end;
1695671   +end;
MPRINT(EM_DIAGRAM):   end;
1695672   +
1695673   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1695674   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1695675   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1695676   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1695677   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695678   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695679   +end;
MPRINT(EM_DIAGRAM):   end;
1695680   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695681   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1695682   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1695683   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695684   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1695685   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1695686   +   end;
MPRINT(EM_DIAGRAM):   end;
1695687   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1695688   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1695689   +   end;
MPRINT(EM_DIAGRAM):   end;
1695690   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695691   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1695692   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695693   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695694   +   end;
MPRINT(EM_DIAGRAM):   end;
1695695   +end;
MPRINT(EM_DIAGRAM):   end;
1695696   +
1695697   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1695698   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1695699   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1695700   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1695701   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1695702   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1695703   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1695704   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1695705   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1695706   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1695707   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1695708   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1695709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695711   +end;
MPRINT(EM_DIAGRAM):   end;
1695712   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695713   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1695714   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1695715   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695716   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1695717   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1695718   +   end;
MPRINT(EM_DIAGRAM):   end;
1695719   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1695720   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1695721   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1695722   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1695723   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1695724   +   end;
MPRINT(EM_DIAGRAM):   end;
1695725   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1695726   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1695727   +   end;
MPRINT(EM_DIAGRAM):   end;
1695728   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1695729   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1695730   +   end;
MPRINT(EM_DIAGRAM):   end;
1695731   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1695732   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1695733   +   end;
MPRINT(EM_DIAGRAM):   end;
1695734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695735   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1695736   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1695737   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1695738   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1695739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695741   +   end;
MPRINT(EM_DIAGRAM):   end;
1695742   +end;
MPRINT(EM_DIAGRAM):   end;
1695743   +
1695744   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1695745   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1695746   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1695747   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1695748   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1695749   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1695750   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1695751   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1695752   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1695753   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1695754   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1695755   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1695756   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1695757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695759   +end;
MPRINT(EM_DIAGRAM):   end;
1695760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695761   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1695762   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1695763   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695764   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1695765   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1695766   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1695767   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1695768   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1695769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1695770   +         end;
MPRINT(EM_DIAGRAM):   end;
1695771   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1695772   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1695773   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1695774   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1695775   +            end;
MPRINT(EM_DIAGRAM):   end;
1695776   +         end;
MPRINT(EM_DIAGRAM):   end;
1695777   +      end;
MPRINT(EM_DIAGRAM):   end;
1695778   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1695779   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1695780   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1695781   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1695782   +         end;
MPRINT(EM_DIAGRAM):   end;
1695783   +      end;
MPRINT(EM_DIAGRAM):   end;
1695784   +   end;
MPRINT(EM_DIAGRAM):   end;
1695785   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695786   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1695787   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1695788   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1695789   +      end;
MPRINT(EM_DIAGRAM):   end;
1695790   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1695791   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1695792   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1695793   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1695794   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1695795   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1695796   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1695797   +         end;
MPRINT(EM_DIAGRAM):   end;
1695798   +      end;
MPRINT(EM_DIAGRAM):   end;
1695799   +   end;
MPRINT(EM_DIAGRAM):   end;
1695800   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1695801   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1695802   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1695803   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1695804   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1695805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1695806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695807   +   end;
MPRINT(EM_DIAGRAM):   end;
1695808   +end;
MPRINT(EM_DIAGRAM):   end;
1695809   +
1695810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695811   +*** Checking missing input Interval
1695812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1695813   +
1695814   +IF NMISS(
1695815   +   AcceptedCmpTotal ,
1695816   +   Age ,
1695817   +   Frq ,
1695818   +   Income ,
1695819   +   Kidhome ,
1695820   +   Mnt ,
1695821   +   MntFishProducts ,
1695822   +   MntFruits ,
1695823   +   MntGoldProds ,
1695824   +   MntMeatProducts ,
1695825   +   MntSweetProducts ,
1695826   +   MntWines ,
1695827   +   MonthsAsCustomer ,
1695828   +   NumCatalogPurchases ,
1695829   +   NumDealsPurchases ,
1695830   +   NumDistPurchases ,
1695831   +   NumStorePurchases ,
1695832   +   NumWebPurchases ,
1695833   +   NumWebVisitsMonth ,
1695834   +   RFMstat ,
1695835   +   RMntFrq ,
1695836   +   Recency ,
1695837   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1695838   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1695839   +
1695840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695841   +END;
MPRINT(EM_DIAGRAM):   END;
1695842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695843   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1695844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1695846   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1695847   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1695848   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1695849   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1695850   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1695851   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1695852   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1695853   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1695854   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1695855   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1695856   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1695857   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1695858   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1695859   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1695860   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1695861   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1695862   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1695863   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1695864   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1695865   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1695866   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1695867   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1695868   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1695869   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1695870   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1695871   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1695872   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1695873   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1695874   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1695875   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1695876   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1695877   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1695878   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1695879   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1695880   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1695881   +END;
MPRINT(EM_DIAGRAM):   END;
1695882   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1695883   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1695884   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1695885   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1695886   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1695887   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1695888   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1695889   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1695890   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1695891   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1695892   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1695893   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1695894   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1695895   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1695896   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1695897   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1695898   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1695899   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1695900   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1695901   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1695902   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1695903   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1695904   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1695905   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1695906   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1695907   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1695908   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1695909   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1695910   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1695911   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1695912   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1695913   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1695914   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1695915   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1695916   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1695917   +   ELSE S_NumCatalogPurchases
1695918   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1695919   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1695920   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1695921   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1695922   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1695923   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1695924   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1695925   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1695926   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1695927   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1695928   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1695929   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1695930   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1695931   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1695932   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1695933   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1695934   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1695935   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1695936   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1695937   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1695938   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1695939   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1695940   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1695941   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1695942   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1695943   +END;
MPRINT(EM_DIAGRAM):   END;
1695944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695945   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1695946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695948   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1695949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695951   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1695952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1695954   +   H1x1_1  =    -0.39626020371997 * S_AcceptedCmpTotal
1695955   +          +    -0.01816056663075 * S_Age  +    -0.00460254268687 * S_Frq
1695956   +          +     -0.6298818722064 * S_Income  +      0.8900929150705 *
1695957   +        S_Kidhome  +     0.05998375535947 * S_Mnt  +     0.08478552461574 *
1695958   +        S_MntFishProducts  +     0.07285521492122 * S_MntFruits
1695959   +          +     0.02425299634788 * S_MntGoldProds  +    -0.41076383325238 *
1695960   +        S_MntMeatProducts  +     0.07871852129826 * S_MntSweetProducts
1695961   +          +     0.41538830130195 * S_MntWines  +    -0.05328800798119 *
1695962   +        S_MonthsAsCustomer  +    -0.40684432921987 * S_NumCatalogPurchases
1695963   +          +     -0.4295354470932 * S_NumDealsPurchases
1695964   +          +    -0.08226280459837 * S_NumDistPurchases
1695965   +          +      0.2932815275833 * S_NumStorePurchases
1695966   +          +     0.19049189042599 * S_NumWebPurchases
1695967   +          +    -0.98799339280673 * S_NumWebVisitsMonth
1695968   +          +     0.11260673669543 * S_RFMstat  +     0.13635890961985 *
1695969   +        S_RMntFrq  +     1.04348870032296 * S_Recency
1695970   +          +     0.52611148815102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39626020371997 * S_AcceptedCmpTotal + -0.01816056663075 *
S_Age + -0.00460254268687 * S_Frq + -0.6298818722064 * S_Income + 0.8900929150705 * S_Kidhome
+ 0.05998375535947 * S_Mnt + 0.08478552461574 * S_MntFishProducts + 0.07285521492122 *
S_MntFruits + 0.02425299634788 * S_MntGoldProds + -0.41076383325238 * S_MntMeatProducts +
0.07871852129826 * S_MntSweetProducts + 0.41538830130195 * S_MntWines + -0.05328800798119 *
S_MonthsAsCustomer + -0.40684432921987 * S_NumCatalogPurchases + -0.4295354470932 *
S_NumDealsPurchases + -0.08226280459837 * S_NumDistPurchases + 0.2932815275833 *
S_NumStorePurchases + 0.19049189042599 * S_NumWebPurchases + -0.98799339280673 *
S_NumWebVisitsMonth + 0.11260673669543 * S_RFMstat + 0.13635890961985 * S_RMntFrq +
1.04348870032296 * S_Recency + 0.52611148815102 * S_Teenhome ;
1695971   +   H1x1_1  = H1x1_1  +     0.15790711928997 * AcceptedCmp10
1695972   +          +     0.06783787806396 * AcceptedCmp20  +     0.41565774195293 *
1695973   +        AcceptedCmp30  +     0.30916570020187 * AcceptedCmp40
1695974   +          +     0.01958247067826 * AcceptedCmp50  +    -0.22124142064002 *
1695975   +        Complain0  +    -0.10489638586177 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15790711928997 * AcceptedCmp10 + 0.06783787806396 *
AcceptedCmp20 + 0.41565774195293 * AcceptedCmp30 + 0.30916570020187 * AcceptedCmp40 +
0.01958247067826 * AcceptedCmp50 + -0.22124142064002 * Complain0 + -0.10489638586177 *
HigherEducationBinary0 ;
1695976   +   H1x1_1  = H1x1_1  +    -0.08125710121444 * Education2n_Cycle
1695977   +          +     0.43870916958611 * EducationBasic  +     0.00821874857942 *
1695978   +        EducationGraduation  +    -0.06446100461656 * EducationMaster
1695979   +          +    -0.78551174413278 * Marital_StatusDivorced
1695980   +          +     1.14162836709205 * Marital_StatusMarried
1695981   +          +    -0.85471695548675 * Marital_StatusSingle
1695982   +          +     1.26505259752775 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.08125710121444 * Education2n_Cycle +
0.43870916958611 * EducationBasic + 0.00821874857942 * EducationGraduation + -0.06446100461656
* EducationMaster + -0.78551174413278 * Marital_StatusDivorced + 1.14162836709205 *
Marital_StatusMarried + -0.85471695548675 * Marital_StatusSingle + 1.26505259752775 *
Marital_StatusTogether ;
1695983   +   H1x1_1  =     0.64210847429525 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.64210847429525 + H1x1_1 ;
1695984   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1695985   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1695986   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1695987   +END;
MPRINT(EM_DIAGRAM):   END;
1695988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1695989   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1695990   +END;
MPRINT(EM_DIAGRAM):   END;
1695991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695992   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1695993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1695994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1695995   +   H1x2_1  =     1.91116996820275 * S_AcceptedCmpTotal
1695996   +          +    -0.04565000095235 * S_Age  +    -1.63806233692285 * S_Frq
1695997   +          +    -0.15095439296545 * S_Income  +     0.02267703582625 *
1695998   +        S_Kidhome  +     2.48236777474814 * S_Mnt  +    -1.42112052837665 *
1695999   +        S_MntFishProducts  +    -0.11955588126018 * S_MntFruits
1696000   +          +     0.13658953936605 * S_MntGoldProds  +     4.97158775763288 *
1696001   +        S_MntMeatProducts  +    -0.28267341074908 * S_MntSweetProducts
1696002   +          +    -1.82601506972813 * S_MntWines  +    -0.19812697196432 *
1696003   +        S_MonthsAsCustomer  +     0.19332662253824 * S_NumCatalogPurchases
1696004   +          +      0.1710743409836 * S_NumDealsPurchases
1696005   +          +     1.10019178495427 * S_NumDistPurchases
1696006   +          +     0.06701301620472 * S_NumStorePurchases
1696007   +          +    -1.47240374003368 * S_NumWebPurchases
1696008   +          +     0.38443387640949 * S_NumWebVisitsMonth
1696009   +          +      2.0027113997702 * S_RFMstat  +    -0.21911959624222 *
1696010   +        S_RMntFrq  +    -0.01383257292281 * S_Recency
1696011   +          +     0.06197183036374 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.91116996820275 * S_AcceptedCmpTotal + -0.04565000095235 *
S_Age + -1.63806233692285 * S_Frq + -0.15095439296545 * S_Income + 0.02267703582625 *
S_Kidhome + 2.48236777474814 * S_Mnt + -1.42112052837665 * S_MntFishProducts +
-0.11955588126018 * S_MntFruits + 0.13658953936605 * S_MntGoldProds + 4.97158775763288 *
S_MntMeatProducts + -0.28267341074908 * S_MntSweetProducts + -1.82601506972813 * S_MntWines +
-0.19812697196432 * S_MonthsAsCustomer + 0.19332662253824 * S_NumCatalogPurchases +
0.1710743409836 * S_NumDealsPurchases + 1.10019178495427 * S_NumDistPurchases +
0.06701301620472 * S_NumStorePurchases + -1.47240374003368 * S_NumWebPurchases +
0.38443387640949 * S_NumWebVisitsMonth + 2.0027113997702 * S_RFMstat + -0.21911959624222 *
S_RMntFrq + -0.01383257292281 * S_Recency + 0.06197183036374 * S_Teenhome ;
1696012   +   H1x2_1  = H1x2_1  +    -2.19426751676022 * AcceptedCmp10
1696013   +          +     1.23153389834213 * AcceptedCmp20  +     1.52112605411294 *
1696014   +        AcceptedCmp30  +     1.24421666042028 * AcceptedCmp40
1696015   +          +    -1.01515793855275 * AcceptedCmp50  +    -0.37077318076551 *
1696016   +        Complain0  +    -0.60160682289549 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -2.19426751676022 * AcceptedCmp10 + 1.23153389834213 *
AcceptedCmp20 + 1.52112605411294 * AcceptedCmp30 + 1.24421666042028 * AcceptedCmp40 +
-1.01515793855275 * AcceptedCmp50 + -0.37077318076551 * Complain0 + -0.60160682289549 *
HigherEducationBinary0 ;
1696017   +   H1x2_1  = H1x2_1  +     0.86205864289563 * Education2n_Cycle
1696018   +          +     1.36125955589945 * EducationBasic  +    -0.53843321813375 *
1696019   +        EducationGraduation  +    -0.84396607413409 * EducationMaster
1696020   +          +    -0.36835980184757 * Marital_StatusDivorced
1696021   +          +     0.71718933679692 * Marital_StatusMarried
1696022   +          +    -0.35767236657055 * Marital_StatusSingle
1696023   +          +     0.87230634846649 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.86205864289563 * Education2n_Cycle +
1.36125955589945 * EducationBasic + -0.53843321813375 * EducationGraduation +
-0.84396607413409 * EducationMaster + -0.36835980184757 * Marital_StatusDivorced +
0.71718933679692 * Marital_StatusMarried + -0.35767236657055 * Marital_StatusSingle +
0.87230634846649 * Marital_StatusTogether ;
1696024   +   H1x2_1  =     1.98030145519039 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.98030145519039 + H1x2_1 ;
1696025   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1696026   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1696027   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1696028   +END;
MPRINT(EM_DIAGRAM):   END;
1696029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696030   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1696031   +END;
MPRINT(EM_DIAGRAM):   END;
1696032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696033   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1696034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696035   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696036   +   H1x3_1  =     0.59484084506505 * S_AcceptedCmpTotal
1696037   +          +    -0.09107168455833 * S_Age  +      0.5281685679707 * S_Frq
1696038   +          +     1.27295894323816 * S_Income  +    -2.21965206319903 *
1696039   +        S_Kidhome  +     1.64535832697746 * S_Mnt  +    -0.35647765898878 *
1696040   +        S_MntFishProducts  +       0.702900738572 * S_MntFruits
1696041   +          +    -0.05421413002638 * S_MntGoldProds  +     0.35353806013819 *
1696042   +        S_MntMeatProducts  +     0.63868155719201 * S_MntSweetProducts
1696043   +          +     1.59716770369014 * S_MntWines  +    -0.38061815224137 *
1696044   +        S_MonthsAsCustomer  +     0.32358812228632 * S_NumCatalogPurchases
1696045   +          +    -1.99858075809796 * S_NumDealsPurchases
1696046   +          +    -0.37353682448701 * S_NumDistPurchases
1696047   +          +     1.16275863071649 * S_NumStorePurchases
1696048   +          +       -0.75936809253 * S_NumWebPurchases
1696049   +          +     2.17936226306026 * S_NumWebVisitsMonth
1696050   +          +    -0.05766019409404 * S_RFMstat  +      0.2675872238222 *
1696051   +        S_RMntFrq  +    -1.06566929523903 * S_Recency
1696052   +          +    -0.66606032905738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.59484084506505 * S_AcceptedCmpTotal + -0.09107168455833 *
S_Age + 0.5281685679707 * S_Frq + 1.27295894323816 * S_Income + -2.21965206319903 * S_Kidhome
+ 1.64535832697746 * S_Mnt + -0.35647765898878 * S_MntFishProducts + 0.702900738572 *
S_MntFruits + -0.05421413002638 * S_MntGoldProds + 0.35353806013819 * S_MntMeatProducts +
0.63868155719201 * S_MntSweetProducts + 1.59716770369014 * S_MntWines + -0.38061815224137 *
S_MonthsAsCustomer + 0.32358812228632 * S_NumCatalogPurchases + -1.99858075809796 *
S_NumDealsPurchases + -0.37353682448701 * S_NumDistPurchases + 1.16275863071649 *
S_NumStorePurchases + -0.75936809253 * S_NumWebPurchases + 2.17936226306026 *
S_NumWebVisitsMonth + -0.05766019409404 * S_RFMstat + 0.2675872238222 * S_RMntFrq +
-1.06566929523903 * S_Recency + -0.66606032905738 * S_Teenhome ;
1696053   +   H1x3_1  = H1x3_1  +     1.65955888726121 * AcceptedCmp10
1696054   +          +     0.45373706627481 * AcceptedCmp20  +     0.01398492780843 *
1696055   +        AcceptedCmp30  +    -0.89333296822402 * AcceptedCmp40
1696056   +          +     1.13510555884717 * AcceptedCmp50  +        0.34540948822 *
1696057   +        Complain0  +     0.74321002714269 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.65955888726121 * AcceptedCmp10 + 0.45373706627481 *
AcceptedCmp20 + 0.01398492780843 * AcceptedCmp30 + -0.89333296822402 * AcceptedCmp40 +
1.13510555884717 * AcceptedCmp50 + 0.34540948822 * Complain0 + 0.74321002714269 *
HigherEducationBinary0 ;
1696058   +   H1x3_1  = H1x3_1  +    -0.23607197367978 * Education2n_Cycle
1696059   +          +     0.42497173199023 * EducationBasic  +      0.1600632419786 *
1696060   +        EducationGraduation  +    -0.90489876056203 * EducationMaster
1696061   +          +     0.60036315441483 * Marital_StatusDivorced
1696062   +          +    -0.94084946353672 * Marital_StatusMarried
1696063   +          +     0.34594388147374 * Marital_StatusSingle
1696064   +          +    -0.32507682638228 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.23607197367978 * Education2n_Cycle +
0.42497173199023 * EducationBasic + 0.1600632419786 * EducationGraduation + -0.90489876056203
* EducationMaster + 0.60036315441483 * Marital_StatusDivorced + -0.94084946353672 *
Marital_StatusMarried + 0.34594388147374 * Marital_StatusSingle + -0.32507682638228 *
Marital_StatusTogether ;
1696065   +   H1x3_1  =     1.88038507544103 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.88038507544103 + H1x3_1 ;
1696066   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1696067   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1696068   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1696069   +END;
MPRINT(EM_DIAGRAM):   END;
1696070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696071   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1696072   +END;
MPRINT(EM_DIAGRAM):   END;
1696073   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696074   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1696075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696076   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696077   +   H2x1_1  =     -3.6827854279321 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.6827854279321 * H1x1_1 ;
1696078   +   H2x1_1  = H2x1_1  +     3.64439382550131 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 3.64439382550131 * H1x2_1 ;
1696079   +   H2x1_1  = H2x1_1  +    -2.48816241593271 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.48816241593271 * H1x3_1 ;
1696080   +   H2x1_1  =     -2.2078830840961 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -2.2078830840961 + H2x1_1 ;
1696081   +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
1696082   +END;
MPRINT(EM_DIAGRAM):   END;
1696083   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696084   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1696085   +END;
MPRINT(EM_DIAGRAM):   END;
1696086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696087   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1696088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696090   +   H2x2_1  =     -1.6139108987075 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -1.6139108987075 * H1x1_1 ;
1696091   +   H2x2_1  = H2x2_1  +     1.98688988318911 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.98688988318911 * H1x2_1 ;
1696092   +   H2x2_1  = H2x2_1  +    -1.34935271176056 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.34935271176056 * H1x3_1 ;
1696093   +   H2x2_1  =    -2.69383672527368 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -2.69383672527368 + H2x2_1 ;
1696094   +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
1696095   +END;
MPRINT(EM_DIAGRAM):   END;
1696096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696097   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1696098   +END;
MPRINT(EM_DIAGRAM):   END;
1696099   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696100   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1696101   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696102   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696103   +   H3x1_1  =     5.76336982853197 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 5.76336982853197 * H2x1_1 ;
1696104   +   H3x1_1  = H3x1_1  +     3.27853184608173 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 3.27853184608173 * H2x2_1 ;
1696105   +   H3x1_1  =     0.79036126364677 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.79036126364677 + H3x1_1 ;
1696106   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1696107   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1696108   +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
1696109   +END;
MPRINT(EM_DIAGRAM):   END;
1696110   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696111   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1696112   +END;
MPRINT(EM_DIAGRAM):   END;
1696113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696114   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1696115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696117   +   P_DepVar1  =    -9.42523861508231 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.42523861508231 * H3x1_1 ;
1696118   +   P_DepVar1  =     7.36639958607287 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.36639958607287 + P_DepVar1 ;
1696119   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1696120   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1696121   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1696122   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1696123   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1696124   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1696125   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1696126   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1696127   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1696128   +END;
MPRINT(EM_DIAGRAM):   END;
1696129   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696130   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1696131   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1696132   +END;
MPRINT(EM_DIAGRAM):   END;
1696133   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1696134   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1696135   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1696136   +END;
MPRINT(EM_DIAGRAM):   END;
1696137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696138   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1696139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696140   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1696141   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1696142   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696143   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1696144   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1696145   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1696146   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696147   +END;
MPRINT(EM_DIAGRAM):   END;
1696148   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1696149   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1696150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1696151   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1696152    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1696153    quit;
1696154    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1696155    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1696156    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1696157    retain ID 3 Node "AUTONEURAL6";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "AUTONEURAL6";
1696158    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1696159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1696160    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1696161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2979 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2979 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696163    proc sort data=EMWS8.AUTONEURAL6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL6_variableset out=_temp2(keep=NAME
CREATOR);
1696164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1696166    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696167    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1696168    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1696169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696170    proc contents data=EMWS8.AUTONEURAL6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL6_train out=_meta(keep=NAME) noprint;
1696171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1696172    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1696173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696176    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1696177    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696178    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1696179    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1696180    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1696180  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1717 rows and 5 columns.
 
1696181    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696182    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1696183    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 1717 observations read from the data set WORK._TEMPX.
NOTE: 1717 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 9858 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696184    filename _pref
1696184  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1696185    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1696186    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1696187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696188   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1696189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696190   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1696191   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1696192   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1696193    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1696194    quit;
1696195    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1696196    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1696197    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1696198    retain ID 6 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "Trans";
1696199    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1696200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696201    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1696202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696204    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1696205    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696207    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696208    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1696209    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1696210    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696211    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1696212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1696213    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1696214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696215    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1696216    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696217    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1696218    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696219    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696220    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1696221    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1696221  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1696222    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696223    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1696224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 9862 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1696225    filename _pref
1696225  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1696226    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1696227    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1696228   +
1696229   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1696230   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1696230  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1696231   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1696232   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1696233   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1696234   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1696235   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1696236    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1696237    quit;
1696238    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1696239    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1696240    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1696241    retain ID 7 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "EMCODE4";
1696242    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1696243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696244    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1696245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696247    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1696248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696250    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696251    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1696252    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1696253    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696254    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1696255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696256    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1696257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696259    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696260    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1696261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696262    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1696263    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1696264    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1696264  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1696265    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696266    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1696267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 9901 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696268    filename _pref
1696268  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1696269    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1696270    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1696271   +
1696272   +
1696273   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1696274   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1696275   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1696276   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1696277   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1696278   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696279   +
1696280   +
1696281   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1696282   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1696283   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1696284   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1696285   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1696286   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696287   +
1696288   +
1696289   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1696290   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1696291   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1696292   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1696293   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1696294   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696295   +
1696296   +
1696297   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1696298   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1696299   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1696300   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1696301   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1696302   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696303   +
1696304   +
1696305   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1696306   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1696307   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1696308   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1696309   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1696310   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696311   +
1696312   +
1696313   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1696314   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1696315   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1696316   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1696317   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1696318   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696319   +
1696320   +
1696321   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1696322   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1696323   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1696324   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1696325   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1696326   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696327   +
1696328   +
1696329   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1696330   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1696331   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1696332   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1696333   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1696334   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696335   +if
1696336   +_FILTERNORM1 not in ( '.')
1696337   + and
1696338   +_FILTERNORM2 not in ( '.')
1696339   + and
1696340   +_FILTERNORM3 not in ( '.')
1696341   + and
1696342   +_FILTERNORM4 not in ( '.')
1696343   + and
1696344   +_FILTERNORM5 not in ( '.')
1696345   + and
1696346   +_FILTERNORM6 not in ( '.')
1696347   + and
1696348   +_FILTERNORM7 not in ( ' ')
1696349   + and
1696350   +_FILTERNORM8 not in ( ' ')
1696351   +and
1696352   +( Dt_Customer ne .)
1696353   +and ( Income ne . and (Income<=107000))
1696354   +and ( Kidhome ne .)
1696355   +and ( MntFishProducts ne .)
1696356   +and ( MntFruits ne .)
1696357   +and ( MntGoldProds ne .)
1696358   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1696359   +and ( MntSweetProducts ne .)
1696360   +and ( MntWines ne .)
1696361   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1696362   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1696363   +and ( NumStorePurchases ne .)
1696364   +and ( NumWebPurchases ne .)
1696365   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1696366   +and ( Recency ne .)
1696367   +and ( Teenhome ne .)
1696368   +and ( Year_Birth ne .)
1696369   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1696370   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1696371   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1696372   +end;
MPRINT(EM_DIAGRAM):   end;
1696373   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1696374   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1696375    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1696376    quit;
1696377    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1696378    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1696379    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1696380    retain ID 8 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 8 Node "Filter";
1696381    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1696382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1696383    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1696384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696386    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1696387    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1696389    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696390    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1696391    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1696392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696393    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1696394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1696395    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1696396    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696397    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696398    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1696399    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1696400    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1696401    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696402    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1696403    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1696403  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1696404    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696405    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1696406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 9967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1696407    filename _pref
1696407  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL7\EMPUBLISHSCORE.sas";
1696408    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1696409    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL7\EMPUBLISHSCORE.sas.
1696410   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1696411   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1696412   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1696413   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1696414   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1696415   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1696416   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1696417   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1696418   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1696419   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1696420   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1696421   +LENGTH _WARN_ $4
1696422   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1696423   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1696424   +
1696425   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1696426   +
1696427   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1696428   +
1696429   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1696430   +
1696431   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1696432   +
1696433   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1696434   +
1696435   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1696436   +
1696437   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1696438   +
1696439   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1696440   +
1696441   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1696442   +
1696443   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1696444   +
1696445   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1696446   +
1696447   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1696448   +
1696449   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1696450   +
1696451   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1696452   +
1696453   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1696454   +
1696455   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1696456   +
1696457   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1696458   +
1696459   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1696460   +
1696461   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1696462   +
1696463   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1696464   +
1696465   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1696466   +
1696467   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1696468   +
1696469   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1696470   +
1696471   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1696472   +
1696473   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1696474   +
1696475   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1696476   +
1696477   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1696478   +
1696479   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1696480   +
1696481   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1696482   +
1696483   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1696484   +
1696485   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1696486   +
1696487   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1696488   +
1696489   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1696490   +
1696491   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1696492   +
1696493   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1696494   +
1696495   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1696496   +
1696497   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1696498   +
1696499   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1696500   +
1696501   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1696502   +
1696503   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1696504   +
1696505   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1696506   +
1696507   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1696508   +
1696509   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1696510   +
1696511   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1696512   +
1696513   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1696514   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1696515   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1696516   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1696517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696519   +end;
MPRINT(EM_DIAGRAM):   end;
1696520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696522   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1696523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696525   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1696526   +   end;
MPRINT(EM_DIAGRAM):   end;
1696527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696528   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1696529   +   end;
MPRINT(EM_DIAGRAM):   end;
1696530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696531   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1696532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696534   +   end;
MPRINT(EM_DIAGRAM):   end;
1696535   +end;
MPRINT(EM_DIAGRAM):   end;
1696536   +
1696537   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1696538   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1696539   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1696540   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1696541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696543   +end;
MPRINT(EM_DIAGRAM):   end;
1696544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696546   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1696547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696548   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696549   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1696550   +   end;
MPRINT(EM_DIAGRAM):   end;
1696551   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696552   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1696553   +   end;
MPRINT(EM_DIAGRAM):   end;
1696554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696555   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1696556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696558   +   end;
MPRINT(EM_DIAGRAM):   end;
1696559   +end;
MPRINT(EM_DIAGRAM):   end;
1696560   +
1696561   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1696562   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1696563   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1696564   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1696565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696567   +end;
MPRINT(EM_DIAGRAM):   end;
1696568   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696569   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696570   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1696571   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696572   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696573   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1696574   +   end;
MPRINT(EM_DIAGRAM):   end;
1696575   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696576   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1696577   +   end;
MPRINT(EM_DIAGRAM):   end;
1696578   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696579   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1696580   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696581   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696582   +   end;
MPRINT(EM_DIAGRAM):   end;
1696583   +end;
MPRINT(EM_DIAGRAM):   end;
1696584   +
1696585   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1696586   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1696587   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1696588   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1696589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696591   +end;
MPRINT(EM_DIAGRAM):   end;
1696592   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696594   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1696595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696596   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696597   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1696598   +   end;
MPRINT(EM_DIAGRAM):   end;
1696599   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696600   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1696601   +   end;
MPRINT(EM_DIAGRAM):   end;
1696602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696603   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1696604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696606   +   end;
MPRINT(EM_DIAGRAM):   end;
1696607   +end;
MPRINT(EM_DIAGRAM):   end;
1696608   +
1696609   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1696610   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1696611   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1696612   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1696613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696615   +end;
MPRINT(EM_DIAGRAM):   end;
1696616   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696618   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1696619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696620   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696621   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1696622   +   end;
MPRINT(EM_DIAGRAM):   end;
1696623   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696624   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1696625   +   end;
MPRINT(EM_DIAGRAM):   end;
1696626   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696627   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1696628   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696629   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696630   +   end;
MPRINT(EM_DIAGRAM):   end;
1696631   +end;
MPRINT(EM_DIAGRAM):   end;
1696632   +
1696633   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1696634   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1696635   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1696636   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1696637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696639   +end;
MPRINT(EM_DIAGRAM):   end;
1696640   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696641   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696642   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1696643   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696644   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1696645   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1696646   +   end;
MPRINT(EM_DIAGRAM):   end;
1696647   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696648   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1696649   +   end;
MPRINT(EM_DIAGRAM):   end;
1696650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696651   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1696652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696654   +   end;
MPRINT(EM_DIAGRAM):   end;
1696655   +end;
MPRINT(EM_DIAGRAM):   end;
1696656   +
1696657   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1696658   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1696659   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1696660   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1696661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696663   +end;
MPRINT(EM_DIAGRAM):   end;
1696664   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696665   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696666   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1696667   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696668   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1696669   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1696670   +   end;
MPRINT(EM_DIAGRAM):   end;
1696671   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1696672   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1696673   +   end;
MPRINT(EM_DIAGRAM):   end;
1696674   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696675   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1696676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696678   +   end;
MPRINT(EM_DIAGRAM):   end;
1696679   +end;
MPRINT(EM_DIAGRAM):   end;
1696680   +
1696681   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1696682   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1696683   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1696684   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1696685   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1696686   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1696687   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1696688   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1696689   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1696690   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1696691   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1696692   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1696693   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696695   +end;
MPRINT(EM_DIAGRAM):   end;
1696696   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696697   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1696698   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1696699   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696700   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1696701   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1696702   +   end;
MPRINT(EM_DIAGRAM):   end;
1696703   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1696704   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1696705   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1696706   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1696707   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1696708   +   end;
MPRINT(EM_DIAGRAM):   end;
1696709   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1696710   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1696711   +   end;
MPRINT(EM_DIAGRAM):   end;
1696712   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1696713   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1696714   +   end;
MPRINT(EM_DIAGRAM):   end;
1696715   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1696716   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1696717   +   end;
MPRINT(EM_DIAGRAM):   end;
1696718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696719   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1696720   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1696721   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1696722   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1696723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696725   +   end;
MPRINT(EM_DIAGRAM):   end;
1696726   +end;
MPRINT(EM_DIAGRAM):   end;
1696727   +
1696728   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1696729   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1696730   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1696731   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1696732   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1696733   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1696734   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1696735   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1696736   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1696737   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1696738   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1696739   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1696740   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1696741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696743   +end;
MPRINT(EM_DIAGRAM):   end;
1696744   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696745   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1696746   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1696747   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696748   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1696749   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1696750   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1696751   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1696752   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1696753   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1696754   +         end;
MPRINT(EM_DIAGRAM):   end;
1696755   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1696756   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1696757   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1696758   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1696759   +            end;
MPRINT(EM_DIAGRAM):   end;
1696760   +         end;
MPRINT(EM_DIAGRAM):   end;
1696761   +      end;
MPRINT(EM_DIAGRAM):   end;
1696762   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1696763   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1696764   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1696765   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1696766   +         end;
MPRINT(EM_DIAGRAM):   end;
1696767   +      end;
MPRINT(EM_DIAGRAM):   end;
1696768   +   end;
MPRINT(EM_DIAGRAM):   end;
1696769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696770   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1696771   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1696772   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1696773   +      end;
MPRINT(EM_DIAGRAM):   end;
1696774   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1696775   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1696776   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1696777   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1696778   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1696779   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1696780   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1696781   +         end;
MPRINT(EM_DIAGRAM):   end;
1696782   +      end;
MPRINT(EM_DIAGRAM):   end;
1696783   +   end;
MPRINT(EM_DIAGRAM):   end;
1696784   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1696785   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1696786   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1696787   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1696788   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1696789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696791   +   end;
MPRINT(EM_DIAGRAM):   end;
1696792   +end;
MPRINT(EM_DIAGRAM):   end;
1696793   +
1696794   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696795   +*** Checking missing input Interval
1696796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1696797   +
1696798   +IF NMISS(
1696799   +   AcceptedCmpTotal ,
1696800   +   Age ,
1696801   +   Frq ,
1696802   +   Income ,
1696803   +   Kidhome ,
1696804   +   Mnt ,
1696805   +   MntFishProducts ,
1696806   +   MntFruits ,
1696807   +   MntGoldProds ,
1696808   +   MntMeatProducts ,
1696809   +   MntSweetProducts ,
1696810   +   MntWines ,
1696811   +   MonthsAsCustomer ,
1696812   +   NumCatalogPurchases ,
1696813   +   NumDealsPurchases ,
1696814   +   NumDistPurchases ,
1696815   +   NumStorePurchases ,
1696816   +   NumWebPurchases ,
1696817   +   NumWebVisitsMonth ,
1696818   +   RFMstat ,
1696819   +   RMntFrq ,
1696820   +   Recency ,
1696821   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1696822   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1696823   +
1696824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696825   +END;
MPRINT(EM_DIAGRAM):   END;
1696826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696827   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1696828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696830   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1696831   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1696832   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1696833   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1696834   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1696835   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1696836   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1696837   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1696838   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1696839   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1696840   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1696841   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1696842   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1696843   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1696844   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1696845   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1696846   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1696847   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1696848   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1696849   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1696850   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1696851   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1696852   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1696853   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1696854   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1696855   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1696856   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1696857   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1696858   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1696859   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1696860   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1696861   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1696862   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1696863   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1696864   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1696865   +END;
MPRINT(EM_DIAGRAM):   END;
1696866   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696867   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1696868   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1696869   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1696870   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1696871   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1696872   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1696873   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1696874   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1696875   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1696876   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1696877   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1696878   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1696879   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1696880   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1696881   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1696882   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1696883   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1696884   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1696885   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1696886   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1696887   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1696888   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1696889   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1696890   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1696891   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1696892   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1696893   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1696894   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1696895   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1696896   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1696897   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1696898   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1696899   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1696900   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1696901   +   ELSE S_NumCatalogPurchases
1696902   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1696903   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1696904   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1696905   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1696906   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1696907   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1696908   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1696909   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1696910   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1696911   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1696912   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1696913   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1696914   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1696915   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1696916   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1696917   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1696918   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1696919   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1696920   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1696921   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1696922   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1696923   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1696924   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1696925   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1696926   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1696927   +END;
MPRINT(EM_DIAGRAM):   END;
1696928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696929   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1696930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696932   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1696933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696935   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1696936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696937   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696938   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1696939   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1696940   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1696941   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1696942   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1696943   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1696944   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1696945   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1696946   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1696947   +          +     0.09708841024031 * S_NumDealsPurchases
1696948   +          +    -0.29075561032014 * S_NumDistPurchases
1696949   +          +    -0.14495394259873 * S_NumStorePurchases
1696950   +          +     0.11890705145732 * S_NumWebPurchases
1696951   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1696952   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1696953   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1696954   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 *
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 *
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts +
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 *
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines +
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases +
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases +
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases +
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 *
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1696955   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1696956   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1696957   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1696958   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1696959   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1696960   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1696961   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1696962   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1696963   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1696964   +          +     0.16274478997892 * S_NumDealsPurchases
1696965   +          +     0.03966958784582 * S_NumDistPurchases
1696966   +          +    -0.04714110726598 * S_NumStorePurchases
1696967   +          +    -0.02124229528082 * S_NumWebPurchases
1696968   +          +     0.29753299776832 * S_NumWebVisitsMonth
1696969   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1696970   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1696971   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 *
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 *
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts +
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 *
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines +
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases +
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases +
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases +
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 *
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1696972   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1696973   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1696974   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1696975   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1696976   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 *
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 +
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 *
HigherEducationBinary0 ;
1696977   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1696978   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1696979   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1696980   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1696981   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 *
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 +
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 *
HigherEducationBinary0 ;
1696982   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1696983   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1696984   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1696985   +          +    -0.05037639679806 * Marital_StatusDivorced
1696986   +          +     0.28781968727878 * Marital_StatusMarried
1696987   +          +    -0.20382417074384 * Marital_StatusSingle
1696988   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle +
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 *
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 *
Marital_StatusTogether ;
1696989   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1696990   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1696991   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1696992   +          +     0.06970969219123 * Marital_StatusDivorced
1696993   +          +    -0.15787475744986 * Marital_StatusMarried
1696994   +          +     0.14345344072192 * Marital_StatusSingle
1696995   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 *
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 *
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 *
Marital_StatusTogether ;
1696996   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1696997   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1696998   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1696999   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1697000   +END;
MPRINT(EM_DIAGRAM):   END;
1697001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697002   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1697003   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1697004   +END;
MPRINT(EM_DIAGRAM):   END;
1697005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697006   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1697007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697008   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697009   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1697010   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1697011   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1697012   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1697013   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1697014   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697015   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1697016   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1697017   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1697018   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1697019   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1697020   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1697021   +END;
MPRINT(EM_DIAGRAM):   END;
1697022   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697023   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1697024   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1697025   +END;
MPRINT(EM_DIAGRAM):   END;
1697026   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1697027   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1697028   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1697029   +END;
MPRINT(EM_DIAGRAM):   END;
1697030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697031   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1697032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697033   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1697034   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1697035   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1697036   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1697037   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1697038   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1697039   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1697040   +END;
MPRINT(EM_DIAGRAM):   END;
1697041   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697042   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1697043   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697044   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1697045    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1697046    quit;
1697047    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1697048    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1697049    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1697050    retain ID 11 Node "AUTONEURAL7";
MPRINT(EM_DIAGRAM):   retain ID 11 Node "AUTONEURAL7";
1697051    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1697052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1697053    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1697054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697056    proc sort data=EMWS8.AUTONEURAL7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL7_variableset out=_temp2(keep=NAME
CREATOR);
1697057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1697059    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697060    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1697061    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1697062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697063    proc contents data=EMWS8.AUTONEURAL7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL7_train out=_meta(keep=NAME) noprint;
1697064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697065    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1697066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697068    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697069    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1697070    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697071    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697072    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1697073    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1697073  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.
 
1697074    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1697075    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1697076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: 1359 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 11326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697077    filename _pref
1697077  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1697078    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1697079    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1697080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697081   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1697082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697083   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1697084   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1697085   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1697086    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1697087    quit;
1697088    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1697089    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1697090    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1697091    retain ID 14 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 14 Node "Trans";
1697092    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1697093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697094    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1697095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697097    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1697098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697100    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697101    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1697102    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1697103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697104    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1697105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1697106    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1697107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697109    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697110    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1697111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697112    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697113    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1697114    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1697114  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1697115    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697116    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1697117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 11330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697118    filename _pref
1697118  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1697119    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1697120    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1697121   +
1697122   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1697123   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1697123  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1697124   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1697125   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1697126   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1697127   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1697128   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1697129    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1697130    quit;
1697131    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1697132    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1697133    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1697134    retain ID 15 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 15 Node "EMCODE4";
1697135    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1697136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1697137    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1697138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697140    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1697141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697143    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697144    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1697145    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1697146    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697147    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1697148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697149    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1697150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697151    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697152    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697153    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1697154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697155    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697156    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1697157    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1697157  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1697158    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697159    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1697160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 11369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697161    filename _pref
1697161  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1697162    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1697163    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1697164   +
1697165   +
1697166   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1697167   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1697168   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1697169   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1697170   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1697171   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697172   +
1697173   +
1697174   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1697175   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1697176   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1697177   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1697178   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1697179   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697180   +
1697181   +
1697182   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1697183   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1697184   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1697185   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1697186   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1697187   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697188   +
1697189   +
1697190   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1697191   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1697192   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1697193   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1697194   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1697195   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697196   +
1697197   +
1697198   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1697199   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1697200   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1697201   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1697202   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1697203   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697204   +
1697205   +
1697206   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1697207   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1697208   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1697209   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1697210   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1697211   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697212   +
1697213   +
1697214   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1697215   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1697216   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1697217   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1697218   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1697219   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697220   +
1697221   +
1697222   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1697223   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1697224   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1697225   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1697226   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1697227   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1697228   +if
1697229   +_FILTERNORM1 not in ( '.')
1697230   + and
1697231   +_FILTERNORM2 not in ( '.')
1697232   + and
1697233   +_FILTERNORM3 not in ( '.')
1697234   + and
1697235   +_FILTERNORM4 not in ( '.')
1697236   + and
1697237   +_FILTERNORM5 not in ( '.')
1697238   + and
1697239   +_FILTERNORM6 not in ( '.')
1697240   + and
1697241   +_FILTERNORM7 not in ( ' ')
1697242   + and
1697243   +_FILTERNORM8 not in ( ' ')
1697244   +and
1697245   +( Dt_Customer ne .)
1697246   +and ( Income ne . and (Income<=107000))
1697247   +and ( Kidhome ne .)
1697248   +and ( MntFishProducts ne .)
1697249   +and ( MntFruits ne .)
1697250   +and ( MntGoldProds ne .)
1697251   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1697252   +and ( MntSweetProducts ne .)
1697253   +and ( MntWines ne .)
1697254   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1697255   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1697256   +and ( NumStorePurchases ne .)
1697257   +and ( NumWebPurchases ne .)
1697258   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1697259   +and ( Recency ne .)
1697260   +and ( Teenhome ne .)
1697261   +and ( Year_Birth ne .)
1697262   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1697263   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1697264   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1697265   +end;
MPRINT(EM_DIAGRAM):   end;
1697266   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1697267   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1697268    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1697269    quit;
1697270    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1697271    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1697272    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1697273    retain ID 16 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 16 Node "Filter";
1697274    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1697275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697276    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1697277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697279    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1697280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697282    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697283    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1697284    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1697285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697286    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1697287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1697288    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1697289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697291    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1697292    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1697293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1697294    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697295    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1697296    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1697296  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1697297    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1697298    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1697299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 11435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1697300    filename _pref
1697300  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL8\EMPUBLISHSCORE.sas";
1697301    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1697302    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL8\EMPUBLISHSCORE.sas.
1697303   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697304   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1697305   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697306   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1697307   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1697308   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1697309   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1697310   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1697311   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1697312   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1697313   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1697314   +LENGTH _WARN_ $4
1697315   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1697316   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1697317   +
1697318   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1697319   +
1697320   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1697321   +
1697322   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1697323   +
1697324   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1697325   +
1697326   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1697327   +
1697328   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1697329   +
1697330   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1697331   +
1697332   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1697333   +
1697334   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1697335   +
1697336   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1697337   +
1697338   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1697339   +
1697340   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1697341   +
1697342   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1697343   +
1697344   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1697345   +
1697346   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1697347   +
1697348   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1697349   +
1697350   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1697351   +
1697352   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1697353   +
1697354   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1697355   +
1697356   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1697357   +
1697358   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1697359   +
1697360   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1697361   +
1697362   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1697363   +
1697364   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1697365   +
1697366   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1697367   +
1697368   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1697369   +
1697370   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1697371   +
1697372   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1697373   +
1697374   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1697375   +
1697376   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1697377   +
1697378   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1697379   +
1697380   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1697381   +
1697382   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1697383   +
1697384   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1697385   +
1697386   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1697387   +
1697388   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1697389   +
1697390   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1697391   +
1697392   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1697393   +
1697394   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1697395   +
1697396   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1697397   +
1697398   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1697399   +
1697400   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1697401   +
1697402   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1697403   +
1697404   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1697405   +
1697406   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1697407   +
1697408   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1697409   +
1697410   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1697411   +
1697412   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1697413   +
1697414   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1697415   +
1697416   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1697417   +
1697418   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1697419   +
1697420   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1697421   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1697422   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1697423   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1697424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697426   +end;
MPRINT(EM_DIAGRAM):   end;
1697427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697429   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1697430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697431   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697432   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1697433   +   end;
MPRINT(EM_DIAGRAM):   end;
1697434   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697435   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1697436   +   end;
MPRINT(EM_DIAGRAM):   end;
1697437   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697438   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1697439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697441   +   end;
MPRINT(EM_DIAGRAM):   end;
1697442   +end;
MPRINT(EM_DIAGRAM):   end;
1697443   +
1697444   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1697445   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1697446   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1697447   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1697448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697450   +end;
MPRINT(EM_DIAGRAM):   end;
1697451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697453   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1697454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697455   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697456   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1697457   +   end;
MPRINT(EM_DIAGRAM):   end;
1697458   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697459   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1697460   +   end;
MPRINT(EM_DIAGRAM):   end;
1697461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697462   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1697463   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697464   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697465   +   end;
MPRINT(EM_DIAGRAM):   end;
1697466   +end;
MPRINT(EM_DIAGRAM):   end;
1697467   +
1697468   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1697469   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1697470   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1697471   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1697472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697474   +end;
MPRINT(EM_DIAGRAM):   end;
1697475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697477   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1697478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697480   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1697481   +   end;
MPRINT(EM_DIAGRAM):   end;
1697482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697483   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1697484   +   end;
MPRINT(EM_DIAGRAM):   end;
1697485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697486   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1697487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697489   +   end;
MPRINT(EM_DIAGRAM):   end;
1697490   +end;
MPRINT(EM_DIAGRAM):   end;
1697491   +
1697492   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1697493   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1697494   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1697495   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1697496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697498   +end;
MPRINT(EM_DIAGRAM):   end;
1697499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697501   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1697502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697504   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1697505   +   end;
MPRINT(EM_DIAGRAM):   end;
1697506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697507   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1697508   +   end;
MPRINT(EM_DIAGRAM):   end;
1697509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697510   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1697511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697513   +   end;
MPRINT(EM_DIAGRAM):   end;
1697514   +end;
MPRINT(EM_DIAGRAM):   end;
1697515   +
1697516   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1697517   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1697518   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1697519   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1697520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697522   +end;
MPRINT(EM_DIAGRAM):   end;
1697523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697525   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1697526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697528   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1697529   +   end;
MPRINT(EM_DIAGRAM):   end;
1697530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697531   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1697532   +   end;
MPRINT(EM_DIAGRAM):   end;
1697533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697534   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1697535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697537   +   end;
MPRINT(EM_DIAGRAM):   end;
1697538   +end;
MPRINT(EM_DIAGRAM):   end;
1697539   +
1697540   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1697541   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1697542   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1697543   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1697544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697546   +end;
MPRINT(EM_DIAGRAM):   end;
1697547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697549   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1697550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697551   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1697552   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1697553   +   end;
MPRINT(EM_DIAGRAM):   end;
1697554   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697555   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1697556   +   end;
MPRINT(EM_DIAGRAM):   end;
1697557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697558   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1697559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697561   +   end;
MPRINT(EM_DIAGRAM):   end;
1697562   +end;
MPRINT(EM_DIAGRAM):   end;
1697563   +
1697564   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1697565   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1697566   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1697567   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1697568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697570   +end;
MPRINT(EM_DIAGRAM):   end;
1697571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697573   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1697574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697575   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1697576   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1697577   +   end;
MPRINT(EM_DIAGRAM):   end;
1697578   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1697579   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1697580   +   end;
MPRINT(EM_DIAGRAM):   end;
1697581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697582   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1697583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697585   +   end;
MPRINT(EM_DIAGRAM):   end;
1697586   +end;
MPRINT(EM_DIAGRAM):   end;
1697587   +
1697588   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1697589   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1697590   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1697591   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1697592   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1697593   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1697594   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1697595   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1697596   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1697597   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1697598   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1697599   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1697600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697602   +end;
MPRINT(EM_DIAGRAM):   end;
1697603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697604   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1697605   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1697606   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697607   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1697608   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1697609   +   end;
MPRINT(EM_DIAGRAM):   end;
1697610   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1697611   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1697612   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1697613   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1697614   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1697615   +   end;
MPRINT(EM_DIAGRAM):   end;
1697616   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1697617   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1697618   +   end;
MPRINT(EM_DIAGRAM):   end;
1697619   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1697620   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1697621   +   end;
MPRINT(EM_DIAGRAM):   end;
1697622   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1697623   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1697624   +   end;
MPRINT(EM_DIAGRAM):   end;
1697625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697626   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1697627   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1697628   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1697629   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1697630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697632   +   end;
MPRINT(EM_DIAGRAM):   end;
1697633   +end;
MPRINT(EM_DIAGRAM):   end;
1697634   +
1697635   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1697636   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1697637   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1697638   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1697639   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1697640   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1697641   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1697642   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1697643   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1697644   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1697645   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1697646   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1697647   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1697648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697650   +end;
MPRINT(EM_DIAGRAM):   end;
1697651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697652   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1697653   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1697654   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697655   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1697656   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1697657   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1697658   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1697659   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1697660   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1697661   +         end;
MPRINT(EM_DIAGRAM):   end;
1697662   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1697663   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1697664   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1697665   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1697666   +            end;
MPRINT(EM_DIAGRAM):   end;
1697667   +         end;
MPRINT(EM_DIAGRAM):   end;
1697668   +      end;
MPRINT(EM_DIAGRAM):   end;
1697669   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1697670   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1697671   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1697672   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1697673   +         end;
MPRINT(EM_DIAGRAM):   end;
1697674   +      end;
MPRINT(EM_DIAGRAM):   end;
1697675   +   end;
MPRINT(EM_DIAGRAM):   end;
1697676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697677   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1697678   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1697679   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1697680   +      end;
MPRINT(EM_DIAGRAM):   end;
1697681   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1697682   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1697683   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1697684   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1697685   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1697686   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1697687   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1697688   +         end;
MPRINT(EM_DIAGRAM):   end;
1697689   +      end;
MPRINT(EM_DIAGRAM):   end;
1697690   +   end;
MPRINT(EM_DIAGRAM):   end;
1697691   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1697692   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1697693   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1697694   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1697695   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1697696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697698   +   end;
MPRINT(EM_DIAGRAM):   end;
1697699   +end;
MPRINT(EM_DIAGRAM):   end;
1697700   +
1697701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697702   +*** Checking missing input Interval
1697703   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1697704   +
1697705   +IF NMISS(
1697706   +   AcceptedCmpTotal ,
1697707   +   Age ,
1697708   +   Frq ,
1697709   +   Income ,
1697710   +   Kidhome ,
1697711   +   Mnt ,
1697712   +   MntFishProducts ,
1697713   +   MntFruits ,
1697714   +   MntGoldProds ,
1697715   +   MntMeatProducts ,
1697716   +   MntSweetProducts ,
1697717   +   MntWines ,
1697718   +   MonthsAsCustomer ,
1697719   +   NumCatalogPurchases ,
1697720   +   NumDealsPurchases ,
1697721   +   NumDistPurchases ,
1697722   +   NumStorePurchases ,
1697723   +   NumWebPurchases ,
1697724   +   NumWebVisitsMonth ,
1697725   +   RFMstat ,
1697726   +   RMntFrq ,
1697727   +   Recency ,
1697728   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1697729   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1697730   +
1697731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697732   +END;
MPRINT(EM_DIAGRAM):   END;
1697733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697734   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1697735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697736   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697737   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697738   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697739   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1697740   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697741   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697742   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1697743   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697744   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1697745   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1697746   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1697747   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697748   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1697749   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697750   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697751   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1697752   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1697753   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697754   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1697755   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1697756   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1697757   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1697758   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1697759   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1697760   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697761   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697762   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1697763   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1697764   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1697765   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1697766   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1697767   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1697768   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697769   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697770   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697771   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1697772   +END;
MPRINT(EM_DIAGRAM):   END;
1697773   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697774   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1697775   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697776   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697777   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1697778   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1697779   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1697780   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697781   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1697782   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697783   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1697784   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1697785   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1697786   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697787   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1697788   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1697789   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1697790   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1697791   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1697792   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1697793   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1697794   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697795   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1697796   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1697797   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697798   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697799   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1697800   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1697801   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1697802   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1697803   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697804   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1697805   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1697806   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1697807   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1697808   +   ELSE S_NumCatalogPurchases
1697809   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1697810   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1697811   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1697812   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1697813   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1697814   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1697815   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697816   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697817   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1697818   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1697819   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1697820   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1697821   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1697822   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1697823   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1697824   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1697825   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1697826   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1697827   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697828   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1697829   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697830   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1697831   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697832   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1697833   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1697834   +END;
MPRINT(EM_DIAGRAM):   END;
1697835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697836   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1697837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697839   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1697840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697842   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1697843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697844   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697845   +   H1x1_1  =    -1.49223555176068 * S_AcceptedCmpTotal
1697846   +          +    -0.32281831453238 * S_Age  +     0.28120825505194 * S_Frq
1697847   +          +    -0.39842787806973 * S_Income  +     0.36430856665979 *
1697848   +        S_Kidhome  +    -0.25637228568962 * S_Mnt  +     0.24110438184349 *
1697849   +        S_MntFishProducts  +     0.13701085804118 * S_MntFruits
1697850   +          +     0.11223882829002 * S_MntGoldProds  +     -1.6663458930199 *
1697851   +        S_MntMeatProducts  +      0.0702185455839 * S_MntSweetProducts
1697852   +          +    -0.01371828795287 * S_MntWines  +    -0.15983998015164 *
1697853   +        S_MonthsAsCustomer  +    -0.71296831037224 * S_NumCatalogPurchases
1697854   +          +     0.76573417773216 * S_NumDealsPurchases
1697855   +          +     0.22648400529885 * S_NumDistPurchases
1697856   +          +     1.21720286527592 * S_NumStorePurchases
1697857   +          +     0.60948566229097 * S_NumWebPurchases
1697858   +          +    -2.18126452011089 * S_NumWebVisitsMonth
1697859   +          +     0.32447158734618 * S_RFMstat  +     2.09718739448286 *
1697860   +        S_RMntFrq  +     2.00816730203973 * S_Recency
1697861   +          +     0.71721312404607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.49223555176068 * S_AcceptedCmpTotal + -0.32281831453238 *
S_Age + 0.28120825505194 * S_Frq + -0.39842787806973 * S_Income + 0.36430856665979 * S_Kidhome
+ -0.25637228568962 * S_Mnt + 0.24110438184349 * S_MntFishProducts + 0.13701085804118 *
S_MntFruits + 0.11223882829002 * S_MntGoldProds + -1.6663458930199 * S_MntMeatProducts +
0.0702185455839 * S_MntSweetProducts + -0.01371828795287 * S_MntWines + -0.15983998015164 *
S_MonthsAsCustomer + -0.71296831037224 * S_NumCatalogPurchases + 0.76573417773216 *
S_NumDealsPurchases + 0.22648400529885 * S_NumDistPurchases + 1.21720286527592 *
S_NumStorePurchases + 0.60948566229097 * S_NumWebPurchases + -2.18126452011089 *
S_NumWebVisitsMonth + 0.32447158734618 * S_RFMstat + 2.09718739448286 * S_RMntFrq +
2.00816730203973 * S_Recency + 0.71721312404607 * S_Teenhome ;
1697862   +   H1x1_2  =    -3.95102659899455 * S_AcceptedCmpTotal
1697863   +          +    -0.08322758955502 * S_Age  +     0.48219484564503 * S_Frq
1697864   +          +    -0.47312016087921 * S_Income  +    -0.28936610485406 *
1697865   +        S_Kidhome  +    -1.88029814405677 * S_Mnt  +     1.82010433926021 *
1697866   +        S_MntFishProducts  +     0.24350362722041 * S_MntFruits
1697867   +          +     -0.0982980353358 * S_MntGoldProds  +     -8.1095841881459 *
1697868   +        S_MntMeatProducts  +    -0.08364558784797 * S_MntSweetProducts
1697869   +          +     2.19205303691707 * S_MntWines  +    -0.00045011863954 *
1697870   +        S_MonthsAsCustomer  +    -1.63167878295586 * S_NumCatalogPurchases
1697871   +          +    -1.52828428070828 * S_NumDealsPurchases
1697872   +          +    -0.01775178145113 * S_NumDistPurchases
1697873   +          +     1.11531198663491 * S_NumStorePurchases
1697874   +          +     1.79501098452904 * S_NumWebPurchases
1697875   +          +     -0.7392686013605 * S_NumWebVisitsMonth
1697876   +          +    -1.44559350209967 * S_RFMstat  +     1.21221378487873 *
1697877   +        S_RMntFrq  +     0.68917175969495 * S_Recency
1697878   +          +      0.3873784466888 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.95102659899455 * S_AcceptedCmpTotal + -0.08322758955502 *
S_Age + 0.48219484564503 * S_Frq + -0.47312016087921 * S_Income + -0.28936610485406 *
S_Kidhome + -1.88029814405677 * S_Mnt + 1.82010433926021 * S_MntFishProducts +
0.24350362722041 * S_MntFruits + -0.0982980353358 * S_MntGoldProds + -8.1095841881459 *
S_MntMeatProducts + -0.08364558784797 * S_MntSweetProducts + 2.19205303691707 * S_MntWines +
-0.00045011863954 * S_MonthsAsCustomer + -1.63167878295586 * S_NumCatalogPurchases +
-1.52828428070828 * S_NumDealsPurchases + -0.01775178145113 * S_NumDistPurchases +
1.11531198663491 * S_NumStorePurchases + 1.79501098452904 * S_NumWebPurchases +
-0.7392686013605 * S_NumWebVisitsMonth + -1.44559350209967 * S_RFMstat + 1.21221378487873 *
S_RMntFrq + 0.68917175969495 * S_Recency + 0.3873784466888 * S_Teenhome ;
1697879   +   H1x1_1  = H1x1_1  +    -0.51533233697482 * AcceptedCmp10
1697880   +          +    -0.34752733433815 * AcceptedCmp20  +     0.22125035216356 *
1697881   +        AcceptedCmp30  +     0.05379844837275 * AcceptedCmp40
1697882   +          +    -0.20445562216782 * AcceptedCmp50  +    -0.30276475879877 *
1697883   +        Complain0  +     0.06619165480602 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51533233697482 * AcceptedCmp10 + -0.34752733433815
* AcceptedCmp20 + 0.22125035216356 * AcceptedCmp30 + 0.05379844837275 * AcceptedCmp40 +
-0.20445562216782 * AcceptedCmp50 + -0.30276475879877 * Complain0 + 0.06619165480602 *
HigherEducationBinary0 ;
1697884   +   H1x1_2  = H1x1_2  +     4.56470093348771 * AcceptedCmp10
1697885   +          +    -2.57910461209778 * AcceptedCmp20  +     -2.5693819769014 *
1697886   +        AcceptedCmp30  +    -1.94278577333227 * AcceptedCmp40
1697887   +          +     2.05860438228037 * AcceptedCmp50  +     0.25089930568051 *
1697888   +        Complain0  +      0.2603214054608 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 4.56470093348771 * AcceptedCmp10 + -2.57910461209778 *
AcceptedCmp20 + -2.5693819769014 * AcceptedCmp30 + -1.94278577333227 * AcceptedCmp40 +
2.05860438228037 * AcceptedCmp50 + 0.25089930568051 * Complain0 + 0.2603214054608 *
HigherEducationBinary0 ;
1697889   +   H1x1_1  = H1x1_1  +    -0.49828378489244 * Education2n_Cycle
1697890   +          +     0.39089624737534 * EducationBasic  +    -0.48226710339977 *
1697891   +        EducationGraduation  +    -0.06304916771632 * EducationMaster
1697892   +          +    -1.56926331102732 * Marital_StatusDivorced
1697893   +          +     2.38562782588323 * Marital_StatusMarried
1697894   +          +    -1.91012008029228 * Marital_StatusSingle
1697895   +          +     2.35299228753934 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.49828378489244 * Education2n_Cycle +
0.39089624737534 * EducationBasic + -0.48226710339977 * EducationGraduation +
-0.06304916771632 * EducationMaster + -1.56926331102732 * Marital_StatusDivorced +
2.38562782588323 * Marital_StatusMarried + -1.91012008029228 * Marital_StatusSingle +
2.35299228753934 * Marital_StatusTogether ;
1697896   +   H1x1_2  = H1x1_2  +    -0.32482988110182 * Education2n_Cycle
1697897   +          +    -0.31705264382373 * EducationBasic  +    -0.14073222836204 *
1697898   +        EducationGraduation  +    -0.14552128560395 * EducationMaster
1697899   +          +     0.39329538853368 * Marital_StatusDivorced
1697900   +          +       0.055543492668 * Marital_StatusMarried
1697901   +          +    -0.36260663573441 * Marital_StatusSingle
1697902   +          +     0.16563783024817 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.32482988110182 * Education2n_Cycle +
-0.31705264382373 * EducationBasic + -0.14073222836204 * EducationGraduation +
-0.14552128560395 * EducationMaster + 0.39329538853368 * Marital_StatusDivorced +
0.055543492668 * Marital_StatusMarried + -0.36260663573441 * Marital_StatusSingle +
0.16563783024817 * Marital_StatusTogether ;
1697903   +   H1x1_1  =     0.82901515254061 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.82901515254061 + H1x1_1 ;
1697904   +   H1x1_2  =     -1.6113683532078 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.6113683532078 + H1x1_2 ;
1697905   +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
1697906   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
1697907   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697908   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1697909   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1697910   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1697911   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1697912   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1697913   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1697914   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1697915   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1697916   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1697917   +END;
MPRINT(EM_DIAGRAM):   END;
1697918   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697919   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1697920   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1697921   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1697922   +END;
MPRINT(EM_DIAGRAM):   END;
1697923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697924   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1697925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697926   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697927   +   H1x2_1  =     -1.1749963769098 * S_AcceptedCmpTotal
1697928   +          +      0.0835452152484 * S_Age  +     0.29627839234992 * S_Frq
1697929   +          +    -0.11493797334082 * S_Income  +    -1.11510356366657 *
1697930   +        S_Kidhome  +     0.18185063757674 * S_Mnt  +    -0.17631127507692 *
1697931   +        S_MntFishProducts  +     1.24365107847098 * S_MntFruits
1697932   +          +     0.16504711681039 * S_MntGoldProds  +     0.99592906524599 *
1697933   +        S_MntMeatProducts  +     0.07387543627707 * S_MntSweetProducts
1697934   +          +    -0.00693664828192 * S_MntWines  +    -0.14413765189074 *
1697935   +        S_MonthsAsCustomer  +    -0.36632511301344 * S_NumCatalogPurchases
1697936   +          +    -0.41717905931734 * S_NumDealsPurchases
1697937   +          +    -0.48750443671176 * S_NumDistPurchases
1697938   +          +      1.9775770151507 * S_NumStorePurchases
1697939   +          +    -0.43534422425416 * S_NumWebPurchases
1697940   +          +    -1.48049451059329 * S_NumWebVisitsMonth
1697941   +          +     1.55056718888347 * S_RFMstat  +    -1.96774244937803 *
1697942   +        S_RMntFrq  +     -1.0977291490167 * S_Recency
1697943   +          +    -1.73756201871547 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.1749963769098 * S_AcceptedCmpTotal + 0.0835452152484 * S_Age
+ 0.29627839234992 * S_Frq + -0.11493797334082 * S_Income + -1.11510356366657 * S_Kidhome +
0.18185063757674 * S_Mnt + -0.17631127507692 * S_MntFishProducts + 1.24365107847098 *
S_MntFruits + 0.16504711681039 * S_MntGoldProds + 0.99592906524599 * S_MntMeatProducts +
0.07387543627707 * S_MntSweetProducts + -0.00693664828192 * S_MntWines + -0.14413765189074 *
S_MonthsAsCustomer + -0.36632511301344 * S_NumCatalogPurchases + -0.41717905931734 *
S_NumDealsPurchases + -0.48750443671176 * S_NumDistPurchases + 1.9775770151507 *
S_NumStorePurchases + -0.43534422425416 * S_NumWebPurchases + -1.48049451059329 *
S_NumWebVisitsMonth + 1.55056718888347 * S_RFMstat + -1.96774244937803 * S_RMntFrq +
-1.0977291490167 * S_Recency + -1.73756201871547 * S_Teenhome ;
1697944   +   H1x2_2  =     0.87479703138918 * S_AcceptedCmpTotal
1697945   +          +    -0.61917505429247 * S_Age  +     0.18385580137989 * S_Frq
1697946   +          +     0.30709491132909 * S_Income  +      1.6244568354812 *
1697947   +        S_Kidhome  +     0.77673205123801 * S_Mnt  +    -0.00950889578201 *
1697948   +        S_MntFishProducts  +    -0.47007254592819 * S_MntFruits
1697949   +          +      0.6454406759241 * S_MntGoldProds  +     0.78795218230384 *
1697950   +        S_MntMeatProducts  +    -1.18230648640376 * S_MntSweetProducts
1697951   +          +     1.41552316954503 * S_MntWines  +    -0.46565264346633 *
1697952   +        S_MonthsAsCustomer  +     0.48368171409283 * S_NumCatalogPurchases
1697953   +          +     0.76267091632012 * S_NumDealsPurchases
1697954   +          +     1.55118513069849 * S_NumDistPurchases
1697955   +          +       1.649962776028 * S_NumStorePurchases
1697956   +          +    -0.27453335733875 * S_NumWebPurchases
1697957   +          +     0.26599210649756 * S_NumWebVisitsMonth
1697958   +          +     0.00143802909271 * S_RFMstat  +    -0.62161550917558 *
1697959   +        S_RMntFrq  +    -0.60215803586133 * S_Recency
1697960   +          +     0.22509643762583 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.87479703138918 * S_AcceptedCmpTotal + -0.61917505429247 *
S_Age + 0.18385580137989 * S_Frq + 0.30709491132909 * S_Income + 1.6244568354812 * S_Kidhome +
0.77673205123801 * S_Mnt + -0.00950889578201 * S_MntFishProducts + -0.47007254592819 *
S_MntFruits + 0.6454406759241 * S_MntGoldProds + 0.78795218230384 * S_MntMeatProducts +
-1.18230648640376 * S_MntSweetProducts + 1.41552316954503 * S_MntWines + -0.46565264346633 *
S_MonthsAsCustomer + 0.48368171409283 * S_NumCatalogPurchases + 0.76267091632012 *
S_NumDealsPurchases + 1.55118513069849 * S_NumDistPurchases + 1.649962776028 *
S_NumStorePurchases + -0.27453335733875 * S_NumWebPurchases + 0.26599210649756 *
S_NumWebVisitsMonth + 0.00143802909271 * S_RFMstat + -0.62161550917558 * S_RMntFrq +
-0.60215803586133 * S_Recency + 0.22509643762583 * S_Teenhome ;
1697961   +   H1x2_1  = H1x2_1  +    -0.22417594551449 * AcceptedCmp10
1697962   +          +    -0.55200708632393 * AcceptedCmp20  +     1.04226929662396 *
1697963   +        AcceptedCmp30  +    -0.43983724759528 * AcceptedCmp40
1697964   +          +    -0.97319667842772 * AcceptedCmp50  +     2.14592283316473 *
1697965   +        Complain0  +     0.00148996042832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.22417594551449 * AcceptedCmp10 + -0.55200708632393
* AcceptedCmp20 + 1.04226929662396 * AcceptedCmp30 + -0.43983724759528 * AcceptedCmp40 +
-0.97319667842772 * AcceptedCmp50 + 2.14592283316473 * Complain0 + 0.00148996042832 *
HigherEducationBinary0 ;
1697966   +   H1x2_2  = H1x2_2  +     1.02054806337451 * AcceptedCmp10
1697967   +          +      2.0527957252179 * AcceptedCmp20  +     0.15243342547701 *
1697968   +        AcceptedCmp30  +    -2.55108921567655 * AcceptedCmp40
1697969   +          +    -0.66084381908537 * AcceptedCmp50  +    -0.15574677370344 *
1697970   +        Complain0  +    -0.89833811964409 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.02054806337451 * AcceptedCmp10 + 2.0527957252179 *
AcceptedCmp20 + 0.15243342547701 * AcceptedCmp30 + -2.55108921567655 * AcceptedCmp40 +
-0.66084381908537 * AcceptedCmp50 + -0.15574677370344 * Complain0 + -0.89833811964409 *
HigherEducationBinary0 ;
1697971   +   H1x2_1  = H1x2_1  +     0.47883438771897 * Education2n_Cycle
1697972   +          +     1.28689916550347 * EducationBasic  +    -1.05405263417007 *
1697973   +        EducationGraduation  +     0.24617525366101 * EducationMaster
1697974   +          +    -1.84502099308633 * Marital_StatusDivorced
1697975   +          +     0.16524535969204 * Marital_StatusMarried
1697976   +          +     0.01375012857393 * Marital_StatusSingle
1697977   +          +     0.33752759564982 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.47883438771897 * Education2n_Cycle +
1.28689916550347 * EducationBasic + -1.05405263417007 * EducationGraduation + 0.24617525366101
* EducationMaster + -1.84502099308633 * Marital_StatusDivorced + 0.16524535969204 *
Marital_StatusMarried + 0.01375012857393 * Marital_StatusSingle + 0.33752759564982 *
Marital_StatusTogether ;
1697978   +   H1x2_2  = H1x2_2  +     -0.4088130246632 * Education2n_Cycle
1697979   +          +    -0.51383473075458 * EducationBasic  +     0.81399641406825 *
1697980   +        EducationGraduation  +      0.6427794380992 * EducationMaster
1697981   +          +     0.18210930140238 * Marital_StatusDivorced
1697982   +          +    -1.49615662968181 * Marital_StatusMarried
1697983   +          +     1.61043484549536 * Marital_StatusSingle
1697984   +          +    -1.22593755313209 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.4088130246632 * Education2n_Cycle +
-0.51383473075458 * EducationBasic + 0.81399641406825 * EducationGraduation + 0.6427794380992
* EducationMaster + 0.18210930140238 * Marital_StatusDivorced + -1.49615662968181 *
Marital_StatusMarried + 1.61043484549536 * Marital_StatusSingle + -1.22593755313209 *
Marital_StatusTogether ;
1697985   +   H1x2_1  =    -1.87516498734281 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.87516498734281 + H1x2_1 ;
1697986   +   H1x2_2  =     -1.2865444436051 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.2865444436051 + H1x2_2 ;
1697987   +   H1x2_3  = 0;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0;
1697988   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 );
1697989   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697990   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1697991   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1697992   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1697993   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1697994   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1697995   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1697996   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1697997   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1697998   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1697999   +END;
MPRINT(EM_DIAGRAM):   END;
1698000   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698001   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1698002   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1698003   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1698004   +END;
MPRINT(EM_DIAGRAM):   END;
1698005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698006   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1698007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698008   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698009   +   H2x1_1  =     1.23576217175305 * H1x1_1  +     4.19315123860009 * H1x1_2
1698010   +          +    -3.85498900364115 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.23576217175305 * H1x1_1 + 4.19315123860009 * H1x1_2 +
-3.85498900364115 * H1x1_3 ;
1698011   +   H2x1_2  =        0.24209158888 * H1x1_1  +     0.59735252655183 * H1x1_2
1698012   +          +     1.27545750114528 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 0.24209158888 * H1x1_1 + 0.59735252655183 * H1x1_2 +
1.27545750114528 * H1x1_3 ;
1698013   +   H2x1_3  =     1.36411346566831 * H1x1_1  +     4.19709046572946 * H1x1_2
1698014   +          +    -4.50940237896172 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.36411346566831 * H1x1_1 + 4.19709046572946 * H1x1_2 +
-4.50940237896172 * H1x1_3 ;
1698015   +   H2x1_1  = H2x1_1  +     0.65417285199474 * H1x2_1
1698016   +          +      2.5072311354855 * H1x2_2  +     -2.0438449895367 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.65417285199474 * H1x2_1 + 2.5072311354855 * H1x2_2 +
-2.0438449895367 * H1x2_3 ;
1698017   +   H2x1_2  = H2x1_2  +      0.4352357645315 * H1x2_1
1698018   +          +     -0.9643467516424 * H1x2_2  +     0.46452403975724 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.4352357645315 * H1x2_1 + -0.9643467516424 * H1x2_2 +
0.46452403975724 * H1x2_3 ;
1698019   +   H2x1_3  = H2x1_3  +     0.13671643242806 * H1x2_1
1698020   +          +     1.59797252596846 * H1x2_2  +    -2.67821815632058 * H1x2_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.13671643242806 * H1x2_1 + 1.59797252596846 * H1x2_2
+ -2.67821815632058 * H1x2_3 ;
1698021   +   H2x1_1  =     0.15805888658617 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.15805888658617 + H2x1_1 ;
1698022   +   H2x1_2  =     1.42566993600015 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.42566993600015 + H2x1_2 ;
1698023   +   H2x1_3  =     1.00076706282181 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.00076706282181 + H2x1_3 ;
1698024   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1698025   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1698026   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1698027   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1698028   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1698029   +END;
MPRINT(EM_DIAGRAM):   END;
1698030   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698031   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1698032   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1698033   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1698034   +END;
MPRINT(EM_DIAGRAM):   END;
1698035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698036   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1698037   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698038   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698039   +   P_DepVar1  =    -6.91101516234847 * H2x1_1  +     1.76281132920385 * H2x1_2
1698040   +          +     -7.2624751055034 * H2x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.91101516234847 * H2x1_1 + 1.76281132920385 * H2x1_2 +
-7.2624751055034 * H2x1_3 ;
1698041   +   P_DepVar1  =     -0.0724356806648 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.0724356806648 + P_DepVar1 ;
1698042   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1698043   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1698044   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1698045   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1698046   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1698047   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1698048   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1698049   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1698050   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1698051   +END;
MPRINT(EM_DIAGRAM):   END;
1698052   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698053   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1698054   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1698055   +END;
MPRINT(EM_DIAGRAM):   END;
1698056   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1698057   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1698058   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1698059   +END;
MPRINT(EM_DIAGRAM):   END;
1698060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698061   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1698062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698063   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1698064   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1698065   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1698066   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1698067   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1698068   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1698069   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1698070   +END;
MPRINT(EM_DIAGRAM):   END;
1698071   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698072   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1698073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698074   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1698075    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1698076    quit;
1698077    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1698078    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1698079    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1698080    retain ID 19 Node "AUTONEURAL8";
MPRINT(EM_DIAGRAM):   retain ID 19 Node "AUTONEURAL8";
1698081    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1698082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698083    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1698084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698086    proc sort data=EMWS8.AUTONEURAL8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL8_variableset out=_temp2(keep=NAME
CREATOR);
1698087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698090    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1698091    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1698092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698093    proc contents data=EMWS8.AUTONEURAL8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL8_train out=_meta(keep=NAME) noprint;
1698094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1698095    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1698096    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 62 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698098    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698099    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1698100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698101    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 62 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 62 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698102    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1698103    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1698103  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2103 rows and 5 columns.
 
1698104    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698105    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1698106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 2103 observations read from the data set WORK._TEMPX.
NOTE: 2103 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 13538 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698107    filename _pref
1698107  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1698108    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1698109    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1698110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698111   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1698112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698113   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1698114   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1698115   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1698116    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1698117    quit;
1698118    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1698119    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1698120    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1698121    retain ID 22 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 22 Node "Trans";
1698122    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1698123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698124    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1698125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698127    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1698128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698130    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698131    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1698132    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1698133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698134    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1698135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698136    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1698137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698139    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698140    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1698141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698142    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698143    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1698144    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1698144  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1698145    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698146    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1698147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 13542 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698148    filename _pref
1698148  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1698149    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1698150    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1698151   +
1698152   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1698153   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1698153  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1698154   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1698155   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1698156   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1698157   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1698158   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1698159    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1698160    quit;
1698161    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1698162    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1698163    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1698164    retain ID 23 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 23 Node "EMCODE4";
1698165    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1698166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698167    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1698168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698170    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1698171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698172    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698173    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698174    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1698175    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1698176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698177    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1698178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698179    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1698180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1698182    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698183    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1698184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698185    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698186    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1698187    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1698187  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1698188    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698189    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1698190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 13581 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698191    filename _pref
1698191  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1698192    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1698193    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1698194   +
1698195   +
1698196   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1698197   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1698198   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1698199   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1698200   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1698201   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698202   +
1698203   +
1698204   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1698205   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1698206   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1698207   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1698208   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1698209   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698210   +
1698211   +
1698212   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1698213   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1698214   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1698215   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1698216   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1698217   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698218   +
1698219   +
1698220   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1698221   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1698222   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1698223   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1698224   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1698225   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698226   +
1698227   +
1698228   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1698229   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1698230   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1698231   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1698232   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1698233   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698234   +
1698235   +
1698236   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1698237   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1698238   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1698239   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1698240   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1698241   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698242   +
1698243   +
1698244   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1698245   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1698246   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1698247   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1698248   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1698249   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698250   +
1698251   +
1698252   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1698253   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1698254   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1698255   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1698256   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1698257   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1698258   +if
1698259   +_FILTERNORM1 not in ( '.')
1698260   + and
1698261   +_FILTERNORM2 not in ( '.')
1698262   + and
1698263   +_FILTERNORM3 not in ( '.')
1698264   + and
1698265   +_FILTERNORM4 not in ( '.')
1698266   + and
1698267   +_FILTERNORM5 not in ( '.')
1698268   + and
1698269   +_FILTERNORM6 not in ( '.')
1698270   + and
1698271   +_FILTERNORM7 not in ( ' ')
1698272   + and
1698273   +_FILTERNORM8 not in ( ' ')
1698274   +and
1698275   +( Dt_Customer ne .)
1698276   +and ( Income ne . and (Income<=107000))
1698277   +and ( Kidhome ne .)
1698278   +and ( MntFishProducts ne .)
1698279   +and ( MntFruits ne .)
1698280   +and ( MntGoldProds ne .)
1698281   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1698282   +and ( MntSweetProducts ne .)
1698283   +and ( MntWines ne .)
1698284   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1698285   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1698286   +and ( NumStorePurchases ne .)
1698287   +and ( NumWebPurchases ne .)
1698288   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1698289   +and ( Recency ne .)
1698290   +and ( Teenhome ne .)
1698291   +and ( Year_Birth ne .)
1698292   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1698293   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1698294   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1698295   +end;
MPRINT(EM_DIAGRAM):   end;
1698296   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1698297   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1698298    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1698299    quit;
1698300    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1698301    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1698302    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1698303    retain ID 24 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 24 Node "Filter";
1698304    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1698305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698306    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1698307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698309    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1698310    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1698312    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698313    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1698314    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1698315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698316    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1698317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1698318    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1698319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698321    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1698322    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1698323    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1698324    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698325    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1698326    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1698326  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1698327    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1698328    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1698329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 13647 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1698330    filename _pref
1698330  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL10\EMPUBLISHSCORE.sas";
1698331    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1698332    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL10\EMPUBLISHSCORE.sas.
1698333   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698334   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1698335   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698336   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1698337   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1698338   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1698339   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1698340   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1698341   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1698342   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1698343   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1698344   +LENGTH _WARN_ $4
1698345   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1698346   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1698347   +
1698348   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1698349   +
1698350   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1698351   +
1698352   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1698353   +
1698354   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1698355   +
1698356   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1698357   +
1698358   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1698359   +
1698360   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1698361   +
1698362   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1698363   +
1698364   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1698365   +
1698366   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1698367   +
1698368   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1698369   +
1698370   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1698371   +
1698372   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1698373   +
1698374   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1698375   +
1698376   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1698377   +
1698378   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1698379   +
1698380   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1698381   +
1698382   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1698383   +
1698384   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1698385   +
1698386   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1698387   +
1698388   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1698389   +
1698390   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1698391   +
1698392   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1698393   +
1698394   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1698395   +
1698396   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1698397   +
1698398   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1698399   +
1698400   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1698401   +
1698402   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1698403   +
1698404   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1698405   +
1698406   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1698407   +
1698408   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1698409   +
1698410   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1698411   +
1698412   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1698413   +
1698414   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1698415   +
1698416   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1698417   +
1698418   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1698419   +
1698420   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1698421   +
1698422   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1698423   +
1698424   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1698425   +
1698426   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1698427   +
1698428   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1698429   +
1698430   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1698431   +
1698432   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1698433   +
1698434   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1698435   +
1698436   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1698437   +
1698438   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1698439   +
1698440   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1698441   +
1698442   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1698443   +
1698444   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1698445   +
1698446   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1698447   +
1698448   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1698449   +
1698450   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1698451   +
1698452   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1698453   +
1698454   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1698455   +
1698456   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1698457   +
1698458   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1698459   +
1698460   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1698461   +
1698462   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1698463   +
1698464   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1698465   +
1698466   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1698467   +
1698468   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1698469   +
1698470   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1698471   +
1698472   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1698473   +
1698474   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1698475   +
1698476   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1698477   +
1698478   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1698479   +
1698480   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1698481   +
1698482   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1698483   +
1698484   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1698485   +
1698486   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1698487   +
1698488   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1698489   +
1698490   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1698491   +
1698492   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1698493   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1698494   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1698495   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1698496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698498   +end;
MPRINT(EM_DIAGRAM):   end;
1698499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698501   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1698502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698504   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1698505   +   end;
MPRINT(EM_DIAGRAM):   end;
1698506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698507   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1698508   +   end;
MPRINT(EM_DIAGRAM):   end;
1698509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698510   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1698511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698513   +   end;
MPRINT(EM_DIAGRAM):   end;
1698514   +end;
MPRINT(EM_DIAGRAM):   end;
1698515   +
1698516   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1698517   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1698518   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1698519   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1698520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698522   +end;
MPRINT(EM_DIAGRAM):   end;
1698523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698525   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1698526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698528   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1698529   +   end;
MPRINT(EM_DIAGRAM):   end;
1698530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698531   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1698532   +   end;
MPRINT(EM_DIAGRAM):   end;
1698533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698534   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1698535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698537   +   end;
MPRINT(EM_DIAGRAM):   end;
1698538   +end;
MPRINT(EM_DIAGRAM):   end;
1698539   +
1698540   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1698541   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1698542   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1698543   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1698544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698546   +end;
MPRINT(EM_DIAGRAM):   end;
1698547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698549   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1698550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698551   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698552   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1698553   +   end;
MPRINT(EM_DIAGRAM):   end;
1698554   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698555   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1698556   +   end;
MPRINT(EM_DIAGRAM):   end;
1698557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698558   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1698559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698561   +   end;
MPRINT(EM_DIAGRAM):   end;
1698562   +end;
MPRINT(EM_DIAGRAM):   end;
1698563   +
1698564   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1698565   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1698566   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1698567   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1698568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698570   +end;
MPRINT(EM_DIAGRAM):   end;
1698571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698573   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1698574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698575   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698576   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1698577   +   end;
MPRINT(EM_DIAGRAM):   end;
1698578   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698579   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1698580   +   end;
MPRINT(EM_DIAGRAM):   end;
1698581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698582   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1698583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698585   +   end;
MPRINT(EM_DIAGRAM):   end;
1698586   +end;
MPRINT(EM_DIAGRAM):   end;
1698587   +
1698588   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1698589   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1698590   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1698591   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1698592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698594   +end;
MPRINT(EM_DIAGRAM):   end;
1698595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698597   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1698598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698599   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698600   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1698601   +   end;
MPRINT(EM_DIAGRAM):   end;
1698602   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698603   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1698604   +   end;
MPRINT(EM_DIAGRAM):   end;
1698605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698606   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1698607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698609   +   end;
MPRINT(EM_DIAGRAM):   end;
1698610   +end;
MPRINT(EM_DIAGRAM):   end;
1698611   +
1698612   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1698613   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1698614   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1698615   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1698616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698618   +end;
MPRINT(EM_DIAGRAM):   end;
1698619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698621   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1698622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698623   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1698624   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1698625   +   end;
MPRINT(EM_DIAGRAM):   end;
1698626   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698627   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1698628   +   end;
MPRINT(EM_DIAGRAM):   end;
1698629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698630   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1698631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698633   +   end;
MPRINT(EM_DIAGRAM):   end;
1698634   +end;
MPRINT(EM_DIAGRAM):   end;
1698635   +
1698636   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1698637   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1698638   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1698639   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1698640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698642   +end;
MPRINT(EM_DIAGRAM):   end;
1698643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698644   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698645   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1698646   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698647   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1698648   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1698649   +   end;
MPRINT(EM_DIAGRAM):   end;
1698650   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1698651   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1698652   +   end;
MPRINT(EM_DIAGRAM):   end;
1698653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698654   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1698655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698657   +   end;
MPRINT(EM_DIAGRAM):   end;
1698658   +end;
MPRINT(EM_DIAGRAM):   end;
1698659   +
1698660   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1698661   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1698662   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1698663   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1698664   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1698665   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1698666   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1698667   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1698668   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1698669   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1698670   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1698671   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1698672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698674   +end;
MPRINT(EM_DIAGRAM):   end;
1698675   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698676   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1698677   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1698678   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698679   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1698680   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1698681   +   end;
MPRINT(EM_DIAGRAM):   end;
1698682   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1698683   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1698684   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1698685   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1698686   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1698687   +   end;
MPRINT(EM_DIAGRAM):   end;
1698688   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1698689   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1698690   +   end;
MPRINT(EM_DIAGRAM):   end;
1698691   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1698692   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1698693   +   end;
MPRINT(EM_DIAGRAM):   end;
1698694   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1698695   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1698696   +   end;
MPRINT(EM_DIAGRAM):   end;
1698697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698698   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1698699   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1698700   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1698701   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1698702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698704   +   end;
MPRINT(EM_DIAGRAM):   end;
1698705   +end;
MPRINT(EM_DIAGRAM):   end;
1698706   +
1698707   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1698708   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1698709   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1698710   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1698711   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1698712   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1698713   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1698714   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1698715   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1698716   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1698717   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1698718   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1698719   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1698720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698722   +end;
MPRINT(EM_DIAGRAM):   end;
1698723   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698724   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1698725   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1698726   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698727   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1698728   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1698729   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1698730   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1698731   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1698732   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1698733   +         end;
MPRINT(EM_DIAGRAM):   end;
1698734   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1698735   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1698736   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1698737   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1698738   +            end;
MPRINT(EM_DIAGRAM):   end;
1698739   +         end;
MPRINT(EM_DIAGRAM):   end;
1698740   +      end;
MPRINT(EM_DIAGRAM):   end;
1698741   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1698742   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1698743   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1698744   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1698745   +         end;
MPRINT(EM_DIAGRAM):   end;
1698746   +      end;
MPRINT(EM_DIAGRAM):   end;
1698747   +   end;
MPRINT(EM_DIAGRAM):   end;
1698748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698749   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1698750   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1698751   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1698752   +      end;
MPRINT(EM_DIAGRAM):   end;
1698753   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1698754   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1698755   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1698756   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1698757   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1698758   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1698759   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1698760   +         end;
MPRINT(EM_DIAGRAM):   end;
1698761   +      end;
MPRINT(EM_DIAGRAM):   end;
1698762   +   end;
MPRINT(EM_DIAGRAM):   end;
1698763   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1698764   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1698765   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1698766   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1698767   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1698768   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698769   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698770   +   end;
MPRINT(EM_DIAGRAM):   end;
1698771   +end;
MPRINT(EM_DIAGRAM):   end;
1698772   +
1698773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698774   +*** Checking missing input Interval
1698775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1698776   +
1698777   +IF NMISS(
1698778   +   AcceptedCmpTotal ,
1698779   +   Age ,
1698780   +   Frq ,
1698781   +   Income ,
1698782   +   Kidhome ,
1698783   +   Mnt ,
1698784   +   MntFishProducts ,
1698785   +   MntFruits ,
1698786   +   MntGoldProds ,
1698787   +   MntMeatProducts ,
1698788   +   MntSweetProducts ,
1698789   +   MntWines ,
1698790   +   MonthsAsCustomer ,
1698791   +   NumCatalogPurchases ,
1698792   +   NumDealsPurchases ,
1698793   +   NumDistPurchases ,
1698794   +   NumStorePurchases ,
1698795   +   NumWebPurchases ,
1698796   +   NumWebVisitsMonth ,
1698797   +   RFMstat ,
1698798   +   RMntFrq ,
1698799   +   Recency ,
1698800   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1698801   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1698802   +
1698803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698804   +END;
MPRINT(EM_DIAGRAM):   END;
1698805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698806   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1698807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698808   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698809   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698810   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698811   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1698812   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698813   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698814   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1698815   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698816   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1698817   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1698818   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1698819   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698820   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1698821   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698822   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698823   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1698824   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1698825   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698826   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1698827   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1698828   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1698829   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1698830   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1698831   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1698832   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698833   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698834   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1698835   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1698836   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1698837   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1698838   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1698839   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1698840   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698841   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698842   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698843   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1698844   +END;
MPRINT(EM_DIAGRAM):   END;
1698845   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698846   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1698847   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698848   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698849   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1698850   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1698851   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1698852   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698853   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1698854   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698855   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1698856   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1698857   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1698858   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698859   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1698860   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1698861   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1698862   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1698863   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1698864   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1698865   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1698866   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698867   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1698868   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1698869   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698870   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698871   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1698872   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1698873   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1698874   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1698875   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698876   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1698877   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1698878   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1698879   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1698880   +   ELSE S_NumCatalogPurchases
1698881   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1698882   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1698883   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1698884   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1698885   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1698886   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1698887   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698888   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698889   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1698890   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1698891   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1698892   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1698893   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1698894   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1698895   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1698896   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1698897   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1698898   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1698899   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698900   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1698901   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698902   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1698903   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698904   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1698905   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1698906   +END;
MPRINT(EM_DIAGRAM):   END;
1698907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698908   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1698909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698911   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1698912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698914   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1698915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698917   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1698918   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1698919   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1698920   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1698921   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1698922   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1698923   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1698924   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1698925   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1698926   +          +     3.45371614080196 * S_NumDealsPurchases
1698927   +          +     0.19118374544537 * S_NumDistPurchases
1698928   +          +    -2.45138001446793 * S_NumStorePurchases
1698929   +          +    -0.11424280244155 * S_NumWebPurchases
1698930   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1698931   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1698932   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1698933   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 *
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 *
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts +
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 *
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines +
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases +
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases +
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases +
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 *
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1698934   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1698935   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1698936   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1698937   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1698938   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1698939   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1698940   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1698941   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1698942   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1698943   +          +    -1.28390925647659 * S_NumDealsPurchases
1698944   +          +     0.82669177239926 * S_NumDistPurchases
1698945   +          +     1.71678585204511 * S_NumStorePurchases
1698946   +          +     1.49226295608046 * S_NumWebPurchases
1698947   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1698948   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1698949   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1698950   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 *
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 *
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts +
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 *
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 *
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 *
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 *
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq +
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1698951   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1698952   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1698953   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1698954   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1698955   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1698956   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1698957   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1698958   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1698959   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1698960   +          +     0.22958626391725 * S_NumDealsPurchases
1698961   +          +    -0.02046515813996 * S_NumDistPurchases
1698962   +          +      0.8618502050837 * S_NumStorePurchases
1698963   +          +     1.45175370326009 * S_NumWebPurchases
1698964   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1698965   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1698966   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1698967   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 *
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 *
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts +
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 *
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 *
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 *
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 *
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq +
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1698968   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1698969   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1698970   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1698971   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1698972   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1698973   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1698974   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1698975   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1698976   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1698977   +          +     1.25310034610344 * S_NumDealsPurchases
1698978   +          +     0.92141098602176 * S_NumDistPurchases
1698979   +          +    -0.08806509391473 * S_NumStorePurchases
1698980   +          +     -1.0533787624668 * S_NumWebPurchases
1698981   +          +     3.07050739830585 * S_NumWebVisitsMonth
1698982   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1698983   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1698984   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 *
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 *
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts +
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 *
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 *
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 *
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 *
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq +
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1698985   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1698986   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1698987   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1698988   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1698989   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1698990   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1698991   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1698992   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1698993   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1698994   +          +    -1.68259553608287 * S_NumDealsPurchases
1698995   +          +    -0.53835572290445 * S_NumDistPurchases
1698996   +          +     1.25833922835446 * S_NumStorePurchases
1698997   +          +     0.48300830623998 * S_NumWebPurchases
1698998   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1698999   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1699000   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1699001   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 *
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 *
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts +
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 *
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 *
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 *
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 *
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq +
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1699002   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1699003   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1699004   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1699005   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1699006   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 *
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 +
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 *
HigherEducationBinary0 ;
1699007   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1699008   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1699009   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1699010   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1699011   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 *
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 +
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 *
HigherEducationBinary0 ;
1699012   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1699013   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1699014   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1699015   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1699016   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 *
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 +
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 *
HigherEducationBinary0 ;
1699017   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1699018   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1699019   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1699020   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1699021   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 +
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 *
HigherEducationBinary0 ;
1699022   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1699023   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1699024   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1699025   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1699026   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 +
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 *
HigherEducationBinary0 ;
1699027   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1699028   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1699029   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1699030   +          +     0.26230568150721 * Marital_StatusDivorced
1699031   +          +     0.27563523967756 * Marital_StatusMarried
1699032   +          +     0.54464481618478 * Marital_StatusSingle
1699033   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried +
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1699034   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1699035   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1699036   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1699037   +          +    -0.06750661313108 * Marital_StatusDivorced
1699038   +          +     1.48628445854207 * Marital_StatusMarried
1699039   +          +    -0.52197797291165 * Marital_StatusSingle
1699040   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle +
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 *
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 *
Marital_StatusTogether ;
1699041   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1699042   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1699043   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1699044   +          +     0.03219453957597 * Marital_StatusDivorced
1699045   +          +    -0.73835008216677 * Marital_StatusMarried
1699046   +          +     0.11212575818086 * Marital_StatusSingle
1699047   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle +
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 *
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 *
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 *
Marital_StatusTogether ;
1699048   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1699049   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1699050   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1699051   +          +    -0.95055539413405 * Marital_StatusDivorced
1699052   +          +    -1.65922419336067 * Marital_StatusMarried
1699053   +          +     0.78727538125107 * Marital_StatusSingle
1699054   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle +
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 *
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 *
Marital_StatusTogether ;
1699055   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1699056   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1699057   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1699058   +          +     -4.1747415035634 * Marital_StatusDivorced
1699059   +          +     3.61194282451968 * Marital_StatusMarried
1699060   +          +     -3.2800495365546 * Marital_StatusSingle
1699061   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle +
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 *
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 *
Marital_StatusTogether ;
1699062   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1699063   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1699064   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1699065   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1699066   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1699067   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1699068   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1699069   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1699070   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1699071   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1699072   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1699073   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1699074   +END;
MPRINT(EM_DIAGRAM):   END;
1699075   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699076   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1699077   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1699078   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1699079   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1699080   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1699081   +END;
MPRINT(EM_DIAGRAM):   END;
1699082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699083   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1699084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699085   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699086   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1699087   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1699088   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1699089   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1699090   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1699091   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1699092   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1699093   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1699094   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1699095   +          +     1.29727972396867 * S_NumDealsPurchases
1699096   +          +     -0.4796144286007 * S_NumDistPurchases
1699097   +          +     0.88365985808591 * S_NumStorePurchases
1699098   +          +     0.68522096892804 * S_NumWebPurchases
1699099   +          +     0.54931043107798 * S_NumWebVisitsMonth
1699100   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1699101   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1699102   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 *
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 *
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts +
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 *
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 *
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 *
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 *
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq +
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1699103   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1699104   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1699105   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1699106   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1699107   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1699108   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1699109   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1699110   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1699111   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1699112   +          +     0.26997834581422 * S_NumDealsPurchases
1699113   +          +      1.4974894627406 * S_NumDistPurchases
1699114   +          +     0.20577850505638 * S_NumStorePurchases
1699115   +          +     0.67578530037026 * S_NumWebPurchases
1699116   +          +     1.48893165613941 * S_NumWebVisitsMonth
1699117   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1699118   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1699119   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 *
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 *
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts +
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 *
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines +
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases +
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases +
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases +
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 *
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1699120   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1699121   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1699122   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1699123   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1699124   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1699125   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1699126   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1699127   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1699128   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1699129   +          +    -0.75474919633886 * S_NumDealsPurchases
1699130   +          +     2.21872386475638 * S_NumDistPurchases
1699131   +          +    -0.36191460108989 * S_NumStorePurchases
1699132   +          +     0.03160010932412 * S_NumWebPurchases
1699133   +          +     0.00984650739909 * S_NumWebVisitsMonth
1699134   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1699135   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1699136   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 *
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome +
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 *
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts +
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 *
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 *
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 *
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 *
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq +
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1699137   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1699138   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1699139   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1699140   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1699141   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1699142   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1699143   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1699144   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1699145   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1699146   +          +    -1.12057357865269 * S_NumDealsPurchases
1699147   +          +    -0.70841760614521 * S_NumDistPurchases
1699148   +          +    -1.39174816270404 * S_NumStorePurchases
1699149   +          +    -1.62343249380806 * S_NumWebPurchases
1699150   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1699151   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1699152   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1699153   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 *
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 *
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts +
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 *
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 *
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 *
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 *
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq +
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1699154   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1699155   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1699156   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1699157   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1699158   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1699159   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1699160   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1699161   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1699162   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1699163   +          +     0.66880481485557 * S_NumDealsPurchases
1699164   +          +     0.69540174544859 * S_NumDistPurchases
1699165   +          +     1.68246546921736 * S_NumStorePurchases
1699166   +          +     1.85958176898295 * S_NumWebPurchases
1699167   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1699168   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1699169   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1699170   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 *
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 *
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts +
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 *
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 *
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 *
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 *
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq +
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1699171   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1699172   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1699173   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1699174   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1699175   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 +
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 *
HigherEducationBinary0 ;
1699176   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1699177   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1699178   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1699179   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1699180   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 *
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 +
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 *
HigherEducationBinary0 ;
1699181   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1699182   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1699183   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1699184   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1699185   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 *
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 +
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 *
HigherEducationBinary0 ;
1699186   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1699187   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1699188   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1699189   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1699190   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 *
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 +
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 *
HigherEducationBinary0 ;
1699191   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1699192   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1699193   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1699194   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1699195   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 *
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 +
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 *
HigherEducationBinary0 ;
1699196   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1699197   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1699198   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1699199   +          +      0.2766977476799 * Marital_StatusDivorced
1699200   +          +     0.99585126449473 * Marital_StatusMarried
1699201   +          +    -0.71244490682808 * Marital_StatusSingle
1699202   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle +
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 *
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 *
Marital_StatusTogether ;
1699203   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1699204   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1699205   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1699206   +          +     0.04724779113048 * Marital_StatusDivorced
1699207   +          +    -0.80186231440666 * Marital_StatusMarried
1699208   +          +    -0.02226793584171 * Marital_StatusSingle
1699209   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle +
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 *
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 *
Marital_StatusTogether ;
1699210   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1699211   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1699212   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1699213   +          +     0.28206835683721 * Marital_StatusDivorced
1699214   +          +     0.46500886756532 * Marital_StatusMarried
1699215   +          +     0.35327545255503 * Marital_StatusSingle
1699216   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle +
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation +
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced +
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle +
0.58394650567036 * Marital_StatusTogether ;
1699217   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1699218   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1699219   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1699220   +          +     1.22291788006392 * Marital_StatusDivorced
1699221   +          +    -2.27040720272432 * Marital_StatusMarried
1699222   +          +     1.13606780043773 * Marital_StatusSingle
1699223   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle +
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 *
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 *
Marital_StatusTogether ;
1699224   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1699225   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1699226   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1699227   +          +     -0.3999800759199 * Marital_StatusDivorced
1699228   +          +    -0.40978271635345 * Marital_StatusMarried
1699229   +          +    -0.55524279444227 * Marital_StatusSingle
1699230   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle +
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 *
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 *
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 *
Marital_StatusTogether ;
1699231   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1699232   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1699233   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1699234   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1699235   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1699236   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1699237   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1699238   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1699239   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1699240   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1699241   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1699242   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1699243   +END;
MPRINT(EM_DIAGRAM):   END;
1699244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699245   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1699246   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1699247   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1699248   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1699249   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1699250   +END;
MPRINT(EM_DIAGRAM):   END;
1699251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699252   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1699253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699255   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1699256   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1699257   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1699258   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1699259   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1699260   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1699261   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1699262   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1699263   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1699264   +          +     0.15783958682465 * S_NumDealsPurchases
1699265   +          +     1.52124708558457 * S_NumDistPurchases
1699266   +          +     -1.3804418313581 * S_NumStorePurchases
1699267   +          +    -1.29570111649272 * S_NumWebPurchases
1699268   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1699269   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1699270   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1699271   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 *
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 *
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts +
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 *
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 *
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 *
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 *
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq +
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1699272   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1699273   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1699274   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1699275   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1699276   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1699277   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1699278   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1699279   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1699280   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1699281   +          +     0.12337111358286 * S_NumDealsPurchases
1699282   +          +     -2.3848926094027 * S_NumDistPurchases
1699283   +          +    -1.20666646996433 * S_NumStorePurchases
1699284   +          +     0.89549302881365 * S_NumWebPurchases
1699285   +          +     0.95359042569947 * S_NumWebVisitsMonth
1699286   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1699287   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1699288   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 *
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 *
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts +
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 *
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 *
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 *
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 *
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq +
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1699289   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1699290   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1699291   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1699292   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1699293   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1699294   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1699295   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1699296   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1699297   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1699298   +          +    -1.05383642674948 * S_NumDealsPurchases
1699299   +          +     1.71861984509369 * S_NumDistPurchases
1699300   +          +     1.47595181536047 * S_NumStorePurchases
1699301   +          +    -1.64165005491178 * S_NumWebPurchases
1699302   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1699303   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1699304   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1699305   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 *
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 *
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts +
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 *
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 *
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 *
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 *
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq +
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1699306   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1699307   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1699308   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1699309   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1699310   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1699311   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1699312   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1699313   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1699314   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1699315   +          +     0.13347794794222 * S_NumDealsPurchases
1699316   +          +     0.30533639886561 * S_NumDistPurchases
1699317   +          +     1.63892955540526 * S_NumStorePurchases
1699318   +          +     0.43734586516446 * S_NumWebPurchases
1699319   +          +     1.79260779802864 * S_NumWebVisitsMonth
1699320   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1699321   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1699322   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 *
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome +
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 *
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts +
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 *
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 *
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 *
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 *
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq +
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1699323   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1699324   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1699325   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1699326   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1699327   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1699328   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1699329   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1699330   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1699331   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1699332   +          +     1.64209094349557 * S_NumDealsPurchases
1699333   +          +    -0.38876870460627 * S_NumDistPurchases
1699334   +          +    -0.48559309584971 * S_NumStorePurchases
1699335   +          +     0.21254626353218 * S_NumWebPurchases
1699336   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1699337   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1699338   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1699339   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 *
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 *
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts +
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 *
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 *
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 *
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 *
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq +
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1699340   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1699341   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1699342   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1699343   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1699344   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 *
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 +
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 *
HigherEducationBinary0 ;
1699345   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1699346   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1699347   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1699348   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1699349   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 *
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 +
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 *
HigherEducationBinary0 ;
1699350   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1699351   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1699352   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1699353   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1699354   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 *
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 +
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 *
HigherEducationBinary0 ;
1699355   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1699356   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1699357   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1699358   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1699359   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 +
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 *
HigherEducationBinary0 ;
1699360   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1699361   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1699362   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1699363   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1699364   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 *
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 +
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 *
HigherEducationBinary0 ;
1699365   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1699366   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1699367   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1699368   +          +     1.33953173091973 * Marital_StatusDivorced
1699369   +          +    -0.26253208073262 * Marital_StatusMarried
1699370   +          +    -0.00960552682431 * Marital_StatusSingle
1699371   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle +
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation +
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced +
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle +
1.02851334153667 * Marital_StatusTogether ;
1699372   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1699373   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1699374   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1699375   +          +     1.43150850334311 * Marital_StatusDivorced
1699376   +          +    -0.69239127844934 * Marital_StatusMarried
1699377   +          +     2.08477562471559 * Marital_StatusSingle
1699378   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle +
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 *
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 *
Marital_StatusTogether ;
1699379   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1699380   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1699381   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1699382   +          +     1.08387556786168 * Marital_StatusDivorced
1699383   +          +      1.0283506000217 * Marital_StatusMarried
1699384   +          +    -0.87069431107983 * Marital_StatusSingle
1699385   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle +
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 *
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 *
Marital_StatusTogether ;
1699386   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1699387   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1699388   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1699389   +          +      -1.347780188307 * Marital_StatusDivorced
1699390   +          +    -0.53911983240372 * Marital_StatusMarried
1699391   +          +     0.22083074159185 * Marital_StatusSingle
1699392   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle +
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation +
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced +
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle +
0.46023807391468 * Marital_StatusTogether ;
1699393   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1699394   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1699395   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1699396   +          +     1.46582538311384 * Marital_StatusDivorced
1699397   +          +     0.05256161016002 * Marital_StatusMarried
1699398   +          +    -1.21402967626877 * Marital_StatusSingle
1699399   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle +
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 *
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 *
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 *
Marital_StatusTogether ;
1699400   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1699401   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1699402   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1699403   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1699404   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1699405   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1699406   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1699407   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1699408   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1699409   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1699410   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1699411   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1699412   +END;
MPRINT(EM_DIAGRAM):   END;
1699413   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699414   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1699415   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1699416   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1699417   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1699418   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1699419   +END;
MPRINT(EM_DIAGRAM):   END;
1699420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699421   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1699422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699423   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699424   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1699425   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1699426   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 +
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1699427   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1699428   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1699429   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 +
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1699430   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1699431   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1699432   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 +
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1699433   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1699434   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1699435   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 +
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1699436   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1699437   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1699438   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1699439   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1699440   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1699441   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1699442   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1699443   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1699444   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1699445   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1699446   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1699447   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1699448   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1699449   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1699450   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1699451   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1699452   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1699453   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 +
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1699454   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1699455   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1699456   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1699457   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1699458   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1699459   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1699460   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1699461   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1699462   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1699463   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1699464   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1699465   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1699466   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1699467   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1699468   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1699469   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1699470   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1699471   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1699472   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1699473   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1699474   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1699475   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1699476   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1699477   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1699478   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1699479   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1699480   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1699481   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1699482   +END;
MPRINT(EM_DIAGRAM):   END;
1699483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699484   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1699485   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1699486   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1699487   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1699488   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1699489   +END;
MPRINT(EM_DIAGRAM):   END;
1699490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699491   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1699492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699494   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1699495   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1699496   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 +
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1699497   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1699498   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1699499   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 +
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1699500   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1699501   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1699502   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 +
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1699503   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1699504   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1699505   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 +
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1699506   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1699507   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1699508   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 +
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1699509   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1699510   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1699511   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1699512   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1699513   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1699514   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1699515   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1699516   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1699517   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1699518   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1699519   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1699520   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1699521   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1699522   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1699523   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 *
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1699524   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1699525   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1699526   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1699527   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1699528   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1699529   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1699530   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1699531   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1699532   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1699533   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1699534   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1699535   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1699536   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1699537   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1699538   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1699539   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1699540   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1699541   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1699542   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1699543   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1699544   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1699545   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1699546   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1699547   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1699548   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1699549   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1699550   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1699551   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1699552   +END;
MPRINT(EM_DIAGRAM):   END;
1699553   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699554   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1699555   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1699556   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1699557   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1699558   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1699559   +END;
MPRINT(EM_DIAGRAM):   END;
1699560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699561   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1699562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699563   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699564   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1699565   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1699566   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 +
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1699567   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1699568   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1699569   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 +
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1699570   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1699571   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1699572   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 +
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1699573   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1699574   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1699575   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 +
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1699576   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1699577   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1699578   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1699579   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1699580   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1699581   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1699582   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1699583   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1699584   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1699585   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1699586   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1699587   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 *
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1699588   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1699589   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1699590   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1699591   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1699592   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1699593   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1699594   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1699595   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1699596   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1699597   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1699598   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1699599   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1699600   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1699601   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1699602   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1699603   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1699604   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1699605   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1699606   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1699607   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1699608   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1699609   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1699610   +END;
MPRINT(EM_DIAGRAM):   END;
1699611   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699612   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1699613   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1699614   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1699615   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1699616   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1699617   +END;
MPRINT(EM_DIAGRAM):   END;
1699618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699619   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1699620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1699622   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1699623   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1699624   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 +
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1699625   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1699626   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1699627   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1699628   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1699629   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1699630   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1699631   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1699632   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1699633   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1699634   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1699635   +END;
MPRINT(EM_DIAGRAM):   END;
1699636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699637   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1699638   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1699639   +END;
MPRINT(EM_DIAGRAM):   END;
1699640   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1699641   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1699642   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1699643   +END;
MPRINT(EM_DIAGRAM):   END;
1699644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699645   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1699646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1699647   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1699648   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1699649   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699650   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1699651   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1699652   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1699653   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699654   +END;
MPRINT(EM_DIAGRAM):   END;
1699655   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1699656   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1699657   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1699658   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1699659    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1699660    quit;
1699661    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1699662    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1699663    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1699664    retain ID 27 Node "AUTONEURAL10";
MPRINT(EM_DIAGRAM):   retain ID 27 Node "AUTONEURAL10";
1699665    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1699666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699667    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1699668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699670    proc sort data=EMWS8.AUTONEURAL10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL10_variableset out=_temp2(keep=NAME
CREATOR);
1699671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699674    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1699675    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1699676    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699677    proc contents data=EMWS8.AUTONEURAL10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL10_train out=_meta(keep=NAME) noprint;
1699678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1699679    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1699680    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699682    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699683    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1699684    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699685    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699686    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1699687    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1699687  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.
 
1699688    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699689    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1699690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: 4449 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 18096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699691    filename _pref
1699691  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1699692    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1699693    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1699694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699695   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1699696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699697   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1699698   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1699699   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1699700    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1699701    quit;
1699702    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1699703    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1699704    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1699705    retain ID 30 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 30 Node "Trans";
1699706    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1699707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699708    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1699709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699711    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1699712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699715    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1699716    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1699717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1699718    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1699719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699720    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1699721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699724    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1699725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699726    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699727    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1699728    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1699728  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1699729    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699730    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1699731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 18100 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699732    filename _pref
1699732  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1699733    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1699734    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1699735   +
1699736   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1699737   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1699737  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1699738   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1699739   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1699740   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1699741   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1699742   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1699743    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1699744    quit;
1699745    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1699746    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1699747    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1699748    retain ID 31 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 31 Node "EMCODE4";
1699749    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1699750    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699751    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1699752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699754    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1699755    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699757    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699758    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1699759    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1699760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699761    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1699762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699763    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1699764    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699766    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699767    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1699768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699769    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699770    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1699771    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1699771  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1699772    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699773    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1699774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 18139 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699775    filename _pref
1699775  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1699776    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1699777    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1699778   +
1699779   +
1699780   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1699781   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1699782   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1699783   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1699784   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1699785   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699786   +
1699787   +
1699788   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1699789   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1699790   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1699791   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1699792   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1699793   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699794   +
1699795   +
1699796   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1699797   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1699798   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1699799   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1699800   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1699801   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699802   +
1699803   +
1699804   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1699805   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1699806   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1699807   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1699808   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1699809   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699810   +
1699811   +
1699812   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1699813   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1699814   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1699815   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1699816   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1699817   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699818   +
1699819   +
1699820   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1699821   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1699822   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1699823   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1699824   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1699825   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699826   +
1699827   +
1699828   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1699829   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1699830   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1699831   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1699832   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1699833   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699834   +
1699835   +
1699836   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1699837   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1699838   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1699839   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1699840   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1699841   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699842   +if
1699843   +_FILTERNORM1 not in ( '.')
1699844   + and
1699845   +_FILTERNORM2 not in ( '.')
1699846   + and
1699847   +_FILTERNORM3 not in ( '.')
1699848   + and
1699849   +_FILTERNORM4 not in ( '.')
1699850   + and
1699851   +_FILTERNORM5 not in ( '.')
1699852   + and
1699853   +_FILTERNORM6 not in ( '.')
1699854   + and
1699855   +_FILTERNORM7 not in ( ' ')
1699856   + and
1699857   +_FILTERNORM8 not in ( ' ')
1699858   +and
1699859   +( Dt_Customer ne .)
1699860   +and ( Income ne . and (Income<=107000))
1699861   +and ( Kidhome ne .)
1699862   +and ( MntFishProducts ne .)
1699863   +and ( MntFruits ne .)
1699864   +and ( MntGoldProds ne .)
1699865   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1699866   +and ( MntSweetProducts ne .)
1699867   +and ( MntWines ne .)
1699868   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1699869   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1699870   +and ( NumStorePurchases ne .)
1699871   +and ( NumWebPurchases ne .)
1699872   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1699873   +and ( Recency ne .)
1699874   +and ( Teenhome ne .)
1699875   +and ( Year_Birth ne .)
1699876   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1699877   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1699878   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1699879   +end;
MPRINT(EM_DIAGRAM):   end;
1699880   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1699881   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1699882    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1699883    quit;
1699884    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1699885    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1699886    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1699887    retain ID 32 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 32 Node "Filter";
1699888    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1699889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1699890    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1699891    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699892    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699893    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1699894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699896    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699897    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1699898    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1699899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1699900    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1699901    run;
MPRINT(EM_DIAGRAM):   run;
The SAS System
 
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1699902    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1699903    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699905    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1699906    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1699907    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1699908    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699909    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1699910    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1699910  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1699911    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699912    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1699913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 18205 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1699914    filename _pref
1699914  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL9\EMPUBLISHSCORE.sas";
1699915    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1699916    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL9\EMPUBLISHSCORE.sas.
1699917   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1699918   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1699919   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1699920   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1699921   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1699922   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1699923   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1699924   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1699925   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1699926   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1699927   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1699928   +LENGTH _WARN_ $4
1699929   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1699930   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1699931   +
1699932   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1699933   +
1699934   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1699935   +
1699936   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1699937   +
1699938   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1699939   +
1699940   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1699941   +
1699942   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1699943   +
1699944   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1699945   +
1699946   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1699947   +
1699948   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1699949   +
1699950   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1699951   +
1699952   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1699953   +
1699954   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1699955   +
1699956   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1699957   +
1699958   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1699959   +
1699960   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1699961   +
1699962   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1699963   +
1699964   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1699965   +
1699966   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1699967   +
1699968   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1699969   +
1699970   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1699971   +
1699972   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1699973   +
1699974   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1699975   +
1699976   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1699977   +
1699978   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1699979   +
1699980   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1699981   +
1699982   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1699983   +
1699984   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1699985   +
1699986   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1699987   +
1699988   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1699989   +
1699990   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1699991   +
1699992   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1699993   +
1699994   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1699995   +
1699996   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1699997   +
1699998   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1699999   +
1700000   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1700001   +
1700002   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1700003   +
1700004   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1700005   +
1700006   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1700007   +
1700008   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1700009   +
1700010   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1700011   +
1700012   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1700013   +
1700014   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1700015   +
1700016   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1700017   +
1700018   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1700019   +
1700020   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1700021   +
1700022   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1700023   +
1700024   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1700025   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1700026   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1700027   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1700028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700030   +end;
MPRINT(EM_DIAGRAM):   end;
1700031   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700032   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700033   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1700034   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700035   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700036   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1700037   +   end;
MPRINT(EM_DIAGRAM):   end;
1700038   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700039   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1700040   +   end;
MPRINT(EM_DIAGRAM):   end;
1700041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700042   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1700043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700045   +   end;
MPRINT(EM_DIAGRAM):   end;
1700046   +end;
MPRINT(EM_DIAGRAM):   end;
1700047   +
1700048   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1700049   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1700050   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1700051   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1700052   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700053   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700054   +end;
MPRINT(EM_DIAGRAM):   end;
1700055   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700056   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700057   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1700058   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700059   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700060   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1700061   +   end;
MPRINT(EM_DIAGRAM):   end;
1700062   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700063   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1700064   +   end;
MPRINT(EM_DIAGRAM):   end;
1700065   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700066   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1700067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700069   +   end;
MPRINT(EM_DIAGRAM):   end;
1700070   +end;
MPRINT(EM_DIAGRAM):   end;
1700071   +
1700072   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1700073   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1700074   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1700075   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1700076   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700077   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700078   +end;
MPRINT(EM_DIAGRAM):   end;
1700079   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700080   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700081   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1700082   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700083   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700084   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1700085   +   end;
MPRINT(EM_DIAGRAM):   end;
1700086   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700087   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1700088   +   end;
MPRINT(EM_DIAGRAM):   end;
1700089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700090   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1700091   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700092   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700093   +   end;
MPRINT(EM_DIAGRAM):   end;
1700094   +end;
MPRINT(EM_DIAGRAM):   end;
1700095   +
1700096   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1700097   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1700098   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1700099   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1700100   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700102   +end;
MPRINT(EM_DIAGRAM):   end;
1700103   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700104   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700105   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1700106   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700107   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700108   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1700109   +   end;
MPRINT(EM_DIAGRAM):   end;
1700110   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700111   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1700112   +   end;
MPRINT(EM_DIAGRAM):   end;
1700113   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700114   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1700115   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700116   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700117   +   end;
MPRINT(EM_DIAGRAM):   end;
1700118   +end;
MPRINT(EM_DIAGRAM):   end;
1700119   +
1700120   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1700121   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1700122   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1700123   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1700124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700126   +end;
MPRINT(EM_DIAGRAM):   end;
1700127   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700128   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700129   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1700130   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700131   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700132   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1700133   +   end;
MPRINT(EM_DIAGRAM):   end;
1700134   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700135   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1700136   +   end;
MPRINT(EM_DIAGRAM):   end;
1700137   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700138   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1700139   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700140   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700141   +   end;
MPRINT(EM_DIAGRAM):   end;
1700142   +end;
MPRINT(EM_DIAGRAM):   end;
1700143   +
1700144   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1700145   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1700146   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1700147   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1700148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700150   +end;
MPRINT(EM_DIAGRAM):   end;
1700151   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700152   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700153   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1700154   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700155   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1700156   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1700157   +   end;
MPRINT(EM_DIAGRAM):   end;
1700158   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700159   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1700160   +   end;
MPRINT(EM_DIAGRAM):   end;
1700161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700162   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1700163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700165   +   end;
MPRINT(EM_DIAGRAM):   end;
1700166   +end;
MPRINT(EM_DIAGRAM):   end;
1700167   +
1700168   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1700169   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1700170   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1700171   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1700172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700174   +end;
MPRINT(EM_DIAGRAM):   end;
1700175   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700177   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1700178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700179   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1700180   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1700181   +   end;
MPRINT(EM_DIAGRAM):   end;
1700182   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1700183   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1700184   +   end;
MPRINT(EM_DIAGRAM):   end;
1700185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700186   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1700187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700189   +   end;
MPRINT(EM_DIAGRAM):   end;
1700190   +end;
MPRINT(EM_DIAGRAM):   end;
1700191   +
1700192   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1700193   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1700194   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1700195   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1700196   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1700197   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1700198   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1700199   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1700200   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1700201   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1700202   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1700203   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1700204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700206   +end;
MPRINT(EM_DIAGRAM):   end;
1700207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700208   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1700209   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1700210   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700211   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1700212   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1700213   +   end;
MPRINT(EM_DIAGRAM):   end;
1700214   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1700215   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1700216   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1700217   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1700218   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1700219   +   end;
MPRINT(EM_DIAGRAM):   end;
1700220   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1700221   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1700222   +   end;
MPRINT(EM_DIAGRAM):   end;
1700223   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1700224   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1700225   +   end;
MPRINT(EM_DIAGRAM):   end;
1700226   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1700227   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1700228   +   end;
MPRINT(EM_DIAGRAM):   end;
1700229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700230   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1700231   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1700232   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1700233   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1700234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700236   +   end;
MPRINT(EM_DIAGRAM):   end;
1700237   +end;
MPRINT(EM_DIAGRAM):   end;
1700238   +
1700239   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1700240   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1700241   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1700242   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1700243   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1700244   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1700245   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1700246   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1700247   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1700248   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1700249   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1700250   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1700251   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1700252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700254   +end;
MPRINT(EM_DIAGRAM):   end;
1700255   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700256   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1700257   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1700258   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700259   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1700260   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1700261   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1700262   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1700263   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1700264   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1700265   +         end;
MPRINT(EM_DIAGRAM):   end;
1700266   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1700267   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1700268   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1700269   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1700270   +            end;
MPRINT(EM_DIAGRAM):   end;
1700271   +         end;
MPRINT(EM_DIAGRAM):   end;
1700272   +      end;
MPRINT(EM_DIAGRAM):   end;
1700273   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1700274   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1700275   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1700276   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1700277   +         end;
MPRINT(EM_DIAGRAM):   end;
1700278   +      end;
MPRINT(EM_DIAGRAM):   end;
1700279   +   end;
MPRINT(EM_DIAGRAM):   end;
1700280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700281   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1700282   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1700283   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1700284   +      end;
MPRINT(EM_DIAGRAM):   end;
1700285   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1700286   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1700287   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1700288   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1700289   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1700290   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1700291   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1700292   +         end;
MPRINT(EM_DIAGRAM):   end;
1700293   +      end;
MPRINT(EM_DIAGRAM):   end;
1700294   +   end;
MPRINT(EM_DIAGRAM):   end;
1700295   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1700296   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1700297   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1700298   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1700299   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1700300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700302   +   end;
MPRINT(EM_DIAGRAM):   end;
1700303   +end;
MPRINT(EM_DIAGRAM):   end;
1700304   +
1700305   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700306   +*** Checking missing input Interval
1700307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1700308   +
1700309   +IF NMISS(
1700310   +   AcceptedCmpTotal ,
1700311   +   Age ,
1700312   +   Frq ,
1700313   +   Income ,
1700314   +   Kidhome ,
1700315   +   Mnt ,
1700316   +   MntFishProducts ,
1700317   +   MntFruits ,
1700318   +   MntGoldProds ,
1700319   +   MntMeatProducts ,
1700320   +   MntSweetProducts ,
1700321   +   MntWines ,
1700322   +   MonthsAsCustomer ,
1700323   +   NumCatalogPurchases ,
1700324   +   NumDealsPurchases ,
1700325   +   NumDistPurchases ,
1700326   +   NumStorePurchases ,
1700327   +   NumWebPurchases ,
1700328   +   NumWebVisitsMonth ,
1700329   +   RFMstat ,
1700330   +   RMntFrq ,
1700331   +   Recency ,
1700332   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1700333   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1700334   +
1700335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700336   +END;
MPRINT(EM_DIAGRAM):   END;
1700337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700338   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1700339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700341   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700342   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700343   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1700344   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700345   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700346   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1700347   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700348   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1700349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1700350   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1700351   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700352   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1700353   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700354   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700355   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1700356   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1700357   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700358   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1700359   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1700360   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1700361   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1700362   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1700363   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1700364   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700365   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700366   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1700367   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1700368   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1700369   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1700370   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1700371   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1700372   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700373   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700374   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700375   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1700376   +END;
MPRINT(EM_DIAGRAM):   END;
1700377   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700378   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1700379   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700380   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700381   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1700382   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1700383   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1700384   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700385   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1700386   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700387   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1700388   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1700389   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1700390   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700391   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1700392   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1700393   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1700394   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1700395   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1700396   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1700397   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1700398   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700399   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1700400   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1700401   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700402   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700403   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1700404   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1700405   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1700406   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1700407   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700408   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1700409   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1700410   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1700411   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1700412   +   ELSE S_NumCatalogPurchases
1700413   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1700414   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1700415   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1700416   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1700417   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1700418   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1700419   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700420   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700421   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1700422   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1700423   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1700424   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1700425   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1700426   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1700427   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1700428   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1700429   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1700430   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1700431   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700432   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1700433   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700434   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1700435   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700436   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1700437   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1700438   +END;
MPRINT(EM_DIAGRAM):   END;
1700439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700440   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1700441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700443   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1700444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700446   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1700447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700449   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1700450   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1700451   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1700452   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1700453   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1700454   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1700455   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1700456   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1700457   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1700458   +          +    -1.14704878034134 * S_NumDealsPurchases
1700459   +          +    -0.17763404274659 * S_NumDistPurchases
1700460   +          +     0.08894400267969 * S_NumStorePurchases
1700461   +          +     0.59283747891957 * S_NumWebPurchases
1700462   +          +     0.85268274682505 * S_NumWebVisitsMonth
1700463   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1700464   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1700465   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 *
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 *
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts +
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 *
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines +
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases +
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases +
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases +
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 *
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1700466   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1700467   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1700468   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1700469   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1700470   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1700471   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1700472   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1700473   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1700474   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1700475   +          +    -0.80841566068716 * S_NumDealsPurchases
1700476   +          +    -0.17995640033768 * S_NumDistPurchases
1700477   +          +     0.00713417460936 * S_NumStorePurchases
1700478   +          +     0.57881024323076 * S_NumWebPurchases
1700479   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1700480   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1700481   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1700482   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 *
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 *
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts +
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 *
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 *
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 *
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 *
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq +
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1700483   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1700484   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1700485   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1700486   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1700487   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1700488   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1700489   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1700490   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1700491   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1700492   +          +     0.57891364118717 * S_NumDealsPurchases
1700493   +          +    -0.31024556838688 * S_NumDistPurchases
1700494   +          +    -1.48708542986704 * S_NumStorePurchases
1700495   +          +    -0.93009875249206 * S_NumWebPurchases
1700496   +          +     2.01900039122935 * S_NumWebVisitsMonth
1700497   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1700498   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1700499   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 *
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 *
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts +
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 *
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 *
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 *
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 *
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq +
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1700500   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1700501   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1700502   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1700503   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1700504   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 *
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 +
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 *
HigherEducationBinary0 ;
1700505   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1700506   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1700507   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1700508   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1700509   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 *
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 +
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 *
HigherEducationBinary0 ;
1700510   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1700511   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1700512   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1700513   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1700514   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 +
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 *
HigherEducationBinary0 ;
1700515   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1700516   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1700517   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1700518   +          +     0.55883606830033 * Marital_StatusDivorced
1700519   +          +    -0.54530037567066 * Marital_StatusMarried
1700520   +          +    -0.52994736075753 * Marital_StatusSingle
1700521   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle +
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation +
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced +
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle +
-0.53882341831078 * Marital_StatusTogether ;
1700522   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1700523   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1700524   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1700525   +          +    -1.07368484057033 * Marital_StatusDivorced
1700526   +          +     2.73313504711262 * Marital_StatusMarried
1700527   +          +    -2.18530462876058 * Marital_StatusSingle
1700528   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle +
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 *
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 *
Marital_StatusTogether ;
1700529   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1700530   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1700531   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1700532   +          +     0.49993144243043 * Marital_StatusDivorced
1700533   +          +    -0.38953339116829 * Marital_StatusMarried
1700534   +          +    -0.10836287319942 * Marital_StatusSingle
1700535   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle +
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation +
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced +
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle +
-0.42049990939036 * Marital_StatusTogether ;
1700536   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1700537   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1700538   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1700539   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1700540   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1700541   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1700542   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1700543   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1700544   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1700545   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1700546   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1700547   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1700548   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1700549   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1700550   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1700551   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1700552   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1700553   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1700554   +END;
MPRINT(EM_DIAGRAM):   END;
1700555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700556   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1700557   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1700558   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1700559   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1700560   +END;
MPRINT(EM_DIAGRAM):   END;
1700561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700562   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1700563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700564   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700565   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1700566   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 +
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1700567   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1700568   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1700569   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1700570   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1700571   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1700572   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1700573   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1700574   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1700575   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1700576   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1700577   +END;
MPRINT(EM_DIAGRAM):   END;
1700578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700579   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1700580   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1700581   +END;
MPRINT(EM_DIAGRAM):   END;
1700582   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1700583   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1700584   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1700585   +END;
MPRINT(EM_DIAGRAM):   END;
1700586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700587   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1700588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700589   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1700590   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1700591   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1700592   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1700593   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1700594   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1700595   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1700596   +END;
MPRINT(EM_DIAGRAM):   END;
1700597   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700598   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1700599   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700600   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1700601    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1700602    quit;
1700603    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1700604    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1700605    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1700606    retain ID 35 Node "AUTONEURAL9";
MPRINT(EM_DIAGRAM):   retain ID 35 Node "AUTONEURAL9";
1700607    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1700608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700609    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1700610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700612    proc sort data=EMWS8.AUTONEURAL9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL9_variableset out=_temp2(keep=NAME
CREATOR);
1700613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700615    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700616    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1700617    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1700618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700619    proc contents data=EMWS8.AUTONEURAL9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL9_train out=_meta(keep=NAME) noprint;
1700620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1700621    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1700622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700624    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700625    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1700626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700627    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700628    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1700629    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1700629  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.
 
1700630    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700631    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1700632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: 1551 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 19756 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700633    filename _pref
1700633  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1700634    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1700635    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1700636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700637   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1700638   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700639   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1700640   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1700641   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1700642    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1700643    quit;
1700644    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1700645    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1700646    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1700647    retain ID 38 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 38 Node "Trans";
1700648    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1700649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700650    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1700651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700652    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700653    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1700654    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700656    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700657    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1700658    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1700659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700660    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1700661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1700662    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1700663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700665    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700666    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1700667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700668    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700669    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1700670    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1700670  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1700671    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700672    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1700673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 19760 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700674    filename _pref
1700674  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1700675    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1700676    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1700677   +
1700678   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1700679   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1700679  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1700680   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1700681   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1700682   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1700683   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1700684   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1700685    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1700686    quit;
1700687    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1700688    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1700689    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1700690    retain ID 39 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 39 Node "EMCODE4";
1700691    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1700692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700693    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1700694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700695    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700696    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1700697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700699    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700700    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1700701    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1700702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700703    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1700704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700705    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1700706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700708    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700709    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1700710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700711    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700712    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1700713    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1700713  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1700714    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700715    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1700716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 19799 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700717    filename _pref
1700717  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1700718    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1700719    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1700720   +
1700721   +
1700722   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1700723   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1700724   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1700725   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1700726   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1700727   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700728   +
1700729   +
1700730   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1700731   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1700732   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1700733   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1700734   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1700735   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700736   +
1700737   +
1700738   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1700739   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1700740   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1700741   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1700742   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1700743   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700744   +
1700745   +
1700746   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1700747   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1700748   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1700749   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1700750   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1700751   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700752   +
1700753   +
1700754   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1700755   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1700756   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1700757   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1700758   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1700759   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700760   +
1700761   +
1700762   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1700763   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1700764   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1700765   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1700766   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1700767   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700768   +
1700769   +
1700770   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1700771   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1700772   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1700773   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1700774   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1700775   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700776   +
1700777   +
1700778   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1700779   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1700780   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1700781   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1700782   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1700783   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1700784   +if
1700785   +_FILTERNORM1 not in ( '.')
1700786   + and
1700787   +_FILTERNORM2 not in ( '.')
1700788   + and
1700789   +_FILTERNORM3 not in ( '.')
1700790   + and
1700791   +_FILTERNORM4 not in ( '.')
1700792   + and
1700793   +_FILTERNORM5 not in ( '.')
1700794   + and
1700795   +_FILTERNORM6 not in ( '.')
1700796   + and
1700797   +_FILTERNORM7 not in ( ' ')
1700798   + and
1700799   +_FILTERNORM8 not in ( ' ')
1700800   +and
1700801   +( Dt_Customer ne .)
1700802   +and ( Income ne . and (Income<=107000))
1700803   +and ( Kidhome ne .)
1700804   +and ( MntFishProducts ne .)
1700805   +and ( MntFruits ne .)
1700806   +and ( MntGoldProds ne .)
1700807   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1700808   +and ( MntSweetProducts ne .)
1700809   +and ( MntWines ne .)
1700810   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1700811   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1700812   +and ( NumStorePurchases ne .)
1700813   +and ( NumWebPurchases ne .)
1700814   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1700815   +and ( Recency ne .)
1700816   +and ( Teenhome ne .)
1700817   +and ( Year_Birth ne .)
1700818   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1700819   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1700820   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1700821   +end;
MPRINT(EM_DIAGRAM):   end;
1700822   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1700823   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1700824    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1700825    quit;
1700826    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1700827    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1700828    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1700829    retain ID 40 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 40 Node "Filter";
1700830    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1700831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700832    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1700833    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700834    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700835    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1700836    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700838    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700839    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1700840    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1700841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700842    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1700843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1700844    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1700845    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700846    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700847    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1700848    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1700849    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1700850    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1700851    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1700852    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1700852  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1700853    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700854    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1700855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 19865 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1700856    filename _pref
1700856  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL11\EMPUBLISHSCORE.sas";
1700857    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1700858    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL11\EMPUBLISHSCORE.sas.
1700859   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700860   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1700861   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700862   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1700863   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1700864   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1700865   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1700866   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1700867   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1700868   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1700869   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1700870   +LENGTH _WARN_ $4
1700871   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1700872   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1700873   +
1700874   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1700875   +
1700876   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1700877   +
1700878   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1700879   +
1700880   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1700881   +
1700882   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1700883   +
1700884   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1700885   +
1700886   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1700887   +
1700888   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1700889   +
1700890   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1700891   +
1700892   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1700893   +
1700894   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1700895   +
1700896   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1700897   +
1700898   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1700899   +
1700900   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1700901   +
1700902   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1700903   +
1700904   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1700905   +
1700906   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1700907   +
1700908   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1700909   +
1700910   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1700911   +
1700912   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1700913   +
1700914   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1700915   +
1700916   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1700917   +
1700918   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1700919   +
1700920   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1700921   +
1700922   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1700923   +
1700924   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1700925   +
1700926   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1700927   +
1700928   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1700929   +
1700930   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1700931   +
1700932   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1700933   +
1700934   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1700935   +
1700936   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1700937   +
1700938   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1700939   +
1700940   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1700941   +
1700942   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1700943   +
1700944   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1700945   +
1700946   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1700947   +
1700948   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1700949   +
1700950   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1700951   +
1700952   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1700953   +
1700954   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1700955   +
1700956   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1700957   +
1700958   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1700959   +
1700960   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1700961   +
1700962   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1700963   +
1700964   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1700965   +
1700966   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1700967   +
1700968   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1700969   +
1700970   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1700971   +
1700972   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1700973   +
1700974   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1700975   +
1700976   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1700977   +
1700978   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1700979   +
1700980   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1700981   +
1700982   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1700983   +
1700984   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1700985   +
1700986   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1700987   +
1700988   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1700989   +
1700990   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1700991   +
1700992   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1700993   +
1700994   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1700995   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1700996   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1700997   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1700998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701000   +end;
MPRINT(EM_DIAGRAM):   end;
1701001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701003   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1701004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701006   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1701007   +   end;
MPRINT(EM_DIAGRAM):   end;
1701008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701009   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1701010   +   end;
MPRINT(EM_DIAGRAM):   end;
1701011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701012   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1701013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701015   +   end;
MPRINT(EM_DIAGRAM):   end;
1701016   +end;
MPRINT(EM_DIAGRAM):   end;
1701017   +
1701018   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1701019   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1701020   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1701021   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1701022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701024   +end;
MPRINT(EM_DIAGRAM):   end;
1701025   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701027   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1701028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701030   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1701031   +   end;
MPRINT(EM_DIAGRAM):   end;
1701032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701033   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1701034   +   end;
MPRINT(EM_DIAGRAM):   end;
1701035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701036   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1701037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701039   +   end;
MPRINT(EM_DIAGRAM):   end;
1701040   +end;
MPRINT(EM_DIAGRAM):   end;
1701041   +
1701042   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1701043   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1701044   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1701045   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1701046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701048   +end;
MPRINT(EM_DIAGRAM):   end;
1701049   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701051   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1701052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701054   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1701055   +   end;
MPRINT(EM_DIAGRAM):   end;
1701056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701057   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1701058   +   end;
MPRINT(EM_DIAGRAM):   end;
1701059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701060   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1701061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701063   +   end;
MPRINT(EM_DIAGRAM):   end;
1701064   +end;
MPRINT(EM_DIAGRAM):   end;
1701065   +
1701066   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1701067   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1701068   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1701069   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1701070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701072   +end;
MPRINT(EM_DIAGRAM):   end;
1701073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701075   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1701076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701078   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1701079   +   end;
MPRINT(EM_DIAGRAM):   end;
1701080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701081   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1701082   +   end;
MPRINT(EM_DIAGRAM):   end;
1701083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701084   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1701085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701087   +   end;
MPRINT(EM_DIAGRAM):   end;
1701088   +end;
MPRINT(EM_DIAGRAM):   end;
1701089   +
1701090   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1701091   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1701092   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1701093   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1701094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701096   +end;
MPRINT(EM_DIAGRAM):   end;
1701097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701099   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1701100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701102   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1701103   +   end;
MPRINT(EM_DIAGRAM):   end;
1701104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701105   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1701106   +   end;
MPRINT(EM_DIAGRAM):   end;
1701107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701108   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1701109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701111   +   end;
MPRINT(EM_DIAGRAM):   end;
1701112   +end;
MPRINT(EM_DIAGRAM):   end;
1701113   +
1701114   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1701115   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1701116   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1701117   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1701118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701120   +end;
MPRINT(EM_DIAGRAM):   end;
1701121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701123   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1701124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1701126   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1701127   +   end;
MPRINT(EM_DIAGRAM):   end;
1701128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701129   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1701130   +   end;
MPRINT(EM_DIAGRAM):   end;
1701131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701132   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1701133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701135   +   end;
MPRINT(EM_DIAGRAM):   end;
1701136   +end;
MPRINT(EM_DIAGRAM):   end;
1701137   +
1701138   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1701139   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1701140   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1701141   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1701142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701144   +end;
MPRINT(EM_DIAGRAM):   end;
1701145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701147   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1701148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701149   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1701150   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1701151   +   end;
MPRINT(EM_DIAGRAM):   end;
1701152   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1701153   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1701154   +   end;
MPRINT(EM_DIAGRAM):   end;
1701155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701156   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1701157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701159   +   end;
MPRINT(EM_DIAGRAM):   end;
1701160   +end;
MPRINT(EM_DIAGRAM):   end;
1701161   +
1701162   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1701163   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1701164   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1701165   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1701166   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1701167   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1701168   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1701169   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1701170   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1701171   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1701172   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1701173   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1701174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701176   +end;
MPRINT(EM_DIAGRAM):   end;
1701177   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701178   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1701179   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1701180   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701181   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1701182   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1701183   +   end;
MPRINT(EM_DIAGRAM):   end;
1701184   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1701185   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1701186   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1701187   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1701188   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1701189   +   end;
MPRINT(EM_DIAGRAM):   end;
1701190   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1701191   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1701192   +   end;
MPRINT(EM_DIAGRAM):   end;
1701193   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1701194   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1701195   +   end;
MPRINT(EM_DIAGRAM):   end;
1701196   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1701197   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1701198   +   end;
MPRINT(EM_DIAGRAM):   end;
1701199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701200   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1701201   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1701202   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1701203   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1701204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701206   +   end;
MPRINT(EM_DIAGRAM):   end;
1701207   +end;
MPRINT(EM_DIAGRAM):   end;
1701208   +
1701209   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1701210   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1701211   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1701212   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1701213   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1701214   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1701215   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1701216   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1701217   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1701218   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1701219   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1701220   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1701221   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1701222   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701223   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701224   +end;
MPRINT(EM_DIAGRAM):   end;
1701225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701226   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1701227   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1701228   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701229   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1701230   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1701231   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1701232   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1701233   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1701234   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1701235   +         end;
MPRINT(EM_DIAGRAM):   end;
1701236   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1701237   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1701238   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1701239   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1701240   +            end;
MPRINT(EM_DIAGRAM):   end;
1701241   +         end;
MPRINT(EM_DIAGRAM):   end;
1701242   +      end;
MPRINT(EM_DIAGRAM):   end;
1701243   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1701244   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1701245   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1701246   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1701247   +         end;
MPRINT(EM_DIAGRAM):   end;
1701248   +      end;
MPRINT(EM_DIAGRAM):   end;
1701249   +   end;
MPRINT(EM_DIAGRAM):   end;
1701250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701251   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1701252   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1701253   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1701254   +      end;
MPRINT(EM_DIAGRAM):   end;
1701255   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1701256   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1701257   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1701258   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1701259   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1701260   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1701261   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1701262   +         end;
MPRINT(EM_DIAGRAM):   end;
1701263   +      end;
MPRINT(EM_DIAGRAM):   end;
1701264   +   end;
MPRINT(EM_DIAGRAM):   end;
1701265   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1701266   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1701267   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1701268   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1701269   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1701270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701272   +   end;
MPRINT(EM_DIAGRAM):   end;
1701273   +end;
MPRINT(EM_DIAGRAM):   end;
1701274   +
1701275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701276   +*** Checking missing input Interval
1701277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1701278   +
1701279   +IF NMISS(
1701280   +   AcceptedCmpTotal ,
1701281   +   Age ,
1701282   +   Frq ,
1701283   +   Income ,
1701284   +   Kidhome ,
1701285   +   Mnt ,
1701286   +   MntFishProducts ,
1701287   +   MntFruits ,
1701288   +   MntGoldProds ,
1701289   +   MntMeatProducts ,
1701290   +   MntSweetProducts ,
1701291   +   MntWines ,
1701292   +   MonthsAsCustomer ,
1701293   +   NumCatalogPurchases ,
1701294   +   NumDealsPurchases ,
1701295   +   NumDistPurchases ,
1701296   +   NumStorePurchases ,
1701297   +   NumWebPurchases ,
1701298   +   NumWebVisitsMonth ,
1701299   +   RFMstat ,
1701300   +   RMntFrq ,
1701301   +   Recency ,
1701302   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1701303   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1701304   +
1701305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701306   +END;
MPRINT(EM_DIAGRAM):   END;
1701307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701308   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1701309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701311   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701312   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701313   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1701314   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701315   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701316   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1701317   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701318   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1701319   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1701320   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1701321   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701322   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1701323   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701324   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701325   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1701326   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1701327   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701328   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1701329   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1701330   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1701331   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1701332   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1701333   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1701334   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701335   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701336   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1701337   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1701338   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1701339   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1701340   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1701341   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1701342   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701343   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701344   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701345   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1701346   +END;
MPRINT(EM_DIAGRAM):   END;
1701347   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701348   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1701349   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701350   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701351   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1701352   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1701353   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1701354   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701355   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1701356   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701357   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1701358   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1701359   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1701360   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701361   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1701362   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1701363   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1701364   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1701365   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1701366   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1701367   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1701368   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701369   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1701370   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1701371   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701372   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701373   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1701374   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1701375   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1701376   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1701377   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701378   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1701379   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1701380   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1701381   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1701382   +   ELSE S_NumCatalogPurchases
1701383   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1701384   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1701385   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1701386   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1701387   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1701388   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1701389   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701390   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701391   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1701392   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1701393   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1701394   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1701395   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1701396   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1701397   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1701398   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1701399   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1701400   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1701401   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701402   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1701403   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701404   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1701405   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701406   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1701407   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1701408   +END;
MPRINT(EM_DIAGRAM):   END;
1701409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701410   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1701411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701413   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1701414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701416   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1701417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701418   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701419   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1701420   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1701421   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1701422   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1701423   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1701424   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1701425   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1701426   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1701427   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1701428   +          +     0.89422627895323 * S_NumDealsPurchases
1701429   +          +    -0.13304125929765 * S_NumDistPurchases
1701430   +          +    -1.04568442570811 * S_NumStorePurchases
1701431   +          +    -0.28677765126751 * S_NumWebPurchases
1701432   +          +      1.2327638737509 * S_NumWebVisitsMonth
1701433   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1701434   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1701435   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 *
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 *
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts +
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 *
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines +
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases +
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases +
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases +
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 *
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1701436   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1701437   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1701438   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1701439   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1701440   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1701441   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1701442   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1701443   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1701444   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1701445   +          +     0.04224590196535 * S_NumDealsPurchases
1701446   +          +     0.76554742700113 * S_NumDistPurchases
1701447   +          +    -0.49155496870812 * S_NumStorePurchases
1701448   +          +     0.59606812744403 * S_NumWebPurchases
1701449   +          +     1.86809286276405 * S_NumWebVisitsMonth
1701450   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1701451   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1701452   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 *
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 *
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts +
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 *
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines +
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases +
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases +
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases +
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 *
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1701453   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1701454   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1701455   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1701456   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1701457   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1701458   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1701459   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1701460   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1701461   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1701462   +          +    -0.04866536993486 * S_NumDealsPurchases
1701463   +          +    -0.53535979020214 * S_NumDistPurchases
1701464   +          +     2.20634071253676 * S_NumStorePurchases
1701465   +          +      0.6164564989007 * S_NumWebPurchases
1701466   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1701467   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1701468   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1701469   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 *
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 *
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts +
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 *
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 *
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 *
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 *
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq +
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1701470   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1701471   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1701472   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1701473   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1701474   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1701475   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1701476   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1701477   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1701478   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1701479   +          +     1.37461255707863 * S_NumDealsPurchases
1701480   +          +    -0.17684775000818 * S_NumDistPurchases
1701481   +          +    -0.62755623855535 * S_NumStorePurchases
1701482   +          +    -1.46551649022657 * S_NumWebPurchases
1701483   +          +     3.35784247878638 * S_NumWebVisitsMonth
1701484   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1701485   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1701486   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 *
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 *
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts +
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 *
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 *
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 *
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 *
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq +
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1701487   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1701488   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1701489   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1701490   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1701491   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1701492   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1701493   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1701494   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1701495   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1701496   +          +    -0.76256677907121 * S_NumDealsPurchases
1701497   +          +    -0.31591571751692 * S_NumDistPurchases
1701498   +          +      0.0506832614089 * S_NumStorePurchases
1701499   +          +      1.4636796923764 * S_NumWebPurchases
1701500   +          +     0.37743519705036 * S_NumWebVisitsMonth
1701501   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1701502   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1701503   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 *
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 *
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts +
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 *
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines +
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases +
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases +
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq +
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1701504   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1701505   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1701506   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1701507   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1701508   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 +
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 *
HigherEducationBinary0 ;
1701509   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1701510   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1701511   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1701512   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1701513   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 +
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 *
HigherEducationBinary0 ;
1701514   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1701515   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1701516   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1701517   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1701518   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 *
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 +
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 *
HigherEducationBinary0 ;
1701519   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1701520   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1701521   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1701522   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1701523   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 +
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 *
HigherEducationBinary0 ;
1701524   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1701525   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1701526   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1701527   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1701528   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 *
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 +
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 *
HigherEducationBinary0 ;
1701529   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1701530   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1701531   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1701532   +          +     0.68641668264565 * Marital_StatusDivorced
1701533   +          +    -0.81586871439732 * Marital_StatusMarried
1701534   +          +     0.63758920518451 * Marital_StatusSingle
1701535   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle +
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation +
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced +
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle +
-1.07300023346175 * Marital_StatusTogether ;
1701536   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1701537   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1701538   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1701539   +          +     0.05137560133238 * Marital_StatusDivorced
1701540   +          +    -2.24401993266209 * Marital_StatusMarried
1701541   +          +     1.57359386216115 * Marital_StatusSingle
1701542   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 *
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 *
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 *
Marital_StatusTogether ;
1701543   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1701544   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1701545   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1701546   +          +     -1.0649987815942 * Marital_StatusDivorced
1701547   +          +     0.76065111692388 * Marital_StatusMarried
1701548   +          +    -0.21694149754801 * Marital_StatusSingle
1701549   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle +
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 *
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 *
Marital_StatusTogether ;
1701550   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1701551   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1701552   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1701553   +          +     2.02155453548328 * Marital_StatusDivorced
1701554   +          +    -2.60190649735306 * Marital_StatusMarried
1701555   +          +     1.09149388354927 * Marital_StatusSingle
1701556   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle +
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 *
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 *
Marital_StatusTogether ;
1701557   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1701558   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1701559   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1701560   +          +     0.66315970650309 * Marital_StatusDivorced
1701561   +          +    -1.20476729758152 * Marital_StatusMarried
1701562   +          +     0.56175027826397 * Marital_StatusSingle
1701563   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle +
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation +
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced +
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle +
-1.12798745445913 * Marital_StatusTogether ;
1701564   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1701565   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1701566   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1701567   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1701568   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1701569   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1701570   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1701571   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701572   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1701573   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1701574   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1701575   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1701576   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1701577   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1701578   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1701579   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1701580   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1701581   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1701582   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1701583   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1701584   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1701585   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1701586   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1701587   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1701588   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1701589   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1701590   +END;
MPRINT(EM_DIAGRAM):   END;
1701591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701592   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1701593   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1701594   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1701595   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1701596   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1701597   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1701598   +END;
MPRINT(EM_DIAGRAM):   END;
1701599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701600   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1701601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701603   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1701604   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1701605   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1701606   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1701607   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1701608   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1701609   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1701610   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1701611   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1701612   +          +     1.50005927423985 * S_NumDealsPurchases
1701613   +          +      0.5590536933569 * S_NumDistPurchases
1701614   +          +    -0.61757824339318 * S_NumStorePurchases
1701615   +          +     0.37259686538158 * S_NumWebPurchases
1701616   +          +     2.59725437895564 * S_NumWebVisitsMonth
1701617   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1701618   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1701619   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 *
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 *
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts +
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 *
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 *
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 *
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 *
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq +
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1701620   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1701621   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1701622   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1701623   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1701624   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1701625   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1701626   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1701627   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1701628   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1701629   +          +    -0.09282222088797 * S_NumDealsPurchases
1701630   +          +     0.10726247938321 * S_NumDistPurchases
1701631   +          +     -1.1235971458527 * S_NumStorePurchases
1701632   +          +    -0.78304387839877 * S_NumWebPurchases
1701633   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1701634   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1701635   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1701636   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 *
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 *
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts +
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 *
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 *
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 *
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 *
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq +
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1701637   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1701638   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1701639   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1701640   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1701641   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1701642   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1701643   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1701644   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1701645   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1701646   +          +     0.35349185459988 * S_NumDealsPurchases
1701647   +          +     0.06853677714859 * S_NumDistPurchases
1701648   +          +    -1.47546012999338 * S_NumStorePurchases
1701649   +          +     0.20926435398916 * S_NumWebPurchases
1701650   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1701651   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1701652   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1701653   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 *
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 *
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts +
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 *
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 *
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 *
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 *
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq +
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1701654   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1701655   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1701656   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1701657   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1701658   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1701659   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1701660   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1701661   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1701662   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1701663   +          +      0.3873586120272 * S_NumDealsPurchases
1701664   +          +     0.25911651157596 * S_NumDistPurchases
1701665   +          +     1.58922489084287 * S_NumStorePurchases
1701666   +          +     0.49041797743368 * S_NumWebPurchases
1701667   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1701668   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1701669   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1701670   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 *
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 *
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts +
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 *
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 *
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 *
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 *
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq +
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1701671   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1701672   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1701673   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1701674   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1701675   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1701676   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1701677   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1701678   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1701679   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1701680   +          +    -0.60830880287865 * S_NumDealsPurchases
1701681   +          +      0.0745331267194 * S_NumDistPurchases
1701682   +          +    -1.39472448256952 * S_NumStorePurchases
1701683   +          +     1.95372179969087 * S_NumWebPurchases
1701684   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1701685   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1701686   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1701687   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome +
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 *
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts +
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 *
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 *
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 *
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 *
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq +
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1701688   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1701689   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1701690   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1701691   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1701692   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 *
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 +
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 *
HigherEducationBinary0 ;
1701693   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1701694   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1701695   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1701696   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1701697   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 +
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 *
HigherEducationBinary0 ;
1701698   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1701699   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1701700   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1701701   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1701702   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 *
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 +
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 *
HigherEducationBinary0 ;
1701703   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1701704   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1701705   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1701706   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1701707   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 *
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 +
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 *
HigherEducationBinary0 ;
1701708   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1701709   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1701710   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1701711   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1701712   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 *
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 +
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 *
HigherEducationBinary0 ;
1701713   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1701714   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1701715   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1701716   +          +    -1.33377871643323 * Marital_StatusDivorced
1701717   +          +    -0.87184228840898 * Marital_StatusMarried
1701718   +          +     1.41223186340257 * Marital_StatusSingle
1701719   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle +
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 *
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 *
Marital_StatusTogether ;
1701720   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1701721   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1701722   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1701723   +          +    -0.21479890935233 * Marital_StatusDivorced
1701724   +          +     -0.0025459519579 * Marital_StatusMarried
1701725   +          +     1.33900491702264 * Marital_StatusSingle
1701726   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle +
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 *
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 *
Marital_StatusTogether ;
1701727   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1701728   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1701729   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1701730   +          +    -0.38307267471999 * Marital_StatusDivorced
1701731   +          +     0.97088969451415 * Marital_StatusMarried
1701732   +          +    -0.28578224473381 * Marital_StatusSingle
1701733   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle +
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 *
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 *
Marital_StatusTogether ;
1701734   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1701735   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1701736   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1701737   +          +    -1.42229401093569 * Marital_StatusDivorced
1701738   +          +      0.7234508382397 * Marital_StatusMarried
1701739   +          +    -0.29062202974628 * Marital_StatusSingle
1701740   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle +
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 *
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 *
Marital_StatusTogether ;
1701741   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1701742   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1701743   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1701744   +          +    -0.99067637207205 * Marital_StatusDivorced
1701745   +          +    -0.50245902142079 * Marital_StatusMarried
1701746   +          +     0.54214494533793 * Marital_StatusSingle
1701747   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle +
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 *
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 *
Marital_StatusTogether ;
1701748   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1701749   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1701750   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1701751   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1701752   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1701753   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1701754   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1701755   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701756   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1701757   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1701758   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1701759   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1701760   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1701761   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1701762   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1701763   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1701764   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1701765   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1701766   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1701767   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1701768   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1701769   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1701770   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1701771   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1701772   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1701773   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1701774   +END;
MPRINT(EM_DIAGRAM):   END;
1701775   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701776   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1701777   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1701778   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1701779   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1701780   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1701781   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1701782   +END;
MPRINT(EM_DIAGRAM):   END;
1701783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701784   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1701785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701786   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701787   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1701788   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1701789   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 +
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 +
-2.45757278280195 * H1x1_6 ;
1701790   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1701791   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1701792   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 +
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 +
-2.28426391810485 * H1x1_6 ;
1701793   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1701794   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1701795   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 +
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 +
0.08021226539433 * H1x1_6 ;
1701796   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1701797   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1701798   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 +
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 +
-1.35359233519863 * H1x1_6 ;
1701799   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1701800   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1701801   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 +
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 +
-2.41187367604766 * H1x1_6 ;
1701802   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1701803   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1701804   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 +
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 +
0.21617396847163 * H1x1_6 ;
1701805   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1701806   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1701807   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1701808   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 +
0.2606136576082 * H1x2_6 ;
1701809   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1701810   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1701811   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1701812   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 +
-0.33816948355449 * H1x2_6 ;
1701813   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1701814   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1701815   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1701816   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 *
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 +
-2.05648585275111 * H1x2_6 ;
1701817   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1701818   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1701819   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1701820   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 +
0.10756694741742 * H1x2_6 ;
1701821   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1701822   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1701823   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1701824   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 +
-0.52564497366659 * H1x2_6 ;
1701825   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1701826   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1701827   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1701828   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 *
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 +
0.74493468449949 * H1x2_6 ;
1701829   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1701830   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1701831   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1701832   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1701833   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1701834   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1701835   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1701836   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1701837   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1701838   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1701839   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1701840   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1701841   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1701842   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1701843   +END;
MPRINT(EM_DIAGRAM):   END;
1701844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701845   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1701846   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1701847   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1701848   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1701849   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1701850   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1701851   +END;
MPRINT(EM_DIAGRAM):   END;
1701852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701853   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1701854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701855   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701856   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1701857   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1701858   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 +
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 +
-3.8939011811129 * H2x1_6 ;
1701859   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1701860   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1701861   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1701862   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701863   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1701864   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1701865   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1701866   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1701867   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1701868   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1701869   +END;
MPRINT(EM_DIAGRAM):   END;
1701870   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701871   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1701872   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1701873   +END;
MPRINT(EM_DIAGRAM):   END;
1701874   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1701875   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1701876   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1701877   +END;
MPRINT(EM_DIAGRAM):   END;
1701878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701879   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1701880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701881   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1701882   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1701883   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1701884   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1701885   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1701886   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1701887   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1701888   +END;
MPRINT(EM_DIAGRAM):   END;
1701889   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701890   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1701891   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701892   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1701893    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1701894    quit;
1701895    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1701896    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1701897    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1701898    retain ID 43 Node "AUTONEURAL11";
MPRINT(EM_DIAGRAM):   retain ID 43 Node "AUTONEURAL11";
1701899    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1701900    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701901    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1701902    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701903    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701904    proc sort data=EMWS8.AUTONEURAL11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL11_variableset out=_temp2(keep=NAME
CREATOR);
1701905    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701906    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701907    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1701908    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1701909    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1701910    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701911    proc contents data=EMWS8.AUTONEURAL11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL11_train out=_meta(keep=NAME) noprint;
1701912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1701913    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1701914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701916    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1701917    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1701918    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701919    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701920    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1701921    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1701921  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.
 
1701922    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701923    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1701924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: 3291 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 23156 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701925    filename _pref
1701925  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1701926    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1701927    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1701928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701929   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1701930   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701931   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1701932   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1701933   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1701934    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1701935    quit;
1701936    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1701937    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1701938    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1701939    retain ID 46 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 46 Node "Trans";
1701940    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1701941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701942    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1701943    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701944    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701945    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1701946    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701948    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1701949    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1701950    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1701951    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701952    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1701953    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1701954    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1701955    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701957    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1701958    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1701959    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701960    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701961    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1701962    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1701962  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1701963    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701964    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1701965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 23160 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701966    filename _pref
1701966  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1701967    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1701968    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1701969   +
1701970   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1701971   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1701971  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1701972   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1701973   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1701974   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1701975   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1701976   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1701977    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1701978    quit;
1701979    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1701980    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1701981    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1701982    retain ID 47 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 47 Node "EMCODE4";
1701983    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1701984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701985    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1701986    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701988    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1701989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701991    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1701992    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1701993    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1701994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1701995    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1701996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1701997    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1701998    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1701999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702000    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702001    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702003    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702004    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702005    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702005  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1702006    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702007    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1702008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 23199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702009    filename _pref
1702009  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1702010    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702011    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1702012   +
1702013   +
1702014   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1702015   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1702016   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1702017   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1702018   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1702019   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702020   +
1702021   +
1702022   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1702023   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1702024   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1702025   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1702026   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1702027   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702028   +
1702029   +
1702030   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1702031   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1702032   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1702033   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1702034   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1702035   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702036   +
1702037   +
1702038   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1702039   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1702040   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1702041   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1702042   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1702043   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702044   +
1702045   +
1702046   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1702047   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1702048   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1702049   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1702050   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1702051   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702052   +
1702053   +
1702054   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1702055   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1702056   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1702057   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1702058   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1702059   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702060   +
1702061   +
1702062   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1702063   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1702064   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1702065   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1702066   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1702067   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702068   +
1702069   +
1702070   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1702071   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1702072   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1702073   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1702074   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1702075   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702076   +if
1702077   +_FILTERNORM1 not in ( '.')
1702078   + and
1702079   +_FILTERNORM2 not in ( '.')
1702080   + and
1702081   +_FILTERNORM3 not in ( '.')
1702082   + and
1702083   +_FILTERNORM4 not in ( '.')
1702084   + and
1702085   +_FILTERNORM5 not in ( '.')
1702086   + and
1702087   +_FILTERNORM6 not in ( '.')
1702088   + and
1702089   +_FILTERNORM7 not in ( ' ')
1702090   + and
1702091   +_FILTERNORM8 not in ( ' ')
1702092   +and
1702093   +( Dt_Customer ne .)
1702094   +and ( Income ne . and (Income<=107000))
1702095   +and ( Kidhome ne .)
1702096   +and ( MntFishProducts ne .)
1702097   +and ( MntFruits ne .)
1702098   +and ( MntGoldProds ne .)
1702099   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1702100   +and ( MntSweetProducts ne .)
1702101   +and ( MntWines ne .)
1702102   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1702103   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1702104   +and ( NumStorePurchases ne .)
1702105   +and ( NumWebPurchases ne .)
1702106   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1702107   +and ( Recency ne .)
1702108   +and ( Teenhome ne .)
1702109   +and ( Year_Birth ne .)
1702110   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1702111   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1702112   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1702113   +end;
MPRINT(EM_DIAGRAM):   end;
1702114   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1702115   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702116    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702117    quit;
1702118    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702119    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702120    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702121    retain ID 48 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 48 Node "Filter";
1702122    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702123    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702124    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702126    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702127    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1702128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702130    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702131    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702132    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702134    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1702135    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1702136    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702138    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702139    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702140    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702142    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702143    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702144    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702144  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1702145    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702146    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1702147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 23265 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702148    filename _pref
1702148  ! "C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL12\EMPUBLISHSCORE.sas";
1702149    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702150    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AUTONEURAL12\EMPUBLISHSCORE.sas.
1702151   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1702152   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1702153   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1702154   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1702155   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1702156   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1702157   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1702158   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1702159   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1702160   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1702161   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1702162   +LENGTH _WARN_ $4
1702163   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1702164   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1702165   +
1702166   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1702167   +
1702168   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1702169   +
1702170   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1702171   +
1702172   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1702173   +
1702174   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1702175   +
1702176   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1702177   +
1702178   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1702179   +
1702180   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1702181   +
1702182   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1702183   +
1702184   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1702185   +
1702186   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1702187   +
1702188   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1702189   +
1702190   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1702191   +
1702192   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1702193   +
1702194   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1702195   +
1702196   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1702197   +
1702198   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1702199   +
1702200   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1702201   +
1702202   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1702203   +
1702204   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1702205   +
1702206   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1702207   +
1702208   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1702209   +
1702210   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1702211   +
1702212   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1702213   +
1702214   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1702215   +
1702216   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1702217   +
1702218   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1702219   +
1702220   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1702221   +
1702222   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1702223   +
1702224   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1702225   +
1702226   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1702227   +
1702228   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1702229   +
1702230   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1702231   +
1702232   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1702233   +
1702234   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1702235   +
1702236   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1702237   +
1702238   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1702239   +
1702240   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1702241   +
1702242   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1702243   +
1702244   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1702245   +
1702246   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1702247   +
1702248   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1702249   +
1702250   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1702251   +
1702252   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1702253   +
1702254   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1702255   +
1702256   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1702257   +
1702258   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1702259   +
1702260   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1702261   +
1702262   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1702263   +
1702264   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1702265   +
1702266   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1702267   +
1702268   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1702269   +
1702270   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1702271   +
1702272   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1702273   +
1702274   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1702275   +
1702276   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1702277   +
1702278   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1702279   +
1702280   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1702281   +
1702282   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1702283   +
1702284   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1702285   +
1702286   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1702287   +
1702288   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1702289   +
1702290   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1702291   +
1702292   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1702293   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1702294   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1702295   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1702296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702298   +end;
MPRINT(EM_DIAGRAM):   end;
1702299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702301   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1702302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702304   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1702305   +   end;
MPRINT(EM_DIAGRAM):   end;
1702306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702307   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1702308   +   end;
MPRINT(EM_DIAGRAM):   end;
1702309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702310   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1702311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702313   +   end;
MPRINT(EM_DIAGRAM):   end;
1702314   +end;
MPRINT(EM_DIAGRAM):   end;
1702315   +
1702316   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1702317   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1702318   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1702319   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1702320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702322   +end;
MPRINT(EM_DIAGRAM):   end;
1702323   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702325   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1702326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702328   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1702329   +   end;
MPRINT(EM_DIAGRAM):   end;
1702330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702331   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1702332   +   end;
MPRINT(EM_DIAGRAM):   end;
1702333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702334   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1702335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702337   +   end;
MPRINT(EM_DIAGRAM):   end;
1702338   +end;
MPRINT(EM_DIAGRAM):   end;
1702339   +
1702340   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1702341   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1702342   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1702343   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1702344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702346   +end;
MPRINT(EM_DIAGRAM):   end;
1702347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702349   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1702350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702351   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702352   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1702353   +   end;
MPRINT(EM_DIAGRAM):   end;
1702354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702355   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1702356   +   end;
MPRINT(EM_DIAGRAM):   end;
1702357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702358   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1702359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702361   +   end;
MPRINT(EM_DIAGRAM):   end;
1702362   +end;
MPRINT(EM_DIAGRAM):   end;
1702363   +
1702364   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1702365   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1702366   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1702367   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1702368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702370   +end;
MPRINT(EM_DIAGRAM):   end;
1702371   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702372   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702373   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1702374   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702375   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702376   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1702377   +   end;
MPRINT(EM_DIAGRAM):   end;
1702378   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702379   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1702380   +   end;
MPRINT(EM_DIAGRAM):   end;
1702381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702382   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1702383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702385   +   end;
MPRINT(EM_DIAGRAM):   end;
1702386   +end;
MPRINT(EM_DIAGRAM):   end;
1702387   +
1702388   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1702389   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1702390   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1702391   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1702392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702394   +end;
MPRINT(EM_DIAGRAM):   end;
1702395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702397   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1702398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702399   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702400   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1702401   +   end;
MPRINT(EM_DIAGRAM):   end;
1702402   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702403   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1702404   +   end;
MPRINT(EM_DIAGRAM):   end;
1702405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702406   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1702407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702409   +   end;
MPRINT(EM_DIAGRAM):   end;
1702410   +end;
MPRINT(EM_DIAGRAM):   end;
1702411   +
1702412   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1702413   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1702414   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1702415   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1702416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702418   +end;
MPRINT(EM_DIAGRAM):   end;
1702419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702421   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1702422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702423   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1702424   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1702425   +   end;
MPRINT(EM_DIAGRAM):   end;
1702426   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702427   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1702428   +   end;
MPRINT(EM_DIAGRAM):   end;
1702429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702430   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1702431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702433   +   end;
MPRINT(EM_DIAGRAM):   end;
1702434   +end;
MPRINT(EM_DIAGRAM):   end;
1702435   +
1702436   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1702437   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1702438   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1702439   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1702440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702442   +end;
MPRINT(EM_DIAGRAM):   end;
1702443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702445   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1702446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702447   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1702448   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1702449   +   end;
MPRINT(EM_DIAGRAM):   end;
1702450   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1702451   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1702452   +   end;
MPRINT(EM_DIAGRAM):   end;
1702453   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702454   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1702455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702457   +   end;
MPRINT(EM_DIAGRAM):   end;
1702458   +end;
MPRINT(EM_DIAGRAM):   end;
1702459   +
1702460   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1702461   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1702462   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1702463   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1702464   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1702465   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1702466   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1702467   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1702468   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1702469   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1702470   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1702471   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1702472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702474   +end;
MPRINT(EM_DIAGRAM):   end;
1702475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702476   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1702477   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1702478   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702479   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1702480   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1702481   +   end;
MPRINT(EM_DIAGRAM):   end;
1702482   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1702483   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1702484   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1702485   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1702486   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1702487   +   end;
MPRINT(EM_DIAGRAM):   end;
1702488   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1702489   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1702490   +   end;
MPRINT(EM_DIAGRAM):   end;
1702491   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1702492   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1702493   +   end;
MPRINT(EM_DIAGRAM):   end;
1702494   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1702495   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1702496   +   end;
MPRINT(EM_DIAGRAM):   end;
1702497   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702498   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1702499   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1702500   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1702501   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1702502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702504   +   end;
MPRINT(EM_DIAGRAM):   end;
1702505   +end;
MPRINT(EM_DIAGRAM):   end;
1702506   +
1702507   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1702508   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1702509   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1702510   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1702511   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1702512   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1702513   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1702514   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1702515   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1702516   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1702517   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1702518   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1702519   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1702520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702522   +end;
MPRINT(EM_DIAGRAM):   end;
1702523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702524   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1702525   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1702526   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702527   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1702528   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1702529   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1702530   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1702531   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1702532   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1702533   +         end;
MPRINT(EM_DIAGRAM):   end;
1702534   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1702535   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1702536   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1702537   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1702538   +            end;
MPRINT(EM_DIAGRAM):   end;
1702539   +         end;
MPRINT(EM_DIAGRAM):   end;
1702540   +      end;
MPRINT(EM_DIAGRAM):   end;
1702541   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1702542   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1702543   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1702544   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1702545   +         end;
MPRINT(EM_DIAGRAM):   end;
1702546   +      end;
MPRINT(EM_DIAGRAM):   end;
1702547   +   end;
MPRINT(EM_DIAGRAM):   end;
1702548   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702549   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1702550   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1702551   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1702552   +      end;
MPRINT(EM_DIAGRAM):   end;
1702553   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1702554   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1702555   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1702556   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1702557   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1702558   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1702559   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1702560   +         end;
MPRINT(EM_DIAGRAM):   end;
1702561   +      end;
MPRINT(EM_DIAGRAM):   end;
1702562   +   end;
MPRINT(EM_DIAGRAM):   end;
1702563   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1702564   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1702565   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1702566   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1702567   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1702568   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702569   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702570   +   end;
MPRINT(EM_DIAGRAM):   end;
1702571   +end;
MPRINT(EM_DIAGRAM):   end;
1702572   +
1702573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702574   +*** Checking missing input Interval
1702575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1702576   +
1702577   +IF NMISS(
1702578   +   AcceptedCmpTotal ,
1702579   +   Age ,
1702580   +   Frq ,
1702581   +   Income ,
1702582   +   Kidhome ,
1702583   +   Mnt ,
1702584   +   MntFishProducts ,
1702585   +   MntFruits ,
1702586   +   MntGoldProds ,
1702587   +   MntMeatProducts ,
1702588   +   MntSweetProducts ,
1702589   +   MntWines ,
1702590   +   MonthsAsCustomer ,
1702591   +   NumCatalogPurchases ,
1702592   +   NumDealsPurchases ,
1702593   +   NumDistPurchases ,
1702594   +   NumStorePurchases ,
1702595   +   NumWebPurchases ,
1702596   +   NumWebVisitsMonth ,
1702597   +   RFMstat ,
1702598   +   RMntFrq ,
1702599   +   Recency ,
1702600   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1702601   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1702602   +
1702603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702604   +END;
MPRINT(EM_DIAGRAM):   END;
1702605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702606   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1702607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702608   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702609   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1702610   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1702611   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1702612   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1702613   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1702614   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1702615   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1702616   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1702617   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1702618   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1702619   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1702620   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1702621   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1702622   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1702623   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1702624   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1702625   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1702626   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1702627   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1702628   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1702629   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1702630   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1702631   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1702632   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1702633   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1702634   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1702635   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1702636   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1702637   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1702638   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1702639   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1702640   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1702641   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1702642   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1702643   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1702644   +END;
MPRINT(EM_DIAGRAM):   END;
1702645   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1702646   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1702647   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1702648   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1702649   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1702650   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1702651   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1702652   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1702653   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1702654   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1702655   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1702656   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1702657   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1702658   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1702659   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1702660   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1702661   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1702662   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1702663   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1702664   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1702665   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1702666   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1702667   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1702668   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1702669   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1702670   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1702671   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1702672   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1702673   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1702674   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1702675   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1702676   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1702677   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1702678   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 *
MonthsAsCustomer ;
1702679   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1702680   +   ELSE S_NumCatalogPurchases
1702681   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1702682   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1702683   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1702684   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1702685   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1702686   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1702687   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1702688   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1702689   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1702690   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1702691   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1702692   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1702693   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1702694   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1702695   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1702696   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1702697   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1702698   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1702699   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1702700   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1702701   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1702702   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1702703   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1702704   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1702705   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1702706   +END;
MPRINT(EM_DIAGRAM):   END;
1702707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702708   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1702709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702711   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1702712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702714   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1702715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702716   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702717   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1702718   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1702719   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1702720   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1702721   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1702722   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1702723   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1702724   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1702725   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1702726   +          +     1.17276395296242 * S_NumDealsPurchases
1702727   +          +     0.26632768295477 * S_NumDistPurchases
1702728   +          +    -1.26575615903579 * S_NumStorePurchases
1702729   +          +    -0.95316107557927 * S_NumWebPurchases
1702730   +          +     1.01828574356487 * S_NumWebVisitsMonth
1702731   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1702732   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1702733   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 *
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 *
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts +
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 *
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 *
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 *
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 *
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq +
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1702734   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1702735   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1702736   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1702737   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1702738   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1702739   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1702740   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1702741   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1702742   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1702743   +          +     1.14485571201233 * S_NumDealsPurchases
1702744   +          +     0.21414266588987 * S_NumDistPurchases
1702745   +          +    -0.10530090074297 * S_NumStorePurchases
1702746   +          +    -0.41712321238458 * S_NumWebPurchases
1702747   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1702748   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1702749   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1702750   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 *
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 *
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts +
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 *
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 *
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 *
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 *
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq +
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1702751   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1702752   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1702753   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1702754   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1702755   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1702756   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1702757   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1702758   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1702759   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1702760   +          +      0.7196418967437 * S_NumDealsPurchases
1702761   +          +     0.69035286374177 * S_NumDistPurchases
1702762   +          +     0.38027656631135 * S_NumStorePurchases
1702763   +          +    -0.18878358997924 * S_NumWebPurchases
1702764   +          +     1.61962062004798 * S_NumWebVisitsMonth
1702765   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1702766   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1702767   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 *
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 *
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts +
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 *
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 *
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 *
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 *
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq +
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1702768   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1702769   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1702770   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1702771   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1702772   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1702773   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1702774   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1702775   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1702776   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1702777   +          +    -0.00642902007204 * S_NumDealsPurchases
1702778   +          +     0.29785069480367 * S_NumDistPurchases
1702779   +          +    -0.42243322063147 * S_NumStorePurchases
1702780   +          +     0.54880896338383 * S_NumWebPurchases
1702781   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1702782   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1702783   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1702784   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 *
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 *
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts +
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 *
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines +
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases +
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases +
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases +
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 *
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1702785   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1702786   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1702787   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1702788   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1702789   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1702790   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1702791   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1702792   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1702793   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1702794   +          +    -0.48404738328225 * S_NumDealsPurchases
1702795   +          +    -0.02464180457879 * S_NumDistPurchases
1702796   +          +     1.17201831082067 * S_NumStorePurchases
1702797   +          +     0.57453655167516 * S_NumWebPurchases
1702798   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1702799   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1702800   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1702801   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 *
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 *
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts +
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 *
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 *
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 *
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 *
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq +
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1702802   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1702803   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1702804   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1702805   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1702806   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1702807   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1702808   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1702809   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1702810   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1702811   +          +    -1.49850531967483 * S_NumDealsPurchases
1702812   +          +    -0.82105466264223 * S_NumDistPurchases
1702813   +          +     0.29984603642824 * S_NumStorePurchases
1702814   +          +     0.06557123721611 * S_NumWebPurchases
1702815   +          +     1.04754749365002 * S_NumWebVisitsMonth
1702816   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1702817   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1702818   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 *
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 *
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts +
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 *
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 *
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 *
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 *
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq +
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1702819   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1702820   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1702821   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1702822   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1702823   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 *
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 +
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 *
HigherEducationBinary0 ;
1702824   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1702825   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1702826   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1702827   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1702828   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 *
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 +
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 *
HigherEducationBinary0 ;
1702829   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1702830   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1702831   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1702832   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1702833   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 +
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 *
HigherEducationBinary0 ;
1702834   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1702835   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1702836   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1702837   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1702838   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 *
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 +
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 *
HigherEducationBinary0 ;
1702839   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1702840   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1702841   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1702842   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1702843   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 *
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 +
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 *
HigherEducationBinary0 ;
1702844   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1702845   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1702846   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1702847   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1702848   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 +
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 *
HigherEducationBinary0 ;
1702849   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1702850   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1702851   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1702852   +          +     0.24583509957712 * Marital_StatusDivorced
1702853   +          +    -0.22681931588361 * Marital_StatusMarried
1702854   +          +    -0.12924106229536 * Marital_StatusSingle
1702855   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried +
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1702856   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1702857   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1702858   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1702859   +          +    -0.12585334311068 * Marital_StatusDivorced
1702860   +          +    -0.20835502467207 * Marital_StatusMarried
1702861   +          +    -0.13839534449368 * Marital_StatusSingle
1702862   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle +
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 *
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 *
Marital_StatusTogether ;
1702863   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1702864   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1702865   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1702866   +          +     0.35106363238113 * Marital_StatusDivorced
1702867   +          +     -1.3414808583918 * Marital_StatusMarried
1702868   +          +     1.40835320798486 * Marital_StatusSingle
1702869   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle +
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation +
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced +
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle +
-1.26805917396788 * Marital_StatusTogether ;
1702870   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1702871   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1702872   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1702873   +          +     0.48174546958393 * Marital_StatusDivorced
1702874   +          +    -0.41416978858191 * Marital_StatusMarried
1702875   +          +    -0.23376801546265 * Marital_StatusSingle
1702876   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle +
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 *
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 *
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 *
Marital_StatusTogether ;
1702877   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1702878   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1702879   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1702880   +          +    -0.67557643774246 * Marital_StatusDivorced
1702881   +          +     1.63844045917367 * Marital_StatusMarried
1702882   +          +    -0.70320960247699 * Marital_StatusSingle
1702883   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle +
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 *
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 *
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 *
Marital_StatusTogether ;
1702884   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1702885   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1702886   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1702887   +          +    -0.11371453086883 * Marital_StatusDivorced
1702888   +          +    -0.34226997176291 * Marital_StatusMarried
1702889   +          +    -1.01568676685754 * Marital_StatusSingle
1702890   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle +
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation +
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced +
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle +
-0.07673228755579 * Marital_StatusTogether ;
1702891   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1702892   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1702893   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1702894   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1702895   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1702896   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1702897   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1702898   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1702899   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 ,
H1x1_7 );
1702900   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1702901   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1702902   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1702903   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1702904   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1702905   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1702906   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1702907   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1702908   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1702909   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1702910   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1702911   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1702912   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1702913   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1702914   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1702915   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1702916   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1702917   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1702918   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1702919   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1702920   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1702921   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1702922   +END;
MPRINT(EM_DIAGRAM):   END;
1702923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1702924   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1702925   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1702926   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1702927   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1702928   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1702929   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1702930   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1702931   +END;
MPRINT(EM_DIAGRAM):   END;
1702932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702933   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1702934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702935   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702936   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1702937   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1702938   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1702939   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1702940   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1702941   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1702942   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1702943   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1702944   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1702945   +          +    -0.87259051567474 * S_NumDealsPurchases
1702946   +          +    -0.36454149529139 * S_NumDistPurchases
1702947   +          +     0.12447759925061 * S_NumStorePurchases
1702948   +          +    -1.08133487947367 * S_NumWebPurchases
1702949   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1702950   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1702951   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1702952   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 *
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 *
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts +
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 *
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 *
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 *
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 *
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq +
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1702953   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1702954   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1702955   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1702956   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1702957   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1702958   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1702959   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1702960   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1702961   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1702962   +          +     2.23121497416403 * S_NumDealsPurchases
1702963   +          +    -0.48674842191071 * S_NumDistPurchases
1702964   +          +     1.77510728607544 * S_NumStorePurchases
1702965   +          +     0.14647433155436 * S_NumWebPurchases
1702966   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1702967   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1702968   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1702969   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 *
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 *
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts +
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 *
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 *
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 *
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 *
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq +
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1702970   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1702971   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1702972   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1702973   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1702974   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1702975   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1702976   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1702977   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1702978   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1702979   +          +     0.14338855349611 * S_NumDealsPurchases
1702980   +          +    -2.21071010829235 * S_NumDistPurchases
1702981   +          +    -0.21795889348002 * S_NumStorePurchases
1702982   +          +     1.98825087883535 * S_NumWebPurchases
1702983   +          +     1.02482442531149 * S_NumWebVisitsMonth
1702984   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1702985   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1702986   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 *
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 *
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts +
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 *
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 *
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 *
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 *
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq +
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1702987   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1702988   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1702989   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1702990   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1702991   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1702992   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1702993   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1702994   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1702995   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1702996   +          +     0.30041205661012 * S_NumDealsPurchases
1702997   +          +    -0.63499849986918 * S_NumDistPurchases
1702998   +          +    -0.34155713433714 * S_NumStorePurchases
1702999   +          +    -1.14183354933936 * S_NumWebPurchases
1703000   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1703001   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1703002   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1703003   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 *
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 *
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts +
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 *
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 *
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 *
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 *
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq +
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1703004   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1703005   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1703006   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1703007   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1703008   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1703009   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1703010   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1703011   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1703012   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1703013   +          +    -0.21237915559831 * S_NumDealsPurchases
1703014   +          +     0.48256923764182 * S_NumDistPurchases
1703015   +          +    -0.45553093140641 * S_NumStorePurchases
1703016   +          +      0.5593655963659 * S_NumWebPurchases
1703017   +          +     0.27943768691188 * S_NumWebVisitsMonth
1703018   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1703019   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1703020   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 *
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome +
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 *
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts +
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 *
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 *
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 *
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 *
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq +
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1703021   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1703022   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1703023   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1703024   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1703025   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1703026   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1703027   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1703028   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1703029   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1703030   +          +     2.38967021388062 * S_NumDealsPurchases
1703031   +          +    -0.97722398866481 * S_NumDistPurchases
1703032   +          +     1.57612333191312 * S_NumStorePurchases
1703033   +          +    -0.75968679115983 * S_NumWebPurchases
1703034   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1703035   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1703036   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1703037   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 *
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome +
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 *
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts +
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 *
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 *
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 *
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 *
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq +
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1703038   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1703039   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1703040   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1703041   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1703042   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 +
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 *
HigherEducationBinary0 ;
1703043   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1703044   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1703045   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1703046   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1703047   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 *
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 +
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 *
HigherEducationBinary0 ;
1703048   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1703049   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1703050   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1703051   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1703052   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 *
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 +
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 *
HigherEducationBinary0 ;
1703053   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1703054   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1703055   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1703056   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1703057   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 *
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 +
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 *
HigherEducationBinary0 ;
1703058   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1703059   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1703060   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1703061   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1703062   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 *
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 +
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 *
HigherEducationBinary0 ;
1703063   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1703064   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1703065   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1703066   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1703067   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 *
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 +
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 *
HigherEducationBinary0 ;
1703068   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1703069   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1703070   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1703071   +          +     0.96470902298142 * Marital_StatusDivorced
1703072   +          +     0.94805959268314 * Marital_StatusMarried
1703073   +          +     -0.6523948769616 * Marital_StatusSingle
1703074   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle +
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 *
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 *
Marital_StatusTogether ;
1703075   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1703076   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1703077   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1703078   +          +      0.3918249505531 * Marital_StatusDivorced
1703079   +          +    -0.00968091979586 * Marital_StatusMarried
1703080   +          +     0.84615379885071 * Marital_StatusSingle
1703081   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle +
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation +
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced +
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle +
0.34817324570682 * Marital_StatusTogether ;
1703082   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1703083   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1703084   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1703085   +          +     1.14335160313191 * Marital_StatusDivorced
1703086   +          +     0.50580517192175 * Marital_StatusMarried
1703087   +          +     0.17264295020921 * Marital_StatusSingle
1703088   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle +
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 *
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 *
Marital_StatusTogether ;
1703089   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1703090   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1703091   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1703092   +          +    -0.11238504444225 * Marital_StatusDivorced
1703093   +          +    -0.81348274043749 * Marital_StatusMarried
1703094   +          +     0.46075415610001 * Marital_StatusSingle
1703095   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle +
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 *
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 *
Marital_StatusTogether ;
1703096   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1703097   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1703098   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1703099   +          +    -0.46342068701431 * Marital_StatusDivorced
1703100   +          +    -0.41667845270204 * Marital_StatusMarried
1703101   +          +    -0.47166707496281 * Marital_StatusSingle
1703102   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle +
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 *
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 *
Marital_StatusTogether ;
1703103   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1703104   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1703105   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1703106   +          +    -0.45376613787812 * Marital_StatusDivorced
1703107   +          +     0.01337046049801 * Marital_StatusMarried
1703108   +          +    -0.92811489484121 * Marital_StatusSingle
1703109   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle +
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 *
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 *
Marital_StatusTogether ;
1703110   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1703111   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1703112   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1703113   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1703114   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1703115   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1703116   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1703117   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1703118   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 ,
H1x2_7 );
1703119   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1703120   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1703121   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1703122   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1703123   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1703124   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1703125   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1703126   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1703127   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1703128   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1703129   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1703130   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1703131   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1703132   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1703133   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1703134   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1703135   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1703136   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1703137   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1703138   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1703139   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1703140   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1703141   +END;
MPRINT(EM_DIAGRAM):   END;
1703142   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703143   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1703144   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1703145   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1703146   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1703147   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1703148   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1703149   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1703150   +END;
MPRINT(EM_DIAGRAM):   END;
1703151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703152   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1703153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703154   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1703155   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1703156   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1703157   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1703158   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 +
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 +
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1703159   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1703160   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1703161   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1703162   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 +
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 +
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1703163   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1703164   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1703165   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1703166   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 +
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 +
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1703167   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1703168   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1703169   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1703170   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 +
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 +
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1703171   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1703172   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1703173   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1703174   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 +
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 +
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1703175   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1703176   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1703177   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1703178   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 +
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 +
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1703179   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1703180   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1703181   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1703182   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 +
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1703183   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1703184   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1703185   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1703186   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 +
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1703187   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1703188   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1703189   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1703190   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 +
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1703191   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1703192   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1703193   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1703194   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 +
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1703195   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1703196   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1703197   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1703198   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 +
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1703199   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1703200   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1703201   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1703202   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 +
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1703203   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1703204   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1703205   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1703206   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1703207   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1703208   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1703209   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1703210   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1703211   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 ,
H2x1_7 );
1703212   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1703213   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1703214   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1703215   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1703216   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1703217   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1703218   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1703219   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1703220   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1703221   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1703222   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1703223   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1703224   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1703225   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1703226   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1703227   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1703228   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1703229   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1703230   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1703231   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1703232   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1703233   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1703234   +END;
MPRINT(EM_DIAGRAM):   END;
1703235   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703236   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1703237   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1703238   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1703239   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1703240   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1703241   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1703242   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1703243   +END;
MPRINT(EM_DIAGRAM):   END;
1703244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703245   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1703246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703247   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1703248   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1703249   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1703250   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1703251   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 +
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 +
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1703252   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1703253   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1703254   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1703255   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1703256   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1703257   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1703258   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1703259   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1703260   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1703261   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1703262   +END;
MPRINT(EM_DIAGRAM):   END;
1703263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703264   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1703265   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1703266   +END;
MPRINT(EM_DIAGRAM):   END;
1703267   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1703268   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1703269   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1703270   +END;
MPRINT(EM_DIAGRAM):   END;
1703271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703272   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1703273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1703274   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1703275   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1703276   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703277   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1703278   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1703279   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1703280   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703281   +END;
MPRINT(EM_DIAGRAM):   END;
1703282   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1703283   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1703284   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1703285   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703286    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703287    quit;
1703288    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703289    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703290    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703291    retain ID 51 Node "AUTONEURAL12";
MPRINT(EM_DIAGRAM):   retain ID 51 Node "AUTONEURAL12";
1703292    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703293    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703294    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1703297    proc sort data=EMWS8.AUTONEURAL12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AUTONEURAL12_variableset out=_temp2(keep=NAME
CREATOR);
1703298    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703300    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703301    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703302    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703304    proc contents data=EMWS8.AUTONEURAL12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AUTONEURAL12_train out=_meta(keep=NAME) noprint;
1703305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1703306    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703308    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703309    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703310    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703312    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703313    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703314    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703314  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.
 
1703315    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703316    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1703317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: 3727 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 26992 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703318    filename _pref
1703318  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1703319    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703320    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1703321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1703322   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1703323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1703324   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1703325   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1703326   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703327    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703328    quit;
1703329    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703330    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703331    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703332    retain ID 54 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 54 Node "Trans";
1703333    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.01 seconds
 
 
1703335    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703338    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1703339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703342    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703343    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703345    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1703346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1703347    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703350    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703351    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703353    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703355    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703355  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1703356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703357    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1703358    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 26996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703359    filename _pref
1703359  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1703360    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703361    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1703362   +
1703363   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1703364   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1703364  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1703365   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1703366   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1703367   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1703368   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1703369   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703370    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703371    quit;
1703372    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703373    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703374    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703375    retain ID 55 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 55 Node "EMCODE4";
1703376    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703378    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703380    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703381    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1703382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703385    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703386    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703388    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1703389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703390    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703394    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703396    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703397    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703398    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703398  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1703399    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703400    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1703401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 27035 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703402    filename _pref
1703402  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1703403    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703404    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1703405   +
1703406   +
1703407   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1703408   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1703409   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1703410   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1703411   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1703412   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703413   +
1703414   +
1703415   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1703416   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1703417   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1703418   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1703419   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1703420   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703421   +
1703422   +
1703423   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1703424   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1703425   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1703426   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1703427   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1703428   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703429   +
1703430   +
1703431   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1703432   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1703433   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1703434   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1703435   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1703436   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703437   +
1703438   +
1703439   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1703440   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1703441   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1703442   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1703443   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1703444   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703445   +
1703446   +
1703447   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1703448   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1703449   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1703450   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1703451   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1703452   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703453   +
1703454   +
1703455   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1703456   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1703457   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1703458   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1703459   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1703460   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703461   +
1703462   +
1703463   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1703464   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1703465   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1703466   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1703467   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1703468   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703469   +if
1703470   +_FILTERNORM1 not in ( '.')
1703471   + and
1703472   +_FILTERNORM2 not in ( '.')
1703473   + and
1703474   +_FILTERNORM3 not in ( '.')
1703475   + and
1703476   +_FILTERNORM4 not in ( '.')
1703477   + and
1703478   +_FILTERNORM5 not in ( '.')
1703479   + and
1703480   +_FILTERNORM6 not in ( '.')
1703481   + and
1703482   +_FILTERNORM7 not in ( ' ')
1703483   + and
1703484   +_FILTERNORM8 not in ( ' ')
1703485   +and
1703486   +( Dt_Customer ne .)
1703487   +and ( Income ne . and (Income<=107000))
1703488   +and ( Kidhome ne .)
1703489   +and ( MntFishProducts ne .)
1703490   +and ( MntFruits ne .)
1703491   +and ( MntGoldProds ne .)
1703492   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1703493   +and ( MntSweetProducts ne .)
1703494   +and ( MntWines ne .)
1703495   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1703496   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1703497   +and ( NumStorePurchases ne .)
1703498   +and ( NumWebPurchases ne .)
1703499   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1703500   +and ( Recency ne .)
1703501   +and ( Teenhome ne .)
1703502   +and ( Year_Birth ne .)
1703503   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1703504   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1703505   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1703506   +end;
MPRINT(EM_DIAGRAM):   end;
1703507   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1703508   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703509    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703510    quit;
1703511    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703512    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703513    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703514    retain ID 56 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 56 Node "Filter";
1703515    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703516    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703517    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703518    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703519    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703520    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1703521    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703523    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703524    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703525    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703527    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1703528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1703529    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703532    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703533    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703535    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703536    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703537    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703537  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1703538    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703539    proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl42_FCMP data=_tempx;
1703540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL42_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL42_FCMP has 27101 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703541    %macro varDept(fcmpdata=,id=);
1703542    %global nobs&id scoreFlag&id;
1703543    %let scoreFlag&id = 0;
1703544    %if &id=1 or ^&fcmpStart %then %do;
1703545    proc sort data=&fcmpdata out=_temp&id nodupkey;
1703546    by NAME;
1703547    where id=&id and LHS in( %let j=1;
1703548    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1703549    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1703550    "&var" %let j = %eval(&j+1);
1703551    %end;
1703552    );
1703553    run;
1703554    %let dsid = %sysfunc(open(_temp&id));
1703555    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703556    %let dsid = %sysfunc(close(&dsid));
1703557    %if &&nobs&id %then %do;
1703558    %let scoreFlag&id = 1;
1703559    %let fcmpStart = 1;
1703560    %end;
1703561    %else %let fcmpStart = 0;
1703562    %end;
1703563    %else %do;
1703564    proc sort data=&fcmpdata out=_tempid;
1703565    where id=&id;
1703566    by LHS;
1703567    run;
1703568    %let dsid = %sysfunc(open(_tempid));
1703569    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703570    %let dsid = %sysfunc(close(&dsid));
1703571    %if ^&&nobs&id %then %do;
1703572    proc datasets lib=work nolist;
1703573    delete _tempid;
1703574    run;
1703575    quit;
1703576    %end;
1703577    %else %do;
1703578    data _tempAll;
1703579    set %let j=%eval(&id-1);
1703580    %do x=1 %to &j;
1703581    %if &&nobs&x %then %do;
1703582    _temp&x %end;
1703583    %end;
1703584    ;
1703585    run;
1703586    proc sql;
1703587    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1703587  ! work._tempid p2 where p.name=p2.lhs;
1703588    quit;
1703589    data _temp&id;
1703590    set _temp&id;
1703591    where LHS ne '' and NAME ne '' and Node ne '';
1703592    run;
1703593    proc datasets lib=work nolist;
1703594    delete _tempAll;
1703595    run;
1703596    %let dsid = %sysfunc(open(_temp&id));
1703597    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703598    %let dsid = %sysfunc(close(&dsid));
1703599    %if ^&&nobs&id %then %do;
1703600    proc datasets lib=work nolist;
1703601    delete _temp&id;
1703602    run;
1703603    quit;
1703604    %end;
1703605    %else %do;
1703606    %let scoreFlag&id = 1;
1703607    data _temp&id;
1703608    set _temp&id;
1703609    where LHS ne NAME and node ne '';
1703610    run;
1703611    %let dsid = %sysfunc(open(_temp&id));
1703612    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703613    %let dsid = %sysfunc(close(&dsid));
1703614    %if ^&&nobs&id %then %do;
1703615    proc datasets lib=work nolist;
1703616    delete _temp&id;
1703617    run;
1703618    quit;
1703619    %end;
1703620    %else %do;
1703621    proc sort data=_temp&id nodupkey;
1703622    by LHS NAME;
1703623    run;
1703624    %end;
1703625    %end;
1703626    %end;
1703627    %end;
1703628    %mend varDept;
1703629    %macro optCode(outdata=fcmpdata);
1703630    %global fcmpStart;
1703631    %let fcmpStart = 0;
1703632    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1703633    %let NumNodes=58;
1703634    %do k=1 %to &NumNodes;
1703635    %vardept(fcmpdata=&outdata, id=&k);
1703636    %end;
1703637    %mend optCode;
1703638    %optcode(outData=EMWS8.Ensmbl42_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 255 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 181 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 74 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1717 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 1717 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 74 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 321 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 321 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 321 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 313 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 313 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 313 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 387 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 40 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 40 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 40 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 40 observations read from the data set WORK._TEMP6.
NOTE: 36 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 391 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 382 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 382 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 382 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 382 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP7 has 382 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp7 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 382 observations read from the data set WORK._TEMP7.
NOTE: 343 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP7 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: The data set WORK._TEMPALL has 430 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp8 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP8 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp8;
MPRINT(VARDEPT):   set _temp8;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP8.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP8 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp8;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP8 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=10;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=10;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=11;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1359 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=11;
NOTE: The data set WORK._TEMPID has 1359 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: The data set WORK._TEMPALL has 430 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp11 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP11 created, with 407 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp11;
MPRINT(VARDEPT):   set _temp11;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 407 observations read from the data set WORK._TEMP11.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP11 has 407 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp11;
MPRINT(VARDEPT):   set _temp11;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 396 observations read from the data set WORK._TEMP11.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP11 has 396 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp11 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 396 observations read from the data set WORK._TEMP11.
NOTE: 230 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP11 has 166 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=12;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=12;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=13;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=13;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=14;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=14;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: The data set WORK._TEMPALL has 596 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp14 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP14 created, with 60 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp14;
MPRINT(VARDEPT):   set _temp14;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 60 observations read from the data set WORK._TEMP14.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP14 has 60 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp14;
MPRINT(VARDEPT):   set _temp14;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 60 observations read from the data set WORK._TEMP14.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP14 has 60 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp14 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 60 observations read from the data set WORK._TEMP14.
NOTE: 56 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP14 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=15;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=15;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: The data set WORK._TEMPALL has 600 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp15 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP15 created, with 591 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp15;
MPRINT(VARDEPT):   set _temp15;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 591 observations read from the data set WORK._TEMP15.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP15 has 591 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp15;
MPRINT(VARDEPT):   set _temp15;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 591 observations read from the data set WORK._TEMP15.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP15 has 591 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp15 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 591 observations read from the data set WORK._TEMP15.
NOTE: 552 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP15 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=16;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=16;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: The data set WORK._TEMPALL has 639 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp16 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP16 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp16;
MPRINT(VARDEPT):   set _temp16;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP16.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP16 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp16;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP16 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=17;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=17;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=18;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=18;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=19;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2103 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=19;
NOTE: The data set WORK._TEMPID has 2103 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: The data set WORK._TEMPALL has 639 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp19 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP19 created, with 1408 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp19;
MPRINT(VARDEPT):   set _temp19;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1408 observations read from the data set WORK._TEMP19.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP19 has 1408 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp19;
MPRINT(VARDEPT):   set _temp19;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1376 observations read from the data set WORK._TEMP19.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP19 has 1376 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp19 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1376 observations read from the data set WORK._TEMP19.
NOTE: 882 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP19 has 494 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=20;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=20;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=21;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=21;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=22;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=22;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: The data set WORK._TEMPALL has 1133 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp22 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP22 created, with 108 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp22;
MPRINT(VARDEPT):   set _temp22;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 108 observations read from the data set WORK._TEMP22.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP22 has 108 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp22;
MPRINT(VARDEPT):   set _temp22;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 108 observations read from the data set WORK._TEMP22.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP22 has 108 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp22 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 108 observations read from the data set WORK._TEMP22.
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP22 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=23;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=23;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: The data set WORK._TEMPALL has 1137 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp23 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP23 created, with 1066 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp23;
MPRINT(VARDEPT):   set _temp23;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1066 observations read from the data set WORK._TEMP23.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP23 has 1066 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp23;
MPRINT(VARDEPT):   set _temp23;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1066 observations read from the data set WORK._TEMP23.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP23 has 1066 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp23 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1066 observations read from the data set WORK._TEMP23.
NOTE: 1027 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP23 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=24;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=24;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: The data set WORK._TEMPALL has 1176 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp24 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP24 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp24;
MPRINT(VARDEPT):   set _temp24;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP24.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP24 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp24;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP24 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=25;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=25;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=26;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=26;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=27;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4449 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=27;
NOTE: The data set WORK._TEMPID has 4449 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: The data set WORK._TEMPALL has 1176 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp27 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP27 created, with 8190 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp27;
MPRINT(VARDEPT):   set _temp27;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8190 observations read from the data set WORK._TEMP27.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP27 has 8190 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp27;
MPRINT(VARDEPT):   set _temp27;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8017 observations read from the data set WORK._TEMP27.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP27 has 8017 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp27 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8017 observations read from the data set WORK._TEMP27.
NOTE: 6434 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP27 has 1583 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=28;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=28;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=29;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=29;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=30;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=30;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: The data set WORK._TEMPALL has 2759 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp30 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP30 created, with 240 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp30;
MPRINT(VARDEPT):   set _temp30;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 240 observations read from the data set WORK._TEMP30.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP30 has 240 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp30;
MPRINT(VARDEPT):   set _temp30;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 240 observations read from the data set WORK._TEMP30.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP30 has 240 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp30 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 240 observations read from the data set WORK._TEMP30.
NOTE: 236 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP30 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=31;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=31;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: The data set WORK._TEMPALL has 2763 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp31 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP31 created, with 2339 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp31;
MPRINT(VARDEPT):   set _temp31;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2339 observations read from the data set WORK._TEMP31.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP31 has 2339 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp31;
MPRINT(VARDEPT):   set _temp31;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2339 observations read from the data set WORK._TEMP31.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP31 has 2339 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp31 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2339 observations read from the data set WORK._TEMP31.
NOTE: 2300 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP31 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=32;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=32;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: The data set WORK._TEMPALL has 2802 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp32 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP32 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp32;
MPRINT(VARDEPT):   set _temp32;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP32.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP32 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp32;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP32 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=33;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=33;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=34;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=34;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=35;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1551 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=35;
NOTE: The data set WORK._TEMPID has 1551 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: The data set WORK._TEMPALL has 2802 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp35 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP35 created, with 6454 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp35;
MPRINT(VARDEPT):   set _temp35;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 6454 observations read from the data set WORK._TEMP35.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP35 has 6454 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp35;
MPRINT(VARDEPT):   set _temp35;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 6285 observations read from the data set WORK._TEMP35.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP35 has 6285 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp35 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6285 observations read from the data set WORK._TEMP35.
NOTE: 6031 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP35 has 254 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=36;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=36;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=37;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=37;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
The SAS System
 
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=38;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=38;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: The data set WORK._TEMPALL has 3056 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp38 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP38 created, with 268 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp38;
MPRINT(VARDEPT):   set _temp38;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 268 observations read from the data set WORK._TEMP38.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP38 has 268 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp38;
MPRINT(VARDEPT):   set _temp38;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 268 observations read from the data set WORK._TEMP38.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP38 has 268 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp38 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 268 observations read from the data set WORK._TEMP38.
NOTE: 264 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP38 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=39;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=39;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: The data set WORK._TEMPALL has 3060 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp39 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP39 created, with 2624 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp39;
MPRINT(VARDEPT):   set _temp39;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2624 observations read from the data set WORK._TEMP39.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP39 has 2624 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp39;
MPRINT(VARDEPT):   set _temp39;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2624 observations read from the data set WORK._TEMP39.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP39 has 2624 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp39 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2624 observations read from the data set WORK._TEMP39.
NOTE: 2585 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP39 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=40;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=40;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: The data set WORK._TEMPALL has 3099 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp40 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP40 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp40;
MPRINT(VARDEPT):   set _temp40;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP40.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP40 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp40;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP40 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=41;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=41;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=42;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=42;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=43;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3291 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=43;
NOTE: The data set WORK._TEMPID has 3291 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: The data set WORK._TEMPALL has 3099 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp43 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP43 created, with 24108 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp43;
MPRINT(VARDEPT):   set _temp43;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 24108 observations read from the data set WORK._TEMP43.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP43 has 24108 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp43;
MPRINT(VARDEPT):   set _temp43;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 23645 observations read from the data set WORK._TEMP43.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP43 has 23645 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp43 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 23645 observations read from the data set WORK._TEMP43.
NOTE: 22593 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP43 has 1052 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=44;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=44;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=45;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=45;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=46;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=46;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: The data set WORK._TEMPALL has 4151 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp46 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP46 created, with 352 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp46;
MPRINT(VARDEPT):   set _temp46;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 352 observations read from the data set WORK._TEMP46.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP46 has 352 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp46;
MPRINT(VARDEPT):   set _temp46;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 352 observations read from the data set WORK._TEMP46.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP46 has 352 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp46 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 352 observations read from the data set WORK._TEMP46.
NOTE: 348 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP46 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=47;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=47;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: The data set WORK._TEMPALL has 4155 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp47 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP47 created, with 3441 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp47;
MPRINT(VARDEPT):   set _temp47;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 3441 observations read from the data set WORK._TEMP47.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP47 has 3441 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp47;
MPRINT(VARDEPT):   set _temp47;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 3441 observations read from the data set WORK._TEMP47.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP47 has 3441 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp47 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3441 observations read from the data set WORK._TEMP47.
NOTE: 3402 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP47 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=48;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=48;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 _temp47 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: There were 39 observations read from the data set WORK._TEMP47.
NOTE: The data set WORK._TEMPALL has 4194 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp48 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP48 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp48;
MPRINT(VARDEPT):   set _temp48;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP48.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP48 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp48;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP48 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=49;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=49;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=50;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=50;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=51;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3727 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=51;
NOTE: The data set WORK._TEMPID has 3727 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 _temp47 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: There were 39 observations read from the data set WORK._TEMP47.
NOTE: The data set WORK._TEMPALL has 4194 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp51 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP51 created, with 46562 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp51;
MPRINT(VARDEPT):   set _temp51;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 46562 observations read from the data set WORK._TEMP51.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP51 has 46562 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp51;
MPRINT(VARDEPT):   set _temp51;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 45716 observations read from the data set WORK._TEMP51.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP51 has 45716 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp51 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 45716 observations read from the data set WORK._TEMP51.
NOTE: 44442 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP51 has 1274 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=52;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=52;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=53;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=53;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=54;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=54;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 _temp47 _temp51 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: There were 39 observations read from the data set WORK._TEMP47.
NOTE: There were 1274 observations read from the data set WORK._TEMP51.
NOTE: The data set WORK._TEMPALL has 5468 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp54 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP54 created, with 448 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp54;
MPRINT(VARDEPT):   set _temp54;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 448 observations read from the data set WORK._TEMP54.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP54 has 448 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp54;
MPRINT(VARDEPT):   set _temp54;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 448 observations read from the data set WORK._TEMP54.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP54 has 448 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp54 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 448 observations read from the data set WORK._TEMP54.
NOTE: 444 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP54 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=55;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=55;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 _temp47 _temp51
_temp54 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: There were 39 observations read from the data set WORK._TEMP47.
NOTE: There were 1274 observations read from the data set WORK._TEMP51.
NOTE: There were 4 observations read from the data set WORK._TEMP54.
NOTE: The data set WORK._TEMPALL has 5472 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp55 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP55 created, with 4372 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp55;
MPRINT(VARDEPT):   set _temp55;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4372 observations read from the data set WORK._TEMP55.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP55 has 4372 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp55;
MPRINT(VARDEPT):   set _temp55;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4372 observations read from the data set WORK._TEMP55.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP55 has 4372 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp55 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4372 observations read from the data set WORK._TEMP55.
NOTE: 4333 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP55 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=56;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=56;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 _temp7 _temp11 _temp14 _temp15 _temp19 _temp22
_temp23 _temp27 _temp30 _temp31 _temp35 _temp38 _temp39 _temp43 _temp46 _temp47 _temp51
_temp54 _temp55 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP2.
NOTE: There were 313 observations read from the data set WORK._TEMP3.
NOTE: There were 4 observations read from the data set WORK._TEMP6.
NOTE: There were 39 observations read from the data set WORK._TEMP7.
NOTE: There were 166 observations read from the data set WORK._TEMP11.
NOTE: There were 4 observations read from the data set WORK._TEMP14.
NOTE: There were 39 observations read from the data set WORK._TEMP15.
NOTE: There were 494 observations read from the data set WORK._TEMP19.
NOTE: There were 4 observations read from the data set WORK._TEMP22.
NOTE: There were 39 observations read from the data set WORK._TEMP23.
NOTE: There were 1583 observations read from the data set WORK._TEMP27.
NOTE: There were 4 observations read from the data set WORK._TEMP30.
NOTE: There were 39 observations read from the data set WORK._TEMP31.
NOTE: There were 254 observations read from the data set WORK._TEMP35.
NOTE: There were 4 observations read from the data set WORK._TEMP38.
NOTE: There were 39 observations read from the data set WORK._TEMP39.
NOTE: There were 1052 observations read from the data set WORK._TEMP43.
NOTE: There were 4 observations read from the data set WORK._TEMP46.
NOTE: There were 39 observations read from the data set WORK._TEMP47.
NOTE: There were 1274 observations read from the data set WORK._TEMP51.
NOTE: There were 4 observations read from the data set WORK._TEMP54.
NOTE: There were 39 observations read from the data set WORK._TEMP55.
NOTE: The data set WORK._TEMPALL has 5511 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp56 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP56 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp56;
MPRINT(VARDEPT):   set _temp56;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP56.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP56 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp56;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP56 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=57;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=57;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl42_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=58;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_FCMP.
      WHERE id=58;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1703639    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703640    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703641    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703643    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703644    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703645    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703647    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703648    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp54 p,
1703648  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp54
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1703649    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1703650    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1703651    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1703652    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703653    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703654    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703655    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703657    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703658    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703659    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703662    create table _CodeVar13 as select p.lhs, p2.formula, p2.file from _temp46 p,
1703662  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar13 as select p.lhs, p2.formula, p2.file from
_temp46 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR13 created, with 4 rows and 3 columns.
 
1703663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1703664    data _CodeVar13;
MPRINT(EM_DIAGRAM):   data _CodeVar13;
1703665    set _all_ _CodeVar13 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar13 _postall_;
1703666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR13.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR13 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703667    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703668    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703669    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703670    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703671    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703672    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703673    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703674    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703675    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703676    create table _CodeVar21 as select p.lhs, p2.formula, p2.file from _temp38 p,
1703676  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar21 as select p.lhs, p2.formula, p2.file from
_temp38 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR21 created, with 4 rows and 3 columns.
 
1703677    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703678    data _CodeVar21;
MPRINT(EM_DIAGRAM):   data _CodeVar21;
1703679    set _all_ _CodeVar21 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar21 _postall_;
1703680    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR21.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR21 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703681    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703682    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703683    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703684    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703685    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703686    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703687    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703688    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703689    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703690    create table _CodeVar29 as select p.lhs, p2.formula, p2.file from _temp30 p,
1703690  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar29 as select p.lhs, p2.formula, p2.file from
_temp30 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR29 created, with 4 rows and 3 columns.
 
1703691    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1703692    data _CodeVar29;
MPRINT(EM_DIAGRAM):   data _CodeVar29;
1703693    set _all_ _CodeVar29 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar29 _postall_;
1703694    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR29.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR29 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703695    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703696    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703697    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703699    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703700    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703701    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703703    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703704    create table _CodeVar37 as select p.lhs, p2.formula, p2.file from _temp22 p,
1703704  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar37 as select p.lhs, p2.formula, p2.file from
_temp22 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR37 created, with 4 rows and 3 columns.
 
1703705    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703706    data _CodeVar37;
MPRINT(EM_DIAGRAM):   data _CodeVar37;
1703707    set _all_ _CodeVar37 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar37 _postall_;
1703708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR37.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR37 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703709    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703710    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703711    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703713    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703714    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703715    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703717    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703718    create table _CodeVar45 as select p.lhs, p2.formula, p2.file from _temp14 p,
1703718  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar45 as select p.lhs, p2.formula, p2.file from
_temp14 p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR45 created, with 4 rows and 3 columns.
 
1703719    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703720    data _CodeVar45;
MPRINT(EM_DIAGRAM):   data _CodeVar45;
1703721    set _all_ _CodeVar45 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar45 _postall_;
1703722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR45.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR45 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703723    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703724    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703725    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703727    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703728    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703729    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703730    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703731    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703732    create table _CodeVar53 as select p.lhs, p2.formula, p2.file from _temp6 p,
1703732  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar53 as select p.lhs, p2.formula, p2.file from _temp6
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR53 created, with 4 rows and 3 columns.
 
1703733    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1703734    data _CodeVar53;
MPRINT(EM_DIAGRAM):   data _CodeVar53;
1703735    set _all_ _CodeVar53 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar53 _postall_;
1703736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR53.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR53 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703737    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1703738    * Ensmbl42: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Computing metadata for TRAIN data;
1703739    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl42_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl42_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl42_TRAIN out=WORK.M0SW2CCV noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SW2CCV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0SW2CCV(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SW2CCV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0SW2CCV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3KT_HR_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2F5F43Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KT_HR_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_TRAIN noprint
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl42";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl42";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl42: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl42";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1704059    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1704060    set EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMINFO;
1704061    where DATA='Ensmbl42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl42' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1704062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL42_EMINFO.
      WHERE (DATA='Ensmbl42') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704063    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMINFO;
1704064    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1704065    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1704066    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1704070    run;
1704071    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMINFO;
1704072    set EMWS8.Ensmbl42_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMINFO WORK.MODELTEMP_INFO;
1704073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704074    proc sort data = EMWS8.Ensmbl42_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl42_EMINFO NOTHREADS;
1704075    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1704076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1704077    proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural12_EMINFO OUT=WORK.SORTEDEMINFO
NOTHREADS;
1704078    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1704079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL12_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704080    proc sort data = EMWS8.Ensmbl42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl42_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1704081    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1704082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL42_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704083    data EMWS8.Ensmbl42_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMINFO;
1704084    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1704085    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1704086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL42_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1704087    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1704088    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1704089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1704090    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL42_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                12.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0G_INKP
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl42\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0G_INKP new;
MPRINT(EM_DIAGRAM):   run;
1704114    data EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMOUTFIT;
1704115    set EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMOUTFIT;
1704116    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1704117    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1704117  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1704118    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1704119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL42_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL42_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704120    proc sort data=EMWS8.Ensmbl42_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl42_EMREPORTFIT nothreads;
1704121    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1704122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL42_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL42_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704123    %let _EMwarndup = 0;
1704124    %let _EMtargetdup =;
1704125    %let _EMASEtargetdup =;
1704126    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1704127    set EMWS8.Ensmbl42_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMOUTFIT;
1704128    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1704129    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1704130    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1704131    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1704132    end;
MPRINT(EM_DIAGRAM):   end;
1704133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL42_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704134    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=WORK.SUBSETINMETA;
1704135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 48 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1704137    proc sort data=EMWS8.Ensmbl42_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl42_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1704138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set EMWS8.ENSMBL42_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 38 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704140    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1704141    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1704142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 38 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 48 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704144    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1704145    set EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_CMeta_TRAIN;
1704146    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1704146  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1704147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704148    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1704149    set EMWS8.Ensmbl42_TRAIN(keep=
1704150    F_DepVar
1704151    I_DepVar
1704152    P_DepVar0
1704153    P_DepVar1
1704154    R_DepVar0
1704155    R_DepVar1
1704156    U_DepVar
1704157    _WARN_
1704158    DepVar
1704159    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1704160    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL42_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL12_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL42_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl42_0WS9ALK nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_0WS9ALK;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_0WS9ALK(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_0WS9ALK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_0WS9ALK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0041268086 OVLMAX 0.9934288887 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1708426    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1708427    set EMWS8.Ensmbl42_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_CMeta_TRAIN;
1708428    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1708428  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1708429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1708430    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1708431    set EMWS8.Ensmbl42_VALIDATE(keep=
1708432    F_DepVar
1708433    I_DepVar
1708434    P_DepVar0
1708435    P_DepVar1
1708436    R_DepVar0
1708437    R_DepVar1
1708438    U_DepVar
1708439    _WARN_
1708440    DepVar
1708441    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1708442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL42_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL12_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL42_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl42_1OWCEAN nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl42_1OWCEAN;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_1OWCEAN(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMCLASSIFICATION WORK.Ensmbl42_1OWCEAN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl42_1OWCEAN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.004130931 OVLMAX 0.9929065059 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1712717    %let _cn = %sysfunc(getoption(CENTER));
1712718    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1712719    proc print data=EMWS8.Ensmbl42_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMREPORTFIT noobs label;
1712720    var STAT LABEL TRAIN
1712721    VALIDATE
1712722    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1712723    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1712724    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1712725    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1712726    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL42_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 50.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1712727    title10;
MPRINT(EM_DIAGRAM):   title10;
1712728    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1712729    proc sort data=EMWS8.Ensmbl42_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl42_EMCLASSIFICATION nothreads;
1712730    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1712731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL42_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1712732    %let _cn = %sysfunc(getoption(CENTER));
1712733    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1712734    proc print data=EMWS8.Ensmbl42_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMCLASSIFICATION noobs label;
1712735    var from into pct_row pct_col count percent
1712736    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1712737    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1712738    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1712739    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1712740    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1712741    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1712742    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1712743    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1712744    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1712745    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1712746    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1712747    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL42_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1712748    title9;
MPRINT(EM_DIAGRAM):   title9;
1712749    title10;
MPRINT(EM_DIAGRAM):   title10;
1712750    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1712751    %let _cn = %sysfunc(getoption(CENTER));
1712752    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1712753    data EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl42_EMEVENTREPORT;
1712754    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1712754  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1712755    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1712755  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1712755  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1712755  ! FALSEEVENT
1712756    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1712756  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1712756  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1712757       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1712758    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1712759    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1712760    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1712761    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1712762    set EMWS8.Ensmbl42_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl42_EMEVENTREPORT;
1712763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL42_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL42_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1712764    proc print data=EMWS8.Ensmbl42_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMEVENTREPORT noobs label;
1712765    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1712766    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1712767    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1712768    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL42_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 52.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1712769    title10;
MPRINT(EM_DIAGRAM):   title10;
1712770    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1712771    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1712772    modify Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl42_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1712773    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1712774    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1712774  ! ;
MPRINT(EM_DIAGRAM):   run;
1712775    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL42_EMRANK.DATA.
1712776    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
1712777    %let _cn = %sysfunc(getoption(CENTER));
1712778    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1712779    proc print data=EMWS8.Ensmbl42_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMRANK label noobs;
1712780    var
1712781    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1712782    by
1712783    notsorted DATAROLE
1712784    notsorted TARGET
1712785    notsorted TARGETLABEL
1712786    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1712787    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1712788    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1712789    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL42_EMRANK.
NOTE: The PROCEDURE PRINT printed page 53.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1712790    title10;
MPRINT(EM_DIAGRAM):   title10;
1712791    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1712792    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1712793    modify Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl42_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1712794    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1712794  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1712795    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1712795  ! ;
MPRINT(EM_DIAGRAM):   run;
1712796    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL42_EMSCOREDIST.DATA.
1712797    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl42_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
