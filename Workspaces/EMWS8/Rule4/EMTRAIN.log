MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                19.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GDHW2K 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GDHW2K new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.52 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN 
"C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 
'C:\\predictive-models-project\Workspaces\EMWS8\Rule4\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
741706     proc freq data=EMWS8.Rule4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Rule4_VariableSet noprint;
741707     table ROLE*LEVEL/out=WORK.Rule4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Rule4META;
741708     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.RULE4_VARIABLESET.
NOTE: The data set WORK.RULE4META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741709     proc print data=WORK.Rule4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule4META label noobs;
741710     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
741711     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
741711   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
741711   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency 
Count";
741712     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
741713     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
741714     run;

NOTE: There were 6 observations read from the data set WORK.RULE4META.
NOTE: The PROCEDURE PRINT printed page 560.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741715     title10;
MPRINT(EM_DIAGRAM):   title10;
741716     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):   
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN 
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN 
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN 
EMWS8.Meta3_TRAIN EMWS8.Meta3_TRAIN EMWS8 Meta3_TRAIN 
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Meta3_TRAIN 
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >> 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >> 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY 
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule4_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Rule4_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Rule4_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule4_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Rule4_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Rule4_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR 
FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Rule4_DepVar_DD 
out=EMWS8.Rule4_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
741763     data WORK.Rule4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Rule4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
741764     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
741765     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
741765   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
741765   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
741766        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
741766   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
741766   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" 
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
741767     set EMWS8.RULE4_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.RULE4_DEPVAR_DM( where=(_TYPE_="TARGET"));
741768     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
741769     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
741770     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
741771     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
741772     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
741773     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
741774     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
741775     end;
MPRINT(EM_DIAGRAM):   end;
741776     output;
MPRINT(EM_DIAGRAM):   output;
741777     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.RULE4_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.RULE4_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741778     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
741779     proc print data=WORK.Rule4_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Rule4_EVENT noobs label;
741780     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
741781     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
741782     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
741783     run;

NOTE: There were 1 observations read from the data set WORK.RULE4_EVENT.
NOTE: The PROCEDURE PRINT printed page 561.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

741784     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"." 
741785     proc print data = EMWS8.Rule4_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Rule4_DepVar_DM noobs label;
741786     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
741787     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 
'DECPRIOR');
741788     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
741788   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
741788   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
741789     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
741790     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
741791     run;

NOTE: There were 7 observations read from the data set EMWS8.RULE4_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 562.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

741792     title10;
MPRINT(EM_DIAGRAM):   title10;
741793     data WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):    data WORK.M1FDRQZT;
741794     set WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):   set WORK.M1FDRQZT;
741795     where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
741796     if (role='REJECTED') then role='INPUT';
MPRINT(EM_DIAGRAM):   if (role='REJECTED') then role='INPUT';
741797     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M1FDRQZT.
      WHERE (use='Y') or ((role='INPUT') and (use='D'));
NOTE: The data set WORK.M1FDRQZT has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741798     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
741799     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
741800     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741801     %macro DMDBClass;
741802         DepVar(DESC) Marital_Status(ASC)
741803     %mend DMDBClass;
741804     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741805     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
741806     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741807     %macro DMDBVar;
741808         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
741809        NumWebVisitsMonth Recency
741810     %mend DMDBVar;
741811     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741812     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
741813     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741814     proc dmdb batch data=EMWS8.Meta3_TRAIN
741815     dmdbcat=WORK.EM_DMDB
741816     maxlevel = 513
741817     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta3_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
741818     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
741819     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases 
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
741820     target
741821     DepVar
741822     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
741823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
741824     quit;
741825     *--- end code ---*;

741826     data WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):    data WORK.M1FDRQZT;
741827     set WORK.M1FDRQZT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M1FDRQZT end=eof;
741828     output;
MPRINT(EM_DIAGRAM):   output;
741829     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
741830     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
741831     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
741832     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
741833     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
741834     output;
MPRINT(EM_DIAGRAM):   output;
741835     end;
MPRINT(EM_DIAGRAM):   end;
741836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M1FDRQZT.
NOTE: The data set WORK.M1FDRQZT has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: There were 2 observations read from the data set EMWS8.RULE4_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
741837     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
741838     * Rule4: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule4: Create decision matrix;
741839     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741840     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
741841       length   DepVar                           $  32
741842                COUNT                                8
741843                DATAPRIOR                            8
741844                TRAINPRIOR                           8
741845                DECPRIOR                             8
741846                DECISION1                            8
741847                DECISION2                            8
741848                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 
8 DECISION2 8 ;
741849     
741850       label    COUNT="Level Counts"
741851                DATAPRIOR="Data Proportions"
741852                TRAINPRIOR="Training Proportions"
741853                DECPRIOR="Decision Priors"
741854                DECISION1="1"
741855                DECISION2="0"
741856                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= 
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
741857       format   COUNT 10.
741858                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
741859     DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
741859   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
741860     output;
MPRINT(EM_DIAGRAM):   output;
741861     DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
741861   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
741862     output;
MPRINT(EM_DIAGRAM):   output;
741863     ;
MPRINT(EM_DIAGRAM):   ;
741864     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741865     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
741866     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
741867     label DECISION1= '1';
741868     label DECISION2= '0';
741869     run;

NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
741870     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741871     *------------------------------------------------------------* ;
741872     * Rule4: DMDBClass Macro ;
741873     *------------------------------------------------------------* ;
741874     %macro DMDBClass;
741875         DepVar(DESC) Marital_Status(ASC)
741876     %mend DMDBClass;
741877     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741878     * Rule4: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBVar Macro ;
741879     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741880     %macro DMDBVar;
741881         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
741882        NumWebVisitsMonth Recency
741883     %mend DMDBVar;
741884     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741885     * Rule4: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule4: Create DMDB;
741886     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741887     proc dmdb batch data=EMWS8.Meta3_TRAIN
741888     dmdbcat=WORK.Rule4_DMDB
741889     maxlevel = 513
741890     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta3_TRAIN dmdbcat=WORK.Rule4_DMDB maxlevel 
= 513 ;
MPRINT(EM_DIAGRAM):   class
741891     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) Marital_Status(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
741892     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases 
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
741893     target
741894     DepVar
741895     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
741896     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
741897     quit;
741898     *--- end code ---*;

741899     data WORK.M1UISO4P;
MPRINT(EM_DIAGRAM):    data WORK.M1UISO4P;
741900     set WORK.M1UISO4P;
MPRINT(EM_DIAGRAM):   set WORK.M1UISO4P;
741901     if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
741902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1UISO4P.
NOTE: The data set WORK.M1UISO4P has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741903     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
741904     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
741905     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741906     %macro DMDBClass;
741907         DepVar(DESC)
741908     %mend DMDBClass;
741909     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741910     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
741911     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741912     %macro DMDBVar;
741913     
741914     %mend DMDBVar;
741915     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741916     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
741917     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741918     proc dmdb batch data=EMWS8.Meta3_TRAIN
741919     dmdbcat=WORK.EM_DMDB
741920     maxlevel = 513
741921     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta3_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
741922     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
741923     target
741924     DepVar
741925     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
741926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
741927     quit;
741928     *--- end code ---*;

741929     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
741930     * Rule Induction Training;
MPRINT(EM_DIAGRAM):   * Rule Induction Training;
741931     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

741932     * Get counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get counts for DepVar;
741933     ;
MPRINT(EM_DIAGRAM):   ;
741934     data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
741935     set EMWS8.Meta3_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN;
741936     length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
741937     label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
741937   ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
741938     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
741939     %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
741940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: The data set WORK._SCR has 2374 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741941     proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
741942     table _level_ / out=_count;
MPRINT(EM_DIAGRAM):   table _level_ / out=_count;
741943     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._SCR.
NOTE: The data set WORK._COUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741944     * Get Normalized counts for DepVar;
MPRINT(EM_DIAGRAM):    * Get Normalized counts for DepVar;
741945     ;
MPRINT(EM_DIAGRAM):   ;
741946     data _scr(keep= _level_ DepVar);
MPRINT(EM_DIAGRAM):   data _scr(keep= _level_ DepVar);
741947     set EMWS8.Meta3_VALIDATE;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE;
741948     length _level_ $16;
MPRINT(EM_DIAGRAM):   length _level_ $16;
741949     label _level_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rulelevel_vlabel, NOQUOTE,
741949   ! DepVar))";
MPRINT(EM_DIAGRAM):   label _level_ = "DepVar";
741950     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
741951     %DMNORMCP(_tmp, _level_);
MPRINT(DMNORMCP):   _level_=dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
741952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META3_VALIDATE.
NOTE: The data set WORK._SCR has 1018 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

741953     proc freq data=_scr noprint;
MPRINT(EM_DIAGRAM):   proc freq data=_scr noprint;
741954     table _level_ / out= _vcount;
MPRINT(EM_DIAGRAM):   table _level_ / out= _vcount;
741955     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._SCR.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741956     data _vcount;
MPRINT(EM_DIAGRAM):    data _vcount;
741957     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
741958     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
741959     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
741960     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
741961     rename percent = vpercent;
MPRINT(EM_DIAGRAM):   rename percent = vpercent;
741962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741963     data _count;
MPRINT(EM_DIAGRAM):   data _count;
741964     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
741965     by _level_;
MPRINT(EM_DIAGRAM):   by _level_;
741966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741967     data _count;
MPRINT(EM_DIAGRAM):    data _count;
741968     set _count;
MPRINT(EM_DIAGRAM):   set _count;
741969     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
741970     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
741971     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741972     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
741973     by DESCENDING count;
MPRINT(EM_DIAGRAM):   by DESCENDING count;
741974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
741975     *;
741976     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_tarfreq_title, NOQUOTE, DepVar))";
MPRINT(EM_DIAGRAM):   title9 "Target=DepVar: Frequencies";
MPRINT(EM_DIAGRAM):   *;
741977     *;
741978     proc print data=_count noobs label;
MPRINT(EM_DIAGRAM):   proc print data=_count noobs label;
741979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 563.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

741980     title9;
MPRINT(EM_DIAGRAM):   title9;
741981     data WORK.M3BDNT6V;
MPRINT(EM_DIAGRAM):    data WORK.M3BDNT6V;
741982     set WORK.M3BDNT6V;
MPRINT(EM_DIAGRAM):   set WORK.M3BDNT6V;
741983     if NAME^='DepVar' then delete;
MPRINT(EM_DIAGRAM):   if NAME^='DepVar' then delete;
741984     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M3BDNT6V.
NOTE: The data set WORK.M3BDNT6V has 1 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

741985     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
741986     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
741987     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741988     %macro DMDBClass;
741989         DepVar(DESC)
741990     %mend DMDBClass;
741991     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741992     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
741993     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
741994     %macro DMDBVar;
741995     
741996     %mend DMDBVar;
741997     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
741998     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
741999     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742000     proc dmdb batch data=EMWS8.Meta3_TRAIN
742001     dmdbcat=WORK.EM_DMDB
742002     maxlevel = 513
742003     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Meta3_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
742004     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
742005     target
742006     DepVar
742007     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
742008     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
742009     quit;
742010     *--- end code ---*;

742011     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
742012     * Rip Model 1;
MPRINT(EM_DIAGRAM):   * Rip Model 1;
742013     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742014     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742015     * TREE MODEL DepVar BINARY RIP1;
MPRINT(EM_DIAGRAM):   * TREE MODEL DepVar BINARY RIP1;
742016     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS8.Meta3_TRAIN;
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
742017     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
742018     * Rule4: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule4: Create decision matrix;
742019     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742020     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742021     * Rule4: Tree Variables Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: Tree Variables Macro ;
742022     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742023     %macro EM_TREEVARS;
742024         AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts NumCatalogPurchases
742025        NumDealsPurchases NumWebVisitsMonth Recency
742026     %mend EM_TREEVARS;
742027     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742028     * Rule4: Tree Targets Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: Tree Targets Macro ;
742029     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742030     %macro EM_TREETARGETS;
742031         DepVar
742032     %mend EM_TREETARGETS;
742033     data WORK.EM_Rule4 / view=WORK.EM_Rule4;
MPRINT(EM_DIAGRAM):   data WORK.EM_Rule4 / view=WORK.EM_Rule4;
742034     set
742034   ! EMWS8.Meta3_TRAIN(keep=%EM_TREEVARS %EM_TREETARGETS);
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN(keep
MPRINT(EM_DIAGRAM):  =AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency DepVar);
742035     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_RULE4.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule4: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742036     *------------------------------------------------------------* ;
742037     * Rule4: Interval Inputs Macro ;
742038     *------------------------------------------------------------* ;
742039     %macro INTINPUTS;
742040         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
742041        NumWebVisitsMonth Recency
742042     %mend INTINPUTS;
742043     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742044     * Rule4: Binary and Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: Binary and Nominal Inputs Macro ;
742045     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742046     %macro NOMINPUTS;
742047         Marital_Status
742048     %mend NOMINPUTS;
742049     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742050     * Rule4: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: Ordinal Inputs Macro ;
742051     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742052     %macro ORDINPUTS;
742053     
742054     %mend ORDINPUTS;
742055     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742056     * Rule4: Run ARBOR procedure;
MPRINT(EM_DIAGRAM):   * Rule4: Run ARBOR procedure;
742057     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

742058     proc arbor data=WORK.EM_Rule4
742059     Leafsize=50
742060     Mincatsize = 5
742061     Maxdepth=4
742062     Missing=USEINSEARCH
742063     ;
MPRINT(EM_DIAGRAM):    proc arbor data=WORK.EM_Rule4 Leafsize=50 Mincatsize = 5 Maxdepth=4 
Missing=USEINSEARCH ;
742064     ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   input
742065     input %INTINPUTS
MPRINT(INTINPUTS):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases 
NumDealsPurchases NumWebVisitsMonth Recency
742066     / level = interval;
MPRINT(EM_DIAGRAM):   / level = interval;
MPRINT(EM_DIAGRAM):   input
742067     input %NOMINPUTS
MPRINT(NOMINPUTS):   Marital_Status
742068     / level=nominal;
MPRINT(EM_DIAGRAM):   / level=nominal;
742069     target DepVar / level=BINARY
742070     Criterion=GINI
742071     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=BINARY Criterion=GINI ;
742072     ;
MPRINT(EM_DIAGRAM):   ;
742073     Performance DISK
742074     ;
MPRINT(EM_DIAGRAM):   Performance DISK ;
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
742075     Assess
742076     Validata=EMWS8.Meta3_VALIDATE
742077     measure=ASE
742078     ;
MPRINT(EM_DIAGRAM):   Assess Validata=EMWS8.Meta3_VALIDATE measure=ASE ;
NOTE: 1446328 kilobytes of physical memory.
NOTE: Will use 2374 out of 2374 training cases.
NOTE: Using memory pool with 55433216 bytes.
NOTE: Passed training data 8 times.
NOTE: Training used 617040 bytes of work memory.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The subtree sequence contains 14 subtrees. The largest has 27 nodes and 14 leaves.
NOTE: Using subtree with 23 nodes and 12 leaves.
742079     MAKEMACRO NLEAVES=nleaves;
MPRINT(EM_DIAGRAM):   MAKEMACRO NLEAVES=nleaves;
NOTE: Created macro variable NLEAVES equal to 12.
742080     save
742081     MODEL=WORK.OUTTREE_TREE_20JCEB7
742082     SEQUENCE=WORK.OUTSEQ_TREE_20JCEB7
742083     IMPORTANCE=WORK.OUTIMPORT_TREE_20JCEB7
742084     NODESTAT=WORK.OUTNODES_TREE_20JCEB7
742085     SUMMARY=WORK.OUTSUMMARY_TREE_20JCEB7
742086     STATSBYNODE=WORK.OUTSTATS_TREE_20JCEB7
742087     Pathlistnonmissing = WORK.OUTPATH_TREE_20JCEB7
742088     Rules = WORK.OUTRULES_TREE_20JCEB7
742089     ;
MPRINT(EM_DIAGRAM):   save MODEL=WORK.OUTTREE_TREE_20JCEB7 SEQUENCE=WORK.OUTSEQ_TREE_20JCEB7 
IMPORTANCE=WORK.OUTIMPORT_TREE_20JCEB7 NODESTAT=WORK.OUTNODES_TREE_20JCEB7 
SUMMARY=WORK.OUTSUMMARY_TREE_20JCEB7 STATSBYNODE=WORK.OUTSTATS_TREE_20JCEB7 Pathlistnonmissing 
= WORK.OUTPATH_TREE_20JCEB7 Rules = WORK.OUTRULES_TREE_20JCEB7 ;
NOTE: The data set WORK.OUTIMPORT_TREE_20JCEB7 has 9 observations and 6 variables.
NOTE: The data set WORK.OUTTREE_TREE_20JCEB7 has 846 observations and 4 variables.
NOTE: The data set WORK.OUTNODES_TREE_20JCEB7 has 23 observations and 24 variables.
NOTE: The data set WORK.OUTPATH_TREE_20JCEB7 has 86 observations and 7 variables.
NOTE: The data set WORK.OUTRULES_TREE_20JCEB7 has 249 observations and 6 variables.
NOTE: The data set WORK.OUTSEQ_TREE_20JCEB7 has 14 observations and 20 variables.
NOTE: The data set WORK.OUTSTATS_TREE_20JCEB7 has 161 observations and 5 variables.
NOTE: The data set WORK.OUTSUMMARY_TREE_20JCEB7 has 24 observations and 6 variables.
742090     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
742090   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1.sas"
742091     group=Rule4
742092     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1.sas" group=Rule4 ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1.sas opened.
742093     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
742093   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1_res.sas"
742094     group=Rule4
742095     residual
742096     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1_res.sas" group=Rule4 residual ;
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\RIP1_res.sas opened.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
742097     score data=EMWS8.Meta3_TRAIN out=_ptrain
742098     ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_TRAIN out=_ptrain ;
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 59 variables.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
742099     score data=EMWS8.Meta3_VALIDATE out=_pvalid
742100     ;
MPRINT(EM_DIAGRAM):   score data=EMWS8.Meta3_VALIDATE out=_pvalid ;
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK._PVALID has 1018 observations and 59 variables.
742101     run;
MPRINT(EM_DIAGRAM):   run;

742102     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View WORK.EM_RULE4.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
      
NOTE: There were 2374 observations read from the data set EMWS8.META3_TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_RULE4.
NOTE: The data set WORK._NAMEDAT has 2 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
      

742103     data WORK.OUTIMPORT_TREE_20JCEB7;
MPRINT(EM_DIAGRAM):    data WORK.OUTIMPORT_TREE_20JCEB7;
742104     set WORK.OUTIMPORT_TREE_20JCEB7;
MPRINT(EM_DIAGRAM):   set WORK.OUTIMPORT_TREE_20JCEB7;
742105     label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))" LABEL =
742105   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))" NRULES =
742105   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))" IMPORTANCE =
742106        "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))" NSURROGATES =
742106   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
742107     VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
742107   ! RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
742108     ;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of 
Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" 
VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
742109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: There were 9 observations read from the data set WORK.OUTIMPORT_TREE_20JCEB7.
NOTE: The data set WORK.OUTIMPORT_TREE_20JCEB7 has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742110     filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
742110   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
MPRINT(EM_DIAGRAM):   filename x "C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE" encoding='utf-8' NOBOM;
742111     data temp;
MPRINT(EM_DIAGRAM):    data temp;
742112     length varname $19;
MPRINT(EM_DIAGRAM):   length varname $19;
742113     retain varname;
MPRINT(EM_DIAGRAM):   retain varname;
742114     set WORK.OUTPATH_TREE_20JCEB7;
MPRINT(EM_DIAGRAM):   set WORK.OUTPATH_TREE_20JCEB7;
742115     if ^missing(variable) then varname=variable;
MPRINT(EM_DIAGRAM):   if ^missing(variable) then varname=variable;
742116     else if ^missing(var_name) then varname=var_name;
MPRINT(EM_DIAGRAM):   else if ^missing(var_name) then varname=var_name;
742117     output;
MPRINT(EM_DIAGRAM):   output;
742118     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 86 observations read from the data set WORK.OUTPATH_TREE_20JCEB7.
NOTE: The data set WORK.TEMP has 86 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742119     proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
742120     by node;
MPRINT(EM_DIAGRAM):   by node;
742121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 86 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 86 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742122     proc sort data=WORK.OUTNODES_TREE_20JCEB7 out=outnodes;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.OUTNODES_TREE_20JCEB7 out=outnodes;
742123     by node;
MPRINT(EM_DIAGRAM):   by node;
742124     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK.OUTNODES_TREE_20JCEB7.
NOTE: The data set WORK.OUTNODES has 23 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742125     data temp;
MPRINT(EM_DIAGRAM):   data temp;
742126     merge temp(in=_a) outnodes(keep= node
742127     NPRIORS
742128     P_DepVar0
742129     P_DepVar1
742130     );
MPRINT(EM_DIAGRAM):   merge temp(in=_a) outnodes(keep= node NPRIORS P_DepVar0 P_DepVar1 );
742131     by node;
MPRINT(EM_DIAGRAM):   by node;
742132     if _a;
MPRINT(EM_DIAGRAM):   if _a;
742133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 86 observations read from the data set WORK.TEMP.
NOTE: There were 23 observations read from the data set WORK.OUTNODES.
NOTE: The data set WORK.TEMP has 86 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742134     proc sort data=temp;
MPRINT(EM_DIAGRAM):   proc sort data=temp;
742135     by node descending varname descending numeric_value;
MPRINT(EM_DIAGRAM):   by node descending varname descending numeric_value;
742136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 86 observations read from the data set WORK.TEMP.
NOTE: The data set WORK.TEMP has 86 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742137     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
742138     file x;
MPRINT(EM_DIAGRAM):   file x;
742139     set temp;
MPRINT(EM_DIAGRAM):   set temp;
742140     by node descending varname;
MPRINT(EM_DIAGRAM):   by node descending varname;
742141     retain origvar oldnode string;
MPRINT(EM_DIAGRAM):   retain origvar oldnode string;
742142     length origvar $32 oldnode 8 string $200;
MPRINT(EM_DIAGRAM):   length origvar $32 oldnode 8 string $200;
742143     if _n_ = 1 then do;
MPRINT(EM_DIAGRAM):   if _n_ = 1 then do;
742144     origvar = varname;
MPRINT(EM_DIAGRAM):   origvar = varname;
742145     oldnode = node;
MPRINT(EM_DIAGRAM):   oldnode = node;
742146     end;
MPRINT(EM_DIAGRAM):   end;
742147     if first.node then do;
MPRINT(EM_DIAGRAM):   if first.node then do;
742148     put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
742149     put " Node = " node;
MPRINT(EM_DIAGRAM):   put " Node = " node;
742150     put "&EM_CODEBAR";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
742151     end;
MPRINT(EM_DIAGRAM):   end;
742152     if first.varname then do;
MPRINT(EM_DIAGRAM):   if first.varname then do;
742153     if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
742154     if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
742155     if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
742156     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
742157     string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
742158     end;
MPRINT(EM_DIAGRAM):   end;
742159     else do;
MPRINT(EM_DIAGRAM):   else do;
742160     string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
742161     end;
MPRINT(EM_DIAGRAM):   end;
742162     end;
MPRINT(EM_DIAGRAM):   end;
742163     end;
MPRINT(EM_DIAGRAM):   end;
742164     else do;
MPRINT(EM_DIAGRAM):   else do;
742165     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
742166     string= "AND "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "AND "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
742167     end;
MPRINT(EM_DIAGRAM):   end;
742168     else do;
MPRINT(EM_DIAGRAM):   else do;
742169     string= "if "|| strip(varname)||" "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   string= "if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
742170     end;
MPRINT(EM_DIAGRAM):   end;
742171     end;
MPRINT(EM_DIAGRAM):   end;
742172     end;
MPRINT(EM_DIAGRAM):   end;
742173     else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
742174     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
742175     string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "AND "||strip(varname) ||" IS ONE OF: "||character_value;
742176     end;
MPRINT(EM_DIAGRAM):   end;
742177     else do;
MPRINT(EM_DIAGRAM):   else do;
742178     string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" IS ONE OF: "||character_value;
742179     end;
MPRINT(EM_DIAGRAM):   end;
742180     end;
MPRINT(EM_DIAGRAM):   end;
742181     else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
742182     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
742183     string = " AND "|| strip(varname) || " equals Missing";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals Missing";
742184     end;
MPRINT(EM_DIAGRAM):   end;
742185     else do;
MPRINT(EM_DIAGRAM):   else do;
742186     string = "if "|| strip(varname) ||" equals Missing";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals Missing";
742187     end;
MPRINT(EM_DIAGRAM):   end;
742188     end;
MPRINT(EM_DIAGRAM):   end;
742189     else if RELATION in ("ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISNOTMISSING") then do;
742190     if ^first.node then do;
MPRINT(EM_DIAGRAM):   if ^first.node then do;
742191     string = " AND "|| strip(varname) || " equals All Values";
MPRINT(EM_DIAGRAM):   string = " AND "|| strip(varname) || " equals All Values";
742192     end;
MPRINT(EM_DIAGRAM):   end;
742193     else do;
MPRINT(EM_DIAGRAM):   else do;
742194     string = "if "|| strip(varname) ||" equals All Values";
MPRINT(EM_DIAGRAM):   string = "if "|| strip(varname) ||" equals All Values";
742195     end;
MPRINT(EM_DIAGRAM):   end;
742196     end;
MPRINT(EM_DIAGRAM):   end;
742197     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
742198     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
742199     end;
MPRINT(EM_DIAGRAM):   end;
742200     else do;
MPRINT(EM_DIAGRAM):   else do;
742201     if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION ^in ("=", "ISMISSING", "ISNOTMISSING") then do;
742202     if MISSING(CHARACTER_VALUE) then do;
MPRINT(EM_DIAGRAM):   if MISSING(CHARACTER_VALUE) then do;
742203     if NUMERIC_VALUE ne . then do;
MPRINT(EM_DIAGRAM):   if NUMERIC_VALUE ne . then do;
742204     if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
742204   ! "||strip(relation)||" "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(numeric_value);
742205     else string= " if "|| strip(varname)||" "||strip(relation)||"
742205   ! "||strip(numeric_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(numeric_value);
742206     end;
MPRINT(EM_DIAGRAM):   end;
742207     end;
MPRINT(EM_DIAGRAM):   end;
742208     else do;
MPRINT(EM_DIAGRAM):   else do;
742209     if ^MISSING(string) then string= strip(string)||" AND "|| strip(varname)||"
742209   ! "||strip(relation)||" "||strip(character_value);
MPRINT(EM_DIAGRAM):   if ^MISSING(string) then string= strip(string)||" AND "|| 
strip(varname)||" "||strip(relation)||" "||strip(character_value);
742210     else string= " if "|| strip(varname)||" "||strip(relation)||"
742210   ! "||strip(character_value);
MPRINT(EM_DIAGRAM):   else string= " if "|| strip(varname)||" "||strip(relation)||" 
"||strip(character_value);
742211     end;
MPRINT(EM_DIAGRAM):   end;
742212     end;
MPRINT(EM_DIAGRAM):   end;
742213     else if RELATION in ("=") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("=") then do;
742214     string = strip(string)||", "||strip(character_value);
MPRINT(EM_DIAGRAM):   string = strip(string)||", "||strip(character_value);
742215     end;
MPRINT(EM_DIAGRAM):   end;
742216     else if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   else if RELATION in ("ISMISSING") then do;
742217     end;
MPRINT(EM_DIAGRAM):   end;
742218     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
742219     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
742220     end;
MPRINT(EM_DIAGRAM):   end;
742221     if last.varname then do;
MPRINT(EM_DIAGRAM):   if last.varname then do;
742222     if RELATION in ("ISMISSING") then do;
MPRINT(EM_DIAGRAM):   if RELATION in ("ISMISSING") then do;
742223     if ^first.varname then do;
MPRINT(EM_DIAGRAM):   if ^first.varname then do;
742224     string = strip(string) || " or MISSING";
MPRINT(EM_DIAGRAM):   string = strip(string) || " or MISSING";
742225     end;
MPRINT(EM_DIAGRAM):   end;
742226     end;
MPRINT(EM_DIAGRAM):   end;
742227     put string;
MPRINT(EM_DIAGRAM):   put string;
742228     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
742229     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
742230     end;
MPRINT(EM_DIAGRAM):   end;
742231     if last.node then do;
MPRINT(EM_DIAGRAM):   if last.node then do;
742232     put "then ";
MPRINT(EM_DIAGRAM):   put "then ";
742233     put " Tree Node Identifier   = " node;
MPRINT(EM_DIAGRAM):   put " Tree Node Identifier   = " node;
742234     put " Number of Observations = " NPRIORS;
MPRINT(EM_DIAGRAM):   put " Number of Observations = " NPRIORS;
742235     put " Predicted: DepVar=0  = " P_DepVar0;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=0  = " P_DepVar0;
742236     put " Predicted: DepVar=1  = " P_DepVar1;
MPRINT(EM_DIAGRAM):   put " Predicted: DepVar=1  = " P_DepVar1;
742237     put " ";
MPRINT(EM_DIAGRAM):   put " ";
742238     if ^missing(varname) then origvar = varname;
MPRINT(EM_DIAGRAM):   if ^missing(varname) then origvar = varname;
742239     oldnode=node;
MPRINT(EM_DIAGRAM):   oldnode=node;
742240     end;
MPRINT(EM_DIAGRAM):   end;
742241     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      742157:67    742160:66    742204:108   742205:72    
NOTE: The file X is:
      
      Filename=C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\DESCRIBE.SOURCE,
      RECFM=V,LRECL=1536,File Size (bytes)=0,
      Last Modified=28. April 2016 19.52 Uhr,
      Create Time=28. April 2016 19.52 Uhr

NOTE: 141 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 68.
NOTE: There were 86 observations read from the data set WORK.TEMP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742242     filename x;
MPRINT(EM_DIAGRAM):    filename x;
NOTE: Fileref X has been deassigned.
742243     data leafds;
MPRINT(EM_DIAGRAM):    data leafds;
742244     set WORK.OUTNODES_TREE_20JCEB7;
MPRINT(EM_DIAGRAM):   set WORK.OUTNODES_TREE_20JCEB7;
742245     if LEAF ne .;
MPRINT(EM_DIAGRAM):   if LEAF ne .;
742246     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set WORK.OUTNODES_TREE_20JCEB7.
NOTE: The data set WORK.LEAFDS has 12 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742247     proc sort data=leafds;
MPRINT(EM_DIAGRAM):   proc sort data=leafds;
742248     by descending N;
MPRINT(EM_DIAGRAM):   by descending N;
742249     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 12 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: Argument three to KSUBSTR exceeds the length of the input string, the function has 
      recalculated the length of the string.
RIP LEAF: N=1  varid=17  nodeid=20  val=0.99302788844621  count=1004 
RIP LEAF: N=2  varid=18  nodeid=20  val=0.00697211155378  count=1004 
RIP LEAF: N=1  varid=17  nodeid=16  val=0.90114942528735  count=435 
RIP LEAF: N=2  varid=18  nodeid=16  val=0.09885057471264  count=435 
RIP LEAF: N=1  varid=17  nodeid=12  val=0.42944785276073  count=163 
RIP LEAF: N=2  varid=18  nodeid=12  val=0.57055214723926  count=163 
RIP LEAF: N=1  varid=17  nodeid=25  val=0.91156462585034  count=147 
RIP LEAF: N=2  varid=18  nodeid=25  val=0.08843537414965  count=147 
RIP LEAF: N=1  varid=17  nodeid=17  val=0.64  count=125 
RIP LEAF: N=2  varid=18  nodeid=17  val=0.36  count=125 
RIP LEAF: N=1  varid=17  nodeid=10  val=0.90178571428571  count=112 
RIP LEAF: N=2  varid=18  nodeid=10  val=0.09821428571428  count=112 
RIP LEAF: N=1  varid=17  nodeid=21  val=0.94545454545454  count=110 
RIP LEAF: N=2  varid=18  nodeid=21  val=0.05454545454545  count=110 
RIP LEAF: N=1  varid=17  nodeid=24  val=0.75806451612903  count=62 
RIP LEAF: N=2  varid=18  nodeid=24  val=0.24193548387096  count=62 
RIP LEAF: N=1  varid=17  nodeid=9  val=0.46551724137931  count=58 
RIP LEAF: N=2  varid=18  nodeid=9  val=0.53448275862068  count=58 
RIP LEAF: N=1  varid=17  nodeid=13  val=0.05263157894736  count=57 
RIP LEAF: N=2  varid=18  nodeid=13  val=0.94736842105263  count=57 
RIP LEAF: N=1  varid=17  nodeid=26  val=0.47058823529411  count=51 
RIP LEAF: N=2  varid=18  nodeid=26  val=0.52941176470588  count=51 
RIP LEAF: N=1  varid=17  nodeid=27  val=0.72  count=50 
RIP LEAF: N=2  varid=18  nodeid=27  val=0.28  count=50 
742250     * RIP1: Print leaf table;
MPRINT(EM_DIAGRAM):    * RIP1: Print leaf table;
742251     ;
MPRINT(EM_DIAGRAM):   ;
742252     data leafds;
MPRINT(EM_DIAGRAM):   data leafds;
742253     set leafds;
MPRINT(EM_DIAGRAM):   set leafds;
742254     format P_DEPVAR0 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR0 8.4;
742255     format P_DEPVAR1 8.4;
MPRINT(EM_DIAGRAM):   format P_DEPVAR1 8.4;
742256     ;
MPRINT(EM_DIAGRAM):   ;
742257     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.LEAFDS.
NOTE: The data set WORK.LEAFDS has 12 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742258     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_leaftable_title, NOQUOTE, RIP1, 100))";
MPRINT(EM_DIAGRAM):   title9 "RIP1 Leaf Table: Threshold= 100";
742259     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, %nrbquote(No leaf
742259   ! was ripped from the model.)))";
MPRINT(EM_DIAGRAM):   title10 "No leaf was ripped from the model.";
742260     proc print data = leafds NOOBS LABEL;
MPRINT(EM_DIAGRAM):   proc print data = leafds NOOBS LABEL;
742261     var NODE N
742262     P_DEPVAR0
742263     P_DEPVAR1
742264     ;
MPRINT(EM_DIAGRAM):   var NODE N P_DEPVAR0 P_DEPVAR1 ;
742265     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.LEAFDS.
NOTE: The PROCEDURE PRINT printed page 564.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742266     title9;
MPRINT(EM_DIAGRAM):   title9;
742267     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):   ;
742268     * Create training data set with binary target for modeling;
742269     ;
742270     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
742271     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
742272     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
742273     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
742274     %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
742275     _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
742276     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
742277     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
742278     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
742279     drop _tmp _tmpLevel
742280     ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
742281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 2374 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742282     * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
742283     ;
MPRINT(EM_DIAGRAM):   ;
742284     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
742285     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
742286     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
742287     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
742288     %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
742289     _tmpLevel = '0';
MPRINT(EM_DIAGRAM):   _tmpLevel = '0';
742290     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
742291     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
742292     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
742293     drop _tmp
742294     ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
742295     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 1018 observations and 61 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742296     data _train;
MPRINT(EM_DIAGRAM):    data _train;
742297     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
742298     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 2374 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742299     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
742300     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
742301     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 1018 observations and 61 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742302     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
742303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 60 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742304     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
742305     %let _dsidTable = 0;
742306     %let _engineTable =;
742307     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
742308     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
742309     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
742310     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
742311     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
742312     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
742313     end;
MPRINT(EM_DIAGRAM):   end;
742314     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742315     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
742316     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
742317     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
742318     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
742319     output;
MPRINT(EM_DIAGRAM):   output;
742320     stop;
MPRINT(EM_DIAGRAM):   stop;
742321     end;
MPRINT(EM_DIAGRAM):   end;
742322     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742323     proc contents data=work._train
742324     out=WORK.M1ODQ4HZ noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M1ODQ4HZ noprint;
742325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M1ODQ4HZ has 60 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742326     data WORK.M1ODQ4HZ;
MPRINT(EM_DIAGRAM):    data WORK.M1ODQ4HZ;
742327     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
742327   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
742328     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
742329     set WORK.M1ODQ4HZ(keep=name type length label format formatl formatd informat
742329   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M1ODQ4HZ(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
742330     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
742331     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
742332     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
742333     if format ne ' ' then format = strip(format)!!strip(put(formatl,
742333   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
742334     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
742335     end;
MPRINT(EM_DIAGRAM):   end;
742336     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
742337     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
742338     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
742338   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
742339     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
742340     end;
MPRINT(EM_DIAGRAM):   end;
742341     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
742342     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
742343     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
742344     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
742345     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
742346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M1ODQ4HZ.
NOTE: The data set WORK.M1ODQ4HZ has 60 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742347     data WORK.M1ODQ4HZ;
MPRINT(EM_DIAGRAM):    data WORK.M1ODQ4HZ;
742348     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
742349     set WORK.M1ODQ4HZ;
MPRINT(EM_DIAGRAM):   set WORK.M1ODQ4HZ;
742350     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
742351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M1ODQ4HZ.
NOTE: The data set WORK.M1ODQ4HZ has 60 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M3TIF648 NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
742355     data WORK.M3TIF648;
MPRINT(EM_DIAGRAM):    data WORK.M3TIF648;
742356     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
742357     set WORK.M3TIF648;
MPRINT(EM_DIAGRAM):   set WORK.M3TIF648;
742358     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 60 observations read from the data set WORK.M3TIF648.
NOTE: The data set WORK.M3TIF648 has 60 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M2B3QGR6(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M3TIF648;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M3TIF648;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M3TIF648;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB3P829XU 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmp1 AcceptedCmp2 AcceptedCmp3 AcceptedCmp4 AcceptedCmp5 
AcceptedCmpTotal Age Complain Custid DepVar Dt_Customer Education Element1 Element2 Element3 
Element4 Frq F_DepVar Group HigherEducation HigherEducationBinary Income I_DepVar Kidhome 
Marital_Status Mnt MntFishProducts MntFruits MntGoldProds MntMeatProducts MntSweetProducts 
MntWines MonthsAsCustomer NumCatalogPurchases NumDealsPurchases NumDistPurchases 
NumStorePurchases NumWebPurchases NumWebVisitsMonth P_DepVar0 P_DepVar1 Q_DepVar0 Q_DepVar1 
Recency RFMstat RMntFrq R_DepVar0 R_DepVar1 Teenhome U_DepVar V_DepVar0 V_DepVar1 Year_Birth 
Z_CostContact Z_Revenue _bin _dataobs_ _LEAF_ _NODE_ _WARN_
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB3P829XU noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT3P829XU(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS3P829XU(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB3P829XU(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS3P829XU;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT3P829XU;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS3P829XU;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT3P829XU _MISS3P829XU;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS3P829XU NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3TIF648 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M3TIF648;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M3TIF648 _COUNTS3P829XU;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
742648     data WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):    data WORK.M1FDRQZT;
742649     set WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):   set WORK.M1FDRQZT;
742650     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
742651     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
742652     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
742653     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
742654     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
742655     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
742656     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
742657     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
742658     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1FDRQZT.
NOTE: The data set WORK.M1FDRQZT has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742659     data WORK.M3IJ5WNH;
MPRINT(EM_DIAGRAM):    data WORK.M3IJ5WNH;
742660     set WORK.M3IJ5WNH;
MPRINT(EM_DIAGRAM):   set WORK.M3IJ5WNH;
742661     if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
742662     if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
742663     ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
742664     LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
742665     USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
742666     end;
MPRINT(EM_DIAGRAM):   end;
742667     if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
742668     ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
742669     end;
MPRINT(EM_DIAGRAM):   end;
742670     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
742671     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
742672     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
742673     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
742674     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
742675     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
742676     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
742677     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
742678     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.M3IJ5WNH.
NOTE: The data set WORK.M3IJ5WNH has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742679     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
742680     * Binary Model DepVar = 0;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 0;
742681     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742682     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742683     * REGRESSION MODEL DepVar binary BIN1;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN1;
742684     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742685     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742686     * Rule4: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule4: Create decision matrix;
742687     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742688     data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
742689     set work._train(keep=
742690     AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts
742691     NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= AcceptedCmpTotal DepVar Frq Marital_Status Mnt 
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency _bin);
742692     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742693     *------------------------------------------------------------* ;
742694     * Rule4: DMDBClass Macro ;
742695     *------------------------------------------------------------* ;
742696     %macro DMDBClass;
742697         DepVar(ASC) Marital_Status(ASC) _bin(DESC)
742698     %mend DMDBClass;
742699     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742700     * Rule4: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBVar Macro ;
742701     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
742702     %macro DMDBVar;
742703         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
742704        NumWebVisitsMonth Recency
742705     %mend DMDBVar;
742706     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742707     * Rule4: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule4: Create DMDB;
742708     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742709     proc dmdb batch data=WORK.EM_DMREG
742710     dmdbcat=WORK.Rule4_DMDB
742711     maxlevel = 513
742712     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule4_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
742713     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) Marital_Status(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
742714     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases 
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
742715     target
742716     _bin
742717     ;
MPRINT(EM_DIAGRAM):   target _bin ;
742718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
742719     quit;
742720     *--- end code ---*;

742721     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
742722     * Rule4: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule4: Run DMREG procedure;
742723     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
742724     proc dmreg data=EM_DMREG dmdbcat=WORK.Rule4_DMDB
742725     validata = work._valid
742726     outest = WORK.DMREG_33RA5JB_OUTEST
742727     outterms = WORK.DMREG_33RA5JB_OUTTERMS
742728     outmap= WORK.DMREG_33RA5JB_MAP namelen=200
742729     ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule4_DMDB validata = work._valid 
outest = WORK.DMREG_33RA5JB_OUTEST outterms = WORK.DMREG_33RA5JB_OUTTERMS outmap= 
WORK.DMREG_33RA5JB_MAP namelen=200 ;
742730     class
742731     _bin
742732     Marital_Status
742733     ;
MPRINT(EM_DIAGRAM):   class _bin Marital_Status ;
742734     model _bin =
742735     AcceptedCmpTotal
742736     Frq
742737     Marital_Status
742738     Mnt
742739     MntMeatProducts
742740     NumCatalogPurchases
742741     NumDealsPurchases
742742     NumWebVisitsMonth
742743     Recency
742744     /error=binomial link=LOGIT
742745     coding=DEVIATION
742746     nodesignprint
742747     ;
MPRINT(EM_DIAGRAM):   model _bin = AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency /error=binomial link=LOGIT 
coding=DEVIATION nodesignprint ;
742748     ;
MPRINT(EM_DIAGRAM):   ;
742749     score data=_train
742750     out=_ptrain(label="")
742751     ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
742752     score data=_valid
742753     out=_pvalid(label="")
742754     ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
742755     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
742755   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1.sas"
742756     group=Rule4_1
742757     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1.sas" group=Rule4_1 ;
742758     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
742758   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1_res.sas"
742759     group=Rule4_1
742760     residual
742761     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1_res.sas" group=Rule4_1 residual ;
742762     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ already exists on file WORK._PTRAIN, using _WARN_2 instead.
NOTE: Variable _WARN_ already exists on file WORK._PVALID, using _WARN_2 instead.

NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN1_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 2374 observations read from the data set WORK.EM_DMREG.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: There were 2374 observations read from the data set WORK._TRAIN.
NOTE: There were 1018 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_33RA5JB_OUTEST has 3 observations and 47 variables.
NOTE: The data set WORK.DMREG_33RA5JB_OUTTERMS has 13 observations and 6 variables.
NOTE: The data set WORK.DMREG_33RA5JB_MAP has 2 observations and 14 variables.
NOTE: The data set WORK._PTRAIN has 2374 observations and 69 variables.
NOTE: The data set WORK._PVALID has 1018 observations and 70 variables.
NOTE: The PROCEDURE DMREG printed pages 565-566.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.21 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
742763     quit;

742764     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
742765     delete Rule4_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule4_DMDB;
742766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE4_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
742767     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742768     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
742769     delete Rule4_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule4_DMDB / memtype=catalog;
742770     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE4_DMDB (memtype=CATALOG).
742771     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

742772     * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
742773     ;
MPRINT(EM_DIAGRAM):   ;
742774     proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
742775     tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
742776     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

742777     data _count;
MPRINT(EM_DIAGRAM):   data _count;
742778     set _count;
MPRINT(EM_DIAGRAM):   set _count;
742779     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
742780     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
742781     label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
742782     label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
742783     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
742784     * BINARY: Validation Classification;
742785     ;
742786     proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
742787     tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
742788     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742789     data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
742790     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
742791     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
742792     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
742793     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
742794     label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
742795     label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
742796     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
742797     rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
742798     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
742799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
742800     *;
742801     data _count;
MPRINT(EM_DIAGRAM):   data _count;
742802     set _count;
MPRINT(EM_DIAGRAM):   set _count;
742803     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
742804     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
742805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
742806     * Merge Train and Valid classification;
742807     ;
742808     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
742809     by key;
MPRINT(EM_DIAGRAM):   by key;
742810     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742811     proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
742812     by key;
MPRINT(EM_DIAGRAM):   by key;
742813     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *;
742814     *;
742815     data _count;
MPRINT(EM_DIAGRAM):   data _count;
742816     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
742817     by key;
MPRINT(EM_DIAGRAM):   by key;
742818     drop key;
MPRINT(EM_DIAGRAM):   drop key;
742819     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: There were 4 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
742820     *BINARY: Print Classification;
742821     ;
742822     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
742822   ! %nrbquote(0)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 0";
742823     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
742824     proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
742825     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 567.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742826     title9;
MPRINT(EM_DIAGRAM):   title9;
742827     title10;
MPRINT(EM_DIAGRAM):   title10;
742828     * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
742829     ;
MPRINT(EM_DIAGRAM):   ;
742830     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
742831     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
742832     if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
742833     keep
742834     AcceptedCmpTotal
742835     Frq
742836     Marital_Status
742837     Mnt
742838     MntMeatProducts
742839     NumCatalogPurchases
742840     NumDealsPurchases
742841     NumWebVisitsMonth
742842     Recency
742843     DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency DepVar;
742844     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2374 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 418 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
742845     * Extract misfit validation values;
742846     ;
742847     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
742848     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
742849     if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
742850     keep
742851     AcceptedCmpTotal
742852     Frq
742853     Marital_Status
742854     Mnt
742855     MntMeatProducts
742856     NumCatalogPurchases
742857     NumDealsPurchases
742858     NumWebVisitsMonth
742859     Recency
742860     DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency DepVar;
742861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1018 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 182 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

742862     * Create training data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create training data set with binary target for modeling;
742863     ;
MPRINT(EM_DIAGRAM):   ;
742864     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
742865     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
742866     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
742867     _tmp=putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp=putn(DepVar, 'best.');
742868     %DMNORMIP(_tmp);
MPRINT(DMNORMIP):   call dmnorm(_tmp,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
742869     _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
742870     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
742871     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
742872     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
742873     drop _tmp _tmpLevel
742874     ;
MPRINT(EM_DIAGRAM):   drop _tmp _tmpLevel ;
742875     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 418 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 418 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742876     * Create validation data set with binary target for modeling;
MPRINT(EM_DIAGRAM):    * Create validation data set with binary target for modeling;
742877     ;
MPRINT(EM_DIAGRAM):   ;
742878     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
742879     length _bin $12;
MPRINT(EM_DIAGRAM):   length _bin $12;
742880     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
742881     _tmp = putn(DepVar, 'best.');
MPRINT(EM_DIAGRAM):   _tmp = putn(DepVar, 'best.');
742882     %DMNORMIP(_TMP);
MPRINT(DMNORMIP):   call dmnorm(_TMP,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
742883     _tmpLevel = '1';
MPRINT(EM_DIAGRAM):   _tmpLevel = '1';
742884     %DMNORMCP(_tmpLevel, _tmpLevel);
MPRINT(DMNORMCP):   _tmpLevel=dmnorm(_tmpLevel,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
742885     if _tmp eq _tmpLevel then _bin = '1';
MPRINT(EM_DIAGRAM):   if _tmp eq _tmpLevel then _bin = '1';
742886     else _bin = '0';
MPRINT(EM_DIAGRAM):   else _bin = '0';
742887     drop _tmp
742888     ;
MPRINT(EM_DIAGRAM):   drop _tmp ;
742889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 182 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 182 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742890     data _train;
MPRINT(EM_DIAGRAM):    data _train;
742891     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
742892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 418 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 418 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742893     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
742894     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
742895     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 182 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 182 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742896     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
742897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 11 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742898     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
742899     %let _dsidTable = 0;
742900     %let _engineTable =;
742901     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
742902     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
742903     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
742904     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
742905     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
742906     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
742907     end;
MPRINT(EM_DIAGRAM):   end;
742908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742909     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
742910     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
742911     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
742912     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
742913     output;
MPRINT(EM_DIAGRAM):   output;
742914     stop;
MPRINT(EM_DIAGRAM):   stop;
742915     end;
MPRINT(EM_DIAGRAM):   end;
742916     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742917     proc contents data=work._train
742918     out=WORK.M18JP1C3 noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M18JP1C3 noprint;
742919     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M18JP1C3 has 11 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

742920     data WORK.M18JP1C3;
MPRINT(EM_DIAGRAM):    data WORK.M18JP1C3;
742921     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
742921   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
742922     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
742923     set WORK.M18JP1C3(keep=name type length label format formatl formatd informat
742923   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M18JP1C3(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
742924     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
742925     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
742926     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
742927     if format ne ' ' then format = strip(format)!!strip(put(formatl,
742927   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
742928     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
742929     end;
MPRINT(EM_DIAGRAM):   end;
742930     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
742931     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
742932     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
742932   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
742933     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
742934     end;
MPRINT(EM_DIAGRAM):   end;
742935     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
742936     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
742937     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
742938     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
742939     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
742940     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M18JP1C3.
NOTE: The data set WORK.M18JP1C3 has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

742941     data WORK.M18JP1C3;
MPRINT(EM_DIAGRAM):    data WORK.M18JP1C3;
742942     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
742943     set WORK.M18JP1C3;
MPRINT(EM_DIAGRAM):   set WORK.M18JP1C3;
742944     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
742945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M18JP1C3.
NOTE: The data set WORK.M18JP1C3 has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1QWG6R3 NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
742949     data WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):    data WORK.M1QWG6R3;
742950     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
742951     set WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):   set WORK.M1QWG6R3;
742952     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1QWG6R3.
NOTE: The data set WORK.M1QWG6R3 has 11 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M2ZGIHAV(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB0C0EYRJ 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency _bin
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB0C0EYRJ noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT0C0EYRJ(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS0C0EYRJ(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB0C0EYRJ(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS0C0EYRJ;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT0C0EYRJ;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS0C0EYRJ;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT0C0EYRJ _MISS0C0EYRJ;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS0C0EYRJ NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1QWG6R3 NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M1QWG6R3;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M1QWG6R3 _COUNTS0C0EYRJ;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
743234     data WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):    data WORK.M1FDRQZT;
743235     set WORK.M1FDRQZT;
MPRINT(EM_DIAGRAM):   set WORK.M1FDRQZT;
743236     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
743237     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
743238     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
743239     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
743240     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
743241     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
743242     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
743243     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
743244     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.M1FDRQZT.
NOTE: The data set WORK.M1FDRQZT has 11 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743245     data WORK.M1YK84JC;
MPRINT(EM_DIAGRAM):    data WORK.M1YK84JC;
743246     set WORK.M1YK84JC;
MPRINT(EM_DIAGRAM):   set WORK.M1YK84JC;
743247     if role='INPUT' and use='D' then use='Y';
MPRINT(EM_DIAGRAM):   if role='INPUT' and use='D' then use='Y';
743248     if NAME='_bin' then do;
MPRINT(EM_DIAGRAM):   if NAME='_bin' then do;
743249     ROLE='TARGET';
MPRINT(EM_DIAGRAM):   ROLE='TARGET';
743250     LEVEL='BINARY';
MPRINT(EM_DIAGRAM):   LEVEL='BINARY';
743251     USE='Y';
MPRINT(EM_DIAGRAM):   USE='Y';
743252     end;
MPRINT(EM_DIAGRAM):   end;
743253     if NAME='DepVar' then do;
MPRINT(EM_DIAGRAM):   if NAME='DepVar' then do;
743254     ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
743255     end;
MPRINT(EM_DIAGRAM):   end;
743256     if NAME='Element1' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element1' then delete;
743257     if NAME='Element2' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element2' then delete;
743258     if NAME='Element3' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element3' then delete;
743259     if NAME='Element4' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Element4' then delete;
743260     if NAME='Group' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Group' then delete;
743261     if NAME='Z_CostContact' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_CostContact' then delete;
743262     if NAME='Z_Revenue' then delete;
MPRINT(EM_DIAGRAM):   if NAME='Z_Revenue' then delete;
743263     if NAME='_WARN_' then delete;
MPRINT(EM_DIAGRAM):   if NAME='_WARN_' then delete;
743264     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 12 observations read from the data set WORK.M1YK84JC.
NOTE: The data set WORK.M1YK84JC has 12 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743265     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
743266     * Binary Model DepVar = 1;
MPRINT(EM_DIAGRAM):   * Binary Model DepVar = 1;
743267     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743268     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743269     * REGRESSION MODEL DepVar binary BIN2;
MPRINT(EM_DIAGRAM):   * REGRESSION MODEL DepVar binary BIN2;
743270     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743271     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743272     * Rule4: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Rule4: Create decision matrix;
743273     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743274     data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
743275     set work._train(keep=
743276     AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts
743277     NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency _bin);
MPRINT(EM_DIAGRAM):   set work._train(keep= AcceptedCmpTotal DepVar Frq Marital_Status Mnt 
MntMeatProducts NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency _bin);
743278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
743279     *------------------------------------------------------------* ;
743280     * Rule4: DMDBClass Macro ;
743281     *------------------------------------------------------------* ;
743282     %macro DMDBClass;
743283         DepVar(ASC) Marital_Status(ASC) _bin(DESC)
743284     %mend DMDBClass;
743285     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
743286     * Rule4: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Rule4: DMDBVar Macro ;
743287     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
743288     %macro DMDBVar;
743289         AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases NumDealsPurchases
743290        NumWebVisitsMonth Recency
743291     %mend DMDBVar;
743292     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743293     * Rule4: Create DMDB;
MPRINT(EM_DIAGRAM):   * Rule4: Create DMDB;
743294     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743295     proc dmdb batch data=WORK.EM_DMREG
743296     dmdbcat=WORK.Rule4_DMDB
743297     maxlevel = 513
743298     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Rule4_DMDB maxlevel = 
513 ;
MPRINT(EM_DIAGRAM):   class
743299     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(ASC) Marital_Status(ASC) _bin(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
743300     var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Frq Mnt MntMeatProducts NumCatalogPurchases 
NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
743301     target
743302     _bin
743303     ;
MPRINT(EM_DIAGRAM):   target _bin ;
743304     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 418   Memory used = 511K.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 418 observations read from the data set WORK._TRAIN.
NOTE: There were 418 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
743305     quit;
743306     *--- end code ---*;

743307     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
743308     * Rule4: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Rule4: Run DMREG procedure;
743309     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
743310     proc dmreg data=EM_DMREG dmdbcat=WORK.Rule4_DMDB
743311     validata = work._valid
743312     outest = WORK.DMREG_1UD_BHW_OUTEST
743313     outterms = WORK.DMREG_1UD_BHW_OUTTERMS
743314     outmap= WORK.DMREG_1UD_BHW_MAP namelen=200
743315     ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Rule4_DMDB validata = work._valid 
outest = WORK.DMREG_1UD_BHW_OUTEST outterms = WORK.DMREG_1UD_BHW_OUTTERMS outmap= 
WORK.DMREG_1UD_BHW_MAP namelen=200 ;
743316     class
743317     _bin
743318     Marital_Status
743319     ;
MPRINT(EM_DIAGRAM):   class _bin Marital_Status ;
743320     model _bin =
743321     AcceptedCmpTotal
743322     Frq
743323     Marital_Status
743324     Mnt
743325     MntMeatProducts
743326     NumCatalogPurchases
743327     NumDealsPurchases
743328     NumWebVisitsMonth
743329     Recency
743330     /error=binomial link=LOGIT
743331     coding=DEVIATION
743332     nodesignprint
743333     ;
MPRINT(EM_DIAGRAM):   model _bin = AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency /error=binomial link=LOGIT 
coding=DEVIATION nodesignprint ;
743334     ;
MPRINT(EM_DIAGRAM):   ;
743335     score data=_train
743336     out=_ptrain(label="")
743337     ;
MPRINT(EM_DIAGRAM):   score data=_train out=_ptrain(label="") ;
743338     score data=_valid
743339     out=_pvalid(label="")
743340     ;
MPRINT(EM_DIAGRAM):   score data=_valid out=_pvalid(label="") ;
743341     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
743341   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2.sas"
743342     group=Rule4_2
743343     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2.sas" group=Rule4_2 ;
743344     code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary
743344   ! Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2_res.sas"
743345     group=Rule4_2
743346     residual
743347     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2_res.sas" group=Rule4_2 residual ;
743348     run;
MPRINT(EM_DIAGRAM):   run;


NOTE: PROC DMREG is modeling the probability that _bin='1'.
NOTE: Convergence criterion (GCONV=1E-6) satisfied.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2.sas opened.
NOTE: External file C:\Users\LUKASF~1\AppData\Local\Temp\SAS Temporary 
      Files\_TD11884_WN7LF-LEAVE_\Prc2\BIN2_res.sas opened.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: There were 418 observations read from the data set WORK._TRAIN.
NOTE: There were 418 observations read from the data set WORK.EM_DMREG.
NOTE: There were 182 observations read from the data set WORK._VALID.
NOTE: There were 418 observations read from the data set WORK._TRAIN.
NOTE: There were 182 observations read from the data set WORK._VALID.
NOTE: The data set WORK.DMREG_1UD_BHW_OUTEST has 3 observations and 47 variables.
NOTE: The data set WORK.DMREG_1UD_BHW_OUTTERMS has 13 observations and 6 variables.
NOTE: The data set WORK.DMREG_1UD_BHW_MAP has 2 observations and 14 variables.
NOTE: The data set WORK._PTRAIN has 418 observations and 20 variables.
NOTE: The data set WORK._PVALID has 182 observations and 21 variables.
NOTE: The PROCEDURE DMREG printed pages 568-569.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
743349     quit;

743350     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
743351     delete Rule4_DMDB;
MPRINT(EM_DIAGRAM):   delete Rule4_DMDB;
743352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file WORK.RULE4_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
743353     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743354     proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
743355     delete Rule4_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Rule4_DMDB / memtype=catalog;
743356     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.RULE4_DMDB (memtype=CATALOG).
743357     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743358     * BINARY: Training Classification;
MPRINT(EM_DIAGRAM):    * BINARY: Training Classification;
743359     ;
MPRINT(EM_DIAGRAM):   ;
743360     proc freq data = _ptrain noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _ptrain noprint;
743361     tables F__bin * I__bin / out = _count;
MPRINT(EM_DIAGRAM):   tables F__bin * I__bin / out = _count;
743362     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 418 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743363     data _count;
MPRINT(EM_DIAGRAM):   data _count;
743364     set _count;
MPRINT(EM_DIAGRAM):   set _count;
743365     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_traincount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Train Count";
743366     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Train Percent";
743367     label F__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label F__bin = "From";
743368     label I__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label I__bin = "Into";
743369     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * BINARY: Validation Classification;
MPRINT(EM_DIAGRAM):   ;
743370     * BINARY: Validation Classification;
743371     ;
743372     proc freq data = _pvalid noprint;
MPRINT(EM_DIAGRAM):   proc freq data = _pvalid noprint;
743373     tables f__bin * i__bin / out=_vcount;
MPRINT(EM_DIAGRAM):   tables f__bin * i__bin / out=_vcount;
743374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 182 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VCOUNT has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743375     data _vcount;
MPRINT(EM_DIAGRAM):   data _vcount;
743376     set _vcount;
MPRINT(EM_DIAGRAM):   set _vcount;
743377     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
743378     label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_validcount_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label count = "Valid Count";
743379     label percent = "%sysfunc(sasmsg(sashelp.dmine, rpt_validpercent_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label percent = "Valid Percent";
743380     label f__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label f__bin = "From";
743381     label i__bin = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label i__bin = "Into";
743382     rename count = vcount;
MPRINT(EM_DIAGRAM):   rename count = vcount;
743383     rename percent= vpercent;
MPRINT(EM_DIAGRAM):   rename percent= vpercent;
743384     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
743385     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
743386     *;
743387     data _count;
MPRINT(EM_DIAGRAM):   data _count;
743388     set _count;
MPRINT(EM_DIAGRAM):   set _count;
743389     length key $64;
MPRINT(EM_DIAGRAM):   length key $64;
743390     key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
MPRINT(EM_DIAGRAM):   key = ktrim(kleft(f__bin) !! '_' !! ktrim(kleft(i__bin)));
743391     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Merge Train and Valid classification;
MPRINT(EM_DIAGRAM):   ;
743392     * Merge Train and Valid classification;
743393     ;
743394     proc sort data=_count;
MPRINT(EM_DIAGRAM):   proc sort data=_count;
743395     by key;
MPRINT(EM_DIAGRAM):   by key;
743396     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743397     proc sort data=_vcount;
MPRINT(EM_DIAGRAM):   proc sort data=_vcount;
743398     by key;
MPRINT(EM_DIAGRAM):   by key;
743399     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._VCOUNT has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *;
743400     *;
743401     data _count;
MPRINT(EM_DIAGRAM):   data _count;
743402     merge _count _vcount;
MPRINT(EM_DIAGRAM):   merge _count _vcount;
743403     by key;
MPRINT(EM_DIAGRAM):   by key;
743404     drop key;
MPRINT(EM_DIAGRAM):   drop key;
743405     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: There were 2 observations read from the data set WORK._VCOUNT.
NOTE: The data set WORK._COUNT has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   *BINARY: Print Classification;
MPRINT(EM_DIAGRAM):   ;
743406     *BINARY: Print Classification;
743407     ;
743408     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_binmodel_title, NOQUOTE, DepVar,
743408   ! %nrbquote(1)))";
MPRINT(EM_DIAGRAM):   title9 "Binary Model DepVar = 1";
743409     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
743410     proc print data = _count noobs label;
MPRINT(EM_DIAGRAM):   proc print data = _count noobs label;
743411     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK._COUNT.
NOTE: The PROCEDURE PRINT printed page 570.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743412     title9;
MPRINT(EM_DIAGRAM):   title9;
743413     title10;
MPRINT(EM_DIAGRAM):   title10;
743414     * Extract misfit training values;
MPRINT(EM_DIAGRAM):    * Extract misfit training values;
743415     ;
MPRINT(EM_DIAGRAM):   ;
743416     data _ptrain;
MPRINT(EM_DIAGRAM):   data _ptrain;
743417     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
743418     if not ( I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not ( I__bin eq '1' and F__bin eq '1') then output;
743419     keep
743420     AcceptedCmpTotal
743421     Frq
743422     Marital_Status
743423     Mnt
743424     MntMeatProducts
743425     NumCatalogPurchases
743426     NumDealsPurchases
743427     NumWebVisitsMonth
743428     Recency
743429     DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency DepVar;
743430     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 418 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._PTRAIN has 59 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   * Extract misfit validation values;
MPRINT(EM_DIAGRAM):   ;
743431     * Extract misfit validation values;
743432     ;
743433     data _pvalid;
MPRINT(EM_DIAGRAM):   data _pvalid;
743434     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
743435     if not (I__bin eq '1' and F__bin eq '1') then output;
MPRINT(EM_DIAGRAM):   if not (I__bin eq '1' and F__bin eq '1') then output;
743436     keep
743437     AcceptedCmpTotal
743438     Frq
743439     Marital_Status
743440     Mnt
743441     MntMeatProducts
743442     NumCatalogPurchases
743443     NumDealsPurchases
743444     NumWebVisitsMonth
743445     Recency
743446     DepVar;
MPRINT(EM_DIAGRAM):   keep AcceptedCmpTotal Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency DepVar;
743447     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 182 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._PVALID has 27 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743448     data _train;
MPRINT(EM_DIAGRAM):    data _train;
743449     set _ptrain;
MPRINT(EM_DIAGRAM):   set _ptrain;
743450     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._PTRAIN.
NOTE: The data set WORK._TRAIN has 59 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743451     data _valid;
MPRINT(EM_DIAGRAM):   data _valid;
743452     set _pvalid;
MPRINT(EM_DIAGRAM):   set _pvalid;
743453     options validvarname=any;
MPRINT(EM_DIAGRAM):   options validvarname=any;

NOTE: There were 27 observations read from the data set WORK._PVALID.
NOTE: The data set WORK._VALID has 27 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743454     proc contents data=work._train out=_tempAdvisor noprint;
MPRINT(EM_DIAGRAM):   proc contents data=work._train out=_tempAdvisor noprint;
743455     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._TEMPADVISOR has 10 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743456     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
743457     %let _dsidTable = 0;
743458     %let _engineTable =;
743459     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
743460     dsid = open('work._train');
MPRINT(EM_DIAGRAM):   dsid = open('work._train');
743461     call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EM_DIAGRAM):   call symput('_dsidTable', strip(put(dsid, best.)));
743462     if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
743463     call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
743464     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
743465     end;
MPRINT(EM_DIAGRAM):   end;
743466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743467     options fmterr;
MPRINT(EM_DIAGRAM):    options fmterr;
743468     data _metaTestView;
MPRINT(EM_DIAGRAM):   data _metaTestView;
743469     set work._train;
MPRINT(EM_DIAGRAM):   set work._train;
743470     if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
743471     output;
MPRINT(EM_DIAGRAM):   output;
743472     stop;
MPRINT(EM_DIAGRAM):   stop;
743473     end;
MPRINT(EM_DIAGRAM):   end;
743474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._TRAIN.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743475     proc contents data=work._train
743476     out=WORK.M26N232X noprint;
MPRINT(EM_DIAGRAM):    proc contents data=work._train out=WORK.M26N232X noprint;
743477     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.M26N232X has 10 observations and 40 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743478     data WORK.M26N232X;
MPRINT(EM_DIAGRAM):    data WORK.M26N232X;
743479     length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $
743479   !  9;
MPRINT(EM_DIAGRAM):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 
INDEXTYPE $ 9;
743480     label NAME =;
MPRINT(EM_DIAGRAM):   label NAME =;
743481     set WORK.M26N232X(keep=name type length label format formatl formatd informat
743481   ! informl informd idxusage rename=(type=itype));
MPRINT(EM_DIAGRAM):   set WORK.M26N232X(keep=name type length label format formatl formatd 
informat informl informd idxusage rename=(type=itype));
743482     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
743483     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
743484     if formatl > 0 then do;
MPRINT(EM_DIAGRAM):   if formatl > 0 then do;
743485     if format ne ' ' then format = strip(format)!!strip(put(formatl,
743485   ! best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
743486     else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EM_DIAGRAM):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
743487     end;
MPRINT(EM_DIAGRAM):   end;
743488     else if format ne '' then format = strip(format)!!'.';
MPRINT(EM_DIAGRAM):   else if format ne '' then format = strip(format)!!'.';
743489     if informl > 0 then do;
MPRINT(EM_DIAGRAM):   if informl > 0 then do;
743490     if informat ne ' ' then informat = strip(informat)!!strip(put(informl,
743490   ! best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
743491     else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EM_DIAGRAM):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, 
best12.));
743492     end;
MPRINT(EM_DIAGRAM):   end;
743493     else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EM_DIAGRAM):   else if informat ne '' then informat = strip(informat)!!'.';
743494     if idxusage = 'NONE' then index ="N";
MPRINT(EM_DIAGRAM):   if idxusage = 'NONE' then index ="N";
743495     else index = "Y";
MPRINT(EM_DIAGRAM):   else index = "Y";
743496     indextype = idxusage;
MPRINT(EM_DIAGRAM):   indextype = idxusage;
743497     drop idxusage itype formatl formatd informl informd;
MPRINT(EM_DIAGRAM):   drop idxusage itype formatl formatd informl informd;
743498     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M26N232X.
NOTE: The data set WORK.M26N232X has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

743499     data WORK.M26N232X;
MPRINT(EM_DIAGRAM):    data WORK.M26N232X;
743500     length UNAME $64;
MPRINT(EM_DIAGRAM):   length UNAME $64;
743501     set WORK.M26N232X;
MPRINT(EM_DIAGRAM):   set WORK.M26N232X;
743502     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
743503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M26N232X.
NOTE: The data set WORK.M26N232X has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc sort data=WORK.M207B94M NOTHREADS;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
743507     data WORK.M207B94M;
MPRINT(EM_DIAGRAM):    data WORK.M207B94M;
743508     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
743509     set WORK.M207B94M;
MPRINT(EM_DIAGRAM):   set WORK.M207B94M;
743510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 10 observations read from the data set WORK.M207B94M.
NOTE: The data set WORK.M207B94M has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    data WORK.M1LN2XMH(keep=NAME ATTR);
MPRINT(EM_DIAGRAM):   length ATTR $ 20;
MPRINT(EM_DIAGRAM):   set WORK.M207B94M;
MPRINT(EM_DIAGRAM):   if level ne "INTERVAL" then do;
MPRINT(EM_DIAGRAM):   if order = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ORDER';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'FORMATTYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'ROLE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'LEVEL';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if type = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'TYPE';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if index = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'INDEX';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if report = ' ' then do;
MPRINT(EM_DIAGRAM):   attr = 'REPORT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort NOTHREADS;
MPRINT(EM_DIAGRAM):   by attr;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M207B94M;
MPRINT(EM_DIAGRAM):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 
10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EM_DIAGRAM):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EM_DIAGRAM):   set WORK.M207B94M;
MPRINT(EM_DIAGRAM):   if formattype = ' ' then do;
MPRINT(EM_DIAGRAM):   if format ne ' ' then do;
MPRINT(EM_DIAGRAM):   if type = 'N' then do;
MPRINT(EM_DIAGRAM):   pos = indexc(format,'.1234567890');
MPRINT(EM_DIAGRAM):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EM_DIAGRAM):   else tempfmt = ' ';
MPRINT(EM_DIAGRAM):   flen = length(tempfmt);
MPRINT(EM_DIAGRAM):   select;
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EM_DIAGRAM):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = 
"TIME";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EM_DIAGRAM):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" 
"Z" "ZD")) formattype = "CODING";
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   formattype = "USER";
MPRINT(EM_DIAGRAM):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EM_DIAGRAM):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EM_DIAGRAM):   else if flen >= 4 then do;
MPRINT(EM_DIAGRAM):   str = substr(tempfmt,1,4);
MPRINT(EM_DIAGRAM):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EM_DIAGRAM):   else if str = "S370" then formattype = "CODING";
MPRINT(EM_DIAGRAM):   else if str = "BEST" then formattype = "NUM";
MPRINT(EM_DIAGRAM):   drop str;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   drop flen tempfmt pos;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   formatType = "CATEGORY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if formatType = "NUM" then do;
MPRINT(EM_DIAGRAM):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EM_DIAGRAM):   else formatType = "QUANTITY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = ' ' then do;
MPRINT(EM_DIAGRAM):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = 
"NOMINAL";
MPRINT(EM_DIAGRAM):   else level = "INTERVAL";
MPRINT(EM_DIAGRAM):   levelAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else level = upcase(level);
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   length name_prefix $8 _uname $64;
MPRINT(EM_DIAGRAM):   drop name_prefix _uname _freqflag;
MPRINT(EM_DIAGRAM):   retain _freqflag;
MPRINT(EM_DIAGRAM):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EM_DIAGRAM):   _uname = upcase(NAME);
MPRINT(EM_DIAGRAM):   select(_uname);
MPRINT(EM_DIAGRAM):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_SEGMENT') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('_NODE_') do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   when('URI') ROLE = 'URL';
MPRINT(EM_DIAGRAM):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'FREQ';
MPRINT(EM_DIAGRAM):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   name_prefix = scan(_uname, 1, '_');
MPRINT(EM_DIAGRAM):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EM_DIAGRAM):   ROLE = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 
'RAT') then ROLE = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'DECISION';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix ='B' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 
'IC') then ROLE = 'ASSESS';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 
'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EM_DIAGRAM):   drop _found_ i;
MPRINT(EM_DIAGRAM):   _found_=0;
MPRINT(EM_DIAGRAM):   do i=1 to 19 until(_found_=1);
MPRINT(EM_DIAGRAM):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EM_DIAGRAM):   ROLE=_ROLE_{i};
MPRINT(EM_DIAGRAM):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   _found_=1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if length(_uname)>2 then do;
MPRINT(EM_DIAGRAM):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EM_DIAGRAM):   ROLE = 'ID';
MPRINT(EM_DIAGRAM):   LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EM_DIAGRAM):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if role = ' ' then do;
MPRINT(EM_DIAGRAM):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EM_DIAGRAM):   else role = 'INPUT';
MPRINT(EM_DIAGRAM):   roleAssigned = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else role = upcase(role);
MPRINT(EM_DIAGRAM):   if REPORT = '' then REPORT = 'N';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    proc dmdb data=work._train(obs=1000000) batch classOut=_DMDB1_I0RDN 
maxLevel=22;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   AcceptedCmpTotal DepVar Frq Marital_Status Mnt MntMeatProducts 
NumCatalogPurchases NumDealsPurchases NumWebVisitsMonth Recency
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc freq data=_DMDB1_I0RDN noprint;
MPRINT(EM_DIAGRAM):   table name / out=_DMDBCOUNT1_I0RDN(drop=percent rename=(count=NLEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _MISS1_I0RDN(rename=(frequency=NMISS));
MPRINT(EM_DIAGRAM):   set _DMDB1_I0RDN(where=(NRAW=. and CRAW=''));
MPRINT(EM_DIAGRAM):   keep name frequency;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_MISS1_I0RDN;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_DMDBCOUNT1_I0RDN;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _COUNTS1_I0RDN;
MPRINT(EM_DIAGRAM):   merge _DMDBCOUNT1_I0RDN _MISS1_I0RDN;
MPRINT(EM_DIAGRAM):   label NLEVEL= 'Number of Category';
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if NMISS > 0 then do;
MPRINT(EM_DIAGRAM):   NLEVEL= NLEVEL-1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else NMISS = 0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=_COUNTS1_I0RDN NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M207B94M NOTHREADS;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.M207B94M;
MPRINT(EM_DIAGRAM):   length NLEVEL 8 nmiss 8;
MPRINT(EM_DIAGRAM):   update WORK.M207B94M _COUNTS1_I0RDN;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if name='' then name='_';
MPRINT(EM_DIAGRAM):   if levelAssigned and ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   select(NLEVEL);
MPRINT(EM_DIAGRAM):   when(.) do;
MPRINT(EM_DIAGRAM):   if type eq 'C' then level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   when(0) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(1) level = 'UNARY';
MPRINT(EM_DIAGRAM):   when(2) level = 'BINARY';
MPRINT(EM_DIAGRAM):   otherwise do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if roleAssigned then do;
MPRINT(EM_DIAGRAM):   if level = 'NOMINAL' and NLEVEL > 20 then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Exceeds maximum number of levels cutoff";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if level = 'UNARY' and ROLE ne 'FREQ' then role='REJECTED';
MPRINT(EM_DIAGRAM):   drop NLEVEL nmiss;
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EM_DIAGRAM):   drop levelAssigned roleAssigned;
MPRINT(EM_DIAGRAM):   run;
743792     title8;
MPRINT(EM_DIAGRAM):    title8;
743793     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
743794     delete _train;
MPRINT(EM_DIAGRAM):   delete _train;
743795     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._TRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743796     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
743797     delete _ptrain;
MPRINT(EM_DIAGRAM):   delete _ptrain;
743798     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PTRAIN (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

743799     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
743800     delete _valid;
MPRINT(EM_DIAGRAM):   delete _valid;
743801     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._VALID (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

743802     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
743803     delete _pvalid;
MPRINT(EM_DIAGRAM):   delete _pvalid;
743804     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK._PVALID (memtype=DATA).
743805     %makeResidualVars(target=DepVar, decmeta=EMWS8.Rule4_DepVar_DM , fref=#LN06093);

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.63 seconds
      cpu time            0.09 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule4_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ in('TARGET', 'FROM');
MPRINT(MAKERESIDUALVARS):   if _TYPE_='TARGET' then call symput('target_level', strip(LEVEL));
MPRINT(MAKERESIDUALVARS):   else call symput('from_var', strip(VARIABLE));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE4_DEPVAR_DM.
      WHERE _TYPE_ in ('FROM', 'TARGET');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule4_DepVar_DM;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='PREDICTED';
MPRINT(MAKERESIDUALVARS):   call symput('pred_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE4_DEPVAR_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   set EMWS8.Rule4_DepVar_DM end=eof;
MPRINT(MAKERESIDUALVARS):   where _TYPE_ ='RESIDUAL';
MPRINT(MAKERESIDUALVARS):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(MAKERESIDUALVARS):   call symput('res_labels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LABEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   call symput('res_levels'!!strip(put(_N_,BEST.)), 
strip(tranwrd(LEVEL,"'","''")));
MPRINT(MAKERESIDUALVARS):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(MAKERESIDUALVARS):   run;

NOTE: There were 2 observations read from the data set EMWS8.RULE4_DEPVAR_DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKERESIDUALVARS):   data _null_;
MPRINT(MAKERESIDUALVARS):   file #LN06093;
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "*Computing Residual Vars: DepVar;";
MPRINT(MAKERESIDUALVARS):   put 
"*------------------------------------------------------------*;";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar1='Residual: DepVar=1';";
MPRINT(MAKERESIDUALVARS):   put "Label R_DepVar0='Residual: DepVar=0';";
MPRINT(MAKERESIDUALVARS):   put "if ";
MPRINT(MAKERESIDUALVARS):   put " F_DepVar ne '1'";
MPRINT(MAKERESIDUALVARS):   put "and F_DepVar ne '0'";
MPRINT(MAKERESIDUALVARS):   put " then do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1=.;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0=.;";
MPRINT(MAKERESIDUALVARS):   put "end;";
MPRINT(MAKERESIDUALVARS):   put "else do;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar1= - P_DepVar1;";
MPRINT(MAKERESIDUALVARS):   put "R_DepVar0= - P_DepVar0;";
MPRINT(MAKERESIDUALVARS):   put "select(F_DepVar);";
MPRINT(MAKERESIDUALVARS):   put "when('1')R_DepVar1= R_DepVar1+1;";
MPRINT(MAKERESIDUALVARS):   put "when('0')R_DepVar0= R_DepVar0+1;";
MPRINT(MAKERESIDUALVARS):   put 'otherwise;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   put 'end;';
MPRINT(MAKERESIDUALVARS):   run;

NOTE: The file #LN06093 is:
      Filename=C:\\predictive-models-project\Workspaces\EMWS8\Rule4\RESIDUALCODE.sas,
      RECFM=V,LRECL=256,File Size (bytes)=0,
      Last Modified=28. April 2016 19.52 Uhr,
      Create Time=27. April 2016 21.27 Uhr

NOTE: 21 records were written to the file #LN06093.
      The minimum record length was 3.
      The maximum record length was 63.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
