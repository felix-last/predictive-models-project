MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2DJ3ROB 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2DJ3ROB new;
MPRINT(EM_DIAGRAM):   run;
518051     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
518052     set EMWS8.Neural9_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_OUTKEY;
518053     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
518054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.NEURAL9_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

518055     filename emflow
518055   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
518056     *------------------------------------------------------------*;
518057     * Neural9: Scoring DATA data;
518058     *------------------------------------------------------------*;
518059     data EMWS8.Neural9_TRAIN
518060     / view=EMWS8.Neural9_TRAIN
518061     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_TRAIN / view=EMWS8.Neural9_TRAIN ;
518062     set EMWS8.Meta_TRAIN
518063     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
518064     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas.
518065    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518066    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
518067    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518068    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
518069    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
518070    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
518071    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
518072    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
518073    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
518074    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
518075    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
518076    +LENGTH _WARN_ $4
518077    +      F_DepVar  $ 12
518078    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
518079    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
518080    +
518081    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
518082    +
518083    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
518084    +
518085    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
518086    +
518087    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
518088    +
518089    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
518090    +
518091    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
518092    +
518093    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
518094    +
518095    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
518096    +
518097    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
518098    +
518099    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
518100    +
518101    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
518102    +
518103    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
518104    +
518105    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
518106    +
518107    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
518108    +
518109    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
518110    +
518111    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
518112    +
518113    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
518114    +
518115    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
518116    +
518117    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
518118    +
518119    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
518120    +
518121    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
518122    +
518123    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
518124    +
518125    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
518126    +
518127    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
518128    +
518129    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
518130    +
518131    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
518132    +
518133    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
518134    +
518135    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
518136    +
518137    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
518138    +
518139    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
518140    +
518141    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
518142    +
518143    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
518144    +
518145    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
518146    +
518147    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
518148    +
518149    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
518150    +
518151    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
518152    +
518153    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
518154    +
518155    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
518156    +
518157    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
518158    +
518159    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
518160    +
518161    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
518162    +
518163    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
518164    +
518165    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
518166    +
518167    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
518168    +
518169    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
518170    +
518171    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
518172    +
518173    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
518174    +
518175    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
518176    +
518177    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
518178    +
518179    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
518180    +
518181    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
518182    +
518183    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
518184    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
518185    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
518186    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
518187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518189    +end;
MPRINT(EM_DIAGRAM):   end;
518190    +else do;
MPRINT(EM_DIAGRAM):   else do;
518191    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518192    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
518193    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518194    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518195    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
518196    +   end;
MPRINT(EM_DIAGRAM):   end;
518197    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518198    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
518199    +   end;
MPRINT(EM_DIAGRAM):   end;
518200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518201    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
518202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518204    +   end;
MPRINT(EM_DIAGRAM):   end;
518205    +end;
MPRINT(EM_DIAGRAM):   end;
518206    +
518207    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
518208    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
518209    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
518210    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
518211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518213    +end;
MPRINT(EM_DIAGRAM):   end;
518214    +else do;
MPRINT(EM_DIAGRAM):   else do;
518215    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518216    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
518217    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518218    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518219    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
518220    +   end;
MPRINT(EM_DIAGRAM):   end;
518221    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518222    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
518223    +   end;
MPRINT(EM_DIAGRAM):   end;
518224    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518225    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
518226    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518227    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518228    +   end;
MPRINT(EM_DIAGRAM):   end;
518229    +end;
MPRINT(EM_DIAGRAM):   end;
518230    +
518231    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
518232    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
518233    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
518234    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
518235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518237    +end;
MPRINT(EM_DIAGRAM):   end;
518238    +else do;
MPRINT(EM_DIAGRAM):   else do;
518239    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518240    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
518241    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518242    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518243    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
518244    +   end;
MPRINT(EM_DIAGRAM):   end;
518245    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518246    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
518247    +   end;
MPRINT(EM_DIAGRAM):   end;
518248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518249    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
518250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518252    +   end;
MPRINT(EM_DIAGRAM):   end;
518253    +end;
MPRINT(EM_DIAGRAM):   end;
518254    +
518255    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
518256    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
518257    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
518258    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
518259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518261    +end;
MPRINT(EM_DIAGRAM):   end;
518262    +else do;
MPRINT(EM_DIAGRAM):   else do;
518263    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518264    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
518265    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518266    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518267    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
518268    +   end;
MPRINT(EM_DIAGRAM):   end;
518269    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518270    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
518271    +   end;
MPRINT(EM_DIAGRAM):   end;
518272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518273    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
518274    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518275    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518276    +   end;
MPRINT(EM_DIAGRAM):   end;
518277    +end;
MPRINT(EM_DIAGRAM):   end;
518278    +
518279    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
518280    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
518281    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
518282    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
518283    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518285    +end;
MPRINT(EM_DIAGRAM):   end;
518286    +else do;
MPRINT(EM_DIAGRAM):   else do;
518287    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518288    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
518289    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518290    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518291    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
518292    +   end;
MPRINT(EM_DIAGRAM):   end;
518293    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518294    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
518295    +   end;
MPRINT(EM_DIAGRAM):   end;
518296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518297    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
518298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518300    +   end;
MPRINT(EM_DIAGRAM):   end;
518301    +end;
MPRINT(EM_DIAGRAM):   end;
518302    +
518303    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
518304    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
518305    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
518306    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
518307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518309    +end;
MPRINT(EM_DIAGRAM):   end;
518310    +else do;
MPRINT(EM_DIAGRAM):   else do;
518311    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518312    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
518313    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518314    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
518315    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
518316    +   end;
MPRINT(EM_DIAGRAM):   end;
518317    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
518318    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
518319    +   end;
MPRINT(EM_DIAGRAM):   end;
518320    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518321    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
518322    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518323    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518324    +   end;
MPRINT(EM_DIAGRAM):   end;
518325    +end;
MPRINT(EM_DIAGRAM):   end;
518326    +
518327    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
518328    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
518329    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
518330    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
518331    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518332    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518333    +end;
MPRINT(EM_DIAGRAM):   end;
518334    +else do;
MPRINT(EM_DIAGRAM):   else do;
518335    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
518336    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
518337    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518338    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
518339    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
518340    +   end;
MPRINT(EM_DIAGRAM):   end;
518341    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
518342    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
518343    +   end;
MPRINT(EM_DIAGRAM):   end;
518344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518345    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
518346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518348    +   end;
MPRINT(EM_DIAGRAM):   end;
518349    +end;
MPRINT(EM_DIAGRAM):   end;
518350    +
518351    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
518352    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
518353    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
518354    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
518355    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
518356    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
518357    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
518358    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
518359    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
518360    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
518361    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
518362    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
518363    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518364    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518365    +end;
MPRINT(EM_DIAGRAM):   end;
518366    +else do;
MPRINT(EM_DIAGRAM):   else do;
518367    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
518368    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
518369    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518370    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
518371    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
518372    +   end;
MPRINT(EM_DIAGRAM):   end;
518373    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
518374    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
518375    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
518376    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
518377    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
518378    +   end;
MPRINT(EM_DIAGRAM):   end;
518379    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
518380    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
518381    +   end;
MPRINT(EM_DIAGRAM):   end;
518382    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
518383    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
518384    +   end;
MPRINT(EM_DIAGRAM):   end;
518385    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
518386    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
518387    +   end;
MPRINT(EM_DIAGRAM):   end;
518388    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518389    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
518390    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
518391    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
518392    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
518393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518395    +   end;
MPRINT(EM_DIAGRAM):   end;
518396    +end;
MPRINT(EM_DIAGRAM):   end;
518397    +
518398    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
518399    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
518400    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
518401    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
518402    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
518403    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
518404    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
518405    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
518406    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
518407    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518408    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518409    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518410    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
518412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518413    +end;
MPRINT(EM_DIAGRAM):   end;
518414    +else do;
MPRINT(EM_DIAGRAM):   else do;
518415    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
518416    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
518417    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518418    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
518419    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
518420    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
518421    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
518422    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
518423    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518424    +         end;
MPRINT(EM_DIAGRAM):   end;
518425    +         else do;
MPRINT(EM_DIAGRAM):   else do;
518426    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
518427    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
518428    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518429    +            end;
MPRINT(EM_DIAGRAM):   end;
518430    +         end;
MPRINT(EM_DIAGRAM):   end;
518431    +      end;
MPRINT(EM_DIAGRAM):   end;
518432    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518433    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
518434    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
518435    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518436    +         end;
MPRINT(EM_DIAGRAM):   end;
518437    +      end;
MPRINT(EM_DIAGRAM):   end;
518438    +   end;
MPRINT(EM_DIAGRAM):   end;
518439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518440    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
518441    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
518442    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518443    +      end;
MPRINT(EM_DIAGRAM):   end;
518444    +      else do;
MPRINT(EM_DIAGRAM):   else do;
518445    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
518446    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
518447    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
518448    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
518449    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
518450    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
518451    +         end;
MPRINT(EM_DIAGRAM):   end;
518452    +      end;
MPRINT(EM_DIAGRAM):   end;
518453    +   end;
MPRINT(EM_DIAGRAM):   end;
518454    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
518455    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
518456    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
518457    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
518458    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
518459    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
518460    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518461    +   end;
MPRINT(EM_DIAGRAM):   end;
518462    +end;
MPRINT(EM_DIAGRAM):   end;
518463    +
518464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518465    +*** Checking missing input Interval
518466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
518467    +
518468    +IF NMISS(
518469    +   AcceptedCmpTotal ,
518470    +   Age ,
518471    +   Frq ,
518472    +   Income ,
518473    +   Kidhome ,
518474    +   Mnt ,
518475    +   MntFishProducts ,
518476    +   MntFruits ,
518477    +   MntGoldProds ,
518478    +   MntMeatProducts ,
518479    +   MntSweetProducts ,
518480    +   MntWines ,
518481    +   MonthsAsCustomer ,
518482    +   NumCatalogPurchases ,
518483    +   NumDealsPurchases ,
518484    +   NumDistPurchases ,
518485    +   NumStorePurchases ,
518486    +   NumWebPurchases ,
518487    +   NumWebVisitsMonth ,
518488    +   RFMstat ,
518489    +   RMntFrq ,
518490    +   Recency ,
518491    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
518492    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
518493    +
518494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
518495    +END;
MPRINT(EM_DIAGRAM):   END;
518496    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518497    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
518498    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518499    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518500    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518501    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518502    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
518503    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518504    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518505    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
518506    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518507    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
518508    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
518509    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
518510    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518511    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
518512    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518513    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518514    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
518515    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
518516    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
518517    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
518518    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
518519    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
518520    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518521    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518522    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518523    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
518524    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
518525    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
518526    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
518527    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
518528    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
518529    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518530    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518531    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518532    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
518533    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518534    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518535    +END;
MPRINT(EM_DIAGRAM):   END;
518536    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518537    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
518538    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
518539    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
518540    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
518541    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
518542    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
518543    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
518544    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
518545    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
518546    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
518547    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
518548    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
518549    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
518550    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
518551    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
518552    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
518553    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
518554    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
518555    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
518556    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
518557    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
518558    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
518559    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
518560    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
518561    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
518562    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
518563    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
518564    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
518565    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
518566    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
518567    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
518568    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
518569    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
518570    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
518571    +   ELSE S_NumCatalogPurchases
518572    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
518573    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
518574    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
518575    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
518576    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
518577    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
518578    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
518579    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
518580    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
518581    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
518582    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
518583    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
518584    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
518585    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
518586    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
518587    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
518588    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
518589    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
518590    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
518591    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
518592    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
518593    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
518594    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
518595    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
518596    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
518597    +END;
MPRINT(EM_DIAGRAM):   END;
518598    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518599    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
518600    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518602    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
518603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518604    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518605    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
518606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518607    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518608    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
518609    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
518610    +        S_Income  +    -0.07407502089271 * S_Kidhome
518611    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
518612    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
518613    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
518614    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
518615    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
518616    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
518617    +          +     0.85324794786604 * S_NumDealsPurchases
518618    +          +     0.23632583007911 * S_NumDistPurchases
518619    +          +    -0.63089078988761 * S_NumStorePurchases
518620    +          +    -0.92352748602374 * S_NumWebPurchases
518621    +          +     0.90081938176641 * S_NumWebVisitsMonth
518622    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
518623    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
518624    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
518625    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
518626    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
518627    +        S_Income  +    -0.46092998969912 * S_Kidhome
518628    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
518629    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
518630    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
518631    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
518632    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
518633    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
518634    +          +     0.19685325076814 * S_NumDealsPurchases
518635    +          +     -0.0145000015739 * S_NumDistPurchases
518636    +          +     -0.5790386407956 * S_NumStorePurchases
518637    +          +    -0.36258404984745 * S_NumWebPurchases
518638    +          +     0.85107574614775 * S_NumWebVisitsMonth
518639    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
518640    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
518641    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
518642    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
518643    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
518644    +        S_Income  +    -0.03273972934545 * S_Kidhome
518645    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
518646    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
518647    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
518648    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
518649    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
518650    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
518651    +          +    -0.17268337796364 * S_NumDealsPurchases
518652    +          +    -0.23588860225052 * S_NumDistPurchases
518653    +          +     0.41380073293559 * S_NumStorePurchases
518654    +          +    -0.28143763726207 * S_NumWebPurchases
518655    +          +    -0.30914618130297 * S_NumWebVisitsMonth
518656    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
518657    +        S_RMntFrq  +     0.81671444530655 * S_Recency
518658    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
518659    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
518660    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
518661    +        S_Income  +    -0.06518326597517 * S_Kidhome
518662    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
518663    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
518664    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
518665    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
518666    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
518667    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
518668    +          +    -0.46119515763011 * S_NumDealsPurchases
518669    +          +     0.16268822540635 * S_NumDistPurchases
518670    +          +     0.21653483412929 * S_NumStorePurchases
518671    +          +     0.46040401497854 * S_NumWebPurchases
518672    +          +     -0.7361096668674 * S_NumWebVisitsMonth
518673    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
518674    +        S_RMntFrq  +     0.80628261349293 * S_Recency
518675    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
518676    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
518677    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
518678    +        S_Income  +     0.55328239552566 * S_Kidhome
518679    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
518680    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
518681    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
518682    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
518683    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
518684    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
518685    +          +     0.05502131610199 * S_NumDealsPurchases
518686    +          +    -0.03756550292536 * S_NumDistPurchases
518687    +          +    -0.03538043876599 * S_NumStorePurchases
518688    +          +     -0.0907757250737 * S_NumWebPurchases
518689    +          +    -0.70112968521759 * S_NumWebVisitsMonth
518690    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
518691    +        S_RMntFrq  +     0.94295210651466 * S_Recency
518692    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
518693    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
518694    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
518695    +        S_Income  +    -0.52750514886673 * S_Kidhome
518696    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
518697    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
518698    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
518699    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
518700    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
518701    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
518702    +          +    -0.50827570715861 * S_NumDealsPurchases
518703    +          +    -0.47409547329081 * S_NumDistPurchases
518704    +          +     0.18399962481918 * S_NumStorePurchases
518705    +          +     0.02681212324713 * S_NumWebPurchases
518706    +          +    -0.20824959103725 * S_NumWebVisitsMonth
518707    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
518708    +        S_RMntFrq  +     0.04705531474734 * S_Recency
518709    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
518710    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
518711    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
518712    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
518713    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
518714    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
518715    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
518716    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
518717    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
518718    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
518719    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
518720    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
518721    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
518722    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
518723    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
518724    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
518725    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
518726    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
518727    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
518728    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
518729    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
518730    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
518731    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
518732    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
518733    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
518734    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
518735    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
518736    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
518737    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
518738    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
518739    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
518740    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
518741    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
518742    +        EducationGraduation  +     0.02690714866809 * EducationMaster
518743    +          +      0.1401475547652 * Marital_StatusDivorced
518744    +          +     0.09801106519846 * Marital_StatusMarried
518745    +          +    -0.26003432053167 * Marital_StatusSingle
518746    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
518747    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
518748    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
518749    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
518750    +          +     0.33965651292585 * Marital_StatusDivorced
518751    +          +    -0.51738607463653 * Marital_StatusMarried
518752    +          +     0.57209809625866 * Marital_StatusSingle
518753    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
518754    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
518755    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
518756    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
518757    +          +     -0.0712692029901 * Marital_StatusDivorced
518758    +          +      0.2989539150548 * Marital_StatusMarried
518759    +          +    -0.07088797938783 * Marital_StatusSingle
518760    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
518761    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
518762    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
518763    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
518764    +          +    -0.06075465978816 * Marital_StatusDivorced
518765    +          +     0.23328087967095 * Marital_StatusMarried
518766    +          +    -0.34401062494093 * Marital_StatusSingle
518767    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
518768    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
518769    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
518770    +        EducationGraduation  +     0.36213037498234 * EducationMaster
518771    +          +    -0.07312045395545 * Marital_StatusDivorced
518772    +          +     1.08247738273721 * Marital_StatusMarried
518773    +          +    -0.68676298741916 * Marital_StatusSingle
518774    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
518775    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
518776    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
518777    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
518778    +          +    -0.20451618892357 * Marital_StatusDivorced
518779    +          +    -0.41145969312049 * Marital_StatusMarried
518780    +          +     0.44568613045702 * Marital_StatusSingle
518781    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
518782    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
518783    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
518784    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
518785    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
518786    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
518787    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
518788    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
518789    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
518790    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
518791    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
518792    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
518793    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
518794    +END;
MPRINT(EM_DIAGRAM):   END;
518795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518796    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
518797    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
518798    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
518799    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
518800    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
518801    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
518802    +END;
MPRINT(EM_DIAGRAM):   END;
518803    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518804    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
518805    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518806    +
518807    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
518808    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
518809    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
518810    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
518811    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
518812    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
518813    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
518814    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518815    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518816    +end;
MPRINT(EM_DIAGRAM):   end;
518817    +else do;
MPRINT(EM_DIAGRAM):   else do;
518818    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
518819    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
518820    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
518821    +   end;
MPRINT(EM_DIAGRAM):   end;
518822    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
518823    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
518824    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
518825    +   end;
MPRINT(EM_DIAGRAM):   end;
518826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
518827    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
518828    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
518829    +   end;
MPRINT(EM_DIAGRAM):   end;
518830    +end;
MPRINT(EM_DIAGRAM):   end;
518831    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
518832    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
518833    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
518834    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
518835    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
518836    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
518837    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
518838    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
518839    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
518840    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
518841    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
518842    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
518843    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
518844    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
518845    +END;
MPRINT(EM_DIAGRAM):   END;
518846    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
518847    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
518848    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
518849    +END;
MPRINT(EM_DIAGRAM):   END;
518850    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
518851    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
518852    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
518853    +END;
MPRINT(EM_DIAGRAM):   END;
518854    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
518855    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
518856    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
518857    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
518858    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
518859    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
518860    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
518861    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518862    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
518863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
518864    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
518865    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
518866    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
518867    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
518868    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
518869    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
518870    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
518871    +END;
MPRINT(EM_DIAGRAM):   END;
518872    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518873    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
518874    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
518875    +drop
518876    +H11
518877    +H12
518878    +H13
518879    +H14
518880    +H15
518881    +H16
518882    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
518883    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
518884     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
518885     quit;
518886     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
518887     filename emflow
518887   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
518888     *------------------------------------------------------------*;
518889     * Neural9: Scoring VALIDATE data;
518890     *------------------------------------------------------------*;
518891     data EMWS8.Neural9_VALIDATE
518892     / view=EMWS8.Neural9_VALIDATE
518893     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_VALIDATE / view=EMWS8.Neural9_VALIDATE ;
518894     set EMWS8.Meta_VALIDATE
518895     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
518896     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas.
518897    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518898    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
518899    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
518900    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
518901    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
518902    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
518903    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
518904    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
518905    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
518906    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
518907    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
518908    +LENGTH _WARN_ $4
518909    +      F_DepVar  $ 12
518910    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
518911    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
518912    +
518913    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
518914    +
518915    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
518916    +
518917    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
518918    +
518919    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
518920    +
518921    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
518922    +
518923    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
518924    +
518925    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
518926    +
518927    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
518928    +
518929    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
518930    +
518931    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
518932    +
518933    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
518934    +
518935    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
518936    +
518937    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
518938    +
518939    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
518940    +
518941    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
518942    +
518943    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
518944    +
518945    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
518946    +
518947    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
518948    +
518949    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
518950    +
518951    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
518952    +
518953    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
518954    +
518955    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
518956    +
518957    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
518958    +
518959    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
518960    +
518961    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
518962    +
518963    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
518964    +
518965    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
518966    +
518967    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
518968    +
518969    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
518970    +
518971    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
518972    +
518973    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
518974    +
518975    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
518976    +
518977    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
518978    +
518979    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
518980    +
518981    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
518982    +
518983    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
518984    +
518985    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
518986    +
518987    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
518988    +
518989    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
518990    +
518991    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
518992    +
518993    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
518994    +
518995    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
518996    +
518997    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
518998    +
518999    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
519000    +
519001    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
519002    +
519003    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
519004    +
519005    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
519006    +
519007    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
519008    +
519009    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
519010    +
519011    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
519012    +
519013    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
519014    +
519015    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
519016    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
519017    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
519018    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
519019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519021    +end;
MPRINT(EM_DIAGRAM):   end;
519022    +else do;
MPRINT(EM_DIAGRAM):   else do;
519023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519024    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
519025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519026    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519027    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
519028    +   end;
MPRINT(EM_DIAGRAM):   end;
519029    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519030    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
519031    +   end;
MPRINT(EM_DIAGRAM):   end;
519032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519033    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
519034    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519035    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519036    +   end;
MPRINT(EM_DIAGRAM):   end;
519037    +end;
MPRINT(EM_DIAGRAM):   end;
519038    +
519039    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
519040    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
519041    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
519042    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
519043    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519044    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519045    +end;
MPRINT(EM_DIAGRAM):   end;
519046    +else do;
MPRINT(EM_DIAGRAM):   else do;
519047    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519048    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
519049    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519050    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519051    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
519052    +   end;
MPRINT(EM_DIAGRAM):   end;
519053    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519054    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
519055    +   end;
MPRINT(EM_DIAGRAM):   end;
519056    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519057    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
519058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519060    +   end;
MPRINT(EM_DIAGRAM):   end;
519061    +end;
MPRINT(EM_DIAGRAM):   end;
519062    +
519063    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
519064    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
519065    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
519066    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
519067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519069    +end;
MPRINT(EM_DIAGRAM):   end;
519070    +else do;
MPRINT(EM_DIAGRAM):   else do;
519071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519072    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
519073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519074    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519075    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
519076    +   end;
MPRINT(EM_DIAGRAM):   end;
519077    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519078    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
519079    +   end;
MPRINT(EM_DIAGRAM):   end;
519080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519081    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
519082    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519083    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519084    +   end;
MPRINT(EM_DIAGRAM):   end;
519085    +end;
MPRINT(EM_DIAGRAM):   end;
519086    +
519087    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
519088    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
519089    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
519090    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
519091    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519092    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519093    +end;
MPRINT(EM_DIAGRAM):   end;
519094    +else do;
MPRINT(EM_DIAGRAM):   else do;
519095    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519096    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
519097    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519098    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519099    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
519100    +   end;
MPRINT(EM_DIAGRAM):   end;
519101    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519102    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
519103    +   end;
MPRINT(EM_DIAGRAM):   end;
519104    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519105    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
519106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519108    +   end;
MPRINT(EM_DIAGRAM):   end;
519109    +end;
MPRINT(EM_DIAGRAM):   end;
519110    +
519111    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
519112    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
519113    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
519114    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
519115    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519116    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519117    +end;
MPRINT(EM_DIAGRAM):   end;
519118    +else do;
MPRINT(EM_DIAGRAM):   else do;
519119    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519120    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
519121    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519122    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519123    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
519124    +   end;
MPRINT(EM_DIAGRAM):   end;
519125    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519126    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
519127    +   end;
MPRINT(EM_DIAGRAM):   end;
519128    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519129    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
519130    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519131    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519132    +   end;
MPRINT(EM_DIAGRAM):   end;
519133    +end;
MPRINT(EM_DIAGRAM):   end;
519134    +
519135    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
519136    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
519137    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
519138    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
519139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519141    +end;
MPRINT(EM_DIAGRAM):   end;
519142    +else do;
MPRINT(EM_DIAGRAM):   else do;
519143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519144    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
519145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519146    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
519147    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
519148    +   end;
MPRINT(EM_DIAGRAM):   end;
519149    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
519150    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
519151    +   end;
MPRINT(EM_DIAGRAM):   end;
519152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519153    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
519154    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519155    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519156    +   end;
MPRINT(EM_DIAGRAM):   end;
519157    +end;
MPRINT(EM_DIAGRAM):   end;
519158    +
519159    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
519160    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
519161    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
519162    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
519163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519165    +end;
MPRINT(EM_DIAGRAM):   end;
519166    +else do;
MPRINT(EM_DIAGRAM):   else do;
519167    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
519168    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
519169    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519170    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
519171    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
519172    +   end;
MPRINT(EM_DIAGRAM):   end;
519173    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
519174    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
519175    +   end;
MPRINT(EM_DIAGRAM):   end;
519176    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519177    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
519178    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519179    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519180    +   end;
MPRINT(EM_DIAGRAM):   end;
519181    +end;
MPRINT(EM_DIAGRAM):   end;
519182    +
519183    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
519184    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
519185    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
519186    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
519187    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
519188    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
519189    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
519190    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
519191    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
519192    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
519193    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
519194    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
519195    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519196    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519197    +end;
MPRINT(EM_DIAGRAM):   end;
519198    +else do;
MPRINT(EM_DIAGRAM):   else do;
519199    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
519200    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
519201    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519202    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
519203    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
519204    +   end;
MPRINT(EM_DIAGRAM):   end;
519205    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
519206    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
519207    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
519208    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
519209    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
519210    +   end;
MPRINT(EM_DIAGRAM):   end;
519211    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
519212    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
519213    +   end;
MPRINT(EM_DIAGRAM):   end;
519214    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
519215    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
519216    +   end;
MPRINT(EM_DIAGRAM):   end;
519217    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
519218    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
519219    +   end;
MPRINT(EM_DIAGRAM):   end;
519220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519221    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
519222    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
519223    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
519224    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
519225    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519226    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519227    +   end;
MPRINT(EM_DIAGRAM):   end;
519228    +end;
MPRINT(EM_DIAGRAM):   end;
519229    +
519230    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
519231    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
519232    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
519233    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
519234    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
519235    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
519236    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
519237    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
519238    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
519239    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
519240    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
519241    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
519242    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
519243    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
519244    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519245    +end;
MPRINT(EM_DIAGRAM):   end;
519246    +else do;
MPRINT(EM_DIAGRAM):   else do;
519247    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
519248    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
519249    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519250    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
519251    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
519252    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
519253    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
519254    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
519255    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
519256    +         end;
MPRINT(EM_DIAGRAM):   end;
519257    +         else do;
MPRINT(EM_DIAGRAM):   else do;
519258    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
519259    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
519260    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
519261    +            end;
MPRINT(EM_DIAGRAM):   end;
519262    +         end;
MPRINT(EM_DIAGRAM):   end;
519263    +      end;
MPRINT(EM_DIAGRAM):   end;
519264    +      else do;
MPRINT(EM_DIAGRAM):   else do;
519265    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
519266    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
519267    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
519268    +         end;
MPRINT(EM_DIAGRAM):   end;
519269    +      end;
MPRINT(EM_DIAGRAM):   end;
519270    +   end;
MPRINT(EM_DIAGRAM):   end;
519271    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519272    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
519273    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
519274    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
519275    +      end;
MPRINT(EM_DIAGRAM):   end;
519276    +      else do;
MPRINT(EM_DIAGRAM):   else do;
519277    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
519278    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
519279    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
519280    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
519281    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
519282    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
519283    +         end;
MPRINT(EM_DIAGRAM):   end;
519284    +      end;
MPRINT(EM_DIAGRAM):   end;
519285    +   end;
MPRINT(EM_DIAGRAM):   end;
519286    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
519287    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
519288    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
519289    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
519290    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
519291    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
519292    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519293    +   end;
MPRINT(EM_DIAGRAM):   end;
519294    +end;
MPRINT(EM_DIAGRAM):   end;
519295    +
519296    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519297    +*** Checking missing input Interval
519298    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
519299    +
519300    +IF NMISS(
519301    +   AcceptedCmpTotal ,
519302    +   Age ,
519303    +   Frq ,
519304    +   Income ,
519305    +   Kidhome ,
519306    +   Mnt ,
519307    +   MntFishProducts ,
519308    +   MntFruits ,
519309    +   MntGoldProds ,
519310    +   MntMeatProducts ,
519311    +   MntSweetProducts ,
519312    +   MntWines ,
519313    +   MonthsAsCustomer ,
519314    +   NumCatalogPurchases ,
519315    +   NumDealsPurchases ,
519316    +   NumDistPurchases ,
519317    +   NumStorePurchases ,
519318    +   NumWebPurchases ,
519319    +   NumWebVisitsMonth ,
519320    +   RFMstat ,
519321    +   RMntFrq ,
519322    +   Recency ,
519323    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
519324    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
519325    +
519326    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
519327    +END;
MPRINT(EM_DIAGRAM):   END;
519328    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519329    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
519330    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519331    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
519332    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
519333    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
519334    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
519335    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
519336    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
519337    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
519338    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
519339    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
519340    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
519341    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
519342    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
519343    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
519344    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
519345    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
519346    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
519347    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
519348    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
519349    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
519350    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
519351    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
519352    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
519353    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
519354    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
519355    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
519356    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
519357    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
519358    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
519359    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
519360    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
519361    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
519362    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
519363    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
519364    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
519365    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
519366    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
519367    +END;
MPRINT(EM_DIAGRAM):   END;
519368    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
519369    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
519370    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
519371    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
519372    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
519373    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
519374    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
519375    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
519376    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
519377    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
519378    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
519379    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
519380    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
519381    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
519382    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
519383    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
519384    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
519385    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
519386    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
519387    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
519388    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
519389    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
519390    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
519391    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
519392    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
519393    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
519394    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
519395    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
519396    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
519397    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
519398    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
519399    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
519400    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
519401    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
519402    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
519403    +   ELSE S_NumCatalogPurchases
519404    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
519405    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
519406    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
519407    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
519408    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
519409    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
519410    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
519411    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
519412    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
519413    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
519414    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
519415    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
519416    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
519417    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
519418    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
519419    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
519420    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
519421    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
519422    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
519423    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
519424    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
519425    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
519426    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
519427    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
519428    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
519429    +END;
MPRINT(EM_DIAGRAM):   END;
519430    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519431    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
519432    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519433    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519434    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
519435    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519437    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
519438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519439    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
519440    +   H11  =     0.17501563716249 * S_AcceptedCmpTotal  +    -0.36554114449053 *
519441    +        S_Age  +    -0.38580134783102 * S_Frq  +    -0.21908382657217 *
519442    +        S_Income  +    -0.07407502089271 * S_Kidhome
519443    +          +     0.12840196100631 * S_Mnt  +     0.03929964535457 *
519444    +        S_MntFishProducts  +    -0.07747223779114 * S_MntFruits
519445    +          +     0.06367041786619 * S_MntGoldProds  +     0.97858536127159 *
519446    +        S_MntMeatProducts  +     -0.2631541253916 * S_MntSweetProducts
519447    +          +    -0.21009967468315 * S_MntWines  +     0.01772965748746 *
519448    +        S_MonthsAsCustomer  +     0.43689279156654 * S_NumCatalogPurchases
519449    +          +     0.85324794786604 * S_NumDealsPurchases
519450    +          +     0.23632583007911 * S_NumDistPurchases
519451    +          +    -0.63089078988761 * S_NumStorePurchases
519452    +          +    -0.92352748602374 * S_NumWebPurchases
519453    +          +     0.90081938176641 * S_NumWebVisitsMonth
519454    +          +     0.42330049584845 * S_RFMstat  +     0.02105180951094 *
519455    +        S_RMntFrq  +    -0.84474450609256 * S_Recency
519456    +          +     0.18914162652023 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.17501563716249 * S_AcceptedCmpTotal + -0.36554114449053 * S_Age 
+ -0.38580134783102 * S_Frq + -0.21908382657217 * S_Income + -0.07407502089271 * S_Kidhome + 
0.12840196100631 * S_Mnt + 0.03929964535457 * S_MntFishProducts + -0.07747223779114 * 
S_MntFruits + 0.06367041786619 * S_MntGoldProds + 0.97858536127159 * S_MntMeatProducts + 
-0.2631541253916 * S_MntSweetProducts + -0.21009967468315 * S_MntWines + 0.01772965748746 * 
S_MonthsAsCustomer + 0.43689279156654 * S_NumCatalogPurchases + 0.85324794786604 * 
S_NumDealsPurchases + 0.23632583007911 * S_NumDistPurchases + -0.63089078988761 * 
S_NumStorePurchases + -0.92352748602374 * S_NumWebPurchases + 0.90081938176641 * 
S_NumWebVisitsMonth + 0.42330049584845 * S_RFMstat + 0.02105180951094 * S_RMntFrq + 
-0.84474450609256 * S_Recency + 0.18914162652023 * S_Teenhome ;
519457    +   H12  =     0.55034639645204 * S_AcceptedCmpTotal  +     0.09306745130673 *
519458    +        S_Age  +    -0.38144414546432 * S_Frq  +     0.39346487803525 *
519459    +        S_Income  +    -0.46092998969912 * S_Kidhome
519460    +          +    -0.21419775022567 * S_Mnt  +     -0.1419038030075 *
519461    +        S_MntFishProducts  +    -0.15086475751383 * S_MntFruits
519462    +          +    -0.10895314995081 * S_MntGoldProds  +     0.54340688178323 *
519463    +        S_MntMeatProducts  +     0.02370277071375 * S_MntSweetProducts
519464    +          +    -0.36083928148144 * S_MntWines  +    -0.09471203372244 *
519465    +        S_MonthsAsCustomer  +     0.35874170593009 * S_NumCatalogPurchases
519466    +          +     0.19685325076814 * S_NumDealsPurchases
519467    +          +     -0.0145000015739 * S_NumDistPurchases
519468    +          +     -0.5790386407956 * S_NumStorePurchases
519469    +          +    -0.36258404984745 * S_NumWebPurchases
519470    +          +     0.85107574614775 * S_NumWebVisitsMonth
519471    +          +     0.00898383307287 * S_RFMstat  +    -0.09672451639577 *
519472    +        S_RMntFrq  +     -0.7907561263466 * S_Recency
519473    +          +    -0.34901055038946 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.55034639645204 * S_AcceptedCmpTotal + 0.09306745130673 * S_Age + 
-0.38144414546432 * S_Frq + 0.39346487803525 * S_Income + -0.46092998969912 * S_Kidhome + 
-0.21419775022567 * S_Mnt + -0.1419038030075 * S_MntFishProducts + -0.15086475751383 * 
S_MntFruits + -0.10895314995081 * S_MntGoldProds + 0.54340688178323 * S_MntMeatProducts + 
0.02370277071375 * S_MntSweetProducts + -0.36083928148144 * S_MntWines + -0.09471203372244 * 
S_MonthsAsCustomer + 0.35874170593009 * S_NumCatalogPurchases + 0.19685325076814 * 
S_NumDealsPurchases + -0.0145000015739 * S_NumDistPurchases + -0.5790386407956 * 
S_NumStorePurchases + -0.36258404984745 * S_NumWebPurchases + 0.85107574614775 * 
S_NumWebVisitsMonth + 0.00898383307287 * S_RFMstat + -0.09672451639577 * S_RMntFrq + 
-0.7907561263466 * S_Recency + -0.34901055038946 * S_Teenhome ;
519474    +   H13  =     0.06080099463512 * S_AcceptedCmpTotal  +    -0.35825472239366 *
519475    +        S_Age  +    -0.01087502010135 * S_Frq  +    -0.29478705368425 *
519476    +        S_Income  +    -0.03273972934545 * S_Kidhome
The SAS System

519477    +          +    -0.13622677356361 * S_Mnt  +     0.18060273292985 *
519478    +        S_MntFishProducts  +     0.11972433239232 * S_MntFruits
519479    +          +    -0.03986660643959 * S_MntGoldProds  +     0.15555612346447 *
519480    +        S_MntMeatProducts  +      0.4343662861634 * S_MntSweetProducts
519481    +          +     0.03013514085559 * S_MntWines  +     0.05644710625745 *
519482    +        S_MonthsAsCustomer  +     -0.2306050975257 * S_NumCatalogPurchases
519483    +          +    -0.17268337796364 * S_NumDealsPurchases
519484    +          +    -0.23588860225052 * S_NumDistPurchases
519485    +          +     0.41380073293559 * S_NumStorePurchases
519486    +          +    -0.28143763726207 * S_NumWebPurchases
519487    +          +    -0.30914618130297 * S_NumWebVisitsMonth
519488    +          +     -0.4714998087492 * S_RFMstat  +    -0.00966743749996 *
519489    +        S_RMntFrq  +     0.81671444530655 * S_Recency
519490    +          +    -0.05979541602822 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06080099463512 * S_AcceptedCmpTotal + -0.35825472239366 * S_Age 
+ -0.01087502010135 * S_Frq + -0.29478705368425 * S_Income + -0.03273972934545 * S_Kidhome + 
-0.13622677356361 * S_Mnt + 0.18060273292985 * S_MntFishProducts + 0.11972433239232 * 
S_MntFruits + -0.03986660643959 * S_MntGoldProds + 0.15555612346447 * S_MntMeatProducts + 
0.4343662861634 * S_MntSweetProducts + 0.03013514085559 * S_MntWines + 0.05644710625745 * 
S_MonthsAsCustomer + -0.2306050975257 * S_NumCatalogPurchases + -0.17268337796364 * 
S_NumDealsPurchases + -0.23588860225052 * S_NumDistPurchases + 0.41380073293559 * 
S_NumStorePurchases + -0.28143763726207 * S_NumWebPurchases + -0.30914618130297 * 
S_NumWebVisitsMonth + -0.4714998087492 * S_RFMstat + -0.00966743749996 * S_RMntFrq + 
0.81671444530655 * S_Recency + -0.05979541602822 * S_Teenhome ;
519491    +   H14  =     0.02236165555251 * S_AcceptedCmpTotal  +     0.05878714073281 *
519492    +        S_Age  +      0.0220418507559 * S_Frq  +    -0.46976280127461 *
519493    +        S_Income  +    -0.06518326597517 * S_Kidhome
519494    +          +     0.01561710446128 * S_Mnt  +    -0.19888119617767 *
519495    +        S_MntFishProducts  +    -0.11099637502315 * S_MntFruits
519496    +          +     -0.1633241343451 * S_MntGoldProds  +    -0.65560791277244 *
519497    +        S_MntMeatProducts  +     0.08426248977242 * S_MntSweetProducts
519498    +          +     0.40538193250283 * S_MntWines  +     0.29709872876156 *
519499    +        S_MonthsAsCustomer  +    -0.64274287388323 * S_NumCatalogPurchases
519500    +          +    -0.46119515763011 * S_NumDealsPurchases
519501    +          +     0.16268822540635 * S_NumDistPurchases
519502    +          +     0.21653483412929 * S_NumStorePurchases
519503    +          +     0.46040401497854 * S_NumWebPurchases
519504    +          +     -0.7361096668674 * S_NumWebVisitsMonth
519505    +          +     0.21120270259957 * S_RFMstat  +    -0.01820419721495 *
519506    +        S_RMntFrq  +     0.80628261349293 * S_Recency
519507    +          +     0.30269385840066 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02236165555251 * S_AcceptedCmpTotal + 0.05878714073281 * S_Age + 
0.0220418507559 * S_Frq + -0.46976280127461 * S_Income + -0.06518326597517 * S_Kidhome + 
0.01561710446128 * S_Mnt + -0.19888119617767 * S_MntFishProducts + -0.11099637502315 * 
S_MntFruits + -0.1633241343451 * S_MntGoldProds + -0.65560791277244 * S_MntMeatProducts + 
0.08426248977242 * S_MntSweetProducts + 0.40538193250283 * S_MntWines + 0.29709872876156 * 
S_MonthsAsCustomer + -0.64274287388323 * S_NumCatalogPurchases + -0.46119515763011 * 
S_NumDealsPurchases + 0.16268822540635 * S_NumDistPurchases + 0.21653483412929 * 
S_NumStorePurchases + 0.46040401497854 * S_NumWebPurchases + -0.7361096668674 * 
S_NumWebVisitsMonth + 0.21120270259957 * S_RFMstat + -0.01820419721495 * S_RMntFrq + 
0.80628261349293 * S_Recency + 0.30269385840066 * S_Teenhome ;
519508    +   H15  =    -0.12213750739956 * S_AcceptedCmpTotal  +     0.11214050296975 *
519509    +        S_Age  +    -0.30158163448762 * S_Frq  +    -0.65785861830444 *
519510    +        S_Income  +     0.55328239552566 * S_Kidhome
519511    +          +    -0.10286828951896 * S_Mnt  +     0.02737244457507 *
519512    +        S_MntFishProducts  +     0.06403371753368 * S_MntFruits
519513    +          +     0.03413466437505 * S_MntGoldProds  +    -0.54204197569301 *
519514    +        S_MntMeatProducts  +     0.05510302269208 * S_MntSweetProducts
519515    +          +     0.19331185653379 * S_MntWines  +    -0.11275583865898 *
519516    +        S_MonthsAsCustomer  +    -0.61166489373672 * S_NumCatalogPurchases
519517    +          +     0.05502131610199 * S_NumDealsPurchases
519518    +          +    -0.03756550292536 * S_NumDistPurchases
519519    +          +    -0.03538043876599 * S_NumStorePurchases
519520    +          +     -0.0907757250737 * S_NumWebPurchases
519521    +          +    -0.70112968521759 * S_NumWebVisitsMonth
519522    +          +    -0.14412513555959 * S_RFMstat  +     0.21884375840225 *
519523    +        S_RMntFrq  +     0.94295210651466 * S_Recency
519524    +          +     0.35991330606304 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.12213750739956 * S_AcceptedCmpTotal + 0.11214050296975 * S_Age 
+ -0.30158163448762 * S_Frq + -0.65785861830444 * S_Income + 0.55328239552566 * S_Kidhome + 
-0.10286828951896 * S_Mnt + 0.02737244457507 * S_MntFishProducts + 0.06403371753368 * 
S_MntFruits + 0.03413466437505 * S_MntGoldProds + -0.54204197569301 * S_MntMeatProducts + 
0.05510302269208 * S_MntSweetProducts + 0.19331185653379 * S_MntWines + -0.11275583865898 * 
S_MonthsAsCustomer + -0.61166489373672 * S_NumCatalogPurchases + 0.05502131610199 * 
S_NumDealsPurchases + -0.03756550292536 * S_NumDistPurchases + -0.03538043876599 * 
S_NumStorePurchases + -0.0907757250737 * S_NumWebPurchases + -0.70112968521759 * 
S_NumWebVisitsMonth + -0.14412513555959 * S_RFMstat + 0.21884375840225 * S_RMntFrq + 
0.94295210651466 * S_Recency + 0.35991330606304 * S_Teenhome ;
519525    +   H16  =    -0.36726728824296 * S_AcceptedCmpTotal  +     0.07460925934352 *
519526    +        S_Age  +    -0.43562110547346 * S_Frq  +    -0.43221933529838 *
519527    +        S_Income  +    -0.52750514886673 * S_Kidhome
519528    +          +    -0.26421661734492 * S_Mnt  +     0.14907990887311 *
519529    +        S_MntFishProducts  +     0.04789588439327 * S_MntFruits
519530    +          +    -0.20961586241585 * S_MntGoldProds  +    -0.20758519587985 *
519531    +        S_MntMeatProducts  +    -0.19867933143984 * S_MntSweetProducts
519532    +          +    -0.06534193060612 * S_MntWines  +    -0.23871571634661 *
519533    +        S_MonthsAsCustomer  +    -0.53206950950203 * S_NumCatalogPurchases
519534    +          +    -0.50827570715861 * S_NumDealsPurchases
519535    +          +    -0.47409547329081 * S_NumDistPurchases
519536    +          +     0.18399962481918 * S_NumStorePurchases
519537    +          +     0.02681212324713 * S_NumWebPurchases
519538    +          +    -0.20824959103725 * S_NumWebVisitsMonth
519539    +          +    -0.06029410016837 * S_RFMstat  +    -0.10536519478033 *
519540    +        S_RMntFrq  +     0.04705531474734 * S_Recency
519541    +          +    -0.11408993340011 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.36726728824296 * S_AcceptedCmpTotal + 0.07460925934352 * S_Age 
+ -0.43562110547346 * S_Frq + -0.43221933529838 * S_Income + -0.52750514886673 * S_Kidhome + 
-0.26421661734492 * S_Mnt + 0.14907990887311 * S_MntFishProducts + 0.04789588439327 * 
S_MntFruits + -0.20961586241585 * S_MntGoldProds + -0.20758519587985 * S_MntMeatProducts + 
-0.19867933143984 * S_MntSweetProducts + -0.06534193060612 * S_MntWines + -0.23871571634661 * 
S_MonthsAsCustomer + -0.53206950950203 * S_NumCatalogPurchases + -0.50827570715861 * 
S_NumDealsPurchases + -0.47409547329081 * S_NumDistPurchases + 0.18399962481918 * 
S_NumStorePurchases + 0.02681212324713 * S_NumWebPurchases + -0.20824959103725 * 
S_NumWebVisitsMonth + -0.06029410016837 * S_RFMstat + -0.10536519478033 * S_RMntFrq + 
0.04705531474734 * S_Recency + -0.11408993340011 * S_Teenhome ;
519542    +   H11  = H11  +    -0.77677369001519 * AcceptedCmp10
519543    +          +    -0.37032394781671 * AcceptedCmp20  +    -0.38832722412387 *
519544    +        AcceptedCmp30  +    -0.55638306754435 * AcceptedCmp40
519545    +          +    -0.38440791029959 * AcceptedCmp50  +    -0.16406106118114 *
519546    +        Complain0  +     0.13745408429927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.77677369001519 * AcceptedCmp10 + -0.37032394781671 * 
AcceptedCmp20 + -0.38832722412387 * AcceptedCmp30 + -0.55638306754435 * AcceptedCmp40 + 
-0.38440791029959 * AcceptedCmp50 + -0.16406106118114 * Complain0 + 0.13745408429927 * 
HigherEducationBinary0 ;
519547    +   H12  = H12  +    -0.05148686413458 * AcceptedCmp10
519548    +          +     0.05180152789051 * AcceptedCmp20  +    -0.19662622794776 *
519549    +        AcceptedCmp30  +     -0.1585553643874 * AcceptedCmp40
519550    +          +    -0.27247887239746 * AcceptedCmp50  +     0.04624249285151 *
519551    +        Complain0  +     0.00785440028495 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05148686413458 * AcceptedCmp10 + 0.05180152789051 * 
AcceptedCmp20 + -0.19662622794776 * AcceptedCmp30 + -0.1585553643874 * AcceptedCmp40 + 
-0.27247887239746 * AcceptedCmp50 + 0.04624249285151 * Complain0 + 0.00785440028495 * 
HigherEducationBinary0 ;
519552    +   H13  = H13  +     0.21037041808208 * AcceptedCmp10
519553    +          +     0.06300544912729 * AcceptedCmp20  +      0.2031627989618 *
519554    +        AcceptedCmp30  +    -0.16684085233007 * AcceptedCmp40
519555    +          +      0.0625549638503 * AcceptedCmp50  +     0.08211834732664 *
519556    +        Complain0  +     0.41790682924235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21037041808208 * AcceptedCmp10 + 0.06300544912729 * 
AcceptedCmp20 + 0.2031627989618 * AcceptedCmp30 + -0.16684085233007 * AcceptedCmp40 + 
0.0625549638503 * AcceptedCmp50 + 0.08211834732664 * Complain0 + 0.41790682924235 * 
HigherEducationBinary0 ;
519557    +   H14  = H14  +    -0.22633896297555 * AcceptedCmp10
519558    +          +     0.08566230730475 * AcceptedCmp20  +     0.22438004167873 *
519559    +        AcceptedCmp30  +    -0.34844091963496 * AcceptedCmp40
519560    +          +      0.2256378657623 * AcceptedCmp50  +    -0.04877442051049 *
519561    +        Complain0  +     0.06991776072868 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22633896297555 * AcceptedCmp10 + 0.08566230730475 * 
AcceptedCmp20 + 0.22438004167873 * AcceptedCmp30 + -0.34844091963496 * AcceptedCmp40 + 
0.2256378657623 * AcceptedCmp50 + -0.04877442051049 * Complain0 + 0.06991776072868 * 
HigherEducationBinary0 ;
519562    +   H15  = H15  +     0.41157678374445 * AcceptedCmp10
519563    +          +     0.54458379988837 * AcceptedCmp20  +     0.36562464175733 *
519564    +        AcceptedCmp30  +     0.42967664754272 * AcceptedCmp40
519565    +          +     0.29503069209148 * AcceptedCmp50  +     0.22816514842206 *
519566    +        Complain0  +    -0.21688291139263 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.41157678374445 * AcceptedCmp10 + 0.54458379988837 * 
AcceptedCmp20 + 0.36562464175733 * AcceptedCmp30 + 0.42967664754272 * AcceptedCmp40 + 
0.29503069209148 * AcceptedCmp50 + 0.22816514842206 * Complain0 + -0.21688291139263 * 
HigherEducationBinary0 ;
519567    +   H16  = H16  +     0.19407195798819 * AcceptedCmp10
519568    +          +     0.04247364390054 * AcceptedCmp20  +     0.08274248135062 *
519569    +        AcceptedCmp30  +    -0.03914341230116 * AcceptedCmp40
519570    +          +     0.21624329471544 * AcceptedCmp50  +     0.10868032675538 *
519571    +        Complain0  +     0.53913868676285 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.19407195798819 * AcceptedCmp10 + 0.04247364390054 * 
AcceptedCmp20 + 0.08274248135062 * AcceptedCmp30 + -0.03914341230116 * AcceptedCmp40 + 
0.21624329471544 * AcceptedCmp50 + 0.10868032675538 * Complain0 + 0.53913868676285 * 
HigherEducationBinary0 ;
519572    +   H11  = H11  +    -0.10818997830847 * Education2n_Cycle
519573    +          +    -0.06250860766324 * EducationBasic  +       0.082321310702 *
519574    +        EducationGraduation  +     0.02690714866809 * EducationMaster
519575    +          +      0.1401475547652 * Marital_StatusDivorced
519576    +          +     0.09801106519846 * Marital_StatusMarried
519577    +          +    -0.26003432053167 * Marital_StatusSingle
519578    +          +     0.01618123849583 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10818997830847 * Education2n_Cycle + -0.06250860766324 * 
EducationBasic + 0.082321310702 * EducationGraduation + 0.02690714866809 * EducationMaster + 
0.1401475547652 * Marital_StatusDivorced + 0.09801106519846 * Marital_StatusMarried + 
-0.26003432053167 * Marital_StatusSingle + 0.01618123849583 * Marital_StatusTogether ;
519579    +   H12  = H12  +     0.03962548410357 * Education2n_Cycle
519580    +          +    -0.26452735705222 * EducationBasic  +     0.20050085174927 *
519581    +        EducationGraduation  +     -0.0582668884993 * EducationMaster
519582    +          +     0.33965651292585 * Marital_StatusDivorced
519583    +          +    -0.51738607463653 * Marital_StatusMarried
519584    +          +     0.57209809625866 * Marital_StatusSingle
519585    +          +    -0.44546779779432 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03962548410357 * Education2n_Cycle + -0.26452735705222 * 
EducationBasic + 0.20050085174927 * EducationGraduation + -0.0582668884993 * EducationMaster + 
0.33965651292585 * Marital_StatusDivorced + -0.51738607463653 * Marital_StatusMarried + 
0.57209809625866 * Marital_StatusSingle + -0.44546779779432 * Marital_StatusTogether ;
519586    +   H13  = H13  +     0.01128025797292 * Education2n_Cycle
519587    +          +      0.2331829736493 * EducationBasic  +    -0.21365797510985 *
519588    +        EducationGraduation  +     -0.0762564849741 * EducationMaster
519589    +          +     -0.0712692029901 * Marital_StatusDivorced
519590    +          +      0.2989539150548 * Marital_StatusMarried
519591    +          +    -0.07088797938783 * Marital_StatusSingle
519592    +          +     0.16185370186238 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01128025797292 * Education2n_Cycle + 0.2331829736493 * 
EducationBasic + -0.21365797510985 * EducationGraduation + -0.0762564849741 * EducationMaster 
+ -0.0712692029901 * Marital_StatusDivorced + 0.2989539150548 * Marital_StatusMarried + 
-0.07088797938783 * Marital_StatusSingle + 0.16185370186238 * Marital_StatusTogether ;
519593    +   H14  = H14  +     -0.2070379700286 * Education2n_Cycle
519594    +          +    -0.01037898928967 * EducationBasic  +     0.15025928327392 *
519595    +        EducationGraduation  +    -0.01705681126182 * EducationMaster
519596    +          +    -0.06075465978816 * Marital_StatusDivorced
519597    +          +     0.23328087967095 * Marital_StatusMarried
519598    +          +    -0.34401062494093 * Marital_StatusSingle
519599    +          +     0.53078479431088 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.2070379700286 * Education2n_Cycle + -0.01037898928967 * 
EducationBasic + 0.15025928327392 * EducationGraduation + -0.01705681126182 * EducationMaster 
+ -0.06075465978816 * Marital_StatusDivorced + 0.23328087967095 * Marital_StatusMarried + 
-0.34401062494093 * Marital_StatusSingle + 0.53078479431088 * Marital_StatusTogether ;
519600    +   H15  = H15  +     0.02459175230987 * Education2n_Cycle
519601    +          +     -0.4108033280498 * EducationBasic  +     0.20104265551967 *
519602    +        EducationGraduation  +     0.36213037498234 * EducationMaster
519603    +          +    -0.07312045395545 * Marital_StatusDivorced
519604    +          +     1.08247738273721 * Marital_StatusMarried
519605    +          +    -0.68676298741916 * Marital_StatusSingle
519606    +          +     0.62203169255788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.02459175230987 * Education2n_Cycle + -0.4108033280498 * 
EducationBasic + 0.20104265551967 * EducationGraduation + 0.36213037498234 * EducationMaster + 
-0.07312045395545 * Marital_StatusDivorced + 1.08247738273721 * Marital_StatusMarried + 
-0.68676298741916 * Marital_StatusSingle + 0.62203169255788 * Marital_StatusTogether ;
519607    +   H16  = H16  +    -0.18585334310939 * Education2n_Cycle
519608    +          +    -0.23205958818402 * EducationBasic  +    -0.13603377834078 *
519609    +        EducationGraduation  +    -0.11419275271029 * EducationMaster
519610    +          +    -0.20451618892357 * Marital_StatusDivorced
519611    +          +    -0.41145969312049 * Marital_StatusMarried
519612    +          +     0.44568613045702 * Marital_StatusSingle
519613    +          +    -0.24768465153678 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.18585334310939 * Education2n_Cycle + -0.23205958818402 * 
EducationBasic + -0.13603377834078 * EducationGraduation + -0.11419275271029 * EducationMaster 
+ -0.20451618892357 * Marital_StatusDivorced + -0.41145969312049 * Marital_StatusMarried + 
0.44568613045702 * Marital_StatusSingle + -0.24768465153678 * Marital_StatusTogether ;
519614    +   H11  =    -0.04019762461382 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.04019762461382 + H11 ;
519615    +   H12  =     0.36549512230095 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36549512230095 + H12 ;
519616    +   H13  =    -1.38204627706606 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38204627706606 + H13 ;
519617    +   H14  =     1.38298399879632 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.38298399879632 + H14 ;
519618    +   H15  =     0.90313152481164 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90313152481164 + H15 ;
519619    +   H16  =     -2.1000519329276 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.1000519329276 + H16 ;
519620    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
519621    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
519622    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
519623    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
519624    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
519625    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
519626    +END;
MPRINT(EM_DIAGRAM):   END;
519627    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
519628    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
519629    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
519630    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
519631    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
519632    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
519633    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
519634    +END;
MPRINT(EM_DIAGRAM):   END;
519635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519636    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
519637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519638    +
519639    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
519640    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
519641    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
519642    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
519643    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
519644    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
519645    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
519646    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
519647    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
519648    +end;
MPRINT(EM_DIAGRAM):   end;
519649    +else do;
MPRINT(EM_DIAGRAM):   else do;
519650    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
519651    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
519652    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
519653    +   end;
MPRINT(EM_DIAGRAM):   end;
519654    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
519655    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
519656    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
519657    +   end;
MPRINT(EM_DIAGRAM):   end;
519658    +   else do;
MPRINT(EM_DIAGRAM):   else do;
519659    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
519660    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
519661    +   end;
MPRINT(EM_DIAGRAM):   end;
519662    +end;
MPRINT(EM_DIAGRAM):   end;
519663    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
519664    +   P_DepVar1  =     1.88165923386255 * H11  +     2.52776524502163 * H12
519665    +          +    -1.77389131292532 * H13  +    -1.81244588070617 * H14
519666    +          +    -2.95309978013668 * H15  +    -2.05211179893121 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.88165923386255 * H11 + 2.52776524502163 * H12 + 
-1.77389131292532 * H13 + -1.81244588070617 * H14 + -2.95309978013668 * H15 + 
-2.05211179893121 * H16 ;
519667    +   P_DepVar1  =    -2.12016790420361 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.12016790420361 + P_DepVar1 ;
519668    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
519669    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
519670    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
519671    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
519672    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
519673    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
519674    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
519675    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
519676    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
519677    +END;
MPRINT(EM_DIAGRAM):   END;
519678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
519679    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
519680    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
519681    +END;
MPRINT(EM_DIAGRAM):   END;
519682    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
519683    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
519684    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
519685    +END;
MPRINT(EM_DIAGRAM):   END;
519686    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
519687    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
519688    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
519689    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
519690    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
519691    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
519692    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
519693    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519694    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
519695    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
519696    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
519697    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
519698    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
519699    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
519700    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
519701    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
519702    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
519703    +END;
MPRINT(EM_DIAGRAM):   END;
519704    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
519705    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
519706    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
519707    +drop
519708    +H11
519709    +H12
519710    +H13
519711    +H14
519712    +H15
519713    +H16
519714    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
519715    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
519716     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
519717     quit;
519718     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
519719     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
519720     * Neural9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural9: Computing metadata for TRAIN data;
519721     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural9_TRAIN out=WORK.M0FGLVG4 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FGLVG4;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FGLVG4(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FGLVG4;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FGLVG4;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M23ELGPT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UK34V_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   set WORK.M23ELGPT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
520033     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
520034     set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
520035     where DATA='Neural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
520036     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE (DATA='Neural9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

520037     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural9_EMINFO;
520038     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
520039     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
520040     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
520044     run;
520045     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_EMINFO;
520046     set EMWS8.Neural9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO WORK.MODELTEMP_INFO;
520047     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

520048     proc sort data = EMWS8.Neural9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural9_EMINFO NOTHREADS;
520049     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
520050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

520051     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
520052     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
520053     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.65 seconds
      cpu time            0.00 seconds
      

520054     proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
520055     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
520056     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

520057     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_EMINFO;
520058     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
520059     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
520060     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

520061     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
520062     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
520063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
520064     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
