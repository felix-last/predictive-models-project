MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ZOGE5L 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ZOGE5L new;
MPRINT(EM_DIAGRAM):   run;
281513     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
281514     set EMWS8.Neural9_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_OUTKEY;
281515     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
281516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.NEURAL9_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

281517     filename emflow
281517   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
281518     *------------------------------------------------------------*;
281519     * Neural9: Scoring DATA data;
281520     *------------------------------------------------------------*;
281521     data EMWS8.Neural9_TRAIN
281522     / view=EMWS8.Neural9_TRAIN
281523     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_TRAIN / view=EMWS8.Neural9_TRAIN ;
281524     set EMWS8.Meta_TRAIN
281525     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
281526     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas.
281527    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281528    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
281529    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
281530    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
281531    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
281532    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
281533    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
281534    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
281535    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
281536    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
281537    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
281538    +LENGTH _WARN_ $4
281539    +      F_DepVar  $ 12
281540    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
281541    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
281542    +
281543    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
281544    +
281545    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
281546    +
281547    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
281548    +
281549    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
281550    +
281551    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
281552    +
281553    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
281554    +
281555    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
281556    +
281557    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
281558    +
281559    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
281560    +
281561    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
281562    +
281563    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
281564    +
281565    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
281566    +
281567    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
281568    +
281569    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
281570    +
281571    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
281572    +
281573    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
281574    +
281575    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
281576    +
281577    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
281578    +
281579    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
281580    +
281581    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
281582    +
281583    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
281584    +
281585    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
281586    +
281587    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
281588    +
281589    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
281590    +
281591    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
281592    +
281593    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
281594    +
281595    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
281596    +
281597    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
281598    +
281599    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
281600    +
281601    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
281602    +
281603    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
281604    +
281605    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
281606    +
281607    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
281608    +
281609    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
281610    +
281611    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
281612    +
281613    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
281614    +
281615    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
281616    +
281617    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
281618    +
281619    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
281620    +
281621    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
281622    +
281623    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
281624    +
281625    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
281626    +
281627    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
281628    +
281629    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
281630    +
281631    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
281632    +
281633    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
281634    +
281635    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
281636    +
281637    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
281638    +
281639    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
281640    +
281641    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
281642    +
281643    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
281644    +
281645    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
281646    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
281647    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
281648    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
281649    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281650    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281651    +end;
MPRINT(EM_DIAGRAM):   end;
281652    +else do;
MPRINT(EM_DIAGRAM):   else do;
281653    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281654    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
281655    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281656    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281657    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
281658    +   end;
MPRINT(EM_DIAGRAM):   end;
281659    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281660    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
281661    +   end;
MPRINT(EM_DIAGRAM):   end;
281662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281663    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
281664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281666    +   end;
MPRINT(EM_DIAGRAM):   end;
281667    +end;
MPRINT(EM_DIAGRAM):   end;
281668    +
281669    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
281670    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
281671    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
281672    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
281673    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281674    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281675    +end;
MPRINT(EM_DIAGRAM):   end;
281676    +else do;
MPRINT(EM_DIAGRAM):   else do;
281677    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281678    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
281679    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281680    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281681    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
281682    +   end;
MPRINT(EM_DIAGRAM):   end;
281683    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281684    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
281685    +   end;
MPRINT(EM_DIAGRAM):   end;
281686    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281687    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
281688    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281689    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281690    +   end;
MPRINT(EM_DIAGRAM):   end;
281691    +end;
MPRINT(EM_DIAGRAM):   end;
281692    +
281693    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
281694    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
281695    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
281696    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
281697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281699    +end;
MPRINT(EM_DIAGRAM):   end;
281700    +else do;
MPRINT(EM_DIAGRAM):   else do;
281701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281702    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
281703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281704    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281705    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
281706    +   end;
MPRINT(EM_DIAGRAM):   end;
281707    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281708    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
281709    +   end;
MPRINT(EM_DIAGRAM):   end;
281710    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281711    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
281712    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281713    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281714    +   end;
MPRINT(EM_DIAGRAM):   end;
281715    +end;
MPRINT(EM_DIAGRAM):   end;
281716    +
281717    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
281718    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
281719    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
281720    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
281721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281723    +end;
MPRINT(EM_DIAGRAM):   end;
281724    +else do;
MPRINT(EM_DIAGRAM):   else do;
281725    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281726    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
281727    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281728    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281729    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
281730    +   end;
MPRINT(EM_DIAGRAM):   end;
281731    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281732    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
281733    +   end;
MPRINT(EM_DIAGRAM):   end;
281734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281735    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
281736    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281737    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281738    +   end;
MPRINT(EM_DIAGRAM):   end;
281739    +end;
MPRINT(EM_DIAGRAM):   end;
281740    +
281741    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
281742    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
281743    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
281744    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
281745    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281746    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281747    +end;
MPRINT(EM_DIAGRAM):   end;
281748    +else do;
MPRINT(EM_DIAGRAM):   else do;
281749    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281750    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
281751    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281752    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281753    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
281754    +   end;
MPRINT(EM_DIAGRAM):   end;
281755    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281756    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
281757    +   end;
MPRINT(EM_DIAGRAM):   end;
281758    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281759    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
281760    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281761    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281762    +   end;
MPRINT(EM_DIAGRAM):   end;
281763    +end;
MPRINT(EM_DIAGRAM):   end;
281764    +
281765    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
281766    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
281767    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
281768    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
281769    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281770    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281771    +end;
MPRINT(EM_DIAGRAM):   end;
281772    +else do;
MPRINT(EM_DIAGRAM):   else do;
281773    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281774    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
281775    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281776    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
281777    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
281778    +   end;
MPRINT(EM_DIAGRAM):   end;
281779    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
281780    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
281781    +   end;
MPRINT(EM_DIAGRAM):   end;
281782    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281783    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
281784    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281785    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281786    +   end;
MPRINT(EM_DIAGRAM):   end;
281787    +end;
MPRINT(EM_DIAGRAM):   end;
281788    +
281789    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
281790    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
281791    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
281792    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
281793    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281794    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281795    +end;
MPRINT(EM_DIAGRAM):   end;
281796    +else do;
MPRINT(EM_DIAGRAM):   else do;
281797    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
281798    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
281799    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281800    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
281801    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
281802    +   end;
MPRINT(EM_DIAGRAM):   end;
281803    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
281804    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
281805    +   end;
MPRINT(EM_DIAGRAM):   end;
281806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281807    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
281808    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281809    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281810    +   end;
MPRINT(EM_DIAGRAM):   end;
281811    +end;
MPRINT(EM_DIAGRAM):   end;
281812    +
281813    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
281814    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
281815    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
281816    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
281817    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
281818    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
281819    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
281820    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
281821    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
281822    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
281823    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
281824    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
281825    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281826    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281827    +end;
MPRINT(EM_DIAGRAM):   end;
281828    +else do;
MPRINT(EM_DIAGRAM):   else do;
281829    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
281830    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
281831    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281832    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
281833    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
281834    +   end;
MPRINT(EM_DIAGRAM):   end;
281835    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
281836    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
281837    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
281838    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
281839    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
281840    +   end;
MPRINT(EM_DIAGRAM):   end;
281841    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
281842    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
281843    +   end;
MPRINT(EM_DIAGRAM):   end;
281844    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
281845    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
281846    +   end;
MPRINT(EM_DIAGRAM):   end;
281847    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
281848    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
281849    +   end;
MPRINT(EM_DIAGRAM):   end;
281850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281851    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
281852    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
281853    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
281854    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
281855    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281856    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281857    +   end;
MPRINT(EM_DIAGRAM):   end;
281858    +end;
MPRINT(EM_DIAGRAM):   end;
281859    +
281860    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
281861    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
281862    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
281863    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
281864    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
281865    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
281866    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
281867    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
281868    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
281869    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
281870    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
281871    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
281872    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
281873    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
281874    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281875    +end;
MPRINT(EM_DIAGRAM):   end;
281876    +else do;
MPRINT(EM_DIAGRAM):   else do;
281877    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
281878    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
281879    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
281880    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
281881    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
281882    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
281883    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
281884    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
281885    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
281886    +         end;
MPRINT(EM_DIAGRAM):   end;
281887    +         else do;
MPRINT(EM_DIAGRAM):   else do;
281888    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
281889    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
281890    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
281891    +            end;
MPRINT(EM_DIAGRAM):   end;
281892    +         end;
MPRINT(EM_DIAGRAM):   end;
281893    +      end;
MPRINT(EM_DIAGRAM):   end;
281894    +      else do;
MPRINT(EM_DIAGRAM):   else do;
281895    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
281896    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
281897    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
281898    +         end;
MPRINT(EM_DIAGRAM):   end;
281899    +      end;
MPRINT(EM_DIAGRAM):   end;
281900    +   end;
MPRINT(EM_DIAGRAM):   end;
281901    +   else do;
MPRINT(EM_DIAGRAM):   else do;
281902    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
281903    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
281904    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
281905    +      end;
MPRINT(EM_DIAGRAM):   end;
281906    +      else do;
MPRINT(EM_DIAGRAM):   else do;
281907    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
281908    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
281909    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
281910    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
281911    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
281912    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
281913    +         end;
MPRINT(EM_DIAGRAM):   end;
281914    +      end;
MPRINT(EM_DIAGRAM):   end;
281915    +   end;
MPRINT(EM_DIAGRAM):   end;
281916    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
281917    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
281918    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
281919    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
281920    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
281921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
281922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281923    +   end;
MPRINT(EM_DIAGRAM):   end;
281924    +end;
MPRINT(EM_DIAGRAM):   end;
281925    +
281926    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281927    +*** Checking missing input Interval
281928    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
281929    +
281930    +IF NMISS(
281931    +   AcceptedCmpTotal ,
281932    +   Age ,
281933    +   Frq ,
281934    +   Income ,
281935    +   Kidhome ,
281936    +   Mnt ,
281937    +   MntFishProducts ,
281938    +   MntFruits ,
281939    +   MntGoldProds ,
281940    +   MntMeatProducts ,
281941    +   MntSweetProducts ,
281942    +   MntWines ,
281943    +   MonthsAsCustomer ,
281944    +   NumCatalogPurchases ,
281945    +   NumDealsPurchases ,
281946    +   NumDistPurchases ,
281947    +   NumStorePurchases ,
281948    +   NumWebPurchases ,
281949    +   NumWebVisitsMonth ,
281950    +   RFMstat ,
281951    +   RMntFrq ,
281952    +   Recency ,
281953    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
281954    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
281955    +
281956    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
281957    +END;
MPRINT(EM_DIAGRAM):   END;
281958    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281959    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
281960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
281961    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
281962    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
281963    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
281964    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
281965    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
281966    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
281967    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
281968    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
281969    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
281970    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
281971    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
281972    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
281973    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
281974    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
281975    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
281976    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
281977    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
281978    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
281979    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
281980    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
281981    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
281982    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
281983    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
281984    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
281985    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
281986    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
281987    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
281988    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
281989    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
281990    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
281991    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
281992    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
281993    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
281994    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
281995    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
281996    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
281997    +END;
MPRINT(EM_DIAGRAM):   END;
281998    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
281999    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
282000    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282001    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
282002    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
282003    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
282004    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
282005    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282006    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
282007    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
282008    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
282009    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
282010    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
282011    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282012    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
282013    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
282014    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
282015    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
282016    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
282017    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
282018    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
282019    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
282020    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
282021    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
282022    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282023    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
282024    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
282025    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
282026    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
282027    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
282028    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
282029    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
282030    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
282031    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
282032    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
282033    +   ELSE S_NumCatalogPurchases
282034    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
282035    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
282036    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
282037    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282038    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
282039    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
282040    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
282041    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
282042    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
282043    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
282044    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
282045    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
282046    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
282047    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
282048    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
282049    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282050    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
282051    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
282052    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
282053    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
282054    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
282055    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
282056    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282057    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
282058    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
282059    +END;
MPRINT(EM_DIAGRAM):   END;
282060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282061    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
282062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282064    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
282065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282066    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282067    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
282068    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282069    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282070    +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
282071    +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
282072    +        S_Income  +     -0.0761121347886 * S_Kidhome
282073    +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
282074    +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
282075    +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
282076    +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
282077    +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
282078    +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
282079    +          +     0.83893684194413 * S_NumDealsPurchases
282080    +          +     0.23391006875291 * S_NumDistPurchases
282081    +          +    -0.63370705462074 * S_NumStorePurchases
282082    +          +     -0.9137408014067 * S_NumWebPurchases
282083    +          +     0.89109351479441 * S_NumWebVisitsMonth
282084    +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
282085    +        S_RMntFrq  +    -0.85349828740223 * S_Recency
282086    +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
282087    +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
282088    +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
282089    +        S_Income  +    -0.43909782819329 * S_Kidhome
282090    +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
282091    +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
282092    +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
282093    +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
282094    +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
282095    +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
282096    +          +      0.2218973353638 * S_NumDealsPurchases
282097    +          +      0.0062360950528 * S_NumDistPurchases
282098    +          +    -0.57621747951002 * S_NumStorePurchases
282099    +          +    -0.33564890905657 * S_NumWebPurchases
282100    +          +     0.82482365540301 * S_NumWebVisitsMonth
282101    +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
282102    +        S_RMntFrq  +    -0.77306663228806 * S_Recency
282103    +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
282104    +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
282105    +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
282106    +        S_Income  +    -0.03572236011846 * S_Kidhome
282107    +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
282108    +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
282109    +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
282110    +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
282111    +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
282112    +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
282113    +          +      -0.174147250062 * S_NumDealsPurchases
282114    +          +    -0.22921682388864 * S_NumDistPurchases
282115    +          +     0.41526854684299 * S_NumStorePurchases
282116    +          +    -0.27675565493519 * S_NumWebPurchases
282117    +          +    -0.31519058220182 * S_NumWebVisitsMonth
282118    +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
282119    +        S_RMntFrq  +     0.80762508263239 * S_Recency
282120    +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
282121    +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
282122    +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
282123    +        S_Income  +    -0.04788369327547 * S_Kidhome
282124    +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
282125    +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
282126    +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
282127    +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
282128    +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
282129    +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
282130    +          +    -0.46022430102423 * S_NumDealsPurchases
282131    +          +     0.15831339342044 * S_NumDistPurchases
282132    +          +     0.22480465173719 * S_NumStorePurchases
282133    +          +     0.44798923484609 * S_NumWebPurchases
282134    +          +    -0.71094702920004 * S_NumWebVisitsMonth
282135    +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
282136    +        S_RMntFrq  +     0.79879111927102 * S_Recency
282137    +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
282138    +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
282139    +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
282140    +        S_Income  +     0.53994304261534 * S_Kidhome
282141    +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
282142    +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
282143    +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
282144    +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
282145    +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
282146    +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
282147    +          +     0.03650267472167 * S_NumDealsPurchases
282148    +          +    -0.03322709524939 * S_NumDistPurchases
282149    +          +     -0.0022226424472 * S_NumStorePurchases
282150    +          +    -0.10131236740674 * S_NumWebPurchases
282151    +          +    -0.69846819287714 * S_NumWebVisitsMonth
282152    +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
282153    +        S_RMntFrq  +     0.92766392256433 * S_Recency
282154    +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
282155    +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
282156    +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
282157    +        S_Income  +    -0.52576099429582 * S_Kidhome
282158    +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
282159    +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
282160    +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
282161    +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
282162    +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
282163    +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
282164    +          +    -0.50209914729324 * S_NumDealsPurchases
282165    +          +    -0.46217244513696 * S_NumDistPurchases
282166    +          +      0.1832648560248 * S_NumStorePurchases
282167    +          +     0.02866153257072 * S_NumWebPurchases
282168    +          +    -0.21659886944483 * S_NumWebVisitsMonth
282169    +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
282170    +        S_RMntFrq  +      0.0483484608321 * S_Recency
282171    +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
282172    +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
282173    +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
282174    +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
282175    +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
282176    +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
282177    +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
282178    +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
282179    +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
282180    +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
282181    +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
282182    +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
282183    +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
282184    +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
282185    +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
282186    +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
282187    +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
282188    +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
282189    +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
282190    +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
282191    +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
282192    +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
282193    +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
282194    +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
282195    +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
282196    +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
282197    +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
282198    +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
282199    +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
282200    +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
282201    +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
282202    +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
282203    +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
282204    +        EducationGraduation  +     0.01554466662723 * EducationMaster
282205    +          +     0.13815069071511 * Marital_StatusDivorced
282206    +          +      0.0732913060929 * Marital_StatusMarried
282207    +          +    -0.22858418468746 * Marital_StatusSingle
282208    +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
282209    +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
282210    +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
282211    +        EducationGraduation  +    -0.06848191068145 * EducationMaster
282212    +          +     0.32909808396509 * Marital_StatusDivorced
282213    +          +    -0.50160173579004 * Marital_StatusMarried
282214    +          +     0.57207102211224 * Marital_StatusSingle
282215    +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
282216    +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
282217    +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
282218    +        EducationGraduation  +    -0.06661306485324 * EducationMaster
282219    +          +    -0.07154493730107 * Marital_StatusDivorced
282220    +          +     0.29126100051603 * Marital_StatusMarried
282221    +          +    -0.06936325857004 * Marital_StatusSingle
282222    +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
282223    +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
282224    +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
282225    +        EducationGraduation  +     0.00467151758983 * EducationMaster
282226    +          +    -0.05004640872388 * Marital_StatusDivorced
282227    +          +     0.22197974032974 * Marital_StatusMarried
282228    +          +    -0.33931504637453 * Marital_StatusSingle
282229    +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
282230    +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
282231    +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
282232    +        EducationGraduation  +     0.36479872943723 * EducationMaster
282233    +          +    -0.07748874669478 * Marital_StatusDivorced
282234    +          +     1.05442281159109 * Marital_StatusMarried
282235    +          +    -0.67190984038867 * Marital_StatusSingle
282236    +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
282237    +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
282238    +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
282239    +        EducationGraduation  +    -0.09350942672909 * EducationMaster
282240    +          +    -0.20478208715114 * Marital_StatusDivorced
282241    +          +    -0.40186383707642 * Marital_StatusMarried
282242    +          +     0.43474841662774 * Marital_StatusSingle
282243    +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
282244    +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
282245    +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
282246    +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
282247    +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
282248    +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
282249    +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
282250    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
282251    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
282252    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
282253    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
282254    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
282255    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
282256    +END;
MPRINT(EM_DIAGRAM):   END;
282257    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282258    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
282259    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
282260    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
282261    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
282262    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
282263    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
282264    +END;
MPRINT(EM_DIAGRAM):   END;
282265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282266    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
282267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282268    +
282269    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
282270    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
282271    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282272    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
282273    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
282274    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282275    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
282276    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282277    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282278    +end;
MPRINT(EM_DIAGRAM):   end;
282279    +else do;
MPRINT(EM_DIAGRAM):   else do;
282280    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
282281    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
282282    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
282283    +   end;
MPRINT(EM_DIAGRAM):   end;
282284    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
282285    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
282286    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
282287    +   end;
MPRINT(EM_DIAGRAM):   end;
282288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282289    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
282290    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
282291    +   end;
MPRINT(EM_DIAGRAM):   end;
282292    +end;
MPRINT(EM_DIAGRAM):   end;
282293    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282294    +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
282295    +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
282296    +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
282297    +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
282298    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
282299    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
282300    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
282301    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
282302    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
282303    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
282304    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
282305    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
282306    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
282307    +END;
MPRINT(EM_DIAGRAM):   END;
282308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282309    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
282310    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
282311    +END;
MPRINT(EM_DIAGRAM):   END;
282312    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
282313    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
282314    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
282315    +END;
MPRINT(EM_DIAGRAM):   END;
282316    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
282317    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
282318    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
282319    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
282320    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
282321    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
282322    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
282323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282324    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
282325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282326    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
282327    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
282328    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
282329    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
282330    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
282331    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
282332    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
282333    +END;
MPRINT(EM_DIAGRAM):   END;
282334    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282335    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
282336    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
282337    +drop
282338    +H11
282339    +H12
282340    +H13
282341    +H14
282342    +H15
282343    +H16
282344    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
282345    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
282346     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
282347     quit;
282348     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
282349     filename emflow
282349   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
282350     *------------------------------------------------------------*;
282351     * Neural9: Scoring VALIDATE data;
282352     *------------------------------------------------------------*;
282353     data EMWS8.Neural9_VALIDATE
282354     / view=EMWS8.Neural9_VALIDATE
282355     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_VALIDATE / view=EMWS8.Neural9_VALIDATE ;
282356     set EMWS8.Meta_VALIDATE
282357     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
282358     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMFLOWSCORE.sas.
282359    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282360    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
282361    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
282362    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
282363    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
282364    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
282365    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
282366    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
282367    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
282368    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
282369    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
282370    +LENGTH _WARN_ $4
282371    +      F_DepVar  $ 12
282372    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
282373    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
282374    +
282375    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
282376    +
282377    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
282378    +
282379    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
282380    +
282381    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
282382    +
282383    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
282384    +
282385    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
282386    +
282387    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
282388    +
282389    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
282390    +
282391    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
282392    +
282393    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
282394    +
282395    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
282396    +
282397    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
282398    +
282399    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
282400    +
282401    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
282402    +
282403    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
282404    +
282405    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
282406    +
282407    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
282408    +
282409    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
282410    +
282411    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
282412    +
282413    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
282414    +
282415    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
282416    +
282417    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
282418    +
282419    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
282420    +
282421    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
282422    +
282423    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
282424    +
282425    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
282426    +
282427    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
282428    +
282429    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
282430    +
282431    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
282432    +
282433    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
282434    +
282435    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
282436    +
282437    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
282438    +
282439    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
282440    +
282441    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
282442    +
282443    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
282444    +
282445    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
282446    +
282447    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
282448    +
282449    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
282450    +
282451    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
282452    +
282453    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
282454    +
282455    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
282456    +
282457    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
282458    +
282459    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
282460    +
282461    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
282462    +
282463    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
282464    +
282465    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
282466    +
282467    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
282468    +
282469    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
282470    +
282471    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
282472    +
282473    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
282474    +
282475    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
282476    +
282477    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
282478    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
282479    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
282480    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
282481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282483    +end;
MPRINT(EM_DIAGRAM):   end;
282484    +else do;
MPRINT(EM_DIAGRAM):   else do;
282485    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282486    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
282487    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282488    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282489    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
282490    +   end;
MPRINT(EM_DIAGRAM):   end;
282491    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282492    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
282493    +   end;
MPRINT(EM_DIAGRAM):   end;
282494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282495    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
282496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282498    +   end;
MPRINT(EM_DIAGRAM):   end;
282499    +end;
MPRINT(EM_DIAGRAM):   end;
282500    +
282501    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
282502    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
282503    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
282504    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
282505    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282506    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282507    +end;
MPRINT(EM_DIAGRAM):   end;
282508    +else do;
MPRINT(EM_DIAGRAM):   else do;
282509    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282510    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
282511    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282512    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282513    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
282514    +   end;
MPRINT(EM_DIAGRAM):   end;
282515    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282516    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
282517    +   end;
MPRINT(EM_DIAGRAM):   end;
282518    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282519    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
282520    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282521    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282522    +   end;
MPRINT(EM_DIAGRAM):   end;
282523    +end;
MPRINT(EM_DIAGRAM):   end;
282524    +
282525    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
282526    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
282527    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
282528    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
282529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282531    +end;
MPRINT(EM_DIAGRAM):   end;
282532    +else do;
MPRINT(EM_DIAGRAM):   else do;
282533    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282534    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
282535    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282536    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282537    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
282538    +   end;
MPRINT(EM_DIAGRAM):   end;
282539    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282540    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
282541    +   end;
MPRINT(EM_DIAGRAM):   end;
282542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282543    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
282544    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282545    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282546    +   end;
MPRINT(EM_DIAGRAM):   end;
282547    +end;
MPRINT(EM_DIAGRAM):   end;
282548    +
282549    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
282550    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
282551    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
282552    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
282553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282555    +end;
MPRINT(EM_DIAGRAM):   end;
282556    +else do;
MPRINT(EM_DIAGRAM):   else do;
282557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282558    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
282559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282560    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282561    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
282562    +   end;
MPRINT(EM_DIAGRAM):   end;
282563    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282564    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
282565    +   end;
MPRINT(EM_DIAGRAM):   end;
282566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282567    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
282568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282570    +   end;
MPRINT(EM_DIAGRAM):   end;
282571    +end;
MPRINT(EM_DIAGRAM):   end;
282572    +
282573    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
282574    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
282575    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
282576    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
282577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282579    +end;
MPRINT(EM_DIAGRAM):   end;
282580    +else do;
MPRINT(EM_DIAGRAM):   else do;
282581    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282582    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
282583    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282584    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282585    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
282586    +   end;
MPRINT(EM_DIAGRAM):   end;
282587    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282588    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
282589    +   end;
MPRINT(EM_DIAGRAM):   end;
282590    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282591    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
282592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282594    +   end;
MPRINT(EM_DIAGRAM):   end;
282595    +end;
MPRINT(EM_DIAGRAM):   end;
282596    +
282597    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
282598    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
282599    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
282600    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
282601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282603    +end;
MPRINT(EM_DIAGRAM):   end;
282604    +else do;
MPRINT(EM_DIAGRAM):   else do;
282605    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282606    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
282607    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282608    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
282609    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
282610    +   end;
MPRINT(EM_DIAGRAM):   end;
282611    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
282612    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
282613    +   end;
MPRINT(EM_DIAGRAM):   end;
282614    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282615    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
282616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282618    +   end;
MPRINT(EM_DIAGRAM):   end;
282619    +end;
MPRINT(EM_DIAGRAM):   end;
282620    +
282621    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
282622    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
282623    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
282624    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
282625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282627    +end;
MPRINT(EM_DIAGRAM):   end;
282628    +else do;
MPRINT(EM_DIAGRAM):   else do;
282629    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
282630    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
282631    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282632    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
282633    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
282634    +   end;
MPRINT(EM_DIAGRAM):   end;
282635    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
282636    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
282637    +   end;
MPRINT(EM_DIAGRAM):   end;
282638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282639    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
282640    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282641    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282642    +   end;
MPRINT(EM_DIAGRAM):   end;
282643    +end;
MPRINT(EM_DIAGRAM):   end;
282644    +
282645    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
282646    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
282647    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
282648    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
282649    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
282650    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
282651    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
282652    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
282653    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
282654    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
282655    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
282656    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
282657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282659    +end;
MPRINT(EM_DIAGRAM):   end;
282660    +else do;
MPRINT(EM_DIAGRAM):   else do;
282661    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
282662    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
282663    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282664    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
282665    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
282666    +   end;
MPRINT(EM_DIAGRAM):   end;
282667    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
282668    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
282669    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
282670    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
282671    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
282672    +   end;
MPRINT(EM_DIAGRAM):   end;
282673    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
282674    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
282675    +   end;
MPRINT(EM_DIAGRAM):   end;
282676    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
282677    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
282678    +   end;
MPRINT(EM_DIAGRAM):   end;
282679    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
282680    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
282681    +   end;
MPRINT(EM_DIAGRAM):   end;
282682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282683    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
282684    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
282685    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
282686    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
282687    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282688    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282689    +   end;
MPRINT(EM_DIAGRAM):   end;
282690    +end;
MPRINT(EM_DIAGRAM):   end;
282691    +
282692    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
282693    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
282694    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
282695    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
282696    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
282697    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
282698    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
282699    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
282700    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
282701    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282702    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282703    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282704    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
282706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282707    +end;
MPRINT(EM_DIAGRAM):   end;
282708    +else do;
MPRINT(EM_DIAGRAM):   else do;
282709    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
282710    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
282711    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
282712    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
282713    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
282714    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
282715    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
282716    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
282717    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282718    +         end;
MPRINT(EM_DIAGRAM):   end;
282719    +         else do;
MPRINT(EM_DIAGRAM):   else do;
282720    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
282721    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
282722    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282723    +            end;
MPRINT(EM_DIAGRAM):   end;
282724    +         end;
MPRINT(EM_DIAGRAM):   end;
282725    +      end;
MPRINT(EM_DIAGRAM):   end;
282726    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282727    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
282728    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
282729    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282730    +         end;
MPRINT(EM_DIAGRAM):   end;
282731    +      end;
MPRINT(EM_DIAGRAM):   end;
282732    +   end;
MPRINT(EM_DIAGRAM):   end;
282733    +   else do;
MPRINT(EM_DIAGRAM):   else do;
282734    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
282735    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
282736    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282737    +      end;
MPRINT(EM_DIAGRAM):   end;
282738    +      else do;
MPRINT(EM_DIAGRAM):   else do;
282739    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
282740    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
282741    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
282742    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
282743    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
282744    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
282745    +         end;
MPRINT(EM_DIAGRAM):   end;
282746    +      end;
MPRINT(EM_DIAGRAM):   end;
282747    +   end;
MPRINT(EM_DIAGRAM):   end;
282748    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
282749    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
282750    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
282751    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
282752    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
282753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
282754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282755    +   end;
MPRINT(EM_DIAGRAM):   end;
282756    +end;
MPRINT(EM_DIAGRAM):   end;
282757    +
282758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282759    +*** Checking missing input Interval
282760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
282761    +
282762    +IF NMISS(
282763    +   AcceptedCmpTotal ,
282764    +   Age ,
282765    +   Frq ,
282766    +   Income ,
282767    +   Kidhome ,
282768    +   Mnt ,
282769    +   MntFishProducts ,
282770    +   MntFruits ,
282771    +   MntGoldProds ,
282772    +   MntMeatProducts ,
282773    +   MntSweetProducts ,
282774    +   MntWines ,
282775    +   MonthsAsCustomer ,
282776    +   NumCatalogPurchases ,
282777    +   NumDealsPurchases ,
282778    +   NumDistPurchases ,
282779    +   NumStorePurchases ,
282780    +   NumWebPurchases ,
282781    +   NumWebVisitsMonth ,
282782    +   RFMstat ,
282783    +   RMntFrq ,
282784    +   Recency ,
282785    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
282786    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
282787    +
282788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
282789    +END;
MPRINT(EM_DIAGRAM):   END;
282790    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282791    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
282792    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282793    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282794    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282795    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
282796    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
282797    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282798    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
282799    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
282800    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282801    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
282802    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
282803    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
282804    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
282805    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
282806    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282807    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
282808    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
282809    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
282810    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
282811    +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
282812    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
282813    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
282814    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
282815    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282816    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
282817    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
282818    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
282819    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
282820    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
282821    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
282822    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
282823    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282824    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
282825    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
282826    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
282827    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282828    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
282829    +END;
MPRINT(EM_DIAGRAM):   END;
282830    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
282831    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
282832    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
282833    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
282834    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
282835    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
282836    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
282837    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
282838    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
282839    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
282840    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
282841    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
282842    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
282843    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
282844    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
282845    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
282846    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
282847    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
282848    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
282849    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
282850    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
282851    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
282852    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
282853    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
282854    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
282855    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
282856    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
282857    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
282858    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
282859    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
282860    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
282861    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
282862    +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
282863    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
282864    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
282865    +   ELSE S_NumCatalogPurchases
282866    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
282867    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
282868    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
282869    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
282870    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
282871    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
282872    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
282873    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
282874    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
282875    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
282876    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
282877    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
282878    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
282879    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
282880    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
282881    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
282882    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
282883    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
282884    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
282885    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
282886    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
282887    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
282888    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
282889    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
282890    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
282891    +END;
MPRINT(EM_DIAGRAM):   END;
282892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282893    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
282894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282896    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
282897    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282899    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
282900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
282901    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
282902    +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
282903    +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
282904    +        S_Income  +     -0.0761121347886 * S_Kidhome
282905    +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
282906    +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
282907    +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
282908    +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
282909    +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
282910    +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
282911    +          +     0.83893684194413 * S_NumDealsPurchases
282912    +          +     0.23391006875291 * S_NumDistPurchases
282913    +          +    -0.63370705462074 * S_NumStorePurchases
282914    +          +     -0.9137408014067 * S_NumWebPurchases
282915    +          +     0.89109351479441 * S_NumWebVisitsMonth
282916    +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
282917    +        S_RMntFrq  +    -0.85349828740223 * S_Recency
282918    +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
282919    +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
282920    +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
282921    +        S_Income  +    -0.43909782819329 * S_Kidhome
282922    +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
282923    +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
282924    +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
282925    +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
282926    +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
282927    +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
282928    +          +      0.2218973353638 * S_NumDealsPurchases
282929    +          +      0.0062360950528 * S_NumDistPurchases
282930    +          +    -0.57621747951002 * S_NumStorePurchases
282931    +          +    -0.33564890905657 * S_NumWebPurchases
282932    +          +     0.82482365540301 * S_NumWebVisitsMonth
282933    +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
282934    +        S_RMntFrq  +    -0.77306663228806 * S_Recency
282935    +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
282936    +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
282937    +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
282938    +        S_Income  +    -0.03572236011846 * S_Kidhome
282939    +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
282940    +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
282941    +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
282942    +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
282943    +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
282944    +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
282945    +          +      -0.174147250062 * S_NumDealsPurchases
282946    +          +    -0.22921682388864 * S_NumDistPurchases
282947    +          +     0.41526854684299 * S_NumStorePurchases
282948    +          +    -0.27675565493519 * S_NumWebPurchases
282949    +          +    -0.31519058220182 * S_NumWebVisitsMonth
282950    +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
282951    +        S_RMntFrq  +     0.80762508263239 * S_Recency
282952    +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
282953    +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
282954    +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
282955    +        S_Income  +    -0.04788369327547 * S_Kidhome
282956    +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
282957    +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
282958    +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
282959    +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
282960    +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
282961    +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
282962    +          +    -0.46022430102423 * S_NumDealsPurchases
282963    +          +     0.15831339342044 * S_NumDistPurchases
282964    +          +     0.22480465173719 * S_NumStorePurchases
282965    +          +     0.44798923484609 * S_NumWebPurchases
282966    +          +    -0.71094702920004 * S_NumWebVisitsMonth
282967    +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
282968    +        S_RMntFrq  +     0.79879111927102 * S_Recency
282969    +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
282970    +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
282971    +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
282972    +        S_Income  +     0.53994304261534 * S_Kidhome
282973    +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
282974    +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
282975    +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
282976    +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
282977    +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
282978    +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
282979    +          +     0.03650267472167 * S_NumDealsPurchases
282980    +          +    -0.03322709524939 * S_NumDistPurchases
282981    +          +     -0.0022226424472 * S_NumStorePurchases
282982    +          +    -0.10131236740674 * S_NumWebPurchases
282983    +          +    -0.69846819287714 * S_NumWebVisitsMonth
282984    +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
282985    +        S_RMntFrq  +     0.92766392256433 * S_Recency
282986    +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
282987    +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
282988    +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
282989    +        S_Income  +    -0.52576099429582 * S_Kidhome
282990    +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
282991    +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
282992    +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
282993    +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
282994    +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
282995    +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
282996    +          +    -0.50209914729324 * S_NumDealsPurchases
282997    +          +    -0.46217244513696 * S_NumDistPurchases
282998    +          +      0.1832648560248 * S_NumStorePurchases
282999    +          +     0.02866153257072 * S_NumWebPurchases
283000    +          +    -0.21659886944483 * S_NumWebVisitsMonth
283001    +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
283002    +        S_RMntFrq  +      0.0483484608321 * S_Recency
283003    +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
283004    +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
283005    +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
283006    +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
283007    +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
283008    +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
283009    +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
283010    +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
283011    +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
283012    +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
283013    +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
283014    +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
283015    +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
283016    +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
283017    +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
283018    +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
283019    +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
283020    +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
283021    +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
283022    +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
283023    +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
283024    +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
283025    +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
283026    +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
283027    +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
283028    +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
283029    +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
283030    +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
283031    +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
283032    +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
283033    +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
283034    +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
283035    +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
283036    +        EducationGraduation  +     0.01554466662723 * EducationMaster
283037    +          +     0.13815069071511 * Marital_StatusDivorced
283038    +          +      0.0732913060929 * Marital_StatusMarried
283039    +          +    -0.22858418468746 * Marital_StatusSingle
283040    +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
283041    +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
283042    +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
283043    +        EducationGraduation  +    -0.06848191068145 * EducationMaster
283044    +          +     0.32909808396509 * Marital_StatusDivorced
283045    +          +    -0.50160173579004 * Marital_StatusMarried
283046    +          +     0.57207102211224 * Marital_StatusSingle
283047    +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
283048    +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
283049    +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
283050    +        EducationGraduation  +    -0.06661306485324 * EducationMaster
283051    +          +    -0.07154493730107 * Marital_StatusDivorced
283052    +          +     0.29126100051603 * Marital_StatusMarried
283053    +          +    -0.06936325857004 * Marital_StatusSingle
283054    +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
283055    +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
283056    +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
283057    +        EducationGraduation  +     0.00467151758983 * EducationMaster
283058    +          +    -0.05004640872388 * Marital_StatusDivorced
283059    +          +     0.22197974032974 * Marital_StatusMarried
283060    +          +    -0.33931504637453 * Marital_StatusSingle
283061    +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
283062    +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
283063    +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
283064    +        EducationGraduation  +     0.36479872943723 * EducationMaster
283065    +          +    -0.07748874669478 * Marital_StatusDivorced
283066    +          +     1.05442281159109 * Marital_StatusMarried
283067    +          +    -0.67190984038867 * Marital_StatusSingle
283068    +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
283069    +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
283070    +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
283071    +        EducationGraduation  +    -0.09350942672909 * EducationMaster
283072    +          +    -0.20478208715114 * Marital_StatusDivorced
283073    +          +    -0.40186383707642 * Marital_StatusMarried
283074    +          +     0.43474841662774 * Marital_StatusSingle
283075    +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
283076    +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
283077    +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
283078    +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
283079    +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
283080    +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
283081    +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
283082    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
283083    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
283084    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
283085    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
283086    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
283087    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
283088    +END;
MPRINT(EM_DIAGRAM):   END;
283089    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283090    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
283091    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
283092    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
283093    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
283094    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
283095    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
283096    +END;
MPRINT(EM_DIAGRAM):   END;
283097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283098    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
283099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283100    +
283101    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
283102    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
283103    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
283104    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
283105    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
283106    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
283107    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
283108    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283109    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283110    +end;
MPRINT(EM_DIAGRAM):   end;
283111    +else do;
MPRINT(EM_DIAGRAM):   else do;
283112    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
283113    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
283114    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
283115    +   end;
MPRINT(EM_DIAGRAM):   end;
283116    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
283117    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
283118    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
283119    +   end;
MPRINT(EM_DIAGRAM):   end;
283120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
283121    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
283122    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
283123    +   end;
MPRINT(EM_DIAGRAM):   end;
283124    +end;
MPRINT(EM_DIAGRAM):   end;
283125    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
283126    +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
283127    +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
283128    +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
283129    +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
283130    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
283131    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
283132    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
283133    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
283134    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
283135    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
283136    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
283137    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
283138    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
283139    +END;
MPRINT(EM_DIAGRAM):   END;
283140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
283141    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
283142    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
283143    +END;
MPRINT(EM_DIAGRAM):   END;
283144    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
283145    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
283146    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
283147    +END;
MPRINT(EM_DIAGRAM):   END;
283148    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
283149    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
283150    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
283151    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
283152    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
283153    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
283154    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
283155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283156    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
283157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
283158    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
283159    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
283160    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
283161    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
283162    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
283163    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
283164    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
283165    +END;
MPRINT(EM_DIAGRAM):   END;
283166    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283167    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
283168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
283169    +drop
283170    +H11
283171    +H12
283172    +H13
283173    +H14
283174    +H15
283175    +H16
283176    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
283177    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
283178     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
283179     quit;
283180     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
283181     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
283182     * Neural9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural9: Computing metadata for TRAIN data;
283183     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural9_TRAIN out=WORK.M1OJR0J8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OJR0J8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OJR0J8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1OJR0J8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1OJR0J8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0V04_IY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2AXLB_A(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   set WORK.M0V04_IY;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
283495     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
283496     set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
283497     where DATA='Neural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
283498     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE (DATA='Neural9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283499     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural9_EMINFO;
283500     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
283501     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
283502     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
283506     run;
283507     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_EMINFO;
283508     set EMWS8.Neural9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO WORK.MODELTEMP_INFO;
283509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283510     proc sort data = EMWS8.Neural9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural9_EMINFO NOTHREADS;
283511     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
283512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283513     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
283514     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
283515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283516     proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
283517     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
283518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

283519     data EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural9_EMINFO;
283520     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
283521     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
283522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

283523     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
283524     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
283525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
283526     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
